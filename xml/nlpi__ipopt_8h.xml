<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="nlpi__ipopt_8h" kind="file">
    <compoundname>nlpi_ipopt.h</compoundname>
    <includes refid="type__nlpi_8h" local="yes">nlpi/type_nlpi.h</includes>
    <includedby refid="scipdefplugins_8h" local="yes">scipdefplugins.h</includedby>
    <incdepgraph>
      <node id="6276">
        <label>stdarg.h</label>
      </node>
      <node id="6273">
        <label>assert.h</label>
      </node>
      <node id="6272">
        <label>float.h</label>
      </node>
      <node id="6271">
        <label>limits.h</label>
      </node>
      <node id="6277">
        <label>scip/type_message.h</label>
        <link refid="type__message_8h"/>
        <childnode refid="6269" relation="include">
        </childnode>
      </node>
      <node id="6267">
        <label>nlpi/type_nlpi.h</label>
        <link refid="type__nlpi_8h"/>
        <childnode refid="6268" relation="include">
        </childnode>
        <childnode refid="6277" relation="include">
        </childnode>
        <childnode refid="6278" relation="include">
        </childnode>
        <childnode refid="6279" relation="include">
        </childnode>
      </node>
      <node id="6275">
        <label>scip/pub_message.h</label>
        <link refid="pub__message_8h"/>
        <childnode refid="6276" relation="include">
        </childnode>
        <childnode refid="6268" relation="include">
        </childnode>
        <childnode refid="6277" relation="include">
        </childnode>
      </node>
      <node id="6274">
        <label>scip/type_retcode.h</label>
        <link refid="type__retcode_8h"/>
      </node>
      <node id="6279">
        <label>nlpi/type_expr.h</label>
        <link refid="type__expr_8h"/>
      </node>
      <node id="6270">
        <label>math.h</label>
      </node>
      <node id="6278">
        <label>blockmemshell/memory.h</label>
      </node>
      <node id="6268">
        <label>scip/def.h</label>
        <link refid="def_8h"/>
        <childnode refid="6269" relation="include">
        </childnode>
        <childnode refid="6270" relation="include">
        </childnode>
        <childnode refid="6271" relation="include">
        </childnode>
        <childnode refid="6272" relation="include">
        </childnode>
        <childnode refid="6273" relation="include">
        </childnode>
        <childnode refid="6274" relation="include">
        </childnode>
        <childnode refid="6275" relation="include">
        </childnode>
      </node>
      <node id="6266">
        <label>nlpi_ipopt.h</label>
        <link refid="nlpi_ipopt.h"/>
        <childnode refid="6267" relation="include">
        </childnode>
      </node>
      <node id="6269">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="6281">
        <label>scipdefplugins.h</label>
        <link refid="scipdefplugins_8h"/>
      </node>
      <node id="6280">
        <label>nlpi_ipopt.h</label>
        <link refid="nlpi_ipopt.h"/>
        <childnode refid="6281" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="nlpi__ipopt_8h_1a47fd0556bcabf47b634e428d2b9bd784" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPcreateNlpSolverIpopt</definition>
        <argsstring>(BMS_BLKMEM *blkmem, SCIP_NLPI **nlpi)</argsstring>
        <name>SCIPcreateNlpSolverIpopt</name>
        <param>
          <type>BMS_BLKMEM *</type>
          <declname>blkmem</declname>
          <briefdescription><para>block memory data structure </para></briefdescription>
        </param>
        <param>
          <type><ref refid="type__nlpi_8h_1a62acbad3cf059a2fc3604b8cb23061e1" kindref="member">SCIP_NLPI</ref> **</type>
          <declname>nlpi</declname>
          <briefdescription><para>pointer to buffer for nlpi address </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>create solver interface for Ipopt solver sets *nlpi to NULL if Ipopt is not available </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/nlpi_ipopt.h" line="37" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nlpi__ipopt_8h_1ae21683ae568166cb905c5d12edf61695" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* SCIPgetSolverNameIpopt</definition>
        <argsstring>(void)</argsstring>
        <name>SCIPgetSolverNameIpopt</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>gets string that identifies Ipopt (version number) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/nlpi_ipopt.h" line="44" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nlpi__ipopt_8h_1aa80725c6aad875e2676e73ddc8a7eb58" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* SCIPgetSolverDescIpopt</definition>
        <argsstring>(void)</argsstring>
        <name>SCIPgetSolverDescIpopt</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>gets string that describes Ipopt (version number) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/nlpi_ipopt.h" line="48" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nlpi__ipopt_8h_1ade74e40bc07334d652c4838a79a721c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
        <definition>SCIP_Bool SCIPisIpoptAvailableIpopt</definition>
        <argsstring>(void)</argsstring>
        <name>SCIPisIpoptAvailableIpopt</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns whether Ipopt is available, i.e., whether it has been linked in </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/nlpi_ipopt.h" line="52" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nlpi__ipopt_8h_1af49296b500550dc219d4ca1996c2358b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* SCIPgetIpoptApplicationPointerIpopt</definition>
        <argsstring>(SCIP_NLPIPROBLEM *nlpiproblem)</argsstring>
        <name>SCIPgetIpoptApplicationPointerIpopt</name>
        <param>
          <type><ref refid="type__nlpi_8h_1a014fc2228c3a9d9f119ce8112dd166a7" kindref="member">SCIP_NLPIPROBLEM</ref> *</type>
          <declname>nlpiproblem</declname>
          <briefdescription><para>NLP problem of Ipopt-NLPI </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>gives a pointer to the IpoptApplication object stored in Ipopt-NLPI&apos;s NLPI problem data structure </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/nlpi_ipopt.h" line="56" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nlpi__ipopt_8h_1a0462ad0a5c02962e08454de050415fe4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* SCIPgetNlpiOracleIpopt</definition>
        <argsstring>(SCIP_NLPIPROBLEM *nlpiproblem)</argsstring>
        <name>SCIPgetNlpiOracleIpopt</name>
        <param>
          <type><ref refid="type__nlpi_8h_1a014fc2228c3a9d9f119ce8112dd166a7" kindref="member">SCIP_NLPIPROBLEM</ref> *</type>
          <declname>nlpiproblem</declname>
          <briefdescription><para>NLP problem of Ipopt-NLPI </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>gives a pointer to the NLPIORACLE object stored in Ipopt-NLPI&apos;s NLPI problem data structure </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/nlpi_ipopt.h" line="62" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nlpi__ipopt_8h_1a91c9ec8253b45c7e804dcca5a3fd509e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsetModifiedDefaultSettingsIpopt</definition>
        <argsstring>(SCIP_NLPI *nlpi, const char *optionsstring)</argsstring>
        <name>SCIPsetModifiedDefaultSettingsIpopt</name>
        <param>
          <type><ref refid="type__nlpi_8h_1a62acbad3cf059a2fc3604b8cb23061e1" kindref="member">SCIP_NLPI</ref> *</type>
          <declname>nlpi</declname>
          <briefdescription><para>Ipopt NLP interface </para></briefdescription>
        </param>
        <param>
          <type>const char *</type>
          <declname>optionsstring</declname>
          <briefdescription><para>string with options as in Ipopt options file </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sets modified default settings that are used when setting up an Ipopt problem</para><para>Do not forget to add a newline after the last option in optionsstring. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/nlpi_ipopt.h" line="71" column="1"/>
      </memberdef>
      <memberdef kind="function" id="nlpi__ipopt_8h_1a77233f4a5b0792b207842fdc86e7dc44" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE LapackDsyev</definition>
        <argsstring>(SCIP_Bool computeeigenvectors, int N, SCIP_Real *a, SCIP_Real *w)</argsstring>
        <name>LapackDsyev</name>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
          <declname>computeeigenvectors</declname>
          <briefdescription><para>should also eigenvectors should be computed ? </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>N</declname>
          <briefdescription><para>dimension </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>a</declname>
          <briefdescription><para>matrix data on input (size N*N); eigenvectors on output if computeeigenvectors == TRUE </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>w</declname>
          <briefdescription><para>buffer to store eigenvalues (size N) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Calls Lapacks Dsyev routine to compute eigenvalues and eigenvectors of a dense matrix. It&apos;s here, because Ipopt is linked against Lapack. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/nlpi_ipopt.h" line="79" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>Ipopt NLP interface. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Stefan Vigerske </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>program<sp/>and<sp/>library<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SCIP<sp/>---<sp/>Solving<sp/>Constraint<sp/>Integer<sp/>Programs<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>Copyright<sp/>(C)<sp/>2002-2014<sp/>Konrad-Zuse-Zentrum<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fuer<sp/>Informationstechnik<sp/>Berlin<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>SCIP<sp/>is<sp/>distributed<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>ZIB<sp/>Academic<sp/>License.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>ZIB<sp/>Academic<sp/>License<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>along<sp/>with<sp/>SCIP;<sp/>see<sp/>the<sp/>file<sp/>COPYING.<sp/>If<sp/>not<sp/>email<sp/>to<sp/>scip@zib.de.<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="16"><highlight class="comment">/**@file<sp/><sp/><sp/><sp/>nlpi_ipopt.h</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/><sp/>Ipopt<sp/>NLP<sp/>interface</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>@ingroup<sp/>NLPIS</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>@author<sp/><sp/>Stefan<sp/>Vigerske</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="comment">/*---+----1----+----2----+----3----+----4----+----5----+----6----+----7----+----8----+----9----+----0----+----1----+----2*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__SCIP_NLPI_IPOPT_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__SCIP_NLPI_IPOPT_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="type__nlpi_8h" kindref="compound">nlpi/type_nlpi.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="33"><highlight class="comment">/**<sp/>create<sp/>solver<sp/>interface<sp/>for<sp/>Ipopt<sp/>solver</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>sets<sp/>*nlpi<sp/>to<sp/>NULL<sp/>if<sp/>Ipopt<sp/>is<sp/>not<sp/>available</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="nlpi__ipopt_8h_1a47fd0556bcabf47b634e428d2b9bd784" kindref="member">SCIPcreateNlpSolverIpopt</ref>(</highlight></codeline>
<codeline lineno="38"><highlight class="normal"><sp/><sp/><sp/>BMS_BLKMEM*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blkmem,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>block<sp/>memory<sp/>data<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__nlpi_8h_1a62acbad3cf059a2fc3604b8cb23061e1" kindref="member">SCIP_NLPI</ref>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nlpi<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>buffer<sp/>for<sp/>nlpi<sp/>address<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="42"><highlight class="comment">/**<sp/>gets<sp/>string<sp/>that<sp/>identifies<sp/>Ipopt<sp/>(version<sp/>number)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="nlpi__ipopt_8h_1ae21683ae568166cb905c5d12edf61695" kindref="member">SCIPgetSolverNameIpopt</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="46"><highlight class="comment">/**<sp/>gets<sp/>string<sp/>that<sp/>describes<sp/>Ipopt<sp/>(version<sp/>number)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="nlpi__ipopt_8h_1aa80725c6aad875e2676e73ddc8a7eb58" kindref="member">SCIPgetSolverDescIpopt</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="50"><highlight class="comment">/**<sp/>returns<sp/>whether<sp/>Ipopt<sp/>is<sp/>available,<sp/>i.e.,<sp/>whether<sp/>it<sp/>has<sp/>been<sp/>linked<sp/>in<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><ref refid="nlpi__ipopt_8h_1ade74e40bc07334d652c4838a79a721c9" kindref="member">SCIPisIpoptAvailableIpopt</ref>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="54"><highlight class="comment">/**<sp/>gives<sp/>a<sp/>pointer<sp/>to<sp/>the<sp/>IpoptApplication<sp/>object<sp/>stored<sp/>in<sp/>Ipopt-NLPI&apos;s<sp/>NLPI<sp/>problem<sp/>data<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="nlpi__ipopt_8h_1af49296b500550dc219d4ca1996c2358b" kindref="member">SCIPgetIpoptApplicationPointerIpopt</ref>(</highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__nlpi_8h_1a014fc2228c3a9d9f119ce8112dd166a7" kindref="member">SCIP_NLPIPROBLEM</ref>*<sp/><sp/><sp/><sp/><sp/>nlpiproblem<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>NLP<sp/>problem<sp/>of<sp/>Ipopt-NLPI<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="60"><highlight class="comment">/**<sp/>gives<sp/>a<sp/>pointer<sp/>to<sp/>the<sp/>NLPIORACLE<sp/>object<sp/>stored<sp/>in<sp/>Ipopt-NLPI&apos;s<sp/>NLPI<sp/>problem<sp/>data<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="nlpi__ipopt_8h_1a0462ad0a5c02962e08454de050415fe4" kindref="member">SCIPgetNlpiOracleIpopt</ref>(</highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__nlpi_8h_1a014fc2228c3a9d9f119ce8112dd166a7" kindref="member">SCIP_NLPIPROBLEM</ref>*<sp/><sp/><sp/><sp/><sp/>nlpiproblem<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>NLP<sp/>problem<sp/>of<sp/>Ipopt-NLPI<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="66"><highlight class="comment">/**<sp/>sets<sp/>modified<sp/>default<sp/>settings<sp/>that<sp/>are<sp/>used<sp/>when<sp/>setting<sp/>up<sp/>an<sp/>Ipopt<sp/>problem</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/>*<sp/>Do<sp/>not<sp/>forget<sp/>to<sp/>add<sp/>a<sp/>newline<sp/>after<sp/>the<sp/>last<sp/>option<sp/>in<sp/>optionsstring.</highlight></codeline>
<codeline lineno="69"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="nlpi__ipopt_8h_1a91c9ec8253b45c7e804dcca5a3fd509e" kindref="member">SCIPsetModifiedDefaultSettingsIpopt</ref>(</highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__nlpi_8h_1a62acbad3cf059a2fc3604b8cb23061e1" kindref="member">SCIP_NLPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nlpi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Ipopt<sp/>NLP<sp/>interface<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>optionsstring<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>string<sp/>with<sp/>options<sp/>as<sp/>in<sp/>Ipopt<sp/>options<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="76"><highlight class="comment">/**<sp/>Calls<sp/>Lapacks<sp/>Dsyev<sp/>routine<sp/>to<sp/>compute<sp/>eigenvalues<sp/>and<sp/>eigenvectors<sp/>of<sp/>a<sp/>dense<sp/>matrix.<sp/></highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/>*<sp/>It&apos;s<sp/>here,<sp/>because<sp/>Ipopt<sp/>is<sp/>linked<sp/>against<sp/>Lapack.</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="nlpi__ipopt_8h_1a77233f4a5b0792b207842fdc86e7dc44" kindref="member">LapackDsyev</ref>(</highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>computeeigenvectors,</highlight><highlight class="comment">/**&lt;<sp/>should<sp/>also<sp/>eigenvectors<sp/>should<sp/>be<sp/>computed<sp/>?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>N,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>dimension<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>a,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>matrix<sp/>data<sp/>on<sp/>input<sp/>(size<sp/>N*N);<sp/>eigenvectors<sp/>on<sp/>output<sp/>if<sp/>computeeigenvectors<sp/>==<sp/>TRUE<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>w<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>buffer<sp/>to<sp/>store<sp/>eigenvalues<sp/>(size<sp/>N)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87"><highlight class="normal">}</highlight></codeline>
<codeline lineno="88"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>__SCIP_NLPI_IPOPT_H__<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/nlpi_ipopt.h"/>
  </compounddef>
</doxygen>
