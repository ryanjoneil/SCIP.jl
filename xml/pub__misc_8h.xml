<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="pub__misc_8h" kind="file">
    <compoundname>pub_misc.h</compoundname>
    <includes local="no">math.h</includes>
    <includes refid="def_8h" local="yes">scip/def.h</includes>
    <includes local="yes">blockmemshell/memory.h</includes>
    <includes refid="type__retcode_8h" local="yes">scip/type_retcode.h</includes>
    <includes refid="type__misc_8h" local="yes">scip/type_misc.h</includes>
    <includes refid="type__message_8h" local="yes">scip/type_message.h</includes>
    <includes refid="type__var_8h" local="yes">scip/type_var.h</includes>
    <includedby refid="scip_8h" local="yes">scip.h</includedby>
    <incdepgraph>
      <node id="10318">
        <label>stdarg.h</label>
      </node>
      <node id="10315">
        <label>assert.h</label>
      </node>
      <node id="10314">
        <label>float.h</label>
      </node>
      <node id="10322">
        <label>scip/type_var.h</label>
        <link refid="type__var_8h"/>
      </node>
      <node id="10309">
        <label>pub_misc.h</label>
        <link refid="pub_misc.h"/>
        <childnode refid="10310" relation="include">
        </childnode>
        <childnode refid="10311" relation="include">
        </childnode>
        <childnode refid="10320" relation="include">
        </childnode>
        <childnode refid="10316" relation="include">
        </childnode>
        <childnode refid="10321" relation="include">
        </childnode>
        <childnode refid="10319" relation="include">
        </childnode>
        <childnode refid="10322" relation="include">
        </childnode>
      </node>
      <node id="10313">
        <label>limits.h</label>
      </node>
      <node id="10319">
        <label>scip/type_message.h</label>
        <link refid="type__message_8h"/>
        <childnode refid="10312" relation="include">
        </childnode>
      </node>
      <node id="10321">
        <label>scip/type_misc.h</label>
        <link refid="type__misc_8h"/>
        <childnode refid="10311" relation="include">
        </childnode>
      </node>
      <node id="10317">
        <label>scip/pub_message.h</label>
        <link refid="pub__message_8h"/>
        <childnode refid="10318" relation="include">
        </childnode>
        <childnode refid="10311" relation="include">
        </childnode>
        <childnode refid="10319" relation="include">
        </childnode>
      </node>
      <node id="10316">
        <label>scip/type_retcode.h</label>
        <link refid="type__retcode_8h"/>
      </node>
      <node id="10310">
        <label>math.h</label>
      </node>
      <node id="10320">
        <label>blockmemshell/memory.h</label>
      </node>
      <node id="10311">
        <label>scip/def.h</label>
        <link refid="def_8h"/>
        <childnode refid="10312" relation="include">
        </childnode>
        <childnode refid="10310" relation="include">
        </childnode>
        <childnode refid="10313" relation="include">
        </childnode>
        <childnode refid="10314" relation="include">
        </childnode>
        <childnode refid="10315" relation="include">
        </childnode>
        <childnode refid="10316" relation="include">
        </childnode>
        <childnode refid="10317" relation="include">
        </childnode>
      </node>
      <node id="10312">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="10364">
        <label>heur_clique.h</label>
        <link refid="heur__clique_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10360">
        <label>cons_xor.h</label>
        <link refid="cons__xor_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10436">
        <label>reader_pbm.h</label>
        <link refid="reader__pbm_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10365">
        <label>heur_coefdiving.h</label>
        <link refid="heur__coefdiving_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10410">
        <label>presol_convertinttobin.h</label>
        <link refid="presol__convertinttobin_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10455">
        <label>sepa_zerohalf.h</label>
        <link refid="sepa__zerohalf_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10396">
        <label>heur_undercover.h</label>
        <link refid="heur__undercover_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10391">
        <label>heur_simplerounding.h</label>
        <link refid="heur__simplerounding_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10376">
        <label>heur_localbranching.h</label>
        <link refid="heur__localbranching_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10438">
        <label>reader_ppm.h</label>
        <link refid="reader__ppm_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10324">
        <label>scip.h</label>
        <link refid="scip_8h"/>
        <childnode refid="10325" relation="include">
        </childnode>
        <childnode refid="10327" relation="include">
        </childnode>
        <childnode refid="10328" relation="include">
        </childnode>
        <childnode refid="10329" relation="include">
        </childnode>
        <childnode refid="10330" relation="include">
        </childnode>
        <childnode refid="10331" relation="include">
        </childnode>
        <childnode refid="10332" relation="include">
        </childnode>
        <childnode refid="10333" relation="include">
        </childnode>
        <childnode refid="10334" relation="include">
        </childnode>
        <childnode refid="10335" relation="include">
        </childnode>
        <childnode refid="10336" relation="include">
        </childnode>
        <childnode refid="10337" relation="include">
        </childnode>
        <childnode refid="10338" relation="include">
        </childnode>
        <childnode refid="10339" relation="include">
        </childnode>
        <childnode refid="10340" relation="include">
        </childnode>
        <childnode refid="10341" relation="include">
        </childnode>
        <childnode refid="10342" relation="include">
        </childnode>
        <childnode refid="10343" relation="include">
        </childnode>
        <childnode refid="10344" relation="include">
        </childnode>
        <childnode refid="10345" relation="include">
        </childnode>
        <childnode refid="10346" relation="include">
        </childnode>
        <childnode refid="10347" relation="include">
        </childnode>
        <childnode refid="10348" relation="include">
        </childnode>
        <childnode refid="10349" relation="include">
        </childnode>
        <childnode refid="10350" relation="include">
        </childnode>
        <childnode refid="10351" relation="include">
        </childnode>
        <childnode refid="10352" relation="include">
        </childnode>
        <childnode refid="10353" relation="include">
        </childnode>
        <childnode refid="10354" relation="include">
        </childnode>
        <childnode refid="10355" relation="include">
        </childnode>
        <childnode refid="10356" relation="include">
        </childnode>
        <childnode refid="10357" relation="include">
        </childnode>
        <childnode refid="10358" relation="include">
        </childnode>
        <childnode refid="10359" relation="include">
        </childnode>
        <childnode refid="10360" relation="include">
        </childnode>
        <childnode refid="10361" relation="include">
        </childnode>
        <childnode refid="10362" relation="include">
        </childnode>
        <childnode refid="10363" relation="include">
        </childnode>
        <childnode refid="10364" relation="include">
        </childnode>
        <childnode refid="10365" relation="include">
        </childnode>
        <childnode refid="10366" relation="include">
        </childnode>
        <childnode refid="10367" relation="include">
        </childnode>
        <childnode refid="10368" relation="include">
        </childnode>
        <childnode refid="10369" relation="include">
        </childnode>
        <childnode refid="10370" relation="include">
        </childnode>
        <childnode refid="10371" relation="include">
        </childnode>
        <childnode refid="10372" relation="include">
        </childnode>
        <childnode refid="10373" relation="include">
        </childnode>
        <childnode refid="10374" relation="include">
        </childnode>
        <childnode refid="10375" relation="include">
        </childnode>
        <childnode refid="10376" relation="include">
        </childnode>
        <childnode refid="10377" relation="include">
        </childnode>
        <childnode refid="10378" relation="include">
        </childnode>
        <childnode refid="10379" relation="include">
        </childnode>
        <childnode refid="10380" relation="include">
        </childnode>
        <childnode refid="10381" relation="include">
        </childnode>
        <childnode refid="10382" relation="include">
        </childnode>
        <childnode refid="10383" relation="include">
        </childnode>
        <childnode refid="10384" relation="include">
        </childnode>
        <childnode refid="10385" relation="include">
        </childnode>
        <childnode refid="10386" relation="include">
        </childnode>
        <childnode refid="10387" relation="include">
        </childnode>
        <childnode refid="10388" relation="include">
        </childnode>
        <childnode refid="10389" relation="include">
        </childnode>
        <childnode refid="10390" relation="include">
        </childnode>
        <childnode refid="10391" relation="include">
        </childnode>
        <childnode refid="10392" relation="include">
        </childnode>
        <childnode refid="10393" relation="include">
        </childnode>
        <childnode refid="10394" relation="include">
        </childnode>
        <childnode refid="10395" relation="include">
        </childnode>
        <childnode refid="10396" relation="include">
        </childnode>
        <childnode refid="10397" relation="include">
        </childnode>
        <childnode refid="10398" relation="include">
        </childnode>
        <childnode refid="10399" relation="include">
        </childnode>
        <childnode refid="10400" relation="include">
        </childnode>
        <childnode refid="10401" relation="include">
        </childnode>
        <childnode refid="10402" relation="include">
        </childnode>
        <childnode refid="10403" relation="include">
        </childnode>
        <childnode refid="10404" relation="include">
        </childnode>
        <childnode refid="10405" relation="include">
        </childnode>
        <childnode refid="10406" relation="include">
        </childnode>
        <childnode refid="10407" relation="include">
        </childnode>
        <childnode refid="10408" relation="include">
        </childnode>
        <childnode refid="10409" relation="include">
        </childnode>
        <childnode refid="10410" relation="include">
        </childnode>
        <childnode refid="10411" relation="include">
        </childnode>
        <childnode refid="10412" relation="include">
        </childnode>
        <childnode refid="10413" relation="include">
        </childnode>
        <childnode refid="10414" relation="include">
        </childnode>
        <childnode refid="10415" relation="include">
        </childnode>
        <childnode refid="10416" relation="include">
        </childnode>
        <childnode refid="10417" relation="include">
        </childnode>
        <childnode refid="10418" relation="include">
        </childnode>
        <childnode refid="10419" relation="include">
        </childnode>
        <childnode refid="10420" relation="include">
        </childnode>
        <childnode refid="10421" relation="include">
        </childnode>
        <childnode refid="10422" relation="include">
        </childnode>
        <childnode refid="10423" relation="include">
        </childnode>
        <childnode refid="10424" relation="include">
        </childnode>
        <childnode refid="10425" relation="include">
        </childnode>
        <childnode refid="10426" relation="include">
        </childnode>
        <childnode refid="10427" relation="include">
        </childnode>
        <childnode refid="10428" relation="include">
        </childnode>
        <childnode refid="10429" relation="include">
        </childnode>
        <childnode refid="10430" relation="include">
        </childnode>
        <childnode refid="10431" relation="include">
        </childnode>
        <childnode refid="10432" relation="include">
        </childnode>
        <childnode refid="10433" relation="include">
        </childnode>
        <childnode refid="10434" relation="include">
        </childnode>
        <childnode refid="10435" relation="include">
        </childnode>
        <childnode refid="10436" relation="include">
        </childnode>
        <childnode refid="10437" relation="include">
        </childnode>
        <childnode refid="10438" relation="include">
        </childnode>
        <childnode refid="10439" relation="include">
        </childnode>
        <childnode refid="10440" relation="include">
        </childnode>
        <childnode refid="10441" relation="include">
        </childnode>
        <childnode refid="10442" relation="include">
        </childnode>
        <childnode refid="10326" relation="include">
        </childnode>
        <childnode refid="10443" relation="include">
        </childnode>
        <childnode refid="10444" relation="include">
        </childnode>
        <childnode refid="10445" relation="include">
        </childnode>
        <childnode refid="10446" relation="include">
        </childnode>
        <childnode refid="10447" relation="include">
        </childnode>
        <childnode refid="10448" relation="include">
        </childnode>
        <childnode refid="10449" relation="include">
        </childnode>
        <childnode refid="10450" relation="include">
        </childnode>
        <childnode refid="10451" relation="include">
        </childnode>
        <childnode refid="10452" relation="include">
        </childnode>
        <childnode refid="10453" relation="include">
        </childnode>
        <childnode refid="10454" relation="include">
        </childnode>
        <childnode refid="10455" relation="include">
        </childnode>
      </node>
      <node id="10329">
        <label>branch_inference.h</label>
        <link refid="branch__inference_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10352">
        <label>cons_pseudoboolean.h</label>
        <link refid="cons__pseudoboolean_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10390">
        <label>heur_shifting.h</label>
        <link refid="heur__shifting_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10381">
        <label>heur_oneopt.h</label>
        <link refid="heur__oneopt_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10356">
        <label>cons_sos1.h</label>
        <link refid="cons__sos1_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10406">
        <label>nodesel_restartdfs.h</label>
        <link refid="nodesel__restartdfs_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10445">
        <label>sepa_closecuts.h</label>
        <link refid="sepa__closecuts_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10336">
        <label>cons_and.h</label>
        <link refid="cons__and_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10437">
        <label>reader_pip.h</label>
        <link refid="reader__pip_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10388">
        <label>heur_rounding.h</label>
        <link refid="heur__rounding_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10386">
        <label>heur_rins.h</label>
        <link refid="heur__rins_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10326">
        <label>scipdefplugins.h</label>
        <link refid="scipdefplugins_8h"/>
      </node>
      <node id="10362">
        <label>disp_default.h</label>
        <link refid="disp__default_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10367">
        <label>heur_dins.h</label>
        <link refid="heur__dins_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10399">
        <label>heur_zeroobj.h</label>
        <link refid="heur__zeroobj_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10361">
        <label>dialog_default.h</label>
        <link refid="dialog__default_8h"/>
      </node>
      <node id="10328">
        <label>branch_fullstrong.h</label>
        <link refid="branch__fullstrong_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10372">
        <label>heur_guideddiving.h</label>
        <link refid="heur__guideddiving_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10434">
        <label>reader_opb.h</label>
        <link refid="reader__opb_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10350">
        <label>cons_or.h</label>
        <link refid="cons__or_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10413">
        <label>presol_gateextraction.h</label>
        <link refid="presol__gateextraction_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10333">
        <label>branch_random.h</label>
        <link refid="branch__random_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10371">
        <label>heur_fracdiving.h</label>
        <link refid="heur__fracdiving_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10342">
        <label>cons_disjunction.h</label>
        <link refid="cons__disjunction_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10425">
        <label>reader_bnd.h</label>
        <link refid="reader__bnd_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10334">
        <label>branch_relpscost.h</label>
        <link refid="branch__relpscost_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10374">
        <label>heur_intshifting.h</label>
        <link refid="heur__intshifting_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10359">
        <label>cons_varbound.h</label>
        <link refid="cons__varbound_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10407">
        <label>nodesel_uct.h</label>
        <link refid="nodesel__uct_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10341">
        <label>cons_cumulative.h</label>
        <link refid="cons__cumulative_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10343">
        <label>cons_indicator.h</label>
        <link refid="cons__indicator_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10422">
        <label>prop_redcost.h</label>
        <link refid="prop__redcost_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10369">
        <label>heur_feaspump.h</label>
        <link refid="heur__feaspump_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10442">
        <label>reader_zpl.h</label>
        <link refid="reader__zpl_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10443">
        <label>sepa_cgmip.h</label>
        <link refid="sepa__cgmip_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10383">
        <label>heur_pscostdiving.h</label>
        <link refid="heur__pscostdiving_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10429">
        <label>reader_fix.h</label>
        <link refid="reader__fix_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10357">
        <label>cons_sos2.h</label>
        <link refid="cons__sos2_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10393">
        <label>heur_trivial.h</label>
        <link refid="heur__trivial_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10346">
        <label>cons_linear.h</label>
        <link refid="cons__linear_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10378">
        <label>heur_nlpdiving.h</label>
        <link refid="heur__nlpdiving_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10344">
        <label>cons_integral.h</label>
        <link refid="cons__integral_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10446">
        <label>sepa_cmir.h</label>
        <link refid="sepa__cmir_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10385">
        <label>heur_rens.h</label>
        <link refid="heur__rens_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10368">
        <label>heur_dualval.h</label>
        <link refid="heur__dualval_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10387">
        <label>heur_rootsoldiving.h</label>
        <link refid="heur__rootsoldiving_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10323">
        <label>pub_misc.h</label>
        <link refid="pub_misc.h"/>
        <childnode refid="10324" relation="include">
        </childnode>
      </node>
      <node id="10420">
        <label>prop_probing.h</label>
        <link refid="prop__probing_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10351">
        <label>cons_orbitope.h</label>
        <link refid="cons__orbitope_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10340">
        <label>cons_countsols.h</label>
        <link refid="cons__countsols_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10453">
        <label>sepa_rapidlearning.h</label>
        <link refid="sepa__rapidlearning_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10384">
        <label>heur_randrounding.h</label>
        <link refid="heur__randrounding_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10402">
        <label>nodesel_breadthfirst.h</label>
        <link refid="nodesel__breadthfirst_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10392">
        <label>heur_subnlp.h</label>
        <link refid="heur__subnlp_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10427">
        <label>reader_cip.h</label>
        <link refid="reader__cip_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10404">
        <label>nodesel_estimate.h</label>
        <link refid="nodesel__estimate_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10417">
        <label>prop_dualfix.h</label>
        <link refid="prop__dualfix_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10373">
        <label>heur_intdiving.h</label>
        <link refid="heur__intdiving_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10419">
        <label>prop_obbt.h</label>
        <link refid="prop__obbt_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10421">
        <label>prop_pseudoobj.h</label>
        <link refid="prop__pseudoobj_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10414">
        <label>presol_implics.h</label>
        <link refid="presol__implics_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10377">
        <label>heur_mutation.h</label>
        <link refid="heur__mutation_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10444">
        <label>sepa_clique.h</label>
        <link refid="sepa__clique_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10394">
        <label>heur_trysol.h</label>
        <link refid="heur__trysol_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10432">
        <label>reader_lp.h</label>
        <link refid="reader__lp_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10450">
        <label>sepa_intobj.h</label>
        <link refid="sepa__intobj_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10395">
        <label>heur_twoopt.h</label>
        <link refid="heur__twoopt_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10398">
        <label>heur_veclendiving.h</label>
        <link refid="heur__veclendiving_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10335">
        <label>cons_abspower.h</label>
        <link refid="cons__abspower_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10354">
        <label>cons_setppc.h</label>
        <link refid="cons__setppc_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10382">
        <label>heur_proximity.h</label>
        <link refid="heur__proximity_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10448">
        <label>sepa_gomory.h</label>
        <link refid="sepa__gomory_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10345">
        <label>cons_knapsack.h</label>
        <link refid="cons__knapsack_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10423">
        <label>prop_rootredcost.h</label>
        <link refid="prop__rootredcost_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10405">
        <label>nodesel_hybridestim.h</label>
        <link refid="nodesel__hybridestim_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10347">
        <label>cons_linking.h</label>
        <link refid="cons__linking_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10325">
        <label>branch_allfullstrong.h</label>
        <link refid="branch__allfullstrong_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10440">
        <label>reader_sol.h</label>
        <link refid="reader__sol_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10409">
        <label>presol_components.h</label>
        <link refid="presol__components_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10433">
        <label>reader_mps.h</label>
        <link refid="reader__mps_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10379">
        <label>heur_objpscostdiving.h</label>
        <link refid="heur__objpscostdiving_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10363">
        <label>heur_actconsdiving.h</label>
        <link refid="heur__actconsdiving_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10415">
        <label>presol_inttobinary.h</label>
        <link refid="presol__inttobinary_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10424">
        <label>prop_vbounds.h</label>
        <link refid="prop__vbounds_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10451">
        <label>sepa_mcf.h</label>
        <link refid="sepa__mcf_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10447">
        <label>sepa_flowcover.h</label>
        <link refid="sepa__flowcover_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10418">
        <label>prop_genvbounds.h</label>
        <link refid="prop__genvbounds_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10412">
        <label>presol_dualinfer.h</label>
        <link refid="presol__dualinfer_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10355">
        <label>cons_soc.h</label>
        <link refid="cons__soc_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10401">
        <label>nodesel_bfs.h</label>
        <link refid="nodesel__bfs_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10332">
        <label>branch_pscost.h</label>
        <link refid="branch__pscost_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10449">
        <label>sepa_impliedbounds.h</label>
        <link refid="sepa__impliedbounds_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10349">
        <label>cons_nonlinear.h</label>
        <link refid="cons__nonlinear_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10428">
        <label>reader_cnf.h</label>
        <link refid="reader__cnf_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10397">
        <label>heur_vbounds.h</label>
        <link refid="heur__vbounds_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10411">
        <label>presol_domcol.h</label>
        <link refid="presol__domcol_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10375">
        <label>heur_linesearchdiving.h</label>
        <link refid="heur__linesearchdiving_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10431">
        <label>reader_gms.h</label>
        <link refid="reader__gms_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10439">
        <label>reader_rlp.h</label>
        <link refid="reader__rlp_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10358">
        <label>cons_superindicator.h</label>
        <link refid="cons__superindicator_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10330">
        <label>branch_leastinf.h</label>
        <link refid="branch__leastinf_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10389">
        <label>heur_shiftandpropagate.h</label>
        <link refid="heur__shiftandpropagate_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10408">
        <label>presol_boundshift.h</label>
        <link refid="presol__boundshift_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10348">
        <label>cons_logicor.h</label>
        <link refid="cons__logicor_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10435">
        <label>reader_osil.h</label>
        <link refid="reader__osil_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10430">
        <label>reader_fzn.h</label>
        <link refid="reader__fzn_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10403">
        <label>nodesel_dfs.h</label>
        <link refid="nodesel__dfs_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10339">
        <label>cons_conjunction.h</label>
        <link refid="cons__conjunction_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10454">
        <label>sepa_strongcg.h</label>
        <link refid="sepa__strongcg_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10426">
        <label>reader_ccg.h</label>
        <link refid="reader__ccg_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10416">
        <label>presol_trivial.h</label>
        <link refid="presol__trivial_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10370">
        <label>heur_fixandinfer.h</label>
        <link refid="heur__fixandinfer_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10353">
        <label>cons_quadratic.h</label>
        <link refid="cons__quadratic_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10327">
        <label>branch_cloud.h</label>
        <link refid="branch__cloud_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10452">
        <label>sepa_oddcycle.h</label>
        <link refid="sepa__oddcycle_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10366">
        <label>heur_crossover.h</label>
        <link refid="heur__crossover_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10338">
        <label>cons_bounddisjunction.h</label>
        <link refid="cons__bounddisjunction_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10337">
        <label>cons_bivariate.h</label>
        <link refid="cons__bivariate_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10441">
        <label>reader_wbo.h</label>
        <link refid="reader__wbo_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10400">
        <label>heur_zirounding.h</label>
        <link refid="heur__zirounding_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10380">
        <label>heur_octane.h</label>
        <link refid="heur__octane_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
      <node id="10331">
        <label>branch_mostinf.h</label>
        <link refid="branch__mostinf_8h"/>
        <childnode refid="10326" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="define">
      <memberdef kind="define" id="group__NumericalMethods_1ga1c0f12e349cb69625d9d7fe9441c47b5" prot="public" static="no">
        <name>SCIPisFinite</name>
        <param><defname>x</defname></param>
        <initializer>((x) == (x))</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4984" column="10" bodyfile="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" bodystart="4984" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="group__GMLgraph_1ga40fdd8619694bf8e0b5d732d4228231b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPgmlWriteNode</definition>
        <argsstring>(FILE *file, unsigned int id, const char *label, const char *nodetype, const char *fillcolor, const char *bordercolor)</argsstring>
        <name>SCIPgmlWriteNode</name>
        <param>
          <type>FILE *</type>
          <declname>file</declname>
          <briefdescription><para>file to write to </para></briefdescription>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>id</declname>
          <briefdescription><para>id of the node </para></briefdescription>
        </param>
        <param>
          <type>const char *</type>
          <declname>label</declname>
          <briefdescription><para>label of the node </para></briefdescription>
        </param>
        <param>
          <type>const char *</type>
          <declname>nodetype</declname>
          <briefdescription><para>type of the node, or NULL </para></briefdescription>
        </param>
        <param>
          <type>const char *</type>
          <declname>fillcolor</declname>
          <briefdescription><para>color of the node&apos;s interior, or NULL </para></briefdescription>
        </param>
        <param>
          <type>const char *</type>
          <declname>bordercolor</declname>
          <briefdescription><para>color of the node&apos;s border, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>writes a node section to the given graph file </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="67" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__GMLgraph_1ga37dd36258f0a9b3c6cabde117b9a8dc1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPgmlWriteNodeWeight</definition>
        <argsstring>(FILE *file, unsigned int id, const char *label, const char *nodetype, const char *fillcolor, const char *bordercolor, SCIP_Real weight)</argsstring>
        <name>SCIPgmlWriteNodeWeight</name>
        <param>
          <type>FILE *</type>
          <declname>file</declname>
          <briefdescription><para>file to write to </para></briefdescription>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>id</declname>
          <briefdescription><para>id of the node </para></briefdescription>
        </param>
        <param>
          <type>const char *</type>
          <declname>label</declname>
          <briefdescription><para>label of the node </para></briefdescription>
        </param>
        <param>
          <type>const char *</type>
          <declname>nodetype</declname>
          <briefdescription><para>type of the node, or NULL </para></briefdescription>
        </param>
        <param>
          <type>const char *</type>
          <declname>fillcolor</declname>
          <briefdescription><para>color of the node&apos;s interior, or NULL </para></briefdescription>
        </param>
        <param>
          <type>const char *</type>
          <declname>bordercolor</declname>
          <briefdescription><para>color of the node&apos;s border, or NULL </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>weight</declname>
          <briefdescription><para>weight of node </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>writes a node section including weight to the given graph file </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="78" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__GMLgraph_1gaac2a4633be2d428b9a7723bc826db9fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPgmlWriteEdge</definition>
        <argsstring>(FILE *file, unsigned int source, unsigned int target, const char *label, const char *color)</argsstring>
        <name>SCIPgmlWriteEdge</name>
        <param>
          <type>FILE *</type>
          <declname>file</declname>
          <briefdescription><para>file to write to </para></briefdescription>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>source</declname>
          <briefdescription><para>source node id of the node </para></briefdescription>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>target</declname>
          <briefdescription><para>target node id of the edge </para></briefdescription>
        </param>
        <param>
          <type>const char *</type>
          <declname>label</declname>
          <briefdescription><para>label of the edge, or NULL </para></briefdescription>
        </param>
        <param>
          <type>const char *</type>
          <declname>color</declname>
          <briefdescription><para>color of the edge, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>writes an edge section to the given graph file </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="90" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__GMLgraph_1gaede0b40b61c571e5f07e05aac3c3ead7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPgmlWriteArc</definition>
        <argsstring>(FILE *file, unsigned int source, unsigned int target, const char *label, const char *color)</argsstring>
        <name>SCIPgmlWriteArc</name>
        <param>
          <type>FILE *</type>
          <declname>file</declname>
          <briefdescription><para>file to write to </para></briefdescription>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>source</declname>
          <briefdescription><para>source node id of the node </para></briefdescription>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>target</declname>
          <briefdescription><para>target node id of the edge </para></briefdescription>
        </param>
        <param>
          <type>const char *</type>
          <declname>label</declname>
          <briefdescription><para>label of the edge, or NULL </para></briefdescription>
        </param>
        <param>
          <type>const char *</type>
          <declname>color</declname>
          <briefdescription><para>color of the edge, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>writes an arc section to the given graph file </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="100" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__GMLgraph_1ga739cfa7343d0c4e840c8ce5cae472215" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPgmlWriteOpening</definition>
        <argsstring>(FILE *file, SCIP_Bool directed)</argsstring>
        <name>SCIPgmlWriteOpening</name>
        <param>
          <type>FILE *</type>
          <declname>file</declname>
          <briefdescription><para>file to write to </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
          <declname>directed</declname>
          <briefdescription><para>is the graph directed </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>writes the starting line to a GML graph file, does not open a file </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="110" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__GMLgraph_1ga47a94f613724a22ee73899487bf7e010" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPgmlWriteClosing</definition>
        <argsstring>(FILE *file)</argsstring>
        <name>SCIPgmlWriteClosing</name>
        <param>
          <type>FILE *</type>
          <declname>file</declname>
          <briefdescription><para>file to close </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>writes the ending lines to a GML graph file, does not close a file </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="117" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SparseSol_1ga6ea4184cea0a17d2c95a60469ff49fcd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPsparseSolCreate</definition>
        <argsstring>(SCIP_SPARSESOL **sparsesol, SCIP_VAR **vars, int nvars, SCIP_Bool cleared)</argsstring>
        <name>SCIPsparseSolCreate</name>
        <param>
          <type><ref refid="type__misc_8h_1a88af7fd2fc5827a3e390b432a2e1a5b7" kindref="member">SCIP_SPARSESOL</ref> **</type>
          <declname>sparsesol</declname>
          <briefdescription><para>pointer to store the created sparse solution </para></briefdescription>
        </param>
        <param>
          <type><ref refid="type__var_8h_1a032edd1f5032513d49e397ebdcc8915b" kindref="member">SCIP_VAR</ref> **</type>
          <declname>vars</declname>
          <briefdescription><para>variables in the sparse solution, must not contain continuous variables </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>nvars</declname>
          <briefdescription><para>number of variables to store, size of the lower and upper bound arrays </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
          <declname>cleared</declname>
          <briefdescription><para>should the lower and upper bound arrays be cleared (entries set to 0) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>creates a sparse solution </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="143" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SparseSol_1gaa1912d1552fc9e04caa3fb5803bd9bc9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsparseSolFree</definition>
        <argsstring>(SCIP_SPARSESOL **sparsesol)</argsstring>
        <name>SCIPsparseSolFree</name>
        <param>
          <type><ref refid="type__misc_8h_1a88af7fd2fc5827a3e390b432a2e1a5b7" kindref="member">SCIP_SPARSESOL</ref> **</type>
          <declname>sparsesol</declname>
          <briefdescription><para>pointer to a sparse solution </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>frees sparse solution </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="158" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SparseSol_1ga7babfe1bb55c4298018f2a22ecca59cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__var_8h_1a032edd1f5032513d49e397ebdcc8915b" kindref="member">SCIP_VAR</ref> **</type>
        <definition>SCIP_VAR** SCIPsparseSolGetVars</definition>
        <argsstring>(SCIP_SPARSESOL *sparsesol)</argsstring>
        <name>SCIPsparseSolGetVars</name>
        <param>
          <type><ref refid="type__misc_8h_1a88af7fd2fc5827a3e390b432a2e1a5b7" kindref="member">SCIP_SPARSESOL</ref> *</type>
          <declname>sparsesol</declname>
          <briefdescription><para>a sparse solution </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the variables in the given sparse solution </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="164" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SparseSol_1ga0bcf8b0410606ec598b8b6050f4fca5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SCIPsparseSolGetNVars</definition>
        <argsstring>(SCIP_SPARSESOL *sparsesol)</argsstring>
        <name>SCIPsparseSolGetNVars</name>
        <param>
          <type><ref refid="type__misc_8h_1a88af7fd2fc5827a3e390b432a2e1a5b7" kindref="member">SCIP_SPARSESOL</ref> *</type>
          <declname>sparsesol</declname>
          <briefdescription><para>a sparse solution </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the number of variables in the given sparse solution </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="170" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SparseSol_1ga6cc8487e1ba6b74d4b09bfb977eab897" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
        <definition>SCIP_Longint* SCIPsparseSolGetLbs</definition>
        <argsstring>(SCIP_SPARSESOL *sparsesol)</argsstring>
        <name>SCIPsparseSolGetLbs</name>
        <param>
          <type><ref refid="type__misc_8h_1a88af7fd2fc5827a3e390b432a2e1a5b7" kindref="member">SCIP_SPARSESOL</ref> *</type>
          <declname>sparsesol</declname>
          <briefdescription><para>a sparse solution </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the the lower bound array for all variables for a given sparse solution </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="176" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SparseSol_1ga1a64ad4a509c455337393ae36465bdd2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
        <definition>SCIP_Longint* SCIPsparseSolGetUbs</definition>
        <argsstring>(SCIP_SPARSESOL *sparsesol)</argsstring>
        <name>SCIPsparseSolGetUbs</name>
        <param>
          <type><ref refid="type__misc_8h_1a88af7fd2fc5827a3e390b432a2e1a5b7" kindref="member">SCIP_SPARSESOL</ref> *</type>
          <declname>sparsesol</declname>
          <briefdescription><para>a sparse solution </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the the upper bound array for all variables for a given sparse solution </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="182" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SparseSol_1ga56a6b00fdcf3eefa804e814f7ee2ea46" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsparseSolGetFirstSol</definition>
        <argsstring>(SCIP_SPARSESOL *sparsesol, SCIP_Longint *sol, int nvars)</argsstring>
        <name>SCIPsparseSolGetFirstSol</name>
        <param>
          <type><ref refid="type__misc_8h_1a88af7fd2fc5827a3e390b432a2e1a5b7" kindref="member">SCIP_SPARSESOL</ref> *</type>
          <declname>sparsesol</declname>
          <briefdescription><para>sparse solutions </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>sol</declname>
          <briefdescription><para>array to store the first solution </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>nvars</declname>
          <briefdescription><para>number of variables </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>constructs the first solution of sparse solution (all variables are set to their lower bound value </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="188" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SparseSol_1gaed7a10e2bd49c6b18a16e98d37174498" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
        <definition>SCIP_Bool SCIPsparseSolGetNextSol</definition>
        <argsstring>(SCIP_SPARSESOL *sparsesol, SCIP_Longint *sol, int nvars)</argsstring>
        <name>SCIPsparseSolGetNextSol</name>
        <param>
          <type><ref refid="type__misc_8h_1a88af7fd2fc5827a3e390b432a2e1a5b7" kindref="member">SCIP_SPARSESOL</ref> *</type>
          <declname>sparsesol</declname>
          <briefdescription><para>sparse solutions </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>sol</declname>
          <briefdescription><para>current solution array which get changed to the next solution </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>nvars</declname>
          <briefdescription><para>number of variables </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>constructs the next solution of the sparse solution and return whether there was one more or not </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="196" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__Queue_1ga6dc8027538f4898c89fd5b66a2a2690c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPqueueCreate</definition>
        <argsstring>(SCIP_QUEUE **queue, int initsize, SCIP_Real sizefac)</argsstring>
        <name>SCIPqueueCreate</name>
        <param>
          <type><ref refid="type__misc_8h_1ad5048974efcb22f91f975478cbad85f0" kindref="member">SCIP_QUEUE</ref> **</type>
          <declname>queue</declname>
          <briefdescription><para>pointer to the new queue </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>initsize</declname>
          <briefdescription><para>initial number of available element slots </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>sizefac</declname>
          <briefdescription><para>memory growing factor applied, if more element slots are needed </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>creates a (circular) queue, best used if the size will be fixed or will not be increased that much </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="217" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__Queue_1ga4fee7625e3c63c4fb57e3a361a1b48a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPqueueFree</definition>
        <argsstring>(SCIP_QUEUE **queue)</argsstring>
        <name>SCIPqueueFree</name>
        <param>
          <type><ref refid="type__misc_8h_1ad5048974efcb22f91f975478cbad85f0" kindref="member">SCIP_QUEUE</ref> **</type>
          <declname>queue</declname>
          <briefdescription><para>pointer to a queue </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>frees queue, but not the data elements themselves </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="226" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__Queue_1ga94edad9c6fbfa1c8c09524964b1a677e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPqueueClear</definition>
        <argsstring>(SCIP_QUEUE *queue)</argsstring>
        <name>SCIPqueueClear</name>
        <param>
          <type><ref refid="type__misc_8h_1ad5048974efcb22f91f975478cbad85f0" kindref="member">SCIP_QUEUE</ref> *</type>
          <declname>queue</declname>
          <briefdescription><para>queue </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>clears the queue, but doesn&apos;t free the data elements themselves </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="232" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__Queue_1ga9d95806f2a0e8d2838f9f46fa691db2d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPqueueInsert</definition>
        <argsstring>(SCIP_QUEUE *queue, void *elem)</argsstring>
        <name>SCIPqueueInsert</name>
        <param>
          <type><ref refid="type__misc_8h_1ad5048974efcb22f91f975478cbad85f0" kindref="member">SCIP_QUEUE</ref> *</type>
          <declname>queue</declname>
          <briefdescription><para>queue </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>elem</declname>
          <briefdescription><para>element to be inserted </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>inserts element at the end of the queue </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="238" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__Queue_1ga3bc00e0e5b0b021aa2a4fbb411da1b7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* SCIPqueueRemove</definition>
        <argsstring>(SCIP_QUEUE *queue)</argsstring>
        <name>SCIPqueueRemove</name>
        <param>
          <type><ref refid="type__misc_8h_1ad5048974efcb22f91f975478cbad85f0" kindref="member">SCIP_QUEUE</ref> *</type>
          <declname>queue</declname>
          <briefdescription><para>queue </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>removes and returns the first element of the queue </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="245" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__Queue_1ga13e91e15b6261afe9c85c946a2387fcd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* SCIPqueueFirst</definition>
        <argsstring>(SCIP_QUEUE *queue)</argsstring>
        <name>SCIPqueueFirst</name>
        <param>
          <type><ref refid="type__misc_8h_1ad5048974efcb22f91f975478cbad85f0" kindref="member">SCIP_QUEUE</ref> *</type>
          <declname>queue</declname>
          <briefdescription><para>queue </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the first element of the queue without removing it </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="251" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__Queue_1ga9e7f67671f7c29586116d525253201d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
        <definition>SCIP_Bool SCIPqueueIsEmpty</definition>
        <argsstring>(SCIP_QUEUE *queue)</argsstring>
        <name>SCIPqueueIsEmpty</name>
        <param>
          <type><ref refid="type__misc_8h_1ad5048974efcb22f91f975478cbad85f0" kindref="member">SCIP_QUEUE</ref> *</type>
          <declname>queue</declname>
          <briefdescription><para>queue </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns whether the queue is empty </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="257" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__Queue_1ga1c13ac7b52e54fd467517c61d054eaac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SCIPqueueNElems</definition>
        <argsstring>(SCIP_QUEUE *queue)</argsstring>
        <name>SCIPqueueNElems</name>
        <param>
          <type><ref refid="type__misc_8h_1ad5048974efcb22f91f975478cbad85f0" kindref="member">SCIP_QUEUE</ref> *</type>
          <declname>queue</declname>
          <briefdescription><para>queue </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the number of elements in the queue </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="263" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PriorityQueue_1ga0ff8c437c92612853adabb903362fe17" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPpqueueCreate</definition>
        <argsstring>(SCIP_PQUEUE **pqueue, int initsize, SCIP_Real sizefac, SCIP_DECL_SORTPTRCOMP((*ptrcomp)))</argsstring>
        <name>SCIPpqueueCreate</name>
        <param>
          <type><ref refid="type__misc_8h_1a9d2620c55e31a5c5c585c70609ceb208" kindref="member">SCIP_PQUEUE</ref> **</type>
          <declname>pqueue</declname>
          <briefdescription><para>pointer to a priority queue </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>initsize</declname>
          <briefdescription><para>initial number of available element slots </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>sizefac</declname>
          <briefdescription><para>memory growing factor applied, if more element slots are needed </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>creates priority queue </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="280" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PriorityQueue_1gabc7da0a14aba48a1906ab62c872ca062" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPpqueueFree</definition>
        <argsstring>(SCIP_PQUEUE **pqueue)</argsstring>
        <name>SCIPpqueueFree</name>
        <param>
          <type><ref refid="type__misc_8h_1a9d2620c55e31a5c5c585c70609ceb208" kindref="member">SCIP_PQUEUE</ref> **</type>
          <declname>pqueue</declname>
          <briefdescription><para>pointer to a priority queue </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>frees priority queue, but not the data elements themselves </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="289" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PriorityQueue_1ga7eb08f5cc4ffe7845de3433b892e632e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPpqueueClear</definition>
        <argsstring>(SCIP_PQUEUE *pqueue)</argsstring>
        <name>SCIPpqueueClear</name>
        <param>
          <type><ref refid="type__misc_8h_1a9d2620c55e31a5c5c585c70609ceb208" kindref="member">SCIP_PQUEUE</ref> *</type>
          <declname>pqueue</declname>
          <briefdescription><para>priority queue </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>clears the priority queue, but doesn&apos;t free the data elements themselves </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="295" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PriorityQueue_1gad786b28e3b3f418aeaf93bd43dae8d8c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPpqueueInsert</definition>
        <argsstring>(SCIP_PQUEUE *pqueue, void *elem)</argsstring>
        <name>SCIPpqueueInsert</name>
        <param>
          <type><ref refid="type__misc_8h_1a9d2620c55e31a5c5c585c70609ceb208" kindref="member">SCIP_PQUEUE</ref> *</type>
          <declname>pqueue</declname>
          <briefdescription><para>priority queue </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>elem</declname>
          <briefdescription><para>element to be inserted </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>inserts element into priority queue </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="301" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PriorityQueue_1gadfc279ce0751db7702262ffe6e45f911" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* SCIPpqueueRemove</definition>
        <argsstring>(SCIP_PQUEUE *pqueue)</argsstring>
        <name>SCIPpqueueRemove</name>
        <param>
          <type><ref refid="type__misc_8h_1a9d2620c55e31a5c5c585c70609ceb208" kindref="member">SCIP_PQUEUE</ref> *</type>
          <declname>pqueue</declname>
          <briefdescription><para>priority queue </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>removes and returns best element from the priority queue </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="308" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PriorityQueue_1ga52edb6c94c11d3a4bae5d7ce9449ed9d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* SCIPpqueueFirst</definition>
        <argsstring>(SCIP_PQUEUE *pqueue)</argsstring>
        <name>SCIPpqueueFirst</name>
        <param>
          <type><ref refid="type__misc_8h_1a9d2620c55e31a5c5c585c70609ceb208" kindref="member">SCIP_PQUEUE</ref> *</type>
          <declname>pqueue</declname>
          <briefdescription><para>priority queue </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the best element of the queue without removing it </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="314" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PriorityQueue_1gade8f0e94c24f95e49768652303f6cd64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SCIPpqueueNElems</definition>
        <argsstring>(SCIP_PQUEUE *pqueue)</argsstring>
        <name>SCIPpqueueNElems</name>
        <param>
          <type><ref refid="type__misc_8h_1a9d2620c55e31a5c5c585c70609ceb208" kindref="member">SCIP_PQUEUE</ref> *</type>
          <declname>pqueue</declname>
          <briefdescription><para>priority queue </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the number of elements in the queue </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="320" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PriorityQueue_1ga3233b5a2a37b51a962e2bfdd9339bd3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void **</type>
        <definition>void** SCIPpqueueElems</definition>
        <argsstring>(SCIP_PQUEUE *pqueue)</argsstring>
        <name>SCIPpqueueElems</name>
        <param>
          <type><ref refid="type__misc_8h_1a9d2620c55e31a5c5c585c70609ceb208" kindref="member">SCIP_PQUEUE</ref> *</type>
          <declname>pqueue</declname>
          <briefdescription><para>priority queue </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the elements of the queue; changing the returned array may destroy the queue&apos;s ordering! </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="326" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__HashTable_1ga88998585e83f8b9634e3de30c0064b24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SCIPcalcHashtableSize</definition>
        <argsstring>(int minsize)</argsstring>
        <name>SCIPcalcHashtableSize</name>
        <param>
          <type>int</type>
          <declname>minsize</declname>
          <briefdescription><para>minimal size of the hash table </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns a reasonable hash table size (a prime number) that is at least as large as the specified value </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="344" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__HashTable_1ga710093a3fde556c004b45e027fc95544" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPhashtableCreate</definition>
        <argsstring>(SCIP_HASHTABLE **hashtable, BMS_BLKMEM *blkmem, int tablesize, SCIP_DECL_HASHGETKEY((*hashgetkey)), SCIP_DECL_HASHKEYEQ((*hashkeyeq)), SCIP_DECL_HASHKEYVAL((*hashkeyval)), void *userptr)</argsstring>
        <name>SCIPhashtableCreate</name>
        <param>
          <type><ref refid="type__misc_8h_1ad34b75a37536cdd2c578a3ada6554117" kindref="member">SCIP_HASHTABLE</ref> **</type>
          <declname>hashtable</declname>
          <briefdescription><para>pointer to store the created hash table </para></briefdescription>
        </param>
        <param>
          <type>BMS_BLKMEM *</type>
          <declname>blkmem</declname>
          <briefdescription><para>block memory used to store hash table entries </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>tablesize</declname>
          <briefdescription><para>size of the hash table </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1a3d8785085e66bdf69c0052d62bcdf6b0" kindref="member">SCIP_DECL_HASHGETKEY</ref>((*hashgetkey))</type>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1a9e97a5bfa3f3893dfaa77abea445e2c1" kindref="member">SCIP_DECL_HASHKEYEQ</ref>((*hashkeyeq))</type>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1ab89262d32e8c5cb1d5676bb77ca92993" kindref="member">SCIP_DECL_HASHKEYVAL</ref>((*hashkeyval))</type>
        </param>
        <param>
          <type>void *</type>
          <declname>userptr</declname>
          <briefdescription><para>user pointer </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>creates a hash table </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="350" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__HashTable_1ga196b167ef57e488adbf52344f6230285" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPhashtableFree</definition>
        <argsstring>(SCIP_HASHTABLE **hashtable)</argsstring>
        <name>SCIPhashtableFree</name>
        <param>
          <type><ref refid="type__misc_8h_1ad34b75a37536cdd2c578a3ada6554117" kindref="member">SCIP_HASHTABLE</ref> **</type>
          <declname>hashtable</declname>
          <briefdescription><para>pointer to the hash table </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>frees the hash table </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="362" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__HashTable_1ga4469d030912856aa4da7a48063ab58d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPhashtableClear</definition>
        <argsstring>(SCIP_HASHTABLE *hashtable)</argsstring>
        <name>SCIPhashtableClear</name>
        <param>
          <type><ref refid="type__misc_8h_1ad34b75a37536cdd2c578a3ada6554117" kindref="member">SCIP_HASHTABLE</ref> *</type>
          <declname>hashtable</declname>
          <briefdescription><para>hash table </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>removes all elements of the hash table</para><para><simplesect kind="note"><para>From a performance point of view you should not fill and clear a hash table too often since the clearing can be expensive. Clearing is done by looping over all buckets and removing the hash table lists one-by-one.</para></simplesect>
<xrefsect id="deprecated_1_deprecated000001"><xreftitle>Deprecated</xreftitle><xrefdescription><para>Please use <ref refid="group__HashTable_1ga8942889cec8c64206cf464f75f720e11" kindref="member">SCIPhashtableRemoveAll()</ref> </para></xrefdescription></xrefsect></para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="374" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__HashTable_1gad499ca1ae44ec958411757d0cb8c2f74" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPhashtableInsert</definition>
        <argsstring>(SCIP_HASHTABLE *hashtable, void *element)</argsstring>
        <name>SCIPhashtableInsert</name>
        <param>
          <type><ref refid="type__misc_8h_1ad34b75a37536cdd2c578a3ada6554117" kindref="member">SCIP_HASHTABLE</ref> *</type>
          <declname>hashtable</declname>
          <briefdescription><para>hash table </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>element</declname>
          <briefdescription><para>element to insert into the table </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>inserts element in hash table (multiple inserts of same element possible)</para><para><simplesect kind="note"><para>A pointer to a hashtablelist returned by <ref refid="group__HashTable_1gae9c4d7208c3f38957f8eafa1094410ca" kindref="member">SCIPhashtableRetrieveNext()</ref> might get invalid when adding an element to the hash table, due to dynamic resizing. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="384" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__HashTable_1ga52179ec979e131317ffb07c9c9579ccb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPhashtableSafeInsert</definition>
        <argsstring>(SCIP_HASHTABLE *hashtable, void *element)</argsstring>
        <name>SCIPhashtableSafeInsert</name>
        <param>
          <type><ref refid="type__misc_8h_1ad34b75a37536cdd2c578a3ada6554117" kindref="member">SCIP_HASHTABLE</ref> *</type>
          <declname>hashtable</declname>
          <briefdescription><para>hash table </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>element</declname>
          <briefdescription><para>element to insert into the table </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>inserts element in hash table (multiple insertion of same element is checked and results in an error)</para><para><simplesect kind="note"><para>A pointer to a hashtablelist returned by <ref refid="group__HashTable_1gae9c4d7208c3f38957f8eafa1094410ca" kindref="member">SCIPhashtableRetrieveNext()</ref> might get invalid when adding a new element to the hash table, due to dynamic resizing. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="395" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__HashTable_1ga38af5e199e72c2d1e9e30a50b92f02de" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* SCIPhashtableRetrieve</definition>
        <argsstring>(SCIP_HASHTABLE *hashtable, void *key)</argsstring>
        <name>SCIPhashtableRetrieve</name>
        <param>
          <type><ref refid="type__misc_8h_1ad34b75a37536cdd2c578a3ada6554117" kindref="member">SCIP_HASHTABLE</ref> *</type>
          <declname>hashtable</declname>
          <briefdescription><para>hash table </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>key</declname>
          <briefdescription><para>key to retrieve </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>retrieve element with key from hash table, returns NULL if not existing </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="402" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__HashTable_1gae9c4d7208c3f38957f8eafa1094410ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* SCIPhashtableRetrieveNext</definition>
        <argsstring>(SCIP_HASHTABLE *hashtable, SCIP_HASHTABLELIST **hashtablelist, void *key)</argsstring>
        <name>SCIPhashtableRetrieveNext</name>
        <param>
          <type><ref refid="type__misc_8h_1ad34b75a37536cdd2c578a3ada6554117" kindref="member">SCIP_HASHTABLE</ref> *</type>
          <declname>hashtable</declname>
          <briefdescription><para>hash table </para></briefdescription>
        </param>
        <param>
          <type><ref refid="type__misc_8h_1a627f6a0ea9509715be86152028c3b1c8" kindref="member">SCIP_HASHTABLELIST</ref> **</type>
          <declname>hashtablelist</declname>
          <briefdescription><para>input: entry in hash table list from which to start searching, or NULL output: entry in hash table list corresponding to element after retrieved one, or NULL </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>key</declname>
          <briefdescription><para>key to retrieve </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>retrieve element with key from hash table, returns NULL if not existing can be used to retrieve all entries with the same key (one-by-one)</para><para><simplesect kind="note"><para>The returned hashtablelist pointer might get invalid when adding a new element to the hash table. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="413" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__HashTable_1ga21e69c964ab3785e1aaa36b2af74c720" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
        <definition>SCIP_Bool SCIPhashtableExists</definition>
        <argsstring>(SCIP_HASHTABLE *hashtable, void *element)</argsstring>
        <name>SCIPhashtableExists</name>
        <param>
          <type><ref refid="type__misc_8h_1ad34b75a37536cdd2c578a3ada6554117" kindref="member">SCIP_HASHTABLE</ref> *</type>
          <declname>hashtable</declname>
          <briefdescription><para>hash table </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>element</declname>
          <briefdescription><para>element to search in the table </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns whether the given element exists in the table </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="423" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__HashTable_1gad1088f82af9c0d3c1768e40aff2eb588" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPhashtableRemove</definition>
        <argsstring>(SCIP_HASHTABLE *hashtable, void *element)</argsstring>
        <name>SCIPhashtableRemove</name>
        <param>
          <type><ref refid="type__misc_8h_1ad34b75a37536cdd2c578a3ada6554117" kindref="member">SCIP_HASHTABLE</ref> *</type>
          <declname>hashtable</declname>
          <briefdescription><para>hash table </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>element</declname>
          <briefdescription><para>element to remove from the table </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>removes element from the hash table, if it exists </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="430" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__HashTable_1ga8942889cec8c64206cf464f75f720e11" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPhashtableRemoveAll</definition>
        <argsstring>(SCIP_HASHTABLE *hashtable)</argsstring>
        <name>SCIPhashtableRemoveAll</name>
        <param>
          <type><ref refid="type__misc_8h_1ad34b75a37536cdd2c578a3ada6554117" kindref="member">SCIP_HASHTABLE</ref> *</type>
          <declname>hashtable</declname>
          <briefdescription><para>hash table </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>removes all elements of the hash table</para><para><simplesect kind="note"><para>From a performance point of view you should not fill and clear a hash table too often since the clearing can be expensive. Clearing is done by looping over all buckets and removing the hash table lists one-by-one. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="441" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__HashTable_1gafd5202e03bcde6fa474a0653cb48687a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref></type>
        <definition>SCIP_Longint SCIPhashtableGetNElements</definition>
        <argsstring>(SCIP_HASHTABLE *hashtable)</argsstring>
        <name>SCIPhashtableGetNElements</name>
        <param>
          <type><ref refid="type__misc_8h_1ad34b75a37536cdd2c578a3ada6554117" kindref="member">SCIP_HASHTABLE</ref> *</type>
          <declname>hashtable</declname>
          <briefdescription><para>hash table </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns number of hash table elements </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="447" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__HashTable_1gaa0de9e7fb99eaaa3c862ed0030ddaa6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
        <definition>SCIP_Real SCIPhashtableGetLoad</definition>
        <argsstring>(SCIP_HASHTABLE *hashtable)</argsstring>
        <name>SCIPhashtableGetLoad</name>
        <param>
          <type><ref refid="type__misc_8h_1ad34b75a37536cdd2c578a3ada6554117" kindref="member">SCIP_HASHTABLE</ref> *</type>
          <declname>hashtable</declname>
          <briefdescription><para>hash table </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the load of the given hash table in percentage </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="453" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__HashTable_1gac2acac23d58b25c23bbc71f48d57b256" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPhashtablePrintStatistics</definition>
        <argsstring>(SCIP_HASHTABLE *hashtable, SCIP_MESSAGEHDLR *messagehdlr)</argsstring>
        <name>SCIPhashtablePrintStatistics</name>
        <param>
          <type><ref refid="type__misc_8h_1ad34b75a37536cdd2c578a3ada6554117" kindref="member">SCIP_HASHTABLE</ref> *</type>
          <declname>hashtable</declname>
          <briefdescription><para>hash table </para></briefdescription>
        </param>
        <param>
          <type><ref refid="type__message_8h_1a7d71113339d14873806c1399442fae8d" kindref="member">SCIP_MESSAGEHDLR</ref> *</type>
          <declname>messagehdlr</declname>
          <briefdescription><para>message handler </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>prints statistics about hash table usage </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="459" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__HashTable_1ga52b1c0d0843ed79188f9372f1a5a6965" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SCIP_DECL_HASHKEYEQ</definition>
        <argsstring>(SCIPhashKeyEqString)</argsstring>
        <name>SCIP_DECL_HASHKEYEQ</name>
        <param>
          <type>SCIPhashKeyEqString</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>standard hash key comparator for string keys </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="466" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__HashTable_1ga8c05b46e1e9846136e6db221a663ae91" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SCIP_DECL_HASHKEYVAL</definition>
        <argsstring>(SCIPhashKeyValString)</argsstring>
        <name>SCIP_DECL_HASHKEYVAL</name>
        <param>
          <type>SCIPhashKeyValString</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>standard hashing function for string keys </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="470" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__HashTable_1gac7536110cb0a283654d0a5bb3d1cc6d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SCIP_DECL_HASHGETKEY</definition>
        <argsstring>(SCIPhashGetKeyStandard)</argsstring>
        <name>SCIP_DECL_HASHGETKEY</name>
        <param>
          <type>SCIPhashGetKeyStandard</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>gets the element as the key </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="474" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__HashTable_1ga115b44ec1cfc1e7dbe8aefb95e293734" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SCIP_DECL_HASHKEYEQ</definition>
        <argsstring>(SCIPhashKeyEqPtr)</argsstring>
        <name>SCIP_DECL_HASHKEYEQ</name>
        <param>
          <type>SCIPhashKeyEqPtr</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns TRUE iff both keys(pointer) are equal </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="478" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__HashTable_1gabc4946f129b5b4672d259235fd22c021" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SCIP_DECL_HASHKEYVAL</definition>
        <argsstring>(SCIPhashKeyValPtr)</argsstring>
        <name>SCIP_DECL_HASHKEYVAL</name>
        <param>
          <type>SCIPhashKeyValPtr</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the hash value of the key </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="482" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__HashMap_1gaa89c4efb224675b9eb02d8077d66b589" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPhashmapCreate</definition>
        <argsstring>(SCIP_HASHMAP **hashmap, BMS_BLKMEM *blkmem, int mapsize)</argsstring>
        <name>SCIPhashmapCreate</name>
        <param>
          <type><ref refid="type__misc_8h_1a4372d6d4f362b30349748b72c8a28704" kindref="member">SCIP_HASHMAP</ref> **</type>
          <declname>hashmap</declname>
          <briefdescription><para>pointer to store the created hash map </para></briefdescription>
        </param>
        <param>
          <type>BMS_BLKMEM *</type>
          <declname>blkmem</declname>
          <briefdescription><para>block memory used to store hash map entries </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>mapsize</declname>
          <briefdescription><para>size of the hash map </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>creates a hash map mapping pointers to pointers </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="498" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__HashMap_1ga0608b946119ee33eddccdc7e11b536a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPhashmapFree</definition>
        <argsstring>(SCIP_HASHMAP **hashmap)</argsstring>
        <name>SCIPhashmapFree</name>
        <param>
          <type><ref refid="type__misc_8h_1a4372d6d4f362b30349748b72c8a28704" kindref="member">SCIP_HASHMAP</ref> **</type>
          <declname>hashmap</declname>
          <briefdescription><para>pointer to the hash map </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>frees the hash map </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="506" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__HashMap_1ga6c5891f54d8ad4b6687fbf656f7c790a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPhashmapInsert</definition>
        <argsstring>(SCIP_HASHMAP *hashmap, void *origin, void *image)</argsstring>
        <name>SCIPhashmapInsert</name>
        <param>
          <type><ref refid="type__misc_8h_1a4372d6d4f362b30349748b72c8a28704" kindref="member">SCIP_HASHMAP</ref> *</type>
          <declname>hashmap</declname>
          <briefdescription><para>hash map </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>origin</declname>
          <briefdescription><para>origin to set image for </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>image</declname>
          <briefdescription><para>new image for origin </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>inserts new origin-&gt;image pair in hash map (must not be called for already existing origins!) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="512" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__HashMap_1ga94d0a3d1317bd2c826aec734dfe7a578" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* SCIPhashmapGetImage</definition>
        <argsstring>(SCIP_HASHMAP *hashmap, void *origin)</argsstring>
        <name>SCIPhashmapGetImage</name>
        <param>
          <type><ref refid="type__misc_8h_1a4372d6d4f362b30349748b72c8a28704" kindref="member">SCIP_HASHMAP</ref> *</type>
          <declname>hashmap</declname>
          <briefdescription><para>hash map </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>origin</declname>
          <briefdescription><para>origin to retrieve image for </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>retrieves image of given origin from the hash map, or NULL if no image exists </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="520" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__HashMap_1ga775b2bba1e36c6d7a6a88bad540cd829" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPhashmapSetImage</definition>
        <argsstring>(SCIP_HASHMAP *hashmap, void *origin, void *image)</argsstring>
        <name>SCIPhashmapSetImage</name>
        <param>
          <type><ref refid="type__misc_8h_1a4372d6d4f362b30349748b72c8a28704" kindref="member">SCIP_HASHMAP</ref> *</type>
          <declname>hashmap</declname>
          <briefdescription><para>hash map </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>origin</declname>
          <briefdescription><para>origin to set image for </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>image</declname>
          <briefdescription><para>new image for origin </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sets image for given origin in the hash map, either by modifying existing origin-&gt;image pair or by appending a new origin-&gt;image pair </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="529" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__HashMap_1gaabc086ffe2d5d7a30c78fb6801d9824d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
        <definition>SCIP_Bool SCIPhashmapExists</definition>
        <argsstring>(SCIP_HASHMAP *hashmap, void *origin)</argsstring>
        <name>SCIPhashmapExists</name>
        <param>
          <type><ref refid="type__misc_8h_1a4372d6d4f362b30349748b72c8a28704" kindref="member">SCIP_HASHMAP</ref> *</type>
          <declname>hashmap</declname>
          <briefdescription><para>hash map </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>origin</declname>
          <briefdescription><para>origin to search for </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>checks whether an image to the given origin exists in the hash map </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="537" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__HashMap_1gadd88c803cd5317b9dd4d3cb67356c697" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPhashmapRemove</definition>
        <argsstring>(SCIP_HASHMAP *hashmap, void *origin)</argsstring>
        <name>SCIPhashmapRemove</name>
        <param>
          <type><ref refid="type__misc_8h_1a4372d6d4f362b30349748b72c8a28704" kindref="member">SCIP_HASHMAP</ref> *</type>
          <declname>hashmap</declname>
          <briefdescription><para>hash map </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>origin</declname>
          <briefdescription><para>origin to remove from the list </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>removes origin-&gt;image pair from the hash map, if it exists </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="544" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__HashMap_1ga449a592a52acdd69246f24ba02b710b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPhashmapPrintStatistics</definition>
        <argsstring>(SCIP_HASHMAP *hashmap, SCIP_MESSAGEHDLR *messagehdlr)</argsstring>
        <name>SCIPhashmapPrintStatistics</name>
        <param>
          <type><ref refid="type__misc_8h_1a4372d6d4f362b30349748b72c8a28704" kindref="member">SCIP_HASHMAP</ref> *</type>
          <declname>hashmap</declname>
          <briefdescription><para>hash map </para></briefdescription>
        </param>
        <param>
          <type><ref refid="type__message_8h_1a7d71113339d14873806c1399442fae8d" kindref="member">SCIP_MESSAGEHDLR</ref> *</type>
          <declname>messagehdlr</declname>
          <briefdescription><para>message handler </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>prints statistics about hash map usage </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="551" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__HashMap_1gaaf786e6a1c5f570160cfbf980712ec97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
        <definition>SCIP_Bool SCIPhashmapIsEmpty</definition>
        <argsstring>(SCIP_HASHMAP *hashmap)</argsstring>
        <name>SCIPhashmapIsEmpty</name>
        <param>
          <type><ref refid="type__misc_8h_1a4372d6d4f362b30349748b72c8a28704" kindref="member">SCIP_HASHMAP</ref> *</type>
          <declname>hashmap</declname>
          <briefdescription><para>hash map </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>indicates whether a hash map has no entries </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="558" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__HashMap_1gaa42e2b5696030d88b617b59635bca41c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SCIPhashmapGetNEntries</definition>
        <argsstring>(SCIP_HASHMAP *hashmap)</argsstring>
        <name>SCIPhashmapGetNEntries</name>
        <param>
          <type><ref refid="type__misc_8h_1a4372d6d4f362b30349748b72c8a28704" kindref="member">SCIP_HASHMAP</ref> *</type>
          <declname>hashmap</declname>
          <briefdescription><para>hash map </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>gives the number of entries in a hash map </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="564" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__HashMap_1ga1c23f5d8b09596f36095c538a3ca8b90" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SCIPhashmapGetNLists</definition>
        <argsstring>(SCIP_HASHMAP *hashmap)</argsstring>
        <name>SCIPhashmapGetNLists</name>
        <param>
          <type><ref refid="type__misc_8h_1a4372d6d4f362b30349748b72c8a28704" kindref="member">SCIP_HASHMAP</ref> *</type>
          <declname>hashmap</declname>
          <briefdescription><para>hash map </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>gives the number of lists (buckets) in a hash map </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="570" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__HashMap_1ga1b4928cccf29294eb7a0eef8d513eaf0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__misc_8h_1a58bc076cfc7fa95aa5cb8a09cb7db240" kindref="member">SCIP_HASHMAPLIST</ref> *</type>
        <definition>SCIP_HASHMAPLIST* SCIPhashmapGetList</definition>
        <argsstring>(SCIP_HASHMAP *hashmap, int listindex)</argsstring>
        <name>SCIPhashmapGetList</name>
        <param>
          <type><ref refid="type__misc_8h_1a4372d6d4f362b30349748b72c8a28704" kindref="member">SCIP_HASHMAP</ref> *</type>
          <declname>hashmap</declname>
          <briefdescription><para>hash map </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>listindex</declname>
          <briefdescription><para>index of hash map list </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>gives a specific list (bucket) in a hash map </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="576" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__HashMap_1gae5407947043ae5775285811aaca21ccd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SCIPhashmapListGetNEntries</definition>
        <argsstring>(SCIP_HASHMAPLIST *hashmaplist)</argsstring>
        <name>SCIPhashmapListGetNEntries</name>
        <param>
          <type><ref refid="type__misc_8h_1a58bc076cfc7fa95aa5cb8a09cb7db240" kindref="member">SCIP_HASHMAPLIST</ref> *</type>
          <declname>hashmaplist</declname>
          <briefdescription><para>hash map list, can be NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>gives the number of entries in a list of a hash map </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="583" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__HashMap_1gae36533115853982dbe9abf07a66dbf4c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* SCIPhashmapListGetOrigin</definition>
        <argsstring>(SCIP_HASHMAPLIST *hashmaplist)</argsstring>
        <name>SCIPhashmapListGetOrigin</name>
        <param>
          <type><ref refid="type__misc_8h_1a58bc076cfc7fa95aa5cb8a09cb7db240" kindref="member">SCIP_HASHMAPLIST</ref> *</type>
          <declname>hashmaplist</declname>
          <briefdescription><para>hash map list </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>retrieves origin of given entry in a hash map </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="589" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__HashMap_1gae6e3eb18475b04851577aafe1be61b41" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* SCIPhashmapListGetImage</definition>
        <argsstring>(SCIP_HASHMAPLIST *hashmaplist)</argsstring>
        <name>SCIPhashmapListGetImage</name>
        <param>
          <type><ref refid="type__misc_8h_1a58bc076cfc7fa95aa5cb8a09cb7db240" kindref="member">SCIP_HASHMAPLIST</ref> *</type>
          <declname>hashmaplist</declname>
          <briefdescription><para>hash map list </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>retrieves image of given entry in a hash map </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="595" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__HashMap_1gad112643475175485603d47d85a9a5839" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__misc_8h_1a58bc076cfc7fa95aa5cb8a09cb7db240" kindref="member">SCIP_HASHMAPLIST</ref> *</type>
        <definition>SCIP_HASHMAPLIST* SCIPhashmapListGetNext</definition>
        <argsstring>(SCIP_HASHMAPLIST *hashmaplist)</argsstring>
        <name>SCIPhashmapListGetNext</name>
        <param>
          <type><ref refid="type__misc_8h_1a58bc076cfc7fa95aa5cb8a09cb7db240" kindref="member">SCIP_HASHMAPLIST</ref> *</type>
          <declname>hashmaplist</declname>
          <briefdescription><para>hash map list </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>retrieves next entry from given entry in a hash map list, or NULL if at end of list. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="601" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__HashMap_1gabe91bd21dcc1028a65d2dcde3566ec61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPhashmapRemoveAll</definition>
        <argsstring>(SCIP_HASHMAP *hashmap)</argsstring>
        <name>SCIPhashmapRemoveAll</name>
        <param>
          <type><ref refid="type__misc_8h_1a4372d6d4f362b30349748b72c8a28704" kindref="member">SCIP_HASHMAP</ref> *</type>
          <declname>hashmap</declname>
          <briefdescription><para>hash map </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>removes all entries in a hash map. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="607" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__ResourceActivity_1ga35cb820e86220272113317077ac2ab1d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPactivityCreate</definition>
        <argsstring>(SCIP_RESOURCEACTIVITY **activity, SCIP_VAR *var, int duration, int demand)</argsstring>
        <name>SCIPactivityCreate</name>
        <param>
          <type><ref refid="type__misc_8h_1a7514fdec34fb0e3416ada44705f1af46" kindref="member">SCIP_RESOURCEACTIVITY</ref> **</type>
          <declname>activity</declname>
          <briefdescription><para>pointer to store the resource activity </para></briefdescription>
        </param>
        <param>
          <type><ref refid="type__var_8h_1a032edd1f5032513d49e397ebdcc8915b" kindref="member">SCIP_VAR</ref> *</type>
          <declname>var</declname>
          <briefdescription><para>start time variable of the activity </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>duration</declname>
          <briefdescription><para>duration of the activity </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>demand</declname>
          <briefdescription><para>demand of the activity </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>create a resource activity </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="626" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__ResourceActivity_1gadcb2d60a115167c46a0ac8a303f7c2da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPactivityFree</definition>
        <argsstring>(SCIP_RESOURCEACTIVITY **activity)</argsstring>
        <name>SCIPactivityFree</name>
        <param>
          <type><ref refid="type__misc_8h_1a7514fdec34fb0e3416ada44705f1af46" kindref="member">SCIP_RESOURCEACTIVITY</ref> **</type>
          <declname>activity</declname>
          <briefdescription><para>pointer to the resource activity </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>frees a resource activity </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="635" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__ResourceActivity_1gaeb378f5caf6fcfa26956455f469a41fa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__var_8h_1a032edd1f5032513d49e397ebdcc8915b" kindref="member">SCIP_VAR</ref> *</type>
        <definition>SCIP_VAR* SCIPactivityGetVar</definition>
        <argsstring>(SCIP_RESOURCEACTIVITY *activity)</argsstring>
        <name>SCIPactivityGetVar</name>
        <param>
          <type><ref refid="type__misc_8h_1a7514fdec34fb0e3416ada44705f1af46" kindref="member">SCIP_RESOURCEACTIVITY</ref> *</type>
          <declname>activity</declname>
          <briefdescription><para>resource activity </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the start time variable of the resource activity </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="643" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__ResourceActivity_1ga778948d89fbc5e213c340f2c5eb54c9e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SCIPactivityGetDuration</definition>
        <argsstring>(SCIP_RESOURCEACTIVITY *activity)</argsstring>
        <name>SCIPactivityGetDuration</name>
        <param>
          <type><ref refid="type__misc_8h_1a7514fdec34fb0e3416ada44705f1af46" kindref="member">SCIP_RESOURCEACTIVITY</ref> *</type>
          <declname>activity</declname>
          <briefdescription><para>resource activity </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the duration of the resource activity </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="649" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__ResourceActivity_1gad490e91d9eba4df4009054768850458a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SCIPactivityGetDemand</definition>
        <argsstring>(SCIP_RESOURCEACTIVITY *activity)</argsstring>
        <name>SCIPactivityGetDemand</name>
        <param>
          <type><ref refid="type__misc_8h_1a7514fdec34fb0e3416ada44705f1af46" kindref="member">SCIP_RESOURCEACTIVITY</ref> *</type>
          <declname>activity</declname>
          <briefdescription><para>resource activity </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the demand of the resource activity </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="655" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__ResourceActivity_1gab94f4fc18e475b6b8e4d23d841836efd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SCIPactivityGetEnergy</definition>
        <argsstring>(SCIP_RESOURCEACTIVITY *activity)</argsstring>
        <name>SCIPactivityGetEnergy</name>
        <param>
          <type><ref refid="type__misc_8h_1a7514fdec34fb0e3416ada44705f1af46" kindref="member">SCIP_RESOURCEACTIVITY</ref> *</type>
          <declname>activity</declname>
          <briefdescription><para>resource activity </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the energy of the resource activity </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="661" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__ResourceProfile_1ga7658a32b854fc5191b46810bac73d9d7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPprofileCreate</definition>
        <argsstring>(SCIP_PROFILE **profile, int capacity)</argsstring>
        <name>SCIPprofileCreate</name>
        <param>
          <type><ref refid="type__misc_8h_1adaf14c7d7037415e7ade9279c6e88e79" kindref="member">SCIP_PROFILE</ref> **</type>
          <declname>profile</declname>
          <briefdescription><para>pointer to store the resource profile </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>capacity</declname>
          <briefdescription><para>resource capacity </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>creates resource profile </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="688" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__ResourceProfile_1ga7016b24a2aeb343ad69769b24a784e65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPprofileFree</definition>
        <argsstring>(SCIP_PROFILE **profile)</argsstring>
        <name>SCIPprofileFree</name>
        <param>
          <type><ref refid="type__misc_8h_1adaf14c7d7037415e7ade9279c6e88e79" kindref="member">SCIP_PROFILE</ref> **</type>
          <declname>profile</declname>
          <briefdescription><para>pointer to the resource profile </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>frees given resource profile </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="695" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__ResourceProfile_1gafff0f400acc43043f90ccdeaa31c4371" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPprofilePrint</definition>
        <argsstring>(SCIP_PROFILE *profile, SCIP_MESSAGEHDLR *messagehdlr, FILE *file)</argsstring>
        <name>SCIPprofilePrint</name>
        <param>
          <type><ref refid="type__misc_8h_1adaf14c7d7037415e7ade9279c6e88e79" kindref="member">SCIP_PROFILE</ref> *</type>
          <declname>profile</declname>
          <briefdescription><para>resource profile to output </para></briefdescription>
        </param>
        <param>
          <type><ref refid="type__message_8h_1a7d71113339d14873806c1399442fae8d" kindref="member">SCIP_MESSAGEHDLR</ref> *</type>
          <declname>messagehdlr</declname>
          <briefdescription><para>message handler </para></briefdescription>
        </param>
        <param>
          <type>FILE *</type>
          <declname>file</declname>
          <briefdescription><para>output file (or NULL for standard output) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>output of the given resource profile </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="701" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__ResourceProfile_1gaa8237b33dacf4c3be8b3b0a76d529509" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SCIPprofileGetCapacity</definition>
        <argsstring>(SCIP_PROFILE *profile)</argsstring>
        <name>SCIPprofileGetCapacity</name>
        <param>
          <type><ref refid="type__misc_8h_1adaf14c7d7037415e7ade9279c6e88e79" kindref="member">SCIP_PROFILE</ref> *</type>
          <declname>profile</declname>
          <briefdescription><para>resource profile to use </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the capacity of the resource profile </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="709" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__ResourceProfile_1ga6eaf94363c61b860d3cf903184ac0a75" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SCIPprofileGetNTimepoints</definition>
        <argsstring>(SCIP_PROFILE *profile)</argsstring>
        <name>SCIPprofileGetNTimepoints</name>
        <param>
          <type><ref refid="type__misc_8h_1adaf14c7d7037415e7ade9279c6e88e79" kindref="member">SCIP_PROFILE</ref> *</type>
          <declname>profile</declname>
          <briefdescription><para>resource profile to use </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the number time points of the resource profile </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="715" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__ResourceProfile_1gaee9132728b61de6b1b471576abf7d2c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int *</type>
        <definition>int* SCIPprofileGetTimepoints</definition>
        <argsstring>(SCIP_PROFILE *profile)</argsstring>
        <name>SCIPprofileGetTimepoints</name>
        <param>
          <type><ref refid="type__misc_8h_1adaf14c7d7037415e7ade9279c6e88e79" kindref="member">SCIP_PROFILE</ref> *</type>
          <declname>profile</declname>
          <briefdescription><para>resource profile to use </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the time points of the resource profile </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="721" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__ResourceProfile_1ga276aa1ac0079173408930a4f08d99347" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int *</type>
        <definition>int* SCIPprofileGetLoads</definition>
        <argsstring>(SCIP_PROFILE *profile)</argsstring>
        <name>SCIPprofileGetLoads</name>
        <param>
          <type><ref refid="type__misc_8h_1adaf14c7d7037415e7ade9279c6e88e79" kindref="member">SCIP_PROFILE</ref> *</type>
          <declname>profile</declname>
          <briefdescription><para>resource profile to use </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the loads of the resource profile </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="727" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__ResourceProfile_1ga7f086df0784e4b626fce1ce93633c2ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SCIPprofileGetTime</definition>
        <argsstring>(SCIP_PROFILE *profile, int pos)</argsstring>
        <name>SCIPprofileGetTime</name>
        <param>
          <type><ref refid="type__misc_8h_1adaf14c7d7037415e7ade9279c6e88e79" kindref="member">SCIP_PROFILE</ref> *</type>
          <declname>profile</declname>
          <briefdescription><para>resource profile to use </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>position </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the time point for given position of the resource profile </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="733" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__ResourceProfile_1ga727e8e5ea628d6b362a26a37d2e5226a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SCIPprofileGetLoad</definition>
        <argsstring>(SCIP_PROFILE *profile, int pos)</argsstring>
        <name>SCIPprofileGetLoad</name>
        <param>
          <type><ref refid="type__misc_8h_1adaf14c7d7037415e7ade9279c6e88e79" kindref="member">SCIP_PROFILE</ref> *</type>
          <declname>profile</declname>
          <briefdescription><para>resource profile </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>position </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the loads of the resource profile at the given position </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="740" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__ResourceProfile_1ga68720f965a76eee6dfc162046a95b428" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
        <definition>SCIP_Bool SCIPprofileFindLeft</definition>
        <argsstring>(SCIP_PROFILE *profile, int timepoint, int *pos)</argsstring>
        <name>SCIPprofileFindLeft</name>
        <param>
          <type><ref refid="type__misc_8h_1adaf14c7d7037415e7ade9279c6e88e79" kindref="member">SCIP_PROFILE</ref> *</type>
          <declname>profile</declname>
          <briefdescription><para>resource profile to search </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>timepoint</declname>
          <briefdescription><para>time point to search for </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the position </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns if the given time point exists in the resource profile and stores the position of the given time point if it exists; otherwise the position of the next smaller existing time point is stored </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="749" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__ResourceProfile_1gaf308709a7674e108464c10a1d92c8b66" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPprofileInsertCore</definition>
        <argsstring>(SCIP_PROFILE *profile, int left, int right, int height, int *pos, SCIP_Bool *infeasible)</argsstring>
        <name>SCIPprofileInsertCore</name>
        <param>
          <type><ref refid="type__misc_8h_1adaf14c7d7037415e7ade9279c6e88e79" kindref="member">SCIP_PROFILE</ref> *</type>
          <declname>profile</declname>
          <briefdescription><para>resource profile to use </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>left</declname>
          <briefdescription><para>left side of the core </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>right</declname>
          <briefdescription><para>right side of the core </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
          <briefdescription><para>height of the core </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the first position were it gets infeasible </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>infeasible</declname>
          <briefdescription><para>pointer to store if the core does not fit due to capacity </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a core into resource profile; if the core is non-empty the resource profile will be updated otherwise nothing happens </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="759" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__ResourceProfile_1gaab71bc5b7a851f7ac5883f44b22469f9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPprofileDeleteCore</definition>
        <argsstring>(SCIP_PROFILE *profile, int left, int right, int height)</argsstring>
        <name>SCIPprofileDeleteCore</name>
        <param>
          <type><ref refid="type__misc_8h_1adaf14c7d7037415e7ade9279c6e88e79" kindref="member">SCIP_PROFILE</ref> *</type>
          <declname>profile</declname>
          <briefdescription><para>resource profile to use </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>left</declname>
          <briefdescription><para>left side of the core </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>right</declname>
          <briefdescription><para>right side of the core </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
          <briefdescription><para>height of the core </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>subtracts the height from the resource profile during core time </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="770" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__ResourceProfile_1ga7a794ed1a686c2a98dd050bc652d6ac8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SCIPprofileGetEarliestFeasibleStart</definition>
        <argsstring>(SCIP_PROFILE *profile, int est, int lst, int duration, int height, SCIP_Bool *infeasible)</argsstring>
        <name>SCIPprofileGetEarliestFeasibleStart</name>
        <param>
          <type><ref refid="type__misc_8h_1adaf14c7d7037415e7ade9279c6e88e79" kindref="member">SCIP_PROFILE</ref> *</type>
          <declname>profile</declname>
          <briefdescription><para>resource profile to use </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>est</declname>
          <briefdescription><para>earliest starting time of the given core </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>lst</declname>
          <briefdescription><para>latest starting time of the given core </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>duration</declname>
          <briefdescription><para>duration of the core </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
          <briefdescription><para>height of the core </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>infeasible</declname>
          <briefdescription><para>pointer store if the corer cannot be inserted </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>return the earliest possible starting point within the time interval [lb,ub] for a given core (given by its height and duration) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="781" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__ResourceProfile_1ga2a0158b4eab283ed62ef510a2950b8a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SCIPprofileGetLatestFeasibleStart</definition>
        <argsstring>(SCIP_PROFILE *profile, int lb, int ub, int duration, int height, SCIP_Bool *infeasible)</argsstring>
        <name>SCIPprofileGetLatestFeasibleStart</name>
        <param>
          <type><ref refid="type__misc_8h_1adaf14c7d7037415e7ade9279c6e88e79" kindref="member">SCIP_PROFILE</ref> *</type>
          <declname>profile</declname>
          <briefdescription><para>resource profile to use </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>lb</declname>
          <briefdescription><para>earliest possible start point </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>ub</declname>
          <briefdescription><para>latest possible start point </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>duration</declname>
          <briefdescription><para>duration of the core </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>height</declname>
          <briefdescription><para>height of the core </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>infeasible</declname>
          <briefdescription><para>pointer store if the core cannot be inserted </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>return the latest possible starting point within the time interval [lb,ub] for a given core (given by its height and duration) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="794" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__DirectedGraph_1ga68c7db9e3c65586baf542b0a681cceed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPdigraphCreate</definition>
        <argsstring>(SCIP_DIGRAPH **digraph, int nnodes)</argsstring>
        <name>SCIPdigraphCreate</name>
        <param>
          <type><ref refid="type__misc_8h_1a467b6a5a197769a299b70736cc38a34f" kindref="member">SCIP_DIGRAPH</ref> **</type>
          <declname>digraph</declname>
          <briefdescription><para>pointer to store the created directed graph </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>nnodes</declname>
          <briefdescription><para>number of nodes </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>creates directed graph structure </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="816" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__DirectedGraph_1gaed650d35fc68d98e3fd48c16447d388b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPdigraphResize</definition>
        <argsstring>(SCIP_DIGRAPH *digraph, int nnodes)</argsstring>
        <name>SCIPdigraphResize</name>
        <param>
          <type><ref refid="type__misc_8h_1a467b6a5a197769a299b70736cc38a34f" kindref="member">SCIP_DIGRAPH</ref> *</type>
          <declname>digraph</declname>
          <briefdescription><para>directed graph </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>nnodes</declname>
          <briefdescription><para>new number of nodes </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>resize directed graph structure </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="823" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__DirectedGraph_1ga32c22d7006b40ce36da378ee84b4ddb5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPdigraphCopy</definition>
        <argsstring>(SCIP_DIGRAPH **targetdigraph, SCIP_DIGRAPH *sourcedigraph)</argsstring>
        <name>SCIPdigraphCopy</name>
        <param>
          <type><ref refid="type__misc_8h_1a467b6a5a197769a299b70736cc38a34f" kindref="member">SCIP_DIGRAPH</ref> **</type>
          <declname>targetdigraph</declname>
          <briefdescription><para>pointer to store the copied directed graph </para></briefdescription>
        </param>
        <param>
          <type><ref refid="type__misc_8h_1a467b6a5a197769a299b70736cc38a34f" kindref="member">SCIP_DIGRAPH</ref> *</type>
          <declname>sourcedigraph</declname>
          <briefdescription><para>source directed graph </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>copies directed graph structure</para><para><simplesect kind="note"><para>The data in nodedata is copied verbatim. This possibly has to be adapted by the user. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="833" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__DirectedGraph_1ga81ba8c7a2c21ce9a3975101c223d0c22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPdigraphSetSizes</definition>
        <argsstring>(SCIP_DIGRAPH *digraph, int *sizes)</argsstring>
        <name>SCIPdigraphSetSizes</name>
        <param>
          <type><ref refid="type__misc_8h_1a467b6a5a197769a299b70736cc38a34f" kindref="member">SCIP_DIGRAPH</ref> *</type>
          <declname>digraph</declname>
          <briefdescription><para>directed graph </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>sizes</declname>
          <briefdescription><para>sizes of the successor lists </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sets the sizes of the successor lists for the nodes in a directed graph and allocates memory for the lists </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="840" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__DirectedGraph_1gab48ddd30f440bca80a4602e0a6a47df4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPdigraphFree</definition>
        <argsstring>(SCIP_DIGRAPH **digraph)</argsstring>
        <name>SCIPdigraphFree</name>
        <param>
          <type><ref refid="type__misc_8h_1a467b6a5a197769a299b70736cc38a34f" kindref="member">SCIP_DIGRAPH</ref> **</type>
          <declname>digraph</declname>
          <briefdescription><para>pointer to the directed graph </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>frees given directed graph structure </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="847" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__DirectedGraph_1ga57cea2a4d30a00fda1660a4da0e52646" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPdigraphAddArc</definition>
        <argsstring>(SCIP_DIGRAPH *digraph, int startnode, int endnode, void *data)</argsstring>
        <name>SCIPdigraphAddArc</name>
        <param>
          <type><ref refid="type__misc_8h_1a467b6a5a197769a299b70736cc38a34f" kindref="member">SCIP_DIGRAPH</ref> *</type>
          <declname>digraph</declname>
          <briefdescription><para>directed graph </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>startnode</declname>
          <briefdescription><para>start node of the arc </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>endnode</declname>
          <briefdescription><para>start node of the arc </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
          <briefdescription><para>data that should be stored for the arc; or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>add (directed) arc and a related data to the directed graph structure</para><para><simplesect kind="note"><para>if the arc is already contained, it is added a second time </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="856" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__DirectedGraph_1gaa616fd8ee564c5974bf10b13e25bfda1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPdigraphAddArcSafe</definition>
        <argsstring>(SCIP_DIGRAPH *digraph, int startnode, int endnode, void *data)</argsstring>
        <name>SCIPdigraphAddArcSafe</name>
        <param>
          <type><ref refid="type__misc_8h_1a467b6a5a197769a299b70736cc38a34f" kindref="member">SCIP_DIGRAPH</ref> *</type>
          <declname>digraph</declname>
          <briefdescription><para>directed graph </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>startnode</declname>
          <briefdescription><para>start node of the arc </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>endnode</declname>
          <briefdescription><para>start node of the arc </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>data</declname>
          <briefdescription><para>data that should be stored for the arc; or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>add (directed) arc to the directed graph structure, if it is not contained, yet</para><para><simplesect kind="note"><para>if there already exists an arc from startnode to endnode, the new arc is not added, even if its data is different </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="869" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__DirectedGraph_1ga32f09fd970e3c01855899e2065099e82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SCIPdigraphGetNNodes</definition>
        <argsstring>(SCIP_DIGRAPH *digraph)</argsstring>
        <name>SCIPdigraphGetNNodes</name>
        <param>
          <type><ref refid="type__misc_8h_1a467b6a5a197769a299b70736cc38a34f" kindref="member">SCIP_DIGRAPH</ref> *</type>
          <declname>digraph</declname>
          <briefdescription><para>directed graph </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the number of nodes of the given digraph </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="878" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__DirectedGraph_1ga83bbfb239e98b6115abdb4b4b2de2aff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* SCIPdigraphGetNodeData</definition>
        <argsstring>(SCIP_DIGRAPH *digraph, int node)</argsstring>
        <name>SCIPdigraphGetNodeData</name>
        <param>
          <type><ref refid="type__misc_8h_1a467b6a5a197769a299b70736cc38a34f" kindref="member">SCIP_DIGRAPH</ref> *</type>
          <declname>digraph</declname>
          <briefdescription><para>directed graph </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>node</declname>
          <briefdescription><para>node for which the node data is returned </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the node data, or NULL if no data exist </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="884" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__DirectedGraph_1gac2911f35227893d529f0ee08cca3b5c1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPdigraphSetNodeData</definition>
        <argsstring>(SCIP_DIGRAPH *digraph, void *dataptr, int node)</argsstring>
        <name>SCIPdigraphSetNodeData</name>
        <param>
          <type><ref refid="type__misc_8h_1a467b6a5a197769a299b70736cc38a34f" kindref="member">SCIP_DIGRAPH</ref> *</type>
          <declname>digraph</declname>
          <briefdescription><para>directed graph </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>dataptr</declname>
          <briefdescription><para>user node data pointer, or NULL </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>node</declname>
          <briefdescription><para>node for which the node data is returned </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sets the node data </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="891" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__DirectedGraph_1gab5dff47ee487760c0435dd2077350576" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SCIPdigraphGetNArcs</definition>
        <argsstring>(SCIP_DIGRAPH *digraph)</argsstring>
        <name>SCIPdigraphGetNArcs</name>
        <param>
          <type><ref refid="type__misc_8h_1a467b6a5a197769a299b70736cc38a34f" kindref="member">SCIP_DIGRAPH</ref> *</type>
          <declname>digraph</declname>
          <briefdescription><para>directed graph </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the total number of arcs in the given digraph </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="899" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__DirectedGraph_1ga1751a9c083411bf978c188dd641335ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SCIPdigraphGetNSuccessors</definition>
        <argsstring>(SCIP_DIGRAPH *digraph, int node)</argsstring>
        <name>SCIPdigraphGetNSuccessors</name>
        <param>
          <type><ref refid="type__misc_8h_1a467b6a5a197769a299b70736cc38a34f" kindref="member">SCIP_DIGRAPH</ref> *</type>
          <declname>digraph</declname>
          <briefdescription><para>directed graph </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>node</declname>
          <briefdescription><para>node for which the number of outgoing arcs is returned </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the number of successor nodes of the given node </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="905" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__DirectedGraph_1gafad223a2ce7651c447839fff8838078b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int *</type>
        <definition>int* SCIPdigraphGetSuccessors</definition>
        <argsstring>(SCIP_DIGRAPH *digraph, int node)</argsstring>
        <name>SCIPdigraphGetSuccessors</name>
        <param>
          <type><ref refid="type__misc_8h_1a467b6a5a197769a299b70736cc38a34f" kindref="member">SCIP_DIGRAPH</ref> *</type>
          <declname>digraph</declname>
          <briefdescription><para>directed graph </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>node</declname>
          <briefdescription><para>node for which the array of outgoing arcs is returned </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the array of indices of the successor nodes; this array must not be changed from outside </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="912" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__DirectedGraph_1ga87f5ee46dd27506323e994e686d2e089" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void **</type>
        <definition>void** SCIPdigraphGetSuccessorsDatas</definition>
        <argsstring>(SCIP_DIGRAPH *digraph, int node)</argsstring>
        <name>SCIPdigraphGetSuccessorsDatas</name>
        <param>
          <type><ref refid="type__misc_8h_1a467b6a5a197769a299b70736cc38a34f" kindref="member">SCIP_DIGRAPH</ref> *</type>
          <declname>digraph</declname>
          <briefdescription><para>directed graph </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>node</declname>
          <briefdescription><para>node for which the data corresponding to the outgoing arcs is returned </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the array of data corresponding to the arcs originating at the given node, or NULL if no data exist; this array must not be changed from outside </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="921" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__DirectedGraph_1ga176d6f151c867099d3abb72a27162d97" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPdigraphComputeUndirectedComponents</definition>
        <argsstring>(SCIP_DIGRAPH *digraph, int minsize, int *components, int *ncomponents)</argsstring>
        <name>SCIPdigraphComputeUndirectedComponents</name>
        <param>
          <type><ref refid="type__misc_8h_1a467b6a5a197769a299b70736cc38a34f" kindref="member">SCIP_DIGRAPH</ref> *</type>
          <declname>digraph</declname>
          <briefdescription><para>directed graph </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>minsize</declname>
          <briefdescription><para>all components with less nodes are ignored </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>components</declname>
          <briefdescription><para>array with as many slots as there are nodes in the directed graph to store for each node the component to which it belongs (components are numbered 0 to ncomponents - 1); or NULL, if components are accessed one-by-one using <ref refid="group__DirectedGraph_1ga4e6a88c42edc4acc4f0bf5c9db23b797" kindref="member">SCIPdigraphGetComponent()</ref> </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>ncomponents</declname>
          <briefdescription><para>pointer to store the number of components; or NULL, if the number of components is accessed by <ref refid="group__DirectedGraph_1gae960bbcc88860724b3f828bdf399f7f3" kindref="member">SCIPdigraphGetNComponents()</ref> </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Compute undirected connected components on the given graph.</para><para><simplesect kind="note"><para>For each arc, its reverse is added, so the graph does not need to be the directed representation of an undirected graph. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="932" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__DirectedGraph_1ga653be9d81f37690d8c07f89d9c9acdb3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPdigraphTopoSortComponents</definition>
        <argsstring>(SCIP_DIGRAPH *digraph)</argsstring>
        <name>SCIPdigraphTopoSortComponents</name>
        <param>
          <type><ref refid="type__misc_8h_1a467b6a5a197769a299b70736cc38a34f" kindref="member">SCIP_DIGRAPH</ref> *</type>
          <declname>digraph</declname>
          <briefdescription><para>directed graph </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Performes an (almost) topological sort on the undirected components of the given directed graph. The undirected components should be computed before using <ref refid="group__DirectedGraph_1ga176d6f151c867099d3abb72a27162d97" kindref="member">SCIPdigraphComputeUndirectedComponents()</ref>.</para><para><simplesect kind="note"><para>In general a topological sort is not unique. Note, that there might be directed cycles, that are randomly broken, which is the reason for having only almost topologically sorted arrays. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="950" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__DirectedGraph_1gae960bbcc88860724b3f828bdf399f7f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SCIPdigraphGetNComponents</definition>
        <argsstring>(SCIP_DIGRAPH *digraph)</argsstring>
        <name>SCIPdigraphGetNComponents</name>
        <param>
          <type><ref refid="type__misc_8h_1a467b6a5a197769a299b70736cc38a34f" kindref="member">SCIP_DIGRAPH</ref> *</type>
          <declname>digraph</declname>
          <briefdescription><para>directed graph </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the number of previously computed undirected components for the given directed graph </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="956" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__DirectedGraph_1ga4e6a88c42edc4acc4f0bf5c9db23b797" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPdigraphGetComponent</definition>
        <argsstring>(SCIP_DIGRAPH *digraph, int compidx, int **nodes, int *nnodes)</argsstring>
        <name>SCIPdigraphGetComponent</name>
        <param>
          <type><ref refid="type__misc_8h_1a467b6a5a197769a299b70736cc38a34f" kindref="member">SCIP_DIGRAPH</ref> *</type>
          <declname>digraph</declname>
          <briefdescription><para>directed graph </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>compidx</declname>
          <briefdescription><para>number of the component to return </para></briefdescription>
        </param>
        <param>
          <type>int **</type>
          <declname>nodes</declname>
          <briefdescription><para>pointer to store the nodes in the component; or NULL, if not needed </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>nnodes</declname>
          <briefdescription><para>pointer to store the number of nodes in the component; or NULL, if not needed </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Returns the previously computed undirected component of the given number for the given directed graph. If the components were sorted using <ref refid="group__DirectedGraph_1ga653be9d81f37690d8c07f89d9c9acdb3" kindref="member">SCIPdigraphTopoSortComponents()</ref>, the component is (almost) topologically sorted. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="964" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__DirectedGraph_1ga1524af78e159bf5d824eead5f05ad883" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPdigraphFreeComponents</definition>
        <argsstring>(SCIP_DIGRAPH *digraph)</argsstring>
        <name>SCIPdigraphFreeComponents</name>
        <param>
          <type><ref refid="type__misc_8h_1a467b6a5a197769a299b70736cc38a34f" kindref="member">SCIP_DIGRAPH</ref> *</type>
          <declname>digraph</declname>
          <briefdescription><para>directed graph </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>frees the component information for the given directed graph </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="974" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__DirectedGraph_1gab8a3d3a074d491cca1dee036ca0072eb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPdigraphPrint</definition>
        <argsstring>(SCIP_DIGRAPH *digraph, SCIP_MESSAGEHDLR *messagehdlr, FILE *file)</argsstring>
        <name>SCIPdigraphPrint</name>
        <param>
          <type><ref refid="type__misc_8h_1a467b6a5a197769a299b70736cc38a34f" kindref="member">SCIP_DIGRAPH</ref> *</type>
          <declname>digraph</declname>
          <briefdescription><para>directed graph </para></briefdescription>
        </param>
        <param>
          <type><ref refid="type__message_8h_1a7d71113339d14873806c1399442fae8d" kindref="member">SCIP_MESSAGEHDLR</ref> *</type>
          <declname>messagehdlr</declname>
          <briefdescription><para>message handler </para></briefdescription>
        </param>
        <param>
          <type>FILE *</type>
          <declname>file</declname>
          <briefdescription><para>output file (or NULL for standard output) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>output of the given directed graph via the given message handler </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="980" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__DirectedGraph_1ga3ea0abd797b16f531140bc168d110f7c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPdigraphPrintGml</definition>
        <argsstring>(SCIP_DIGRAPH *digraph, FILE *file)</argsstring>
        <name>SCIPdigraphPrintGml</name>
        <param>
          <type><ref refid="type__misc_8h_1a467b6a5a197769a299b70736cc38a34f" kindref="member">SCIP_DIGRAPH</ref> *</type>
          <declname>digraph</declname>
          <briefdescription><para>directed graph </para></briefdescription>
        </param>
        <param>
          <type>FILE *</type>
          <declname>file</declname>
          <briefdescription><para>file to write to </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>prints the given directed graph structure in GML format into the given file </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="988" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__DirectedGraph_1ga03d523ddef7f34ce789ea534ba7e623f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPdigraphPrintComponents</definition>
        <argsstring>(SCIP_DIGRAPH *digraph, SCIP_MESSAGEHDLR *messagehdlr, FILE *file)</argsstring>
        <name>SCIPdigraphPrintComponents</name>
        <param>
          <type><ref refid="type__misc_8h_1a467b6a5a197769a299b70736cc38a34f" kindref="member">SCIP_DIGRAPH</ref> *</type>
          <declname>digraph</declname>
          <briefdescription><para>directed graph </para></briefdescription>
        </param>
        <param>
          <type><ref refid="type__message_8h_1a7d71113339d14873806c1399442fae8d" kindref="member">SCIP_MESSAGEHDLR</ref> *</type>
          <declname>messagehdlr</declname>
          <briefdescription><para>message handler </para></briefdescription>
        </param>
        <param>
          <type>FILE *</type>
          <declname>file</declname>
          <briefdescription><para>output file (or NULL for standard output) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>output of the given directed graph via the given message handler </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="996" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__BinaryTree_1ga78b8df73d8d2debaa3b8fc7554ec07a0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPbtnodeCreate</definition>
        <argsstring>(SCIP_BT *tree, SCIP_BTNODE **node, void *dataptr)</argsstring>
        <name>SCIPbtnodeCreate</name>
        <param>
          <type><ref refid="type__misc_8h_1a758a7e0bd04009842c24fbabc8d3035d" kindref="member">SCIP_BT</ref> *</type>
          <declname>tree</declname>
          <briefdescription><para>binary search tree </para></briefdescription>
        </param>
        <param>
          <type><ref refid="type__misc_8h_1a980ac393ce697183a6116ca7d8e64fa8" kindref="member">SCIP_BTNODE</ref> **</type>
          <declname>node</declname>
          <briefdescription><para>pointer to store the created search node </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>dataptr</declname>
          <briefdescription><para>user node data pointer, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>creates a binary tree node with sorting value and user data </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1015" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__BinaryTree_1ga39882d686b9bd60daff109176cf6ce5a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPbtnodeFree</definition>
        <argsstring>(SCIP_BT *tree, SCIP_BTNODE **node)</argsstring>
        <name>SCIPbtnodeFree</name>
        <param>
          <type><ref refid="type__misc_8h_1a758a7e0bd04009842c24fbabc8d3035d" kindref="member">SCIP_BT</ref> *</type>
          <declname>tree</declname>
          <briefdescription><para>binary tree </para></briefdescription>
        </param>
        <param>
          <type><ref refid="type__misc_8h_1a980ac393ce697183a6116ca7d8e64fa8" kindref="member">SCIP_BTNODE</ref> **</type>
          <declname>node</declname>
          <briefdescription><para>node to be freed </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>frees the binary node including the rooted subtree</para><para><simplesect kind="note"><para>The user pointer (object) is not freed. If needed, it has to be done by the user. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1026" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__BinaryTree_1gade68a6c291b771f559d09f05b55ced08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* SCIPbtnodeGetData</definition>
        <argsstring>(SCIP_BTNODE *node)</argsstring>
        <name>SCIPbtnodeGetData</name>
        <param>
          <type><ref refid="type__misc_8h_1a980ac393ce697183a6116ca7d8e64fa8" kindref="member">SCIP_BTNODE</ref> *</type>
          <declname>node</declname>
          <briefdescription><para>node </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the user data pointer stored in that node </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1033" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__BinaryTree_1ga6a077eeaf2e1446fa4331a017ce56e9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__misc_8h_1a980ac393ce697183a6116ca7d8e64fa8" kindref="member">SCIP_BTNODE</ref> *</type>
        <definition>SCIP_BTNODE* SCIPbtnodeGetParent</definition>
        <argsstring>(SCIP_BTNODE *node)</argsstring>
        <name>SCIPbtnodeGetParent</name>
        <param>
          <type><ref refid="type__misc_8h_1a980ac393ce697183a6116ca7d8e64fa8" kindref="member">SCIP_BTNODE</ref> *</type>
          <declname>node</declname>
          <briefdescription><para>node </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the parent which can be NULL if the given node is the root </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1039" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__BinaryTree_1ga1091966d7b12b66985ae733b5914e8a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__misc_8h_1a980ac393ce697183a6116ca7d8e64fa8" kindref="member">SCIP_BTNODE</ref> *</type>
        <definition>SCIP_BTNODE* SCIPbtnodeGetLeftchild</definition>
        <argsstring>(SCIP_BTNODE *node)</argsstring>
        <name>SCIPbtnodeGetLeftchild</name>
        <param>
          <type><ref refid="type__misc_8h_1a980ac393ce697183a6116ca7d8e64fa8" kindref="member">SCIP_BTNODE</ref> *</type>
          <declname>node</declname>
          <briefdescription><para>node </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns left child which can be NULL if the given node is a leaf </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1045" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__BinaryTree_1gaaf12d817c5974f80442791b0d1ffa1b2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__misc_8h_1a980ac393ce697183a6116ca7d8e64fa8" kindref="member">SCIP_BTNODE</ref> *</type>
        <definition>SCIP_BTNODE* SCIPbtnodeGetRightchild</definition>
        <argsstring>(SCIP_BTNODE *node)</argsstring>
        <name>SCIPbtnodeGetRightchild</name>
        <param>
          <type><ref refid="type__misc_8h_1a980ac393ce697183a6116ca7d8e64fa8" kindref="member">SCIP_BTNODE</ref> *</type>
          <declname>node</declname>
          <briefdescription><para>node </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns right child which can be NULL if the given node is a leaf </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1051" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__BinaryTree_1ga948a96e770be5cd71e775c4ae3f9bfef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__misc_8h_1a980ac393ce697183a6116ca7d8e64fa8" kindref="member">SCIP_BTNODE</ref> *</type>
        <definition>SCIP_BTNODE* SCIPbtnodeGetSibling</definition>
        <argsstring>(SCIP_BTNODE *node)</argsstring>
        <name>SCIPbtnodeGetSibling</name>
        <param>
          <type><ref refid="type__misc_8h_1a980ac393ce697183a6116ca7d8e64fa8" kindref="member">SCIP_BTNODE</ref> *</type>
          <declname>node</declname>
          <briefdescription><para>node </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the sibling of the node or NULL if does not exist </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1057" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__BinaryTree_1gaeb5f97aba4aa991030df3fc487eb9297" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
        <definition>SCIP_Bool SCIPbtnodeIsRoot</definition>
        <argsstring>(SCIP_BTNODE *node)</argsstring>
        <name>SCIPbtnodeIsRoot</name>
        <param>
          <type><ref refid="type__misc_8h_1a980ac393ce697183a6116ca7d8e64fa8" kindref="member">SCIP_BTNODE</ref> *</type>
          <declname>node</declname>
          <briefdescription><para>node </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns whether the node is a root node </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1063" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__BinaryTree_1ga3d6b929fee8148871a8bc17de0c734b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
        <definition>SCIP_Bool SCIPbtnodeIsLeaf</definition>
        <argsstring>(SCIP_BTNODE *node)</argsstring>
        <name>SCIPbtnodeIsLeaf</name>
        <param>
          <type><ref refid="type__misc_8h_1a980ac393ce697183a6116ca7d8e64fa8" kindref="member">SCIP_BTNODE</ref> *</type>
          <declname>node</declname>
          <briefdescription><para>node </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns whether the node is a leaf </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1069" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__BinaryTree_1gab09a39fc1856c3253c025c9715206376" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
        <definition>SCIP_Bool SCIPbtnodeIsLeftchild</definition>
        <argsstring>(SCIP_BTNODE *node)</argsstring>
        <name>SCIPbtnodeIsLeftchild</name>
        <param>
          <type><ref refid="type__misc_8h_1a980ac393ce697183a6116ca7d8e64fa8" kindref="member">SCIP_BTNODE</ref> *</type>
          <declname>node</declname>
          <briefdescription><para>node </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns TRUE if the given node is left child </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1075" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__BinaryTree_1ga79678bbe8032b08224c059e8d180131e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
        <definition>SCIP_Bool SCIPbtnodeIsRightchild</definition>
        <argsstring>(SCIP_BTNODE *node)</argsstring>
        <name>SCIPbtnodeIsRightchild</name>
        <param>
          <type><ref refid="type__misc_8h_1a980ac393ce697183a6116ca7d8e64fa8" kindref="member">SCIP_BTNODE</ref> *</type>
          <declname>node</declname>
          <briefdescription><para>node </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns TRUE if the given node is right child </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1081" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__BinaryTree_1ga5071b8644fef886a3f7c63e1aabfdc61" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPbtnodeSetData</definition>
        <argsstring>(SCIP_BTNODE *node, void *dataptr)</argsstring>
        <name>SCIPbtnodeSetData</name>
        <param>
          <type><ref refid="type__misc_8h_1a980ac393ce697183a6116ca7d8e64fa8" kindref="member">SCIP_BTNODE</ref> *</type>
          <declname>node</declname>
          <briefdescription><para>node </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>dataptr</declname>
          <briefdescription><para>node user data pointer </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sets the give node data</para><para><simplesect kind="note"><para>The old user pointer is not freed. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1109" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__BinaryTree_1ga816b2c27020a5c7af8ec6fb1334a38e1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPbtnodeSetParent</definition>
        <argsstring>(SCIP_BTNODE *node, SCIP_BTNODE *parent)</argsstring>
        <name>SCIPbtnodeSetParent</name>
        <param>
          <type><ref refid="type__misc_8h_1a980ac393ce697183a6116ca7d8e64fa8" kindref="member">SCIP_BTNODE</ref> *</type>
          <declname>node</declname>
          <briefdescription><para>node </para></briefdescription>
        </param>
        <param>
          <type><ref refid="type__misc_8h_1a980ac393ce697183a6116ca7d8e64fa8" kindref="member">SCIP_BTNODE</ref> *</type>
          <declname>parent</declname>
          <briefdescription><para>new parent node, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sets parent node</para><para><simplesect kind="note"><para>The old parent including the rooted subtree is not delete. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1119" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__BinaryTree_1gab6a14881d02b367b50684023ad71a7ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPbtnodeSetLeftchild</definition>
        <argsstring>(SCIP_BTNODE *node, SCIP_BTNODE *left)</argsstring>
        <name>SCIPbtnodeSetLeftchild</name>
        <param>
          <type><ref refid="type__misc_8h_1a980ac393ce697183a6116ca7d8e64fa8" kindref="member">SCIP_BTNODE</ref> *</type>
          <declname>node</declname>
          <briefdescription><para>node </para></briefdescription>
        </param>
        <param>
          <type><ref refid="type__misc_8h_1a980ac393ce697183a6116ca7d8e64fa8" kindref="member">SCIP_BTNODE</ref> *</type>
          <declname>left</declname>
          <briefdescription><para>new left child, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sets left child</para><para><simplesect kind="note"><para>The old left child including the rooted subtree is not delete. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1129" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__BinaryTree_1ga0fac029daad26ca276ad688da26b55fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPbtnodeSetRightchild</definition>
        <argsstring>(SCIP_BTNODE *node, SCIP_BTNODE *right)</argsstring>
        <name>SCIPbtnodeSetRightchild</name>
        <param>
          <type><ref refid="type__misc_8h_1a980ac393ce697183a6116ca7d8e64fa8" kindref="member">SCIP_BTNODE</ref> *</type>
          <declname>node</declname>
          <briefdescription><para>node </para></briefdescription>
        </param>
        <param>
          <type><ref refid="type__misc_8h_1a980ac393ce697183a6116ca7d8e64fa8" kindref="member">SCIP_BTNODE</ref> *</type>
          <declname>right</declname>
          <briefdescription><para>new right child, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sets right child</para><para><simplesect kind="note"><para>The old right child including the rooted subtree is not delete. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1139" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__BinaryTree_1ga32e635b4ab57ff19c4d32b51fa96bcac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPbtCreate</definition>
        <argsstring>(SCIP_BT **tree, BMS_BLKMEM *blkmem)</argsstring>
        <name>SCIPbtCreate</name>
        <param>
          <type><ref refid="type__misc_8h_1a758a7e0bd04009842c24fbabc8d3035d" kindref="member">SCIP_BT</ref> **</type>
          <declname>tree</declname>
          <briefdescription><para>pointer to store the created binary tree </para></briefdescription>
        </param>
        <param>
          <type>BMS_BLKMEM *</type>
          <declname>blkmem</declname>
          <briefdescription><para>block memory used to create nodes </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>creates an binary tree </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1146" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__BinaryTree_1gac1b4e34e5acc37a698808c40faa15d25" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPbtFree</definition>
        <argsstring>(SCIP_BT **tree)</argsstring>
        <name>SCIPbtFree</name>
        <param>
          <type><ref refid="type__misc_8h_1a758a7e0bd04009842c24fbabc8d3035d" kindref="member">SCIP_BT</ref> **</type>
          <declname>tree</declname>
          <briefdescription><para>pointer to binary tree </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>frees binary tree</para><para><simplesect kind="note"><para>The user pointers (object) of the search nodes are not freed. If needed, it has to be done by the user. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1156" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__BinaryTree_1gaefaa788143db4f31938c216c7e7868f5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPbtPrintGml</definition>
        <argsstring>(SCIP_BT *tree, FILE *file)</argsstring>
        <name>SCIPbtPrintGml</name>
        <param>
          <type><ref refid="type__misc_8h_1a758a7e0bd04009842c24fbabc8d3035d" kindref="member">SCIP_BT</ref> *</type>
          <declname>tree</declname>
          <briefdescription><para>binary tree </para></briefdescription>
        </param>
        <param>
          <type>FILE *</type>
          <declname>file</declname>
          <briefdescription><para>file to write to </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>prints the binary tree in GML format into the given file </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1162" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__BinaryTree_1ga1f7787ff2552e406d6b64069566d4e65" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
        <definition>SCIP_Bool SCIPbtIsEmpty</definition>
        <argsstring>(SCIP_BT *tree)</argsstring>
        <name>SCIPbtIsEmpty</name>
        <param>
          <type><ref refid="type__misc_8h_1a758a7e0bd04009842c24fbabc8d3035d" kindref="member">SCIP_BT</ref> *</type>
          <declname>tree</declname>
          <briefdescription><para>binary tree </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns whether the binary tree is empty (has no nodes) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1169" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__BinaryTree_1gaf0abe2ecae545aeefd155a36acdfccd2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__misc_8h_1a980ac393ce697183a6116ca7d8e64fa8" kindref="member">SCIP_BTNODE</ref> *</type>
        <definition>SCIP_BTNODE* SCIPbtGetRoot</definition>
        <argsstring>(SCIP_BT *tree)</argsstring>
        <name>SCIPbtGetRoot</name>
        <param>
          <type><ref refid="type__misc_8h_1a758a7e0bd04009842c24fbabc8d3035d" kindref="member">SCIP_BT</ref> *</type>
          <declname>tree</declname>
          <briefdescription><para>tree to be evaluated </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the root node of the binary tree or NULL if the binary tree is empty </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1175" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__BinaryTree_1gae277f19032b7baf8fd0078dc3e2e09c3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPbtSetRoot</definition>
        <argsstring>(SCIP_BT *tree, SCIP_BTNODE *root)</argsstring>
        <name>SCIPbtSetRoot</name>
        <param>
          <type><ref refid="type__misc_8h_1a758a7e0bd04009842c24fbabc8d3035d" kindref="member">SCIP_BT</ref> *</type>
          <declname>tree</declname>
          <briefdescription><para>tree to be evaluated </para></briefdescription>
        </param>
        <param>
          <type><ref refid="type__misc_8h_1a980ac393ce697183a6116ca7d8e64fa8" kindref="member">SCIP_BTNODE</ref> *</type>
          <declname>root</declname>
          <briefdescription><para>new root, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sets root node</para><para><simplesect kind="note"><para>The old root including the rooted subtree is not delete. </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1195" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SCIP_DECL_SORTPTRCOMP</definition>
        <argsstring>(SCIPsortCompInt)</argsstring>
        <name>SCIP_DECL_SORTPTRCOMP</name>
        <param>
          <type>SCIPsortCompInt</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>default comparer for integers </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1215" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gaac0e97a29d3007027bb1b4b9ef9b0ac2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsort</definition>
        <argsstring>(int *perm, SCIP_DECL_SORTINDCOMP((*indcomp)), void *dataptr, int len)</argsstring>
        <name>SCIPsort</name>
        <param>
          <type>int *</type>
          <declname>perm</declname>
          <briefdescription><para>pointer to store the resulting permutation </para></briefdescription>
        </param>
        <param>
          <type><ref refid="type__misc_8h_1a806c02f466e036f6e137df9eee2f7e9d" kindref="member">SCIP_DECL_SORTINDCOMP</ref>((*indcomp))</type>
        </param>
        <param>
          <type>void *</type>
          <declname>dataptr</declname>
          <briefdescription><para>pointer to data field that is given to the external compare method </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>number of elements to be sorted (valid index range) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort an indexed element set in non-decreasing order, resulting in a permutation index array </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1221" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga0c1fe0f152d7e0b502d39b0425bd9f32" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortInd</definition>
        <argsstring>(int *indarray, SCIP_DECL_SORTINDCOMP((*indcomp)), void *dataptr, int len)</argsstring>
        <name>SCIPsortInd</name>
        <param>
          <type>int *</type>
          <declname>indarray</declname>
          <briefdescription><para>pointer to the index array to be sorted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="type__misc_8h_1a806c02f466e036f6e137df9eee2f7e9d" kindref="member">SCIP_DECL_SORTINDCOMP</ref>((*indcomp))</type>
        </param>
        <param>
          <type>void *</type>
          <declname>dataptr</declname>
          <briefdescription><para>pointer to data field that is given to the external compare method </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of array </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort an index array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1230" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga103836cd14d6a053128195fc7c845cce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortPtr</definition>
        <argsstring>(void **ptrarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</argsstring>
        <name>SCIPsortPtr</name>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array to be sorted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of array </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of an array of pointers in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1239" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga6a2f7719f1552e87bf42aba67f1864a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortPtrPtr</definition>
        <argsstring>(void **ptrarray1, void **ptrarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</argsstring>
        <name>SCIPsortPtrPtr</name>
        <param>
          <type>void **</type>
          <declname>ptrarray1</declname>
          <briefdescription><para>first pointer array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray2</declname>
          <briefdescription><para>second pointer array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of two joint arrays of pointers/pointers, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1247" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gadcf9f22a04f1a2b4a18cedc2c6ef6300" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortPtrReal</definition>
        <argsstring>(void **ptrarray, SCIP_Real *realarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</argsstring>
        <name>SCIPsortPtrReal</name>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array to be sorted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of two joint arrays of pointers/Reals, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1256" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gaaea12378fbf19d942f8aeea2617db398" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortPtrInt</definition>
        <argsstring>(void **ptrarray, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</argsstring>
        <name>SCIPsortPtrInt</name>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of two joint arrays of pointers/ints, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1265" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gac2e61a64b363fc56dff42ea3d416f903" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortPtrBool</definition>
        <argsstring>(void **ptrarray, SCIP_Bool *boolarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</argsstring>
        <name>SCIPsortPtrBool</name>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array to be sorted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>boolarray</declname>
          <briefdescription><para>SCIP_Bool array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of two joint arrays of pointers/Bools, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1274" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gaa03ed019c7693a292dcaf8870876262b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortPtrIntInt</definition>
        <argsstring>(void **ptrarray, int *intarray1, int *intarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</argsstring>
        <name>SCIPsortPtrIntInt</name>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>first int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>second int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of three joint arrays of pointers/ints/ints, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1284" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gab093c601bdf585ac1dc6f592559335b3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortPtrRealInt</definition>
        <argsstring>(void **ptrarray, SCIP_Real *realarray, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</argsstring>
        <name>SCIPsortPtrRealInt</name>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array to be sorted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of three joint arrays of pointers/Reals/ints, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1294" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga0e990464910f3ec7e9177d318d8a13d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortPtrPtrInt</definition>
        <argsstring>(void **ptrarray1, void **ptrarray2, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</argsstring>
        <name>SCIPsortPtrPtrInt</name>
        <param>
          <type>void **</type>
          <declname>ptrarray1</declname>
          <briefdescription><para>first pointer array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray2</declname>
          <briefdescription><para>second pointer array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of three joint arrays of pointers/pointers/ints, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1304" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga04fef28d6d8b510f279cdba0402c4835" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortPtrPtrReal</definition>
        <argsstring>(void **ptrarray1, void **ptrarray2, SCIP_Real *realarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</argsstring>
        <name>SCIPsortPtrPtrReal</name>
        <param>
          <type>void **</type>
          <declname>ptrarray1</declname>
          <briefdescription><para>first pointer array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray2</declname>
          <briefdescription><para>second pointer array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of three joint arrays of pointers/pointers/Reals, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1314" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga3a89ea948900a2a8f8e308f5becb9379" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortPtrPtrIntInt</definition>
        <argsstring>(void **ptrarray1, void **ptrarray2, int *intarray1, int *intarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</argsstring>
        <name>SCIPsortPtrPtrIntInt</name>
        <param>
          <type>void **</type>
          <declname>ptrarray1</declname>
          <briefdescription><para>first pointer array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray2</declname>
          <briefdescription><para>second pointer array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>first int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>second int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of four joint arrays of pointers/pointers/ints/ints, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1324" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gab09640f84657f886cc841369c980e9e5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortPtrRealIntInt</definition>
        <argsstring>(void **ptrarray, SCIP_Real *realarray, int *intarray1, int *intarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</argsstring>
        <name>SCIPsortPtrRealIntInt</name>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array to be sorted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>first int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>second int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of four joint arrays of pointers/Reals/ints/ints, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1335" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gaac079b7a19c09e6b09a15af0798fc288" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortPtrPtrRealInt</definition>
        <argsstring>(void **ptrarray1, void **ptrarray2, SCIP_Real *realarray, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</argsstring>
        <name>SCIPsortPtrPtrRealInt</name>
        <param>
          <type>void **</type>
          <declname>ptrarray1</declname>
          <briefdescription><para>first pointer array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray2</declname>
          <briefdescription><para>second pointer array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of four joint arrays of pointer/pointer/Reals/ints, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1346" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gaaece7fe23fb40bde9c03a4bae2015152" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortPtrPtrLongInt</definition>
        <argsstring>(void **ptrarray1, void **ptrarray2, SCIP_Longint *longarray, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</argsstring>
        <name>SCIPsortPtrPtrLongInt</name>
        <param>
          <type>void **</type>
          <declname>ptrarray1</declname>
          <briefdescription><para>first pointer array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray2</declname>
          <briefdescription><para>second pointer array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of four joint arrays of pointer/pointer/Longs/ints, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1357" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga4adc99570f578746a1494d919e112117" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortPtrPtrLongIntInt</definition>
        <argsstring>(void **ptrarray1, void **ptrarray2, SCIP_Longint *longarray, int *intarray1, int *intarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</argsstring>
        <name>SCIPsortPtrPtrLongIntInt</name>
        <param>
          <type>void **</type>
          <declname>ptrarray1</declname>
          <briefdescription><para>first pointer array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray2</declname>
          <briefdescription><para>second pointer array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>first int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>second int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of five joint arrays of pointer/pointer/Longs/ints/ints, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1368" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gada40be5d3ae456b7661463fc5fe649c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortReal</definition>
        <argsstring>(SCIP_Real *realarray, int len)</argsstring>
        <name>SCIPsortReal</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort an array of Reals in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1380" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga3aefb5a6ae0b10e1cea32b684aa0269c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortRealPtr</definition>
        <argsstring>(SCIP_Real *realarray, void **ptrarray, int len)</argsstring>
        <name>SCIPsortRealPtr</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of two joint arrays of Reals/pointers, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1387" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga895f33e4a5924acc56132a476aa1e72f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortRealInt</definition>
        <argsstring>(SCIP_Real *realarray, int *intarray, int len)</argsstring>
        <name>SCIPsortRealInt</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of two joint arrays of Reals/ints, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1395" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga8accfee6a02f170a465b9c0466523a26" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortRealBoolPtr</definition>
        <argsstring>(SCIP_Real *realarray, SCIP_Bool *boolarray, void **ptrarray, int len)</argsstring>
        <name>SCIPsortRealBoolPtr</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array to be sorted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>boolarray</declname>
          <briefdescription><para>SCIP_Bool array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of three joint arrays of Reals/Bools/Pointer, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1403" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gae6791f2300abc5c4b2b0e2ee86c97fee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortRealIntLong</definition>
        <argsstring>(SCIP_Real *realarray, int *intarray, SCIP_Longint *longarray, int len)</argsstring>
        <name>SCIPsortRealIntLong</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of three joint arrays of Reals/ints/Longs, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1412" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gae38ed4f13a26993f24d9e019c0414329" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortRealIntPtr</definition>
        <argsstring>(SCIP_Real *realarray, int *intarray, void **ptrarray, int len)</argsstring>
        <name>SCIPsortRealIntPtr</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of three joint arrays of Reals/ints/Pointer, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1421" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga509c605bf0b52a1a8f4bf4ecf51193c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortRealRealPtr</definition>
        <argsstring>(SCIP_Real *realarray1, SCIP_Real *realarray2, void **ptrarray, int len)</argsstring>
        <name>SCIPsortRealRealPtr</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray1</declname>
          <briefdescription><para>first SCIP_Real array to be sorted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray2</declname>
          <briefdescription><para>second SCIP_Real array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of three joint arrays of Reals/Reals/Pointer, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1430" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga88fc3a2f0c042af2b5c3dee19313eae7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortRealPtrPtrInt</definition>
        <argsstring>(SCIP_Real *realarray, void **ptrarray1, void **ptrarray2, int *intarray, int len)</argsstring>
        <name>SCIPsortRealPtrPtrInt</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray1</declname>
          <briefdescription><para>pointer array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray2</declname>
          <briefdescription><para>pointer array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of four joint arrays of Reals/pointers/pointers/ints, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1439" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga3af142a98e5b1efbc4bcc3097b11c578" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortRealPtrPtrIntInt</definition>
        <argsstring>(SCIP_Real *realarray, void **ptrarray1, void **ptrarray2, int *intarray1, int *intarray2, int len)</argsstring>
        <name>SCIPsortRealPtrPtrIntInt</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray1</declname>
          <briefdescription><para>pointer array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray2</declname>
          <briefdescription><para>pointer array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>int array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>int array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of five joint arrays of Reals/pointers/pointers/ints/ints, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1449" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga9666bab28bc49463557807e12b67b3d9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortRealLongRealInt</definition>
        <argsstring>(SCIP_Real *realarray1, SCIP_Longint *longarray, SCIP_Real *realarray3, int *intarray, int len)</argsstring>
        <name>SCIPsortRealLongRealInt</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray1</declname>
          <briefdescription><para>SCIP_Real array to be sorted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray3</declname>
          <briefdescription><para>SCIP_Real array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of four joint arrays of Reals/Longs/Reals/ints, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1460" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga87cb27343958974d876925813c5bf52d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortRealRealIntInt</definition>
        <argsstring>(SCIP_Real *realarray1, SCIP_Real *realarray2, int *intarray1, int *intarray2, int len)</argsstring>
        <name>SCIPsortRealRealIntInt</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray1</declname>
          <briefdescription><para>SCIP_Real array to be sorted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray2</declname>
          <briefdescription><para>SCIP_Real array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of four joint arrays of Reals/Reals/ints/ints, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1470" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gaf7117ac571f15acd749a3a29690bb23c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortRealRealRealInt</definition>
        <argsstring>(SCIP_Real *realarray1, SCIP_Real *realarray2, SCIP_Real *realarray3, int *intarray, int len)</argsstring>
        <name>SCIPsortRealRealRealInt</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray1</declname>
          <briefdescription><para>SCIP_Real array to be sorted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray2</declname>
          <briefdescription><para>SCIP_Real array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray3</declname>
          <briefdescription><para>SCIP_Real array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of four joint arrays of Reals/Reals/Reals/ints, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1480" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gaaa964d0415f1bf73405a1b2a292c60a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortRealRealRealPtr</definition>
        <argsstring>(SCIP_Real *realarray1, SCIP_Real *realarray2, SCIP_Real *realarray3, void **ptrarray, int len)</argsstring>
        <name>SCIPsortRealRealRealPtr</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray1</declname>
          <briefdescription><para>SCIP_Real array to be sorted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray2</declname>
          <briefdescription><para>SCIP_Real array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray3</declname>
          <briefdescription><para>SCIP_Real array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of four joint arrays of Reals/Reals/Reals/pointers, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1490" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga50fda9c79356fc79b71598db49c9fe27" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortRealRealRealBoolPtr</definition>
        <argsstring>(SCIP_Real *realarray1, SCIP_Real *realarray2, SCIP_Real *realarray3, SCIP_Bool *boolarray, void **ptrarray, int len)</argsstring>
        <name>SCIPsortRealRealRealBoolPtr</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray1</declname>
          <briefdescription><para>SCIP_Real array to be sorted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray2</declname>
          <briefdescription><para>SCIP_Real array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray3</declname>
          <briefdescription><para>SCIP_Real array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>boolarray</declname>
          <briefdescription><para>SCIP_Bool array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of five joint arrays of Reals/Reals/Reals/Bools/pointers, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1500" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gafebedfcb716eaaa657216bda67d301b6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortInt</definition>
        <argsstring>(int *intarray, int len)</argsstring>
        <name>SCIPsortInt</name>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort array of ints in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1511" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga1459c044f3f78d257a8ec7aee731d5c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortIntInt</definition>
        <argsstring>(int *intarray1, int *intarray2, int len)</argsstring>
        <name>SCIPsortIntInt</name>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>int array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>second int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of two joint arrays of ints/ints, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1518" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga61f5e6c0d4b1bc21d024e32537741509" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortIntPtr</definition>
        <argsstring>(int *intarray, void **ptrarray, int len)</argsstring>
        <name>SCIPsortIntPtr</name>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of two joint arrays of ints/pointers, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1526" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga8869d8fe40a7dd7e977d70265dda0431" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortIntReal</definition>
        <argsstring>(int *intarray, SCIP_Real *realarray, int len)</argsstring>
        <name>SCIPsortIntReal</name>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array to be sorted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>real array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of two joint arrays of ints/reals, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1534" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga2b7175014b131510a6b3cd77faca8a6e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortIntIntInt</definition>
        <argsstring>(int *intarray1, int *intarray2, int *intarray3, int len)</argsstring>
        <name>SCIPsortIntIntInt</name>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>int array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>second int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray3</declname>
          <briefdescription><para>third int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of three joint arrays of ints/ints/ints, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1542" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga4d46cb7f885bc61f09266f59be88615e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortIntIntLong</definition>
        <argsstring>(int *intarray1, int *intarray2, SCIP_Longint *longarray, int len)</argsstring>
        <name>SCIPsortIntIntLong</name>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>int array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>second int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of three joint arrays of ints/ints/Longints, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1551" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga0677776b4caf087af2b2fce521926088" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortIntIntPtr</definition>
        <argsstring>(int *intarray1, int *intarray2, void **ptrarray, int len)</argsstring>
        <name>SCIPsortIntIntPtr</name>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>int array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>second int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of three joint arrays of ints/ints/pointers, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1560" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gaebfffc0e592706e78299db4a6b2adc7f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortIntIntReal</definition>
        <argsstring>(int *intarray1, int *intarray2, SCIP_Real *realarray, int len)</argsstring>
        <name>SCIPsortIntIntReal</name>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>int array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>second int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of three joint arrays of ints/ints/reals, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1569" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga6a126e14098adc085f3ee9f55b9c8c8d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortIntPtrReal</definition>
        <argsstring>(int *intarray, void **ptrarray, SCIP_Real *realarray, int len)</argsstring>
        <name>SCIPsortIntPtrReal</name>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>real array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of three joint arrays of ints/pointers/reals, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1578" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga1d2463a2f2369a8abd8886927242d537" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortIntIntIntPtr</definition>
        <argsstring>(int *intarray1, int *intarray2, int *intarray3, void **ptrarray, int len)</argsstring>
        <name>SCIPsortIntIntIntPtr</name>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>int array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray3</declname>
          <briefdescription><para>int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of four joint arrays of ints/ints/ints/pointers, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1587" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gae15ccdf62d59b3384f72656ed0848069" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortIntPtrIntReal</definition>
        <argsstring>(int *intarray1, void **ptrarray, int *intarray2, SCIP_Real *realarray, int len)</argsstring>
        <name>SCIPsortIntPtrIntReal</name>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>int array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of four joint arrays of ints/pointers/ints/Reals, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1597" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga9538fe598b57ec44a3d80cfb18094440" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortLong</definition>
        <argsstring>(SCIP_Longint *longarray, int len)</argsstring>
        <name>SCIPsortLong</name>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort an array of Longints in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1607" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gaa12c12f4875f5297607b53fcce5078c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortLongPtr</definition>
        <argsstring>(SCIP_Longint *longarray, void **ptrarray, int len)</argsstring>
        <name>SCIPsortLongPtr</name>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of two joint arrays of Long/pointer, sorted by the first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1614" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga7e4919b0b7d0459d9d7a04ca40541bce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortLongPtrInt</definition>
        <argsstring>(SCIP_Longint *longarray, void **ptrarray, int *intarray, int len)</argsstring>
        <name>SCIPsortLongPtrInt</name>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of three arrays of Long/pointer/ints, sorted by the first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1622" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga60ad9d0f47f519d1a2fd1e84d787b2da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortLongPtrRealBool</definition>
        <argsstring>(SCIP_Longint *longarray, void **ptrarray, SCIP_Real *realarray, SCIP_Bool *boolarray, int len)</argsstring>
        <name>SCIPsortLongPtrRealBool</name>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>boolarray</declname>
          <briefdescription><para>SCIP_Bool array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of four arrays of Long/pointer/Real/Bool, sorted by the first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1631" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gaa59f9cf4c99208ae037431456f1eaaf2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortLongPtrRealRealBool</definition>
        <argsstring>(SCIP_Longint *longarray, void **ptrarray, SCIP_Real *realarray, SCIP_Real *realarray2, SCIP_Bool *boolarray, int len)</argsstring>
        <name>SCIPsortLongPtrRealRealBool</name>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>first SCIP_Real array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray2</declname>
          <briefdescription><para>second SCIP_Real array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>boolarray</declname>
          <briefdescription><para>SCIP_Bool array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of five arrays of Long/pointer/Real/Real/Bool, sorted by the first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1641" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga815d17d360accc8ebd7cdcee40b7fbed" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortLongPtrRealRealIntBool</definition>
        <argsstring>(SCIP_Longint *longarray, void **ptrarray, SCIP_Real *realarray, SCIP_Real *realarray2, int *intarray, SCIP_Bool *boolarray, int len)</argsstring>
        <name>SCIPsortLongPtrRealRealIntBool</name>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>first SCIP_Real array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray2</declname>
          <briefdescription><para>second SCIP_Real array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>boolarray</declname>
          <briefdescription><para>SCIP_Bool array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of six arrays of Long/pointer/Real/Real/int/Bool, sorted by the first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1652" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga8e73c014a70752547f7aed211f268b20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortLongPtrPtrInt</definition>
        <argsstring>(SCIP_Longint *longarray, void **ptrarray1, void **ptrarray2, int *intarray, int len)</argsstring>
        <name>SCIPsortLongPtrPtrInt</name>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray1</declname>
          <briefdescription><para>first pointer array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray2</declname>
          <briefdescription><para>second pointer array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of four joint arrays of Long/pointer/pointer/ints, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1664" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga22eff78752d127b97492bbcb70b66c43" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortLongPtrPtrIntInt</definition>
        <argsstring>(SCIP_Longint *longarray, void **ptrarray1, void **ptrarray2, int *intarray1, int *intarray2, int len)</argsstring>
        <name>SCIPsortLongPtrPtrIntInt</name>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray1</declname>
          <briefdescription><para>first pointer array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray2</declname>
          <briefdescription><para>second pointer array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>first int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>second int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of five joint arrays of Long/pointer/pointer/ints/ints, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1674" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga3bc9e484cf827b8061b60bb5723a4278" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortLongPtrPtrBoolInt</definition>
        <argsstring>(SCIP_Longint *longarray, void **ptrarray1, void **ptrarray2, SCIP_Bool *boolarray, int *intarray, int len)</argsstring>
        <name>SCIPsortLongPtrPtrBoolInt</name>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray1</declname>
          <briefdescription><para>first pointer array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray2</declname>
          <briefdescription><para>second pointer array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>boolarray</declname>
          <briefdescription><para>SCIP_Bool array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of five joint arrays of Long/pointer/pointer/Bool/ints, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1685" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga7cd183599f5fdaa9a04b2c30c6c520aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortPtrIntIntBoolBool</definition>
        <argsstring>(void **ptrarray, int *intarray1, int *intarray2, SCIP_Bool *boolarray1, SCIP_Bool *boolarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</argsstring>
        <name>SCIPsortPtrIntIntBoolBool</name>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>first int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>second int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>boolarray1</declname>
          <briefdescription><para>first SCIP_Bool array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>boolarray2</declname>
          <briefdescription><para>second SCIP_Bool array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of five joint arrays of pointer/ints/ints/Bool/Bool, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1696" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga9149039ad799eca87926af742bce2615" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortIntPtrIntIntBoolBool</definition>
        <argsstring>(int *intarray1, void **ptrarray, int *intarray2, int *intarray3, SCIP_Bool *boolarray1, SCIP_Bool *boolarray2, int len)</argsstring>
        <name>SCIPsortIntPtrIntIntBoolBool</name>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>int array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>second int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray3</declname>
          <briefdescription><para>thrid int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>boolarray1</declname>
          <briefdescription><para>first SCIP_Bool array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>boolarray2</declname>
          <briefdescription><para>second SCIP_Bool array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of six joint arrays of ints/pointer/ints/ints/Bool/Bool, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1708" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga0d7c86da256aedb5fa4773376ac73e54" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortDown</definition>
        <argsstring>(int *perm, SCIP_DECL_SORTINDCOMP((*indcomp)), void *dataptr, int len)</argsstring>
        <name>SCIPsortDown</name>
        <param>
          <type>int *</type>
          <declname>perm</declname>
          <briefdescription><para>pointer to store the resulting permutation </para></briefdescription>
        </param>
        <param>
          <type><ref refid="type__misc_8h_1a806c02f466e036f6e137df9eee2f7e9d" kindref="member">SCIP_DECL_SORTINDCOMP</ref>((*indcomp))</type>
        </param>
        <param>
          <type>void *</type>
          <declname>dataptr</declname>
          <briefdescription><para>pointer to data field that is given to the external compare method </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>number of elements to be sorted (valid index range) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort an indexed element set in non-increasing order, resulting in a permutation index array </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1722" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gafb82dba8399e90104928045d683f3b48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortDownInd</definition>
        <argsstring>(int *indarray, SCIP_DECL_SORTINDCOMP((*indcomp)), void *dataptr, int len)</argsstring>
        <name>SCIPsortDownInd</name>
        <param>
          <type>int *</type>
          <declname>indarray</declname>
          <briefdescription><para>pointer to the index array to be sorted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="type__misc_8h_1a806c02f466e036f6e137df9eee2f7e9d" kindref="member">SCIP_DECL_SORTINDCOMP</ref>((*indcomp))</type>
        </param>
        <param>
          <type>void *</type>
          <declname>dataptr</declname>
          <briefdescription><para>pointer to data field that is given to the external compare method </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of array </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort an index array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1731" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga1d8fe6915a069a8c1e9af1fa18be54a9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortDownPtr</definition>
        <argsstring>(void **ptrarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</argsstring>
        <name>SCIPsortDownPtr</name>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array to be sorted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of array </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of an array of pointers in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1740" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gae3e65d3151ef6438ec2e75ae5eac544f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortDownPtrPtr</definition>
        <argsstring>(void **ptrarray1, void **ptrarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</argsstring>
        <name>SCIPsortDownPtrPtr</name>
        <param>
          <type>void **</type>
          <declname>ptrarray1</declname>
          <briefdescription><para>first pointer array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray2</declname>
          <briefdescription><para>second pointer array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of two joint arrays of pointers/pointers, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1748" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga411d1af78dca509d0341f297f13526d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortDownPtrReal</definition>
        <argsstring>(void **ptrarray, SCIP_Real *realarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</argsstring>
        <name>SCIPsortDownPtrReal</name>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array to be sorted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of two joint arrays of pointers/Reals, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1757" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga4d581268144e15363728a08b90a1d124" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortDownPtrInt</definition>
        <argsstring>(void **ptrarray, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</argsstring>
        <name>SCIPsortDownPtrInt</name>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of two joint arrays of pointers/ints, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1766" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gae14243bcbee05b69985fb4f53a57eb14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortDownPtrBool</definition>
        <argsstring>(void **ptrarray, SCIP_Bool *boolarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</argsstring>
        <name>SCIPsortDownPtrBool</name>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array to be sorted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>boolarray</declname>
          <briefdescription><para>SCIP_Bool array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of two joint arrays of pointers/Bools, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1775" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gad961a8f2a993686f622cc54779c1dbb7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortDownPtrIntInt</definition>
        <argsstring>(void **ptrarray, int *intarray1, int *intarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</argsstring>
        <name>SCIPsortDownPtrIntInt</name>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>first int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>second int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of three joint arrays of pointers/ints/ints, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1784" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga9c82a6ec22c88c581fe469d62d7bbff9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortDownPtrRealInt</definition>
        <argsstring>(void **ptrarray, SCIP_Real *realarray, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</argsstring>
        <name>SCIPsortDownPtrRealInt</name>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array to be sorted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of three joint arrays of pointers/Reals/ints, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1794" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga186399601a8f141b3fa80daa86325044" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortDownPtrPtrInt</definition>
        <argsstring>(void **ptrarray1, void **ptrarray2, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</argsstring>
        <name>SCIPsortDownPtrPtrInt</name>
        <param>
          <type>void **</type>
          <declname>ptrarray1</declname>
          <briefdescription><para>first pointer array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray2</declname>
          <briefdescription><para>second pointer array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of three joint arrays of pointers/pointers/ints, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1804" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga3f4625f35544d81cf6dd9caace7290ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortDownPtrPtrReal</definition>
        <argsstring>(void **ptrarray1, void **ptrarray2, SCIP_Real *realarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</argsstring>
        <name>SCIPsortDownPtrPtrReal</name>
        <param>
          <type>void **</type>
          <declname>ptrarray1</declname>
          <briefdescription><para>first pointer array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray2</declname>
          <briefdescription><para>second pointer array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of three joint arrays of pointers/pointers/Reals, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1814" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga83c769947e7a805ac08faebc9aae624f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortDownPtrPtrIntInt</definition>
        <argsstring>(void **ptrarray1, void **ptrarray2, int *intarray1, int *intarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</argsstring>
        <name>SCIPsortDownPtrPtrIntInt</name>
        <param>
          <type>void **</type>
          <declname>ptrarray1</declname>
          <briefdescription><para>first pointer array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray2</declname>
          <briefdescription><para>second pointer array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>first int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>second int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of four joint arrays of pointers/pointers/ints/ints, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1824" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga43b302ebc8ac0ebe0f63ea157d26a51b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortDownPtrRealIntInt</definition>
        <argsstring>(void **ptrarray, SCIP_Real *realarray, int *intarray1, int *intarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</argsstring>
        <name>SCIPsortDownPtrRealIntInt</name>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array to be sorted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>first int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>second int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of four joint arrays of pointers/Reals/ints/ints, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1835" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga103409100475e1f3e85048bbe7349c99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortDownPtrPtrRealInt</definition>
        <argsstring>(void **ptrarray1, void **ptrarray2, SCIP_Real *realarray, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</argsstring>
        <name>SCIPsortDownPtrPtrRealInt</name>
        <param>
          <type>void **</type>
          <declname>ptrarray1</declname>
          <briefdescription><para>first pointer array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray2</declname>
          <briefdescription><para>second pointer array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of four joint arrays of pointer/pointer/Reals/ints, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1846" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gab43cef21fdbf1c9c17dfde17598c0c4a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortDownPtrPtrLongInt</definition>
        <argsstring>(void **ptrarray1, void **ptrarray2, SCIP_Longint *longarray, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</argsstring>
        <name>SCIPsortDownPtrPtrLongInt</name>
        <param>
          <type>void **</type>
          <declname>ptrarray1</declname>
          <briefdescription><para>first pointer array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray2</declname>
          <briefdescription><para>second pointer array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of four joint arrays of pointer/pointer/Longs/ints, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1857" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga1db3f9de34af7bd405cbf5c50f74346d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortDownPtrPtrLongIntInt</definition>
        <argsstring>(void **ptrarray1, void **ptrarray2, SCIP_Longint *longarray, int *intarray1, int *intarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</argsstring>
        <name>SCIPsortDownPtrPtrLongIntInt</name>
        <param>
          <type>void **</type>
          <declname>ptrarray1</declname>
          <briefdescription><para>first pointer array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray2</declname>
          <briefdescription><para>second pointer array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>first int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>second int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of five joint arrays of pointer/pointer/Longs/ints/ints, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1868" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gaa623c01168142d857c65130066ba26ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortDownReal</definition>
        <argsstring>(SCIP_Real *realarray, int len)</argsstring>
        <name>SCIPsortDownReal</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort an array of Reals in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1880" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga84840a187b87bd89c6fd1c7884013b99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortDownRealPtr</definition>
        <argsstring>(SCIP_Real *realarray, void **ptrarray, int len)</argsstring>
        <name>SCIPsortDownRealPtr</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of two joint arrays of Reals/pointers, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1887" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gadd4f5e75a6b3302b8f95684bd73a8889" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortDownRealInt</definition>
        <argsstring>(SCIP_Real *realarray, int *intarray, int len)</argsstring>
        <name>SCIPsortDownRealInt</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>pointer array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of two joint arrays of Reals/ints, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1895" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga1baa5680a01a45dc0348e41f2213db96" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortDownRealBoolPtr</definition>
        <argsstring>(SCIP_Real *realarray, SCIP_Bool *boolarray, void **ptrarray, int len)</argsstring>
        <name>SCIPsortDownRealBoolPtr</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array to be sorted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>boolarray</declname>
          <briefdescription><para>SCIP_Bool array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of three joint arrays of Reals/Bools/Pointer, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1903" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga993756b97de88ce3905b70c4916b03ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortDownRealIntLong</definition>
        <argsstring>(SCIP_Real *realarray, int *intarray, SCIP_Longint *longarray, int len)</argsstring>
        <name>SCIPsortDownRealIntLong</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of three joint arrays of Reals/ints/Longs, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1912" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga2e907842a928670151b66d0dd0e3bcc8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortDownRealIntPtr</definition>
        <argsstring>(SCIP_Real *realarray, int *intarray, void **ptrarray, int len)</argsstring>
        <name>SCIPsortDownRealIntPtr</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of three joint arrays of Reals/ints/Pointer, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1921" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga9479fd1bd7c85ee7fc8edc1c3f938e53" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortDownRealRealPtr</definition>
        <argsstring>(SCIP_Real *realarray1, SCIP_Real *realarray2, void **ptrarray, int len)</argsstring>
        <name>SCIPsortDownRealRealPtr</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray1</declname>
          <briefdescription><para>first SCIP_Real array to be sorted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray2</declname>
          <briefdescription><para>second SCIP_Real array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of three joint arrays of Reals/Reals/Pointer, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1930" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga817a57f4c3b3093c0a3c40f678ecd0fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortDownRealPtrPtrInt</definition>
        <argsstring>(SCIP_Real *realarray, void **ptrarray1, void **ptrarray2, int *intarray, int len)</argsstring>
        <name>SCIPsortDownRealPtrPtrInt</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray1</declname>
          <briefdescription><para>pointer array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray2</declname>
          <briefdescription><para>pointer array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of four joint arrays of Reals/pointers/pointers/ints, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1939" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga696e143ef9925f77d8b4de12ac3016ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortDownRealPtrPtrIntInt</definition>
        <argsstring>(SCIP_Real *realarray, void **ptrarray1, void **ptrarray2, int *intarray1, int *intarray2, int len)</argsstring>
        <name>SCIPsortDownRealPtrPtrIntInt</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray1</declname>
          <briefdescription><para>pointer array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray2</declname>
          <briefdescription><para>pointer array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>int array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>int array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of five joint arrays of Reals/pointers/pointers/ints/ints, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1949" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gaadec0881bdfa6a228e0e666a7490a0c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortDownRealLongRealInt</definition>
        <argsstring>(SCIP_Real *realarray1, SCIP_Longint *longarray, SCIP_Real *realarray3, int *intarray, int len)</argsstring>
        <name>SCIPsortDownRealLongRealInt</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray1</declname>
          <briefdescription><para>SCIP_Real array to be sorted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray3</declname>
          <briefdescription><para>SCIP_Real array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of four joint arrays of Reals/Longs/Reals/ints, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1960" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gaaf4a84d4a734bcebc99a4420738e5e3c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortDownRealRealIntInt</definition>
        <argsstring>(SCIP_Real *realarray1, SCIP_Real *realarray2, int *intarray1, int *intarray2, int len)</argsstring>
        <name>SCIPsortDownRealRealIntInt</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray1</declname>
          <briefdescription><para>SCIP_Real array to be sorted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray2</declname>
          <briefdescription><para>SCIP_Real array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of four joint arrays of Reals/Reals/ints/ints, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1970" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga50532e082cb45f17fd5bccf1b242e785" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortDownRealRealRealInt</definition>
        <argsstring>(SCIP_Real *realarray1, SCIP_Real *realarray2, SCIP_Real *realarray3, int *intarray, int len)</argsstring>
        <name>SCIPsortDownRealRealRealInt</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray1</declname>
          <briefdescription><para>SCIP_Real array to be sorted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray2</declname>
          <briefdescription><para>SCIP_Real array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray3</declname>
          <briefdescription><para>SCIP_Real array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of four joint arrays of Reals/Reals/Reals/ints, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1981" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga4052498e105a5fd110f63d9fff7cbf0a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortDownRealRealRealPtr</definition>
        <argsstring>(SCIP_Real *realarray1, SCIP_Real *realarray2, SCIP_Real *realarray3, void **ptrarray, int len)</argsstring>
        <name>SCIPsortDownRealRealRealPtr</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray1</declname>
          <briefdescription><para>SCIP_Real array to be sorted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray2</declname>
          <briefdescription><para>SCIP_Real array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray3</declname>
          <briefdescription><para>SCIP_Real array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of four joint arrays of Reals/Reals/Reals/pointers, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="1991" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga332bb52badc574cb381f44acc91b5651" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortDownRealPtrPtr</definition>
        <argsstring>(SCIP_Real *realarray, void **ptrarray1, void **ptrarray2, int len)</argsstring>
        <name>SCIPsortDownRealPtrPtr</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray1</declname>
          <briefdescription><para>pointer array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray2</declname>
          <briefdescription><para>pointer array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of three joint arrays of Reals/pointers, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="2001" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gaa98f80c21490cc4751fd2032348a0f0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortDownRealRealRealBoolPtr</definition>
        <argsstring>(SCIP_Real *realarray1, SCIP_Real *realarray2, SCIP_Real *realarray3, SCIP_Bool *boolarray, void **ptrarray, int len)</argsstring>
        <name>SCIPsortDownRealRealRealBoolPtr</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray1</declname>
          <briefdescription><para>SCIP_Real array to be sorted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray2</declname>
          <briefdescription><para>SCIP_Real array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray3</declname>
          <briefdescription><para>SCIP_Real array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>boolarray</declname>
          <briefdescription><para>SCIP_Bool array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of five joint arrays of Reals/Reals/Reals/Bools/pointers, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="2010" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gafc2c490292d72a2c0bba1643fcf327a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortDownInt</definition>
        <argsstring>(int *intarray, int len)</argsstring>
        <name>SCIPsortDownInt</name>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort array of ints in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="2021" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga01925789e2248eb75d8285ef887e0640" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortDownIntInt</definition>
        <argsstring>(int *intarray1, int *intarray2, int len)</argsstring>
        <name>SCIPsortDownIntInt</name>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>int array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>second int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of two joint arrays of ints/ints, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="2028" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga55b71add7fd01d9b377f78a42d16cc64" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortDownIntPtr</definition>
        <argsstring>(int *intarray, void **ptrarray, int len)</argsstring>
        <name>SCIPsortDownIntPtr</name>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of two joint arrays of ints/pointers, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="2036" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gafe3012bbb5eb43bc8757afccafb82d03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortDownIntReal</definition>
        <argsstring>(int *intarray, SCIP_Real *realarray, int len)</argsstring>
        <name>SCIPsortDownIntReal</name>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array to be sorted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>real array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of two joint arrays of ints/reals, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="2044" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga8011151ff7cec8ee757981bf65ae6b2a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortDownIntIntInt</definition>
        <argsstring>(int *intarray1, int *intarray2, int *intarray3, int len)</argsstring>
        <name>SCIPsortDownIntIntInt</name>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>int array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>second int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray3</declname>
          <briefdescription><para>third int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of three joint arrays of ints/ints/ints, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="2052" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gaea667c42803705ecdbcee0f5a8248540" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortDownIntIntLong</definition>
        <argsstring>(int *intarray1, int *intarray2, SCIP_Longint *longarray, int len)</argsstring>
        <name>SCIPsortDownIntIntLong</name>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>int array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>second int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of three joint arrays of ints/ints/SCIP_Longint, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="2061" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga775d4027f044f54761709621a1efb26a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortDownIntIntPtr</definition>
        <argsstring>(int *intarray1, int *intarray2, void **ptrarray, int len)</argsstring>
        <name>SCIPsortDownIntIntPtr</name>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>int array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>second int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of three joint arrays of ints/ints/pointers, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="2070" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga3264e0be63d9cc1179183ff0185057c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortDownIntIntReal</definition>
        <argsstring>(int *intarray1, int *intarray2, SCIP_Real *realarray, int len)</argsstring>
        <name>SCIPsortDownIntIntReal</name>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>int array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>second int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of three joint arrays of ints/ints/Reals, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="2079" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga2bec5a6855cf1369a4a15ae1a61810ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortDownIntIntIntPtr</definition>
        <argsstring>(int *intarray1, int *intarray2, int *intarray3, void **ptrarray, int len)</argsstring>
        <name>SCIPsortDownIntIntIntPtr</name>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>int array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray3</declname>
          <briefdescription><para>int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of four joint arrays of ints/ints/ints/pointers, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="2088" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga31c092ded149d84097c1b16b6a5190a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortDownIntPtrIntReal</definition>
        <argsstring>(int *intarray1, void **ptrarray, int *intarray2, SCIP_Real *realarray, int len)</argsstring>
        <name>SCIPsortDownIntPtrIntReal</name>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>int array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of four joint arrays of ints/pointers/ints/Reals, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="2098" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga65b6dcbe8e2a19882877f75ca0b3bf7a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortDownLong</definition>
        <argsstring>(SCIP_Longint *longarray, int len)</argsstring>
        <name>SCIPsortDownLong</name>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort an array of Longints in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="2108" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga02c0c212fcce997d7fd828cba495cbbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortDownLongPtr</definition>
        <argsstring>(SCIP_Longint *longarray, void **ptrarray, int len)</argsstring>
        <name>SCIPsortDownLongPtr</name>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of two joint arrays of Long/pointer, sorted by the first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="2115" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gafbe313d646e84532917af8565963b57d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortDownLongPtrInt</definition>
        <argsstring>(SCIP_Longint *longarray, void **ptrarray, int *intarray, int len)</argsstring>
        <name>SCIPsortDownLongPtrInt</name>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of three arrays of Long/pointer/ints, sorted by the first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="2123" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga452ab65806aa320bff3720b7b4b28122" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortDownLongPtrRealBool</definition>
        <argsstring>(SCIP_Longint *longarray, void **ptrarray, SCIP_Real *realarray, SCIP_Bool *boolarray, int len)</argsstring>
        <name>SCIPsortDownLongPtrRealBool</name>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>boolarray</declname>
          <briefdescription><para>SCIP_Bool array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of four arrays of Long/pointer/Real/Bool, sorted by the first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="2132" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga3ca8afb62ddbfd1f33e99b9d1b500af2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortDownLongPtrRealRealBool</definition>
        <argsstring>(SCIP_Longint *longarray, void **ptrarray, SCIP_Real *realarray, SCIP_Real *realarray2, SCIP_Bool *boolarray, int len)</argsstring>
        <name>SCIPsortDownLongPtrRealRealBool</name>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>first SCIP_Real array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray2</declname>
          <briefdescription><para>second SCIP_Real array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>boolarray</declname>
          <briefdescription><para>SCIP_Bool array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of five arrays of Long/pointer/Real/Real/Bool, sorted by the first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="2142" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gab4fd456883d9706d81aa702025175de1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortDownLongPtrRealRealIntBool</definition>
        <argsstring>(SCIP_Longint *longarray, void **ptrarray, SCIP_Real *realarray, SCIP_Real *realarray2, int *intarray, SCIP_Bool *boolarray, int len)</argsstring>
        <name>SCIPsortDownLongPtrRealRealIntBool</name>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>first SCIP_Real array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray2</declname>
          <briefdescription><para>second SCIP_Real array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>boolarray</declname>
          <briefdescription><para>SCIP_Bool array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of six arrays of Long/pointer/Real/Real/int/Bool, sorted by the first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="2153" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga5472b21dca58ff8bb22c87182ab9644b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortDownLongPtrPtrInt</definition>
        <argsstring>(SCIP_Longint *longarray, void **ptrarray1, void **ptrarray2, int *intarray, int len)</argsstring>
        <name>SCIPsortDownLongPtrPtrInt</name>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray1</declname>
          <briefdescription><para>first pointer array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray2</declname>
          <briefdescription><para>second pointer array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of four joint arrays of Long/pointer/pointer/ints, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="2165" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga643e99ceae9a6dc322f115c435dd9af5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortDownLongPtrPtrIntInt</definition>
        <argsstring>(SCIP_Longint *longarray, void **ptrarray1, void **ptrarray2, int *intarray1, int *intarray2, int len)</argsstring>
        <name>SCIPsortDownLongPtrPtrIntInt</name>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray1</declname>
          <briefdescription><para>first pointer array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray2</declname>
          <briefdescription><para>second pointer array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>first int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>second int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of five joint arrays of Long/pointer/pointer/ints/ints, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="2175" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gaabf37c20afcb335e4ef35d12e955804a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortDownLongPtrPtrBoolInt</definition>
        <argsstring>(SCIP_Longint *longarray, void **ptrarray1, void **ptrarray2, SCIP_Bool *boolarray, int *intarray, int len)</argsstring>
        <name>SCIPsortDownLongPtrPtrBoolInt</name>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray1</declname>
          <briefdescription><para>first pointer array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray2</declname>
          <briefdescription><para>second pointer array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>boolarray</declname>
          <briefdescription><para>SCIP_Bool array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of five joint arrays of Long/pointer/pointer/Bool/ints, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="2186" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gae46567014ded78d5a0ba4174e0182af1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortDownPtrIntIntBoolBool</definition>
        <argsstring>(void **ptrarray, int *intarray1, int *intarray2, SCIP_Bool *boolarray1, SCIP_Bool *boolarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int len)</argsstring>
        <name>SCIPsortDownPtrIntIntBoolBool</name>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>first int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>second int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>boolarray1</declname>
          <briefdescription><para>first SCIP_Bool array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>boolarray2</declname>
          <briefdescription><para>second SCIP_Bool array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of five joint arrays of pointer/ints/ints/Bool/Bool, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="2197" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gaf03082c708f42cd3620e034238c79ee7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortDownIntPtrIntIntBoolBool</definition>
        <argsstring>(int *intarray1, void **ptrarray, int *intarray2, int *intarray3, SCIP_Bool *boolarray1, SCIP_Bool *boolarray2, int len)</argsstring>
        <name>SCIPsortDownIntPtrIntIntBoolBool</name>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>int array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>second int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray3</declname>
          <briefdescription><para>thrid int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>boolarray1</declname>
          <briefdescription><para>first SCIP_Bool array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>boolarray2</declname>
          <briefdescription><para>second SCIP_Bool array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of arrays </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sort of six joint arrays of ints/pointer/ints/ints/Bool/Bool, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="2209" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gadf69871e9d63b3bacc124e080afdc1d3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertInd</definition>
        <argsstring>(int *indarray, SCIP_DECL_SORTINDCOMP((*indcomp)), void *dataptr, int keyval, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertInd</name>
        <param>
          <type>int *</type>
          <declname>indarray</declname>
          <briefdescription><para>pointer to the index array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="type__misc_8h_1a806c02f466e036f6e137df9eee2f7e9d" kindref="member">SCIP_DECL_SORTINDCOMP</ref>((*indcomp))</type>
        </param>
        <param>
          <type>void *</type>
          <declname>dataptr</declname>
          <briefdescription><para>pointer to data field that is given to the external compare method </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into an index array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="2227" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gad2de8244f70b7d8ed2145f4873d0f827" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertPtr</definition>
        <argsstring>(void **ptrarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertPtr</name>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer to the pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>void *</type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into an array of pointers in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="2238" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga82b5b776c82e6ca892eafaf7412c6f73" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertPtrPtr</definition>
        <argsstring>(void **ptrarray1, void **ptrarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, void *field1val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertPtrPtr</name>
        <param>
          <type>void **</type>
          <declname>ptrarray1</declname>
          <briefdescription><para>first pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray2</declname>
          <briefdescription><para>second pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>void *</type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into two joint arrays of pointers/pointers sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="2248" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gab7645aaebf00eb16762f1a77a6ec43a2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertPtrReal</definition>
        <argsstring>(void **ptrarray, SCIP_Real *realarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, SCIP_Real field1val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertPtrReal</name>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>void *</type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into two joint arrays of pointers/Reals, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="2260" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga1a2d6a8a92817d3043c49f76009a6110" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertPtrInt</definition>
        <argsstring>(void **ptrarray, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, int field1val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertPtrInt</name>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>void *</type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into two joint arrays of pointers/ints, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="2272" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga287aaa7fb850a94b01c93da3ecc69053" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertPtrBool</definition>
        <argsstring>(void **ptrarray, SCIP_Bool *boolarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, SCIP_Bool field1val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertPtrBool</name>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>boolarray</declname>
          <briefdescription><para>SCIP_Bool array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>void *</type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into two joint arrays of pointers/Bools, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="2284" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga4e5b8f75079c59ef65f0822de4c4bd3a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertPtrIntInt</definition>
        <argsstring>(void **ptrarray, int *intarray1, int *intarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, int field1val, int field2val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertPtrIntInt</name>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>first int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>second int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>void *</type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>field2val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into three joint arrays of pointers/ints/ints, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="2296" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gaa6f2603ab94a9210cd0bdd9b3fbf5b9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertPtrRealInt</definition>
        <argsstring>(void **ptrarray, SCIP_Real *realarray, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, SCIP_Real field1val, int field2val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertPtrRealInt</name>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>void *</type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>field2val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into three joint arrays of pointers/Reals/ints, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="2310" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga5a96ba0027ce1fb1990706d22a761bdd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertPtrPtrInt</definition>
        <argsstring>(void **ptrarray1, void **ptrarray2, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, void *field1val, int field2val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertPtrPtrInt</name>
        <param>
          <type>void **</type>
          <declname>ptrarray1</declname>
          <briefdescription><para>first pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray2</declname>
          <briefdescription><para>second pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>void *</type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>field2val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into three joint arrays of pointers/pointers/Ints, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="2324" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga4eea85f0cafa05790ba41f868d4ccba9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertPtrPtrReal</definition>
        <argsstring>(void **ptrarray1, void **ptrarray2, SCIP_Real *realarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, void *field1val, SCIP_Real field2val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertPtrPtrReal</name>
        <param>
          <type>void **</type>
          <declname>ptrarray1</declname>
          <briefdescription><para>first pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray2</declname>
          <briefdescription><para>second pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>void *</type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>field2val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into three joint arrays of pointers/pointers/Reals, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="2338" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga7c9b63e9f81d3abbd37f0d4f4778a32f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertPtrPtrIntInt</definition>
        <argsstring>(void **ptrarray1, void **ptrarray2, int *intarray1, int *intarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, void *field1val, int field2val, int field3val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertPtrPtrIntInt</name>
        <param>
          <type>void **</type>
          <declname>ptrarray1</declname>
          <briefdescription><para>first pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray2</declname>
          <briefdescription><para>second pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>first int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>second int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>void *</type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>field2val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>field3val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into four joint arrays of pointers/pointers/ints/ints, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="2352" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gad39babe7886a3935819a7a8cf47bb03e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertPtrRealIntInt</definition>
        <argsstring>(void **ptrarray, SCIP_Real *realarray, int *intarray1, int *intarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, SCIP_Real field1val, int field2val, int field3val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertPtrRealIntInt</name>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>first int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>second int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>void *</type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>field2val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>field3val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into four joint arrays of pointers/Reals/ints/ints, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="2368" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gae553cc51ee93cc46ddf9b17864356af6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertPtrPtrRealInt</definition>
        <argsstring>(void **ptrarray1, void **ptrarray2, SCIP_Real *realarray, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, void *field1val, SCIP_Real field2val, int field3val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertPtrPtrRealInt</name>
        <param>
          <type>void **</type>
          <declname>ptrarray1</declname>
          <briefdescription><para>first pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray2</declname>
          <briefdescription><para>second pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array to be sorted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>void *</type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>field2val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>field3val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into four joint arrays of pointer/pointer/Reals/ints, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="2384" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gae86ae870f9a6ce7955c47b49ad6d75a1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertPtrPtrLongInt</definition>
        <argsstring>(void **ptrarray1, void **ptrarray2, SCIP_Longint *longarray, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, void *field1val, SCIP_Longint field2val, int field3val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertPtrPtrLongInt</name>
        <param>
          <type>void **</type>
          <declname>ptrarray1</declname>
          <briefdescription><para>first pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray2</declname>
          <briefdescription><para>second pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array to be sorted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>void *</type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref></type>
          <declname>field2val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>field3val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into four joint arrays of pointer/pointer/Longs/ints, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="2400" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gaeaeb6ae4678972440ef6c584b759d855" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertPtrPtrLongIntInt</definition>
        <argsstring>(void **ptrarray1, void **ptrarray2, SCIP_Longint *longarray, int *intarray1, int *intarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, void *field1val, SCIP_Longint field2val, int field3val, int field4val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertPtrPtrLongIntInt</name>
        <param>
          <type>void **</type>
          <declname>ptrarray1</declname>
          <briefdescription><para>first pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray2</declname>
          <briefdescription><para>second pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>first int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>second int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>void *</type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref></type>
          <declname>field2val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>field3val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>field4val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into five joint arrays of pointer/pointer/Longs/ints/ints, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="2416" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga7bd94818f5da6aa73570287156de782c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertRealBoolPtr</definition>
        <argsstring>(SCIP_Real *realarray, SCIP_Bool *boolarray, void **ptrarray, SCIP_Real keyval, SCIP_Bool field1val, void *field2val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertRealBoolPtr</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array to be sorted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>boolarray</declname>
          <briefdescription><para>SCIP_Bool array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>field2val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into three joint arrays of Reals/Bools/pointers, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="2434" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gae418cfc3d7edf6b841e3b41c05396db8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertRealPtr</definition>
        <argsstring>(SCIP_Real *realarray, void **ptrarray, SCIP_Real keyval, void *field1val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertRealPtr</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into two joint arrays of Reals/pointers, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="2447" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga3366a4cd7ae4a55d7ca431d7cd88b695" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertReal</definition>
        <argsstring>(SCIP_Real *realarray, SCIP_Real keyval, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertReal</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into an arrays of Reals, sorted in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="2458" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga6f3fa13f984b8fd47cc437a0986e0eb8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertRealInt</definition>
        <argsstring>(SCIP_Real *realarray, int *intarray, SCIP_Real keyval, int field1val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertRealInt</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into two joint arrays of Reals/ints, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="2467" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga16f59970bfb334d816b41121c332c4dc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertRealIntLong</definition>
        <argsstring>(SCIP_Real *realarray, int *intarray, SCIP_Longint *longarray, SCIP_Real keyval, int field1val, SCIP_Longint field2val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertRealIntLong</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref></type>
          <declname>field2val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into three joint arrays of Reals/ints/Longs, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="2478" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gaf2c7e0b280b46ceeeb6af669a6e46ecd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertRealIntPtr</definition>
        <argsstring>(SCIP_Real *realarray, int *intarray, void **ptrarray, SCIP_Real keyval, int field1val, void *field2val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertRealIntPtr</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>field2val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into three joint arrays of Reals/ints/Pointer, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="2491" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga3787f348b6be92d6aacaea1b7af6d472" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertRealRealPtr</definition>
        <argsstring>(SCIP_Real *realarray1, SCIP_Real *realarray2, void **ptrarray, SCIP_Real keyval, SCIP_Real field1val, void *field2val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertRealRealPtr</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray1</declname>
          <briefdescription><para>first SCIP_Real array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray2</declname>
          <briefdescription><para>second SCIP_Real array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>field2val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into three joint arrays of Reals/Reals/Pointer, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="2504" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gaa021f9bbbb629a05a94d9bc9578b4dcf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertRealPtrPtrInt</definition>
        <argsstring>(SCIP_Real *realarray, void **ptrarray1, void **ptrarray2, int *intarray, SCIP_Real keyval, void *field1val, void *field2val, int intval, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertRealPtrPtrInt</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray1</declname>
          <briefdescription><para>pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray2</declname>
          <briefdescription><para>pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>field2val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>intval</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into four joint arrays of Reals/pointers/pointers/ints, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="2517" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gae1a157e4781b1a108449aa2e6f25a8ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertRealPtrPtrIntInt</definition>
        <argsstring>(SCIP_Real *realarray, void **ptrarray1, void **ptrarray2, int *intarray1, int *intarray2, SCIP_Real keyval, void *field1val, void *field2val, int intval1, int intval2, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertRealPtrPtrIntInt</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray1</declname>
          <briefdescription><para>pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray2</declname>
          <briefdescription><para>pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>field2val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>intval1</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>intval2</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into five joint arrays of Reals/pointers/pointers/ints/ints, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="2532" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga3c2fd41694250800a33788757796766a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertRealLongRealInt</definition>
        <argsstring>(SCIP_Real *realarray1, SCIP_Longint *longarray, SCIP_Real *realarray3, int *intarray, SCIP_Real keyval, SCIP_Longint field1val, SCIP_Real field2val, int field3val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertRealLongRealInt</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray1</declname>
          <briefdescription><para>SCIP_Real array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray3</declname>
          <briefdescription><para>SCIP_Real array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref></type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>field2val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>field3val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into four joint arrays of Reals/Long/Reals/ints, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="2549" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gac3edc085b2c5f73d7903297fc37b07ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertRealRealIntInt</definition>
        <argsstring>(SCIP_Real *realarray1, SCIP_Real *realarray2, int *intarray1, int *intarray2, SCIP_Real keyval, SCIP_Real field1val, int field2val, int field3val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertRealRealIntInt</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray1</declname>
          <briefdescription><para>first SCIP_Real array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray2</declname>
          <briefdescription><para>second SCIP_Real array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>first int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>second int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>field2val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>field3val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into four joint arrays of Reals/Reals/ints/ints, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="2564" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga77d4c8c22de99edad167eabac9726137" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertRealRealRealInt</definition>
        <argsstring>(SCIP_Real *realarray1, SCIP_Real *realarray2, SCIP_Real *realarray3, int *intarray, SCIP_Real keyval, SCIP_Real field1val, SCIP_Real field2val, int field3val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertRealRealRealInt</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray1</declname>
          <briefdescription><para>first SCIP_Real array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray2</declname>
          <briefdescription><para>second SCIP_Real array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray3</declname>
          <briefdescription><para>third SCIP_Real array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>field2val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>field3val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into four joint arrays of Reals/Reals/Reals/ints, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="2579" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gae42f95467cf1997a7a4a860abf197566" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertRealRealRealPtr</definition>
        <argsstring>(SCIP_Real *realarray1, SCIP_Real *realarray2, SCIP_Real *realarray3, void **ptrarray, SCIP_Real keyval, SCIP_Real field1val, SCIP_Real field2val, void *field3val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertRealRealRealPtr</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray1</declname>
          <briefdescription><para>first SCIP_Real array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray2</declname>
          <briefdescription><para>second SCIP_Real array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray3</declname>
          <briefdescription><para>third SCIP_Real array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>field2val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>field3val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into four joint arrays of Reals/Reals/Reals/pointers, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="2594" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga21db09a67cbaf2e5886207f85a5dfba9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertRealRealRealBoolPtr</definition>
        <argsstring>(SCIP_Real *realarray1, SCIP_Real *realarray2, SCIP_Real *realarray3, SCIP_Bool *boolarray, void **ptrarray, SCIP_Real keyval, SCIP_Real field1val, SCIP_Real field2val, SCIP_Bool field3val, void *field4val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertRealRealRealBoolPtr</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray1</declname>
          <briefdescription><para>first SCIP_Real array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray2</declname>
          <briefdescription><para>second SCIP_Real array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray3</declname>
          <briefdescription><para>third SCIP_Real array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>boolarray</declname>
          <briefdescription><para>SCIP_Bool array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>field2val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
          <declname>field3val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>field4val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into five joint arrays of Reals/Reals/Reals/Bools/pointers, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="2609" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga6fa297c0cd844c08ddc3c3f79a51e4ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertInt</definition>
        <argsstring>(int *intarray, int keyval, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertInt</name>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into an array of ints in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="2626" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gaf8bde4b5fa0673e8762d6e24d0a39e99" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertIntInt</definition>
        <argsstring>(int *intarray1, int *intarray2, int keyval, int field1val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertIntInt</name>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>second int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into two joint arrays of ints/ints, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="2635" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga77913089a99756fe6d7ce65135ce05ea" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertIntPtr</definition>
        <argsstring>(int *intarray, void **ptrarray, int keyval, void *field1val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertIntPtr</name>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into two joint arrays of ints/pointers, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="2646" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga8b02bc8614dceb22e56a4fef399be177" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertIntReal</definition>
        <argsstring>(int *intarray, SCIP_Real *realarray, int keyval, SCIP_Real field1val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertIntReal</name>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>real array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into two joint arrays of ints/reals, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="2657" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gad6e23029376ac733381d4ed263d17168" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertIntIntInt</definition>
        <argsstring>(int *intarray1, int *intarray2, int *intarray3, int keyval, int field1val, int field2val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertIntIntInt</name>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>second int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray3</declname>
          <briefdescription><para>third int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>field2val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into three joint arrays of ints/ints/ints, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="2668" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga51aea5f6da2a3c8ab3685739f6f4b0ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertIntIntLong</definition>
        <argsstring>(int *intarray1, int *intarray2, SCIP_Longint *longarray, int keyval, int field1val, SCIP_Longint field2val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertIntIntLong</name>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>second int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref></type>
          <declname>field2val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into three joint arrays of ints/ints/SCIP_Longint, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="2681" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga0b94979d8d5cd5ce5847d21e9b4dd12d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertIntIntPtr</definition>
        <argsstring>(int *intarray1, int *intarray2, void **ptrarray, int keyval, int field1val, void *field2val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertIntIntPtr</name>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>first int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>second int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>field2val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into three joint arrays of ints/ints/pointers, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="2694" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gacf26beb3678a84f4572a6d72c65214ac" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertIntIntReal</definition>
        <argsstring>(int *intarray1, int *intarray2, SCIP_Real *realarray, int keyval, int field1val, SCIP_Real field2val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertIntIntReal</name>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>first int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>second int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>real array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>field2val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into three joint arrays of ints/ints/Reals, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="2707" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga2974b694dd67accbfbe698acd3c9d06c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertIntPtrReal</definition>
        <argsstring>(int *intarray, void **ptrarray, SCIP_Real *realarray, int keyval, void *field1val, SCIP_Real field2val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertIntPtrReal</name>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>field2val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into three joint arrays of ints/pointers/Reals, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="2720" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gab375f6f88b3cc95fc3aa1d6543641a5b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertIntIntIntPtr</definition>
        <argsstring>(int *intarray1, int *intarray2, int *intarray3, void **ptrarray, int keyval, int field1val, int field2val, void *field3val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertIntIntIntPtr</name>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>first int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>second int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray3</declname>
          <briefdescription><para>second int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>field2val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>field3val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into four joint arrays of ints/ints/ints/pointers, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="2733" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gabf59db0222c9f6417812e55250ad5668" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertIntPtrIntReal</definition>
        <argsstring>(int *intarray1, void **ptrarray, int *intarray2, SCIP_Real *realarray, int keyval, void *field1val, int field2val, SCIP_Real field3val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertIntPtrIntReal</name>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>first int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>second int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>field2val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>field3val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into four joint arrays of ints/pointers/ints/Reals, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="2748" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gaf19299232a058bd53f2a21d41c415e60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertLong</definition>
        <argsstring>(SCIP_Longint *longarray, SCIP_Longint keyval, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertLong</name>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref></type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into an array of Longints, sorted in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="2763" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga906ab8c78435d189f9e5bca3b97f694b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertLongPtr</definition>
        <argsstring>(SCIP_Longint *longarray, void **ptrarray, SCIP_Longint keyval, void *field1val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertLongPtr</name>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref></type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into two joint arrays of Long/pointer, sorted by the first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="2772" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga7c6e98ed28a19ddd0d6410b3e58ce580" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertLongPtrInt</definition>
        <argsstring>(SCIP_Longint *longarray, void **ptrarray, int *intarray, SCIP_Longint keyval, void *field1val, int field2val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertLongPtrInt</name>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref></type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>field2val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into three joint arrays of Long/pointer/ints, sorted by the first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="2783" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga8b9b2aac4a28c87a0e2d22a5f65578cd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertLongPtrRealBool</definition>
        <argsstring>(SCIP_Longint *longarray, void **ptrarray, SCIP_Real *realarray, SCIP_Bool *boolarray, SCIP_Longint keyval, void *field1val, SCIP_Real field2val, SCIP_Bool field3val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertLongPtrRealBool</name>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>boolarray</declname>
          <briefdescription><para>SCIP_Bool array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref></type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>field2val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
          <declname>field3val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into four joint arrays of Long/pointer/Real/Bool, sorted by the first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="2796" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga8d578aca8107caf59dcdebf202ebd1b9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertLongPtrRealRealBool</definition>
        <argsstring>(SCIP_Longint *longarray, void **ptrarray, SCIP_Real *realarray, SCIP_Real *realarray2, SCIP_Bool *boolarray, SCIP_Longint keyval, void *field1val, SCIP_Real field2val, SCIP_Real field3val, SCIP_Bool field4val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertLongPtrRealRealBool</name>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>first SCIP_Real array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray2</declname>
          <briefdescription><para>second SCIP_Real array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>boolarray</declname>
          <briefdescription><para>SCIP_Bool array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref></type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>field2val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>field3val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
          <declname>field4val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into five joint arrays of Long/pointer/Real/Real/Bool, sorted by the first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="2811" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga533ef5c1fba06474716d706f27158145" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertLongPtrRealRealIntBool</definition>
        <argsstring>(SCIP_Longint *longarray, void **ptrarray, SCIP_Real *realarray, SCIP_Real *realarray2, int *intarray, SCIP_Bool *boolarray, SCIP_Longint keyval, void *field1val, SCIP_Real field2val, SCIP_Real field3val, int field4val, SCIP_Bool field5val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertLongPtrRealRealIntBool</name>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>first SCIP_Real array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray2</declname>
          <briefdescription><para>second SCIP_Real array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>boolarray</declname>
          <briefdescription><para>SCIP_Bool array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref></type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>field2val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>field3val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>field4val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
          <declname>field5val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into six joint arrays of Long/pointer/Real/Real/int/Bool, sorted by the first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="2828" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gad4fad2efa21d170b320dec6726219942" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertLongPtrPtrInt</definition>
        <argsstring>(SCIP_Longint *longarray, void **ptrarray1, void **ptrarray2, int *intarray, SCIP_Longint keyval, void *field1val, void *field2val, int field3val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertLongPtrPtrInt</name>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray1</declname>
          <briefdescription><para>first pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray2</declname>
          <briefdescription><para>second pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref></type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>field2val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>field3val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into four joint arrays of Long/pointer/pointer/ints, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="2847" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga864aaaff34e17870f10b2fe8cf96ec4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertLongPtrPtrIntInt</definition>
        <argsstring>(SCIP_Longint *longarray, void **ptrarray1, void **ptrarray2, int *intarray1, int *intarray2, SCIP_Longint keyval, void *field1val, void *field2val, int field3val, int field4val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertLongPtrPtrIntInt</name>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray1</declname>
          <briefdescription><para>first pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray2</declname>
          <briefdescription><para>second pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>first int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>second int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref></type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>field2val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>field3val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>field4val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into five joint arrays of Long/pointer/pointer/ints/ints, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="2862" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga7ed6f2c5ff651a751d1e6f2aedf313f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertLongPtrPtrBoolInt</definition>
        <argsstring>(SCIP_Longint *longarray, void **ptrarray1, void **ptrarray2, SCIP_Bool *boolarray, int *intarray, SCIP_Longint keyval, void *field1val, void *field2val, SCIP_Bool field3val, int field4val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertLongPtrPtrBoolInt</name>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray1</declname>
          <briefdescription><para>first pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray2</declname>
          <briefdescription><para>second pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>boolarray</declname>
          <briefdescription><para>SCIP_Bool array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array to be sorted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref></type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>field2val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
          <declname>field3val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>field4val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into five joint arrays of Long/pointer/pointer/Bool/ints, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="2879" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga0ef7201c7a2227f9090045b124728712" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertPtrIntIntBoolBool</definition>
        <argsstring>(void **ptrarray, int *intarray1, int *intarray2, SCIP_Bool *boolarray1, SCIP_Bool *boolarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, int field1val, int field2val, SCIP_Bool field3val, SCIP_Bool field4val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertPtrIntIntBoolBool</name>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>first int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>second int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>boolarray1</declname>
          <briefdescription><para>first SCIP_Bool array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>boolarray2</declname>
          <briefdescription><para>second SCIP_Bool array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>void *</type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>field2val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
          <declname>field3val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
          <declname>field4val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into five joint arrays of pointer/ints/ints/Bool/Bool, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="2896" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga8e191e75eee6196024aaaabe93b3313d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertIntPtrIntIntBoolBool</definition>
        <argsstring>(int *intarray1, void **ptrarray, int *intarray2, int *intarray3, SCIP_Bool *boolarray1, SCIP_Bool *boolarray2, int keyval, void *field1val, int field2val, int field3val, SCIP_Bool field4val, SCIP_Bool field5val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertIntPtrIntIntBoolBool</name>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>int array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>second int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray3</declname>
          <briefdescription><para>thrid int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>boolarray1</declname>
          <briefdescription><para>first SCIP_Bool array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>boolarray2</declname>
          <briefdescription><para>second SCIP_Bool array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>field2val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>field3val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
          <declname>field4val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
          <declname>field5val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into six joint arrays of ints/pointer/ints/ints/Bool/Bool, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="2914" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga59c1acec2d250b84864f2e81956b7359" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertDownInd</definition>
        <argsstring>(int *indarray, SCIP_DECL_SORTINDCOMP((*indcomp)), void *dataptr, int keyval, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertDownInd</name>
        <param>
          <type>int *</type>
          <declname>indarray</declname>
          <briefdescription><para>pointer to the index array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="type__misc_8h_1a806c02f466e036f6e137df9eee2f7e9d" kindref="member">SCIP_DECL_SORTINDCOMP</ref>((*indcomp))</type>
        </param>
        <param>
          <type>void *</type>
          <declname>dataptr</declname>
          <briefdescription><para>pointer to data field that is given to the external compare method </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into an index array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="2936" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gaca2423e91bda64b8c7d25a54215ca3d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertDownPtr</definition>
        <argsstring>(void **ptrarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertDownPtr</name>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>void *</type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into an array of pointers in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="2947" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga835ec50c9f25c7ec2a416608cbc4fcb2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertDownPtrPtr</definition>
        <argsstring>(void **ptrarray1, void **ptrarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, void *field1val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertDownPtrPtr</name>
        <param>
          <type>void **</type>
          <declname>ptrarray1</declname>
          <briefdescription><para>first pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray2</declname>
          <briefdescription><para>second pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>void *</type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into two joint arrays of pointers/pointers, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="2957" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gaa40de1dda2d8f402c0dd9a53e7cc2e38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertDownPtrReal</definition>
        <argsstring>(void **ptrarray, SCIP_Real *realarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, SCIP_Real field1val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertDownPtrReal</name>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>void *</type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into two joint arrays of pointers/Reals, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="2969" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga9d22da9fb1bfc1dc07a231b97d9d4b6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertDownPtrInt</definition>
        <argsstring>(void **ptrarray, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, int field1val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertDownPtrInt</name>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>void *</type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into two joint arrays of pointers/ints, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="2981" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga8f9a20c55090d404759aa36b006cffbb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertDownPtrBool</definition>
        <argsstring>(void **ptrarray, SCIP_Bool *boolarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, SCIP_Bool field1val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertDownPtrBool</name>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>boolarray</declname>
          <briefdescription><para>SCIP_Bool array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>void *</type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into two joint arrays of pointers/Bools, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="2993" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gadf9daca125ab208b56bc77567aefcaf2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertDownPtrIntInt</definition>
        <argsstring>(void **ptrarray, int *intarray1, int *intarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, int field1val, int field2val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertDownPtrIntInt</name>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>first int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>second int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>void *</type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>field2val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into three joint arrays of pointers/ints/ints, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="3005" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gad1b76a2f7426a3e41c2c14ef9dc9ef03" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertDownPtrRealInt</definition>
        <argsstring>(void **ptrarray, SCIP_Real *realarray, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, SCIP_Real field1val, int field2val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertDownPtrRealInt</name>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>void *</type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>field2val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into three joint arrays of pointers/Reals/ints, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="3019" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga82d01cef246898127613355ecdf89731" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertDownPtrPtrInt</definition>
        <argsstring>(void **ptrarray1, void **ptrarray2, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, void *field1val, int field2val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertDownPtrPtrInt</name>
        <param>
          <type>void **</type>
          <declname>ptrarray1</declname>
          <briefdescription><para>first pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray2</declname>
          <briefdescription><para>second pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>void *</type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>field2val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into three joint arrays of pointers/pointers/Ints, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="3033" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga67411e7f96d4a88b59a496f9cafd4ea6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertDownPtrPtrReal</definition>
        <argsstring>(void **ptrarray1, void **ptrarray2, SCIP_Real *realarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, void *field1val, SCIP_Real field2val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertDownPtrPtrReal</name>
        <param>
          <type>void **</type>
          <declname>ptrarray1</declname>
          <briefdescription><para>first pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray2</declname>
          <briefdescription><para>second pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>void *</type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>field2val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into three joint arrays of pointers/pointers/Reals, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="3047" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga77ccca73a88b559d5f312a3deff81f55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertDownPtrPtrIntInt</definition>
        <argsstring>(void **ptrarray1, void **ptrarray2, int *intarray1, int *intarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, void *field1val, int field2val, int field3val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertDownPtrPtrIntInt</name>
        <param>
          <type>void **</type>
          <declname>ptrarray1</declname>
          <briefdescription><para>first pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray2</declname>
          <briefdescription><para>second pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>first int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>second int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>void *</type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>field2val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>field3val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into four joint arrays of pointers/pointers/ints/ints, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="3061" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gaa58a2ef0e974d10bf0925ff1336de2f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertDownPtrRealIntInt</definition>
        <argsstring>(void **ptrarray, SCIP_Real *realarray, int *intarray1, int *intarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, SCIP_Real field1val, int field2val, int field3val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertDownPtrRealIntInt</name>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>first int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>second int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>void *</type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>field2val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>field3val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into four joint arrays of pointers/Reals/ints/ints, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="3077" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gac3bbff9dd9ab9bbbd8455c318f4f4ee9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertDownPtrPtrRealInt</definition>
        <argsstring>(void **ptrarray1, void **ptrarray2, SCIP_Real *realarray, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, void *field1val, SCIP_Real field2val, int field3val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertDownPtrPtrRealInt</name>
        <param>
          <type>void **</type>
          <declname>ptrarray1</declname>
          <briefdescription><para>first pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray2</declname>
          <briefdescription><para>second pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>void *</type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>field2val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>field3val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into four joint arrays of pointer/pointer/Reals/ints, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="3093" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gae0039d522a36fb292a1cec8084e45bc5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertDownPtrPtrLongInt</definition>
        <argsstring>(void **ptrarray1, void **ptrarray2, SCIP_Longint *longarray, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, void *field1val, SCIP_Longint field2val, int field3val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertDownPtrPtrLongInt</name>
        <param>
          <type>void **</type>
          <declname>ptrarray1</declname>
          <briefdescription><para>first pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray2</declname>
          <briefdescription><para>second pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>void *</type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref></type>
          <declname>field2val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>field3val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into four joint arrays of pointer/pointer/Longs/ints, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="3109" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gae9ce0f43e93974b7d3a2e0a7a7ba432f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertDownPtrPtrLongIntInt</definition>
        <argsstring>(void **ptrarray1, void **ptrarray2, SCIP_Longint *longarray, int *intarray1, int *intarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, void *field1val, SCIP_Longint field2val, int field3val, int field4val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertDownPtrPtrLongIntInt</name>
        <param>
          <type>void **</type>
          <declname>ptrarray1</declname>
          <briefdescription><para>first pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray2</declname>
          <briefdescription><para>second pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>first int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>second int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>void *</type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref></type>
          <declname>field2val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>field3val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>field4val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into five joint arrays of pointer/pointer/Longs/ints/ints, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="3125" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga08af98bef2d270020bb6964df08ff23b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertDownReal</definition>
        <argsstring>(SCIP_Real *realarray, SCIP_Real keyval, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertDownReal</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into an array of Reals, sorted in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="3143" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga41609bb513ec30972367fc640933211b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertDownRealBoolPtr</definition>
        <argsstring>(SCIP_Real *realarray, SCIP_Bool *boolarray, void **ptrarray, SCIP_Real keyval, SCIP_Bool field1val, void *field2val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertDownRealBoolPtr</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array to be sorted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>boolarray</declname>
          <briefdescription><para>SCIP_Bool array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>field2val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into three joint arrays of Reals/Bools/pointers, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="3152" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga98b6f1db459fe1f12b53be84532759e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertDownRealPtr</definition>
        <argsstring>(SCIP_Real *realarray, void **ptrarray, SCIP_Real keyval, void *field1val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertDownRealPtr</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into two joint arrays of Reals/pointers, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="3165" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga6b3e2a2ecba8507c87c9f1bd2188bbff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertDownRealPtrPtr</definition>
        <argsstring>(SCIP_Real *realarray, void **ptrarray1, void **ptrarray2, SCIP_Real keyval, void *field1val, void *field2val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertDownRealPtrPtr</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray1</declname>
          <briefdescription><para>first pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray2</declname>
          <briefdescription><para>second pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>field2val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into three joint arrays of Reals/pointers, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="3176" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gadf3bad34197d77b4853c02c9d4f18741" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertDownRealInt</definition>
        <argsstring>(SCIP_Real *realarray, int *intarray, SCIP_Real keyval, int field1val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertDownRealInt</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into two joint arrays of Reals/ints, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="3189" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gafd667e4e16cded8c1d9d67c1b1c0b9c0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertDownRealIntLong</definition>
        <argsstring>(SCIP_Real *realarray, int *intarray, SCIP_Longint *longarray, SCIP_Real keyval, int field1val, SCIP_Longint field2val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertDownRealIntLong</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref></type>
          <declname>field2val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into three joint arrays of Reals/ints/Longs, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="3200" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga8a6797db23e8da203fe1f9f9d02158f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertDownRealIntPtr</definition>
        <argsstring>(SCIP_Real *realarray, int *intarray, void **ptrarray, SCIP_Real keyval, int field1val, void *field2val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertDownRealIntPtr</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>field2val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into three joint arrays of Reals/ints/Pointer, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="3213" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga887380ecc2746bbba42600646353c91b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertDownRealRealPtr</definition>
        <argsstring>(SCIP_Real *realarray1, SCIP_Real *realarray2, void **ptrarray, SCIP_Real keyval, SCIP_Real field1val, void *field2val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertDownRealRealPtr</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray1</declname>
          <briefdescription><para>first SCIP_Real array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray2</declname>
          <briefdescription><para>second SCIP_Real array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>field2val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into three joint arrays of Reals/Reals/Pointer, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="3226" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga9387717c5e3e2d2397ecc0c69ec36a72" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertDownRealPtrPtrInt</definition>
        <argsstring>(SCIP_Real *realarray, void **ptrarray1, void **ptrarray2, int *intarray, SCIP_Real keyval, void *field1val, void *field2val, int intval, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertDownRealPtrPtrInt</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray1</declname>
          <briefdescription><para>pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray2</declname>
          <briefdescription><para>pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>field2val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>intval</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into four joint arrays of Reals/pointers/pointers/ints, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="3239" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gac863ab031ebba08275ba5d6ffd262b4f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertDownRealPtrPtrIntInt</definition>
        <argsstring>(SCIP_Real *realarray, void **ptrarray1, void **ptrarray2, int *intarray1, int *intarray2, SCIP_Real keyval, void *field1val, void *field2val, int intval1, int intval2, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertDownRealPtrPtrIntInt</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray1</declname>
          <briefdescription><para>pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray2</declname>
          <briefdescription><para>pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>field2val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>intval1</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>intval2</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into five joint arrays of Reals/pointers/pointers/ints/ints, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="3254" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gaabc89e8de0a2063d10d543edb0c0c00e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertDownRealLongRealInt</definition>
        <argsstring>(SCIP_Real *realarray1, SCIP_Longint *longarray, SCIP_Real *realarray3, int *intarray, SCIP_Real keyval, SCIP_Longint field1val, SCIP_Real field2val, int field3val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertDownRealLongRealInt</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray1</declname>
          <briefdescription><para>SCIP_Real array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray3</declname>
          <briefdescription><para>SCIP_Real array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref></type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>field2val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>field3val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into four joint arrays of Reals/Longs/Reals/ints, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="3271" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga8ba1f592f43ebb5d99a990e0e7c03bc2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertDownRealRealIntInt</definition>
        <argsstring>(SCIP_Real *realarray1, SCIP_Real *realarray2, int *intarray1, int *intarray2, SCIP_Real keyval, SCIP_Real field1val, int field2val, int field3val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertDownRealRealIntInt</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray1</declname>
          <briefdescription><para>first SCIP_Real array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray2</declname>
          <briefdescription><para>second SCIP_Real array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>first int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>second int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>field2val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>field3val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into four joint arrays of Reals/Reals/ints/ints, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="3286" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gaac4e81ec52dd6dce9abae8b862f4787f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertDownRealRealRealInt</definition>
        <argsstring>(SCIP_Real *realarray1, SCIP_Real *realarray2, SCIP_Real *realarray3, int *intarray, SCIP_Real keyval, SCIP_Real field1val, SCIP_Real field2val, int field3val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertDownRealRealRealInt</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray1</declname>
          <briefdescription><para>SCIP_Real array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray2</declname>
          <briefdescription><para>SCIP_Real array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray3</declname>
          <briefdescription><para>SCIP_Real array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>field2val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>field3val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into four joint arrays of Reals/Reals/Reals/ints, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="3301" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga84b7efbe85e6d7b702c4d95271b660c2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertDownRealRealRealPtr</definition>
        <argsstring>(SCIP_Real *realarray1, SCIP_Real *realarray2, SCIP_Real *realarray3, void **ptrarray, SCIP_Real keyval, SCIP_Real field1val, SCIP_Real field2val, void *field3val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertDownRealRealRealPtr</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray1</declname>
          <briefdescription><para>SCIP_Real array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray2</declname>
          <briefdescription><para>SCIP_Real array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray3</declname>
          <briefdescription><para>SCIP_Real array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>field2val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>field3val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into four joint arrays of Reals/Reals/Reals/pointers, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="3316" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga716f0b942bf42cc6256aa15b39bb1a3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertDownRealRealRealBoolPtr</definition>
        <argsstring>(SCIP_Real *realarray1, SCIP_Real *realarray2, SCIP_Real *realarray3, SCIP_Bool *boolarray, void **ptrarray, SCIP_Real keyval, SCIP_Real field1val, SCIP_Real field2val, SCIP_Bool field3val, void *field4val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertDownRealRealRealBoolPtr</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray1</declname>
          <briefdescription><para>SCIP_Real array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray2</declname>
          <briefdescription><para>SCIP_Real array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray3</declname>
          <briefdescription><para>SCIP_Real array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>boolarray</declname>
          <briefdescription><para>SCIP_Bool array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>field2val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
          <declname>field3val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>field4val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into five joint arrays of Reals/Reals/Reals/Bools/pointers, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="3331" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga2eca02f3a209a20d499a54ea95940dd6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertDownInt</definition>
        <argsstring>(int *intarray, int keyval, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertDownInt</name>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into an array of ints in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="3348" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gad08f8787f4e8d9a62367554b6e6be8ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertDownIntInt</definition>
        <argsstring>(int *intarray1, int *intarray2, int keyval, int field1val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertDownIntInt</name>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>second int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into two joint arrays of ints/ints, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="3357" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gaad293029f7176106c15d49266c1eadbf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertDownIntReal</definition>
        <argsstring>(int *intarray, SCIP_Real *realarray, int keyval, SCIP_Real field1val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertDownIntReal</name>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>real array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into two joint arrays of ints/reals, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="3368" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga02f50ee8d91d6725adbdef669a116c06" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertDownIntIntInt</definition>
        <argsstring>(int *intarray1, int *intarray2, int *intarray3, int keyval, int field1val, int field2val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertDownIntIntInt</name>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>second int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray3</declname>
          <briefdescription><para>third int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>field2val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into three joint arrays of ints/ints/ints, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="3379" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga722e49d273149c8152fadfc94d2bed57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertDownIntIntLong</definition>
        <argsstring>(int *intarray1, int *intarray2, SCIP_Longint *longarray, int keyval, int field1val, SCIP_Longint field2val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertDownIntIntLong</name>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>second int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref></type>
          <declname>field2val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into three joint arrays of ints/ints/SCIP_Longint, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="3392" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gadd1de4af1e54953ae8711c39437ee840" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertDownIntIntPtr</definition>
        <argsstring>(int *intarray1, int *intarray2, void **ptrarray, int keyval, int field1val, void *field2val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertDownIntIntPtr</name>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>second int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>field2val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into three joint arrays of ints/ints/pointers, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="3405" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga186d21e8b10b0bc88971a515491277fc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertDownIntIntReal</definition>
        <argsstring>(int *intarray1, int *intarray2, SCIP_Real *realarray, int keyval, int field1val, SCIP_Real field2val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertDownIntIntReal</name>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>second int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>real array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>field2val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into three joint arrays of ints/ints/Reals, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="3418" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga4e355ecc8d97dbe5563f393a9dbd70a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertDownIntPtr</definition>
        <argsstring>(int *intarray, void **ptrarray, int keyval, void *field1val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertDownIntPtr</name>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into two joint arrays of ints/pointers, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="3431" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga01064f36ac0aaae67a60841fc8181ef5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertDownIntIntIntPtr</definition>
        <argsstring>(int *intarray1, int *intarray2, int *intarray3, void **ptrarray, int keyval, int field1val, int field2val, void *field3val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertDownIntIntIntPtr</name>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray3</declname>
          <briefdescription><para>int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>field2val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>field3val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into four joint arrays of ints/pointers/ints/Reals, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="3442" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gaa833d6a0de51cb62c438c97781a64c0c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertDownIntPtrIntReal</definition>
        <argsstring>(int *intarray1, void **ptrarray, int *intarray2, SCIP_Real *realarray, int keyval, void *field1val, int field2val, SCIP_Real field3val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertDownIntPtrIntReal</name>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>field2val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>field3val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into four joint arrays of ints/pointers/ints/Reals, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="3458" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga1ef18ae0406b43543d11b536cf174615" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertDownLong</definition>
        <argsstring>(SCIP_Longint *longarray, SCIP_Longint keyval, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertDownLong</name>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref></type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into an array of Longints, sorted in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="3473" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga6444f96368f219efc569757c1132d597" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertDownLongPtr</definition>
        <argsstring>(SCIP_Longint *longarray, void **ptrarray, SCIP_Longint keyval, void *field1val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertDownLongPtr</name>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref></type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into two joint arrays of Long/pointer, sorted by the first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="3482" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga922eef52b308bcba9254755bb436f18a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertDownLongPtrInt</definition>
        <argsstring>(SCIP_Longint *longarray, void **ptrarray, int *intarray, SCIP_Longint keyval, void *field1val, int field2val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertDownLongPtrInt</name>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref></type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>field2val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into three joint arrays of Long/pointer/ints, sorted by the first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="3493" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga7578a3f3d29473f85e6eab3b6d23ca84" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertDownLongPtrRealBool</definition>
        <argsstring>(SCIP_Longint *longarray, void **ptrarray, SCIP_Real *realarray, SCIP_Bool *boolarray, SCIP_Longint keyval, void *field1val, SCIP_Real field2val, SCIP_Bool field3val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertDownLongPtrRealBool</name>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>boolarray</declname>
          <briefdescription><para>SCIP_Bool array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref></type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>field2val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
          <declname>field3val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into four joint arrays of Long/pointer/Real/Bool, sorted by the first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="3506" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga70878e39db5ca31aa39b74078eaed71a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertDownLongPtrRealRealBool</definition>
        <argsstring>(SCIP_Longint *longarray, void **ptrarray, SCIP_Real *realarray, SCIP_Real *realarray2, SCIP_Bool *boolarray, SCIP_Longint keyval, void *field1val, SCIP_Real field2val, SCIP_Real field3val, SCIP_Bool field4val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertDownLongPtrRealRealBool</name>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>first SCIP_Real array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray2</declname>
          <briefdescription><para>second SCIP_Real array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>boolarray</declname>
          <briefdescription><para>SCIP_Bool array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref></type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>field2val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>field3val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
          <declname>field4val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into five joint arrays of Long/pointer/Real/Real/Bool, sorted by the first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="3521" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga670bdb3eb7a949eafb359da3a8d322c8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertDownLongPtrRealRealIntBool</definition>
        <argsstring>(SCIP_Longint *longarray, void **ptrarray, SCIP_Real *realarray, SCIP_Real *realarray2, int *intarray, SCIP_Bool *boolarray, SCIP_Longint keyval, void *field1val, SCIP_Real field2val, SCIP_Real field3val, int field4val, SCIP_Bool field5val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertDownLongPtrRealRealIntBool</name>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>first SCIP_Real array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray2</declname>
          <briefdescription><para>second SCIP_Real array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>boolarray</declname>
          <briefdescription><para>SCIP_Bool array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref></type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>field2val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>field3val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>field4val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
          <declname>field5val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into six joint arrays of Long/pointer/Real/Real/int/Bool, sorted by the first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="3538" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gab8b6a9160e87c4a0f0e376c57f4ebadd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertDownLongPtrPtrInt</definition>
        <argsstring>(SCIP_Longint *longarray, void **ptrarray1, void **ptrarray2, int *intarray, SCIP_Longint keyval, void *field1val, void *field2val, int field3val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertDownLongPtrPtrInt</name>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray1</declname>
          <briefdescription><para>first pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray2</declname>
          <briefdescription><para>second pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref></type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>field2val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>field3val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into four joint arrays of Long/pointer/pointer/ints, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="3557" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga0350b5e2e3649986aae703e2f3219920" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertDownLongPtrPtrIntInt</definition>
        <argsstring>(SCIP_Longint *longarray, void **ptrarray1, void **ptrarray2, int *intarray1, int *intarray2, SCIP_Longint keyval, void *field1val, void *field2val, int field3val, int field4val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertDownLongPtrPtrIntInt</name>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray1</declname>
          <briefdescription><para>first pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray2</declname>
          <briefdescription><para>second pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>first int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>second int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref></type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>field2val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>field3val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>field4val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into five joint arrays of Long/pointer/pointer/ints/ints, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="3572" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga2225627a6cda4f7e0c156f163f1e6ef8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertDownLongPtrPtrBoolInt</definition>
        <argsstring>(SCIP_Longint *longarray, void **ptrarray1, void **ptrarray2, SCIP_Bool *boolarray, int *intarray, SCIP_Longint keyval, void *field1val, void *field2val, SCIP_Bool field3val, int field4val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertDownLongPtrPtrBoolInt</name>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray1</declname>
          <briefdescription><para>first pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray2</declname>
          <briefdescription><para>second pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>boolarray</declname>
          <briefdescription><para>SCIP_Bool array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref></type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>field2val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
          <declname>field3val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>field4val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into five joint arrays of Long/pointer/pointer/Bool/ints, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="3589" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga03809a9e8378a46a3932dec87ad6d7f4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertDownPtrIntIntBoolBool</definition>
        <argsstring>(void **ptrarray, int *intarray1, int *intarray2, SCIP_Bool *boolarray1, SCIP_Bool *boolarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *keyval, int field1val, int field2val, SCIP_Bool field3val, SCIP_Bool field4val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertDownPtrIntIntBoolBool</name>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>first int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>second int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>boolarray1</declname>
          <briefdescription><para>first SCIP_Bool array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>boolarray2</declname>
          <briefdescription><para>second SCIP_Bool array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>void *</type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>field2val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
          <declname>field3val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
          <declname>field4val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into five joint arrays of pointer/ints/ints/Bool/Bool, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="3606" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga6bd6236a63fce88b0a719841257076aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecInsertDownIntPtrIntIntBoolBool</definition>
        <argsstring>(int *intarray1, void **ptrarray, int *intarray2, int *intarray3, SCIP_Bool *boolarray1, SCIP_Bool *boolarray2, int keyval, void *field1val, int field2val, int field3val, SCIP_Bool field4val, SCIP_Bool field5val, int *len, int *pos)</argsstring>
        <name>SCIPsortedvecInsertDownIntPtrIntIntBoolBool</name>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>int array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>second int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray3</declname>
          <briefdescription><para>thrid int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>boolarray1</declname>
          <briefdescription><para>first SCIP_Bool array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>boolarray2</declname>
          <briefdescription><para>second SCIP_Bool array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>keyval</declname>
          <briefdescription><para>key value of new element </para></briefdescription>
        </param>
        <param>
          <type>void *</type>
          <declname>field1val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>field2val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>field3val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
          <declname>field4val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
          <declname>field5val</declname>
          <briefdescription><para>additional value of new element </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store the insertion position, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>insert a new element into six joint arrays of ints/pointer/ints/ints/Bool/Bool, sorted by first array in non-increased order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="3624" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga1ba6bf2635678490757beddc4f0bddc2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosInd</definition>
        <argsstring>(int *indarray, SCIP_DECL_SORTINDCOMP((*indcomp)), void *dataptr, int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosInd</name>
        <param>
          <type>int *</type>
          <declname>indarray</declname>
          <briefdescription><para>pointer to the index array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="type__misc_8h_1a806c02f466e036f6e137df9eee2f7e9d" kindref="member">SCIP_DECL_SORTINDCOMP</ref>((*indcomp))</type>
        </param>
        <param>
          <type>void *</type>
          <declname>dataptr</declname>
          <briefdescription><para>pointer to data field that is given to the external compare method </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from an index array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="3645" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gaf6dc99f91f5c829fa749a7a997312b22" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosPtr</definition>
        <argsstring>(void **ptrarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosPtr</name>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from an array of pointers in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="3655" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga0e84353cc889e5f4ecf7e462e7df81ca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosPtrPtr</definition>
        <argsstring>(void **ptrarray1, void **ptrarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosPtrPtr</name>
        <param>
          <type>void **</type>
          <declname>ptrarray1</declname>
          <briefdescription><para>first pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray2</declname>
          <briefdescription><para>second pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from two joint arrays of pointers/pointers, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="3664" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga3ac75cc1ed130558bf1bb5e00b84b512" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosPtrReal</definition>
        <argsstring>(void **ptrarray, SCIP_Real *realarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosPtrReal</name>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from two joint arrays of pointers/Reals, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="3674" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gad40dee1c116e8b6a50dcfa934c474702" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosPtrInt</definition>
        <argsstring>(void **ptrarray, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosPtrInt</name>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from two joint arrays of pointers/ints, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="3684" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gad92cce5a5af6dfde39eccb9c7bff7358" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosPtrBool</definition>
        <argsstring>(void **ptrarray, SCIP_Bool *boolarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosPtrBool</name>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>boolarray</declname>
          <briefdescription><para>SCIP_Bool array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from two joint arrays of pointers/Bools, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="3694" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gaedc1ba8d1e287bfee8f327b46e1bf78b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosPtrIntInt</definition>
        <argsstring>(void **ptrarray, int *intarray1, int *intarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosPtrIntInt</name>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>first int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>second int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from three joint arrays of pointers/ints/ints, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="3704" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gafea706371cf2046c34058e9f1c81b4d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosPtrRealInt</definition>
        <argsstring>(void **ptrarray, SCIP_Real *realarray, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosPtrRealInt</name>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from three joint arrays of pointers/Reals/ints, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="3715" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga6a605a457ed0de0f66ca95ca5c270a0d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosPtrPtrInt</definition>
        <argsstring>(void **ptrarray1, void **ptrarray2, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosPtrPtrInt</name>
        <param>
          <type>void **</type>
          <declname>ptrarray1</declname>
          <briefdescription><para>first pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray2</declname>
          <briefdescription><para>second pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from three joint arrays of pointers/pointers/Ints, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="3726" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga2bbd853fd6e2651a7f61b00833b5873b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosPtrPtrReal</definition>
        <argsstring>(void **ptrarray1, void **ptrarray2, SCIP_Real *realarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosPtrPtrReal</name>
        <param>
          <type>void **</type>
          <declname>ptrarray1</declname>
          <briefdescription><para>first pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray2</declname>
          <briefdescription><para>second pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from three joint arrays of pointers/pointers/Reals, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="3737" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga78eb0357ed2ea2ac2e32962ec6f3549f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosPtrPtrIntInt</definition>
        <argsstring>(void **ptrarray1, void **ptrarray2, int *intarray1, int *intarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosPtrPtrIntInt</name>
        <param>
          <type>void **</type>
          <declname>ptrarray1</declname>
          <briefdescription><para>first pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray2</declname>
          <briefdescription><para>second pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>first int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>second array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from four joint arrays of pointers/pointers/ints/ints, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="3748" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga019adafef0cb45339a5f171d0a0fc547" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosPtrRealIntInt</definition>
        <argsstring>(void **ptrarray, SCIP_Real *realarray, int *intarray1, int *intarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosPtrRealIntInt</name>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>first int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>second int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from four joint arrays of pointers/Reals/ints/ints, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="3760" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga969950b40f484a95464e77834e01196c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosPtrPtrRealInt</definition>
        <argsstring>(void **ptrarray1, void **ptrarray2, SCIP_Real *realarray, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosPtrPtrRealInt</name>
        <param>
          <type>void **</type>
          <declname>ptrarray1</declname>
          <briefdescription><para>first pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray2</declname>
          <briefdescription><para>second pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>deletes the element at the given position from four joint arrays of pointer/pointer/Reals/ints, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="3772" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga8a8d0602f705d27204adcf898d5e77cc" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosPtrPtrLongInt</definition>
        <argsstring>(void **ptrarray1, void **ptrarray2, SCIP_Longint *longarray, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosPtrPtrLongInt</name>
        <param>
          <type>void **</type>
          <declname>ptrarray1</declname>
          <briefdescription><para>first pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray2</declname>
          <briefdescription><para>second pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>deletes the element at the given position from four joint arrays of pointer/pointer/Longs/ints, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="3784" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gade80bc2016ec8a9c584744cae523c856" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosPtrPtrLongIntInt</definition>
        <argsstring>(void **ptrarray1, void **ptrarray2, SCIP_Longint *longarray, int *intarray1, int *intarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosPtrPtrLongIntInt</name>
        <param>
          <type>void **</type>
          <declname>ptrarray1</declname>
          <briefdescription><para>first pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray2</declname>
          <briefdescription><para>second pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>first int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>second int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>deletes the element at the given position from five joint arrays of pointer/pointer/Longs/ints/ints, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="3796" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gad21c9cc987f9d1cd2fdb72857a2c55fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosRealBoolPtr</definition>
        <argsstring>(SCIP_Real *realarray, SCIP_Bool *boolarray, void **ptrarray, int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosRealBoolPtr</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array to be sorted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>boolarray</declname>
          <briefdescription><para>SCIP_Bool array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from three joint arrays of Reals/Bools/pointers, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="3809" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga898b63b8acd39bf2a668058fe5c9778e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosRealPtr</definition>
        <argsstring>(SCIP_Real *realarray, void **ptrarray, int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosRealPtr</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from two joint arrays of Reals/pointers, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="3819" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gad213474e1a49139686bba95381f7d97f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosReal</definition>
        <argsstring>(SCIP_Real *realarray, int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosReal</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from an arrays of Reals, sorted in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="3828" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gaa1847c5736a91aea66b0f1f0baf996fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosRealInt</definition>
        <argsstring>(SCIP_Real *realarray, int *intarray, int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosRealInt</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from two joint arrays of Reals/ints, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="3836" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga1969ee389ff9b79a83460099b15abc33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosRealIntLong</definition>
        <argsstring>(SCIP_Real *realarray, int *intarray, SCIP_Longint *longarray, int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosRealIntLong</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from three joint arrays of Reals/ints/Longs, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="3845" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga86f1334392ac82a6379392e6a6e5d0d0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosRealIntPtr</definition>
        <argsstring>(SCIP_Real *realarray, int *intarray, void **ptrarray, int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosRealIntPtr</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from three joint arrays of Reals/ints/Pointer, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="3855" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga09ca0b7aafd09cbb1f1e09fd1249615d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosRealRealPtr</definition>
        <argsstring>(SCIP_Real *realarray1, SCIP_Real *realarray2, void **ptrarray, int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosRealRealPtr</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray1</declname>
          <briefdescription><para>first SCIP_Real array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray2</declname>
          <briefdescription><para>second SCIP_Real array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from three joint arrays of Reals/Reals/Pointer, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="3865" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gafb455ab548c1af658dfb16cfb49ccf9b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosRealPtrPtrInt</definition>
        <argsstring>(SCIP_Real *realarray, void **ptrarray1, void **ptrarray2, int *intarray, int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosRealPtrPtrInt</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>first SCIP_Real array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray1</declname>
          <briefdescription><para>first pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray2</declname>
          <briefdescription><para>second pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from four joint arrays of Reals/pointers/pointers/ints, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="3875" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gaf06f320595327fdf006dc3f6df82e51b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosRealPtrPtrIntInt</definition>
        <argsstring>(SCIP_Real *realarray, void **ptrarray1, void **ptrarray2, int *intarray1, int *intarray2, int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosRealPtrPtrIntInt</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>first SCIP_Real array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray1</declname>
          <briefdescription><para>first pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray2</declname>
          <briefdescription><para>second pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from five joint arrays of Reals/pointers/pointers/ints/ints, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="3886" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gad2c530ed9592706e68bf3f7be4783971" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosRealLongRealInt</definition>
        <argsstring>(SCIP_Real *realarray1, SCIP_Longint *longarray, SCIP_Real *realarray3, int *intarray, int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosRealLongRealInt</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray1</declname>
          <briefdescription><para>SCIP_Real array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray3</declname>
          <briefdescription><para>SCIP_Real array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from four joint arrays of Reals/Long/Reals/ints, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="3898" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gae00d52da1986de23e78badd586d54df8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosRealRealIntInt</definition>
        <argsstring>(SCIP_Real *realarray1, SCIP_Real *realarray2, int *intarray1, int *intarray2, int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosRealRealIntInt</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray1</declname>
          <briefdescription><para>SCIP_Real array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray2</declname>
          <briefdescription><para>SCIP_Real array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from four joint arrays of Reals/Reals/ints/ints, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="3909" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga9a4907c0ea7cf6def5583fc2bc974448" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosRealRealRealInt</definition>
        <argsstring>(SCIP_Real *realarray1, SCIP_Real *realarray2, SCIP_Real *realarray3, int *intarray, int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosRealRealRealInt</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray1</declname>
          <briefdescription><para>SCIP_Real array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray2</declname>
          <briefdescription><para>SCIP_Real array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray3</declname>
          <briefdescription><para>SCIP_Real array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from four joint arrays of Reals/Reals/Reals/ints, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="3920" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga933e721d0a2519df9080cb441e4bbc0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosRealRealRealPtr</definition>
        <argsstring>(SCIP_Real *realarray1, SCIP_Real *realarray2, SCIP_Real *realarray3, void **ptrarray, int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosRealRealRealPtr</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray1</declname>
          <briefdescription><para>SCIP_Real array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray2</declname>
          <briefdescription><para>SCIP_Real array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray3</declname>
          <briefdescription><para>SCIP_Real array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from four joint arrays of Reals/Reals/Reals/pointers, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="3931" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gaf27dab7c724c9497338bac04b1f076af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosRealRealRealBoolPtr</definition>
        <argsstring>(SCIP_Real *realarray1, SCIP_Real *realarray2, SCIP_Real *realarray3, SCIP_Bool *boolarray, void **ptrarray, int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosRealRealRealBoolPtr</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray1</declname>
          <briefdescription><para>SCIP_Real array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray2</declname>
          <briefdescription><para>SCIP_Real array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray3</declname>
          <briefdescription><para>SCIP_Real array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>boolarray</declname>
          <briefdescription><para>SCIP_Bool array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from five joint arrays of Reals/Reals/Reals/Bools/pointers, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="3942" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gafe873202aca60be08d4fb19542ef89c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosInt</definition>
        <argsstring>(int *intarray, int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosInt</name>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from an array of ints in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="3954" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga8a710d458fa14f7c263497abfc82c6ba" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosIntInt</definition>
        <argsstring>(int *intarray1, int *intarray2, int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosIntInt</name>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>second int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from two joint arrays of ints/ints, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="3962" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gae8864d8fae67aa06173a7b2ed7292806" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosIntReal</definition>
        <argsstring>(int *intarray, SCIP_Real *realarray, int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosIntReal</name>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>real array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from two joint arrays of ints/reals, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="3971" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga5cdf19876b8a3c6e183d2b958d9d8daf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosIntIntInt</definition>
        <argsstring>(int *intarray1, int *intarray2, int *intarray3, int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosIntIntInt</name>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>second int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray3</declname>
          <briefdescription><para>third int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from three joint arrays of ints/ints/ints, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="3980" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga077cfe1b5b9e2d490d67df8fe1eb280c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosIntIntLong</definition>
        <argsstring>(int *intarray1, int *intarray2, SCIP_Longint *longarray, int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosIntIntLong</name>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>second int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from three joint arrays of ints/ints/SCIP_Longint, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="3990" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gaef5e46a1e943300fc1a8c26a6aa2841f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosIntIntPtr</definition>
        <argsstring>(int *intarray1, int *intarray2, void **ptrarray, int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosIntIntPtr</name>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>second int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from three joint arrays of ints/ints/pointers, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4000" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gaafd698c3897a06e8782bb8f6ac6bb388" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosIntIntReal</definition>
        <argsstring>(int *intarray1, int *intarray2, SCIP_Real *realarray, int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosIntIntReal</name>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>second int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>real array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from three joint arrays of ints/ints/Reals, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4010" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga12bc163a41c4f16603e4462d0c6bfc31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosIntPtr</definition>
        <argsstring>(int *intarray, void **ptrarray, int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosIntPtr</name>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from two joint arrays of ints/pointers, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4020" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gaeb4c1cf463b06c90f3f637997755d6c4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosIntPtrReal</definition>
        <argsstring>(int *intarray, void **ptrarray, SCIP_Real *realarray, int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosIntPtrReal</name>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from three joint arrays of ints/pointers/Reals, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4029" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gae85b5fed9f87f736b3b93301e4198092" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosIntIntIntPtr</definition>
        <argsstring>(int *intarray1, int *intarray2, int *intarray3, void **ptrarray, int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosIntIntIntPtr</name>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray3</declname>
          <briefdescription><para>int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from four joint arrays of ints/ints/ints/pointers, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4039" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gafba6dd480f1e08b7bd8c386fd43e9fcb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosIntPtrIntReal</definition>
        <argsstring>(int *intarray1, void **ptrarray, int *intarray2, SCIP_Real *realarray, int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosIntPtrIntReal</name>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from four joint arrays of ints/pointers/ints/Reals, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4051" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga761d8b092913e063d05b543434013e89" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosLong</definition>
        <argsstring>(SCIP_Longint *longarray, int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosLong</name>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from an array of Longints, sorted by in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4062" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga97ffb8d73904d1427da32adb9b2be1c9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosLongPtr</definition>
        <argsstring>(SCIP_Longint *longarray, void **ptrarray, int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosLongPtr</name>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from two joint arrays of Long/pointer, sorted by the first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4070" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gae4bdf5ad1bc8297b852357cda0e9736c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosLongPtrInt</definition>
        <argsstring>(SCIP_Longint *longarray, void **ptrarray, int *intarray, int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosLongPtrInt</name>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from three joint arrays of Long/pointer/int, sorted by the first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4079" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga0be3e7579337c65f9b04ce915fb9e12d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosLongPtrRealBool</definition>
        <argsstring>(SCIP_Longint *longarray, void **ptrarray, SCIP_Real *realarray, SCIP_Bool *boolarray, int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosLongPtrRealBool</name>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>boolarray</declname>
          <briefdescription><para>SCIP_Bool array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from four joint arrays of Long/pointer/Real/Bool, sorted by the first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4089" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga0f0821b4140658c5de00134ddd4d2699" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosLongPtrRealRealBool</definition>
        <argsstring>(SCIP_Longint *longarray, void **ptrarray, SCIP_Real *realarray, SCIP_Real *realarray2, SCIP_Bool *boolarray, int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosLongPtrRealRealBool</name>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>first SCIP_Real array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray2</declname>
          <briefdescription><para>second SCIP_Real array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>boolarray</declname>
          <briefdescription><para>SCIP_Bool array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from five joint arrays of Long/pointer/Real/Real/Bool, sorted by the first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4100" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga44260295f28fcfefc9ce852150cf97da" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosLongPtrRealRealIntBool</definition>
        <argsstring>(SCIP_Longint *longarray, void **ptrarray, SCIP_Real *realarray, SCIP_Real *realarray2, int *intarray, SCIP_Bool *boolarray, int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosLongPtrRealRealIntBool</name>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>first SCIP_Real array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray2</declname>
          <briefdescription><para>second SCIP_Real array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>boolarray</declname>
          <briefdescription><para>SCIP_Bool array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from six joint arrays of Long/pointer/Real/Real/int/Bool, sorted by the first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4112" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gaae3667acc4ee15633552653bd26c8960" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosLongPtrPtrInt</definition>
        <argsstring>(SCIP_Longint *longarray, void **ptrarray1, void **ptrarray2, int *intarray, int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosLongPtrPtrInt</name>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray1</declname>
          <briefdescription><para>first pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray2</declname>
          <briefdescription><para>second pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from four joint arrays of Long/pointer/pointer/ints, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4125" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gaf6b4e245d8095e5721dfa66d5a28a76a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosLongPtrPtrIntInt</definition>
        <argsstring>(SCIP_Longint *longarray, void **ptrarray1, void **ptrarray2, int *intarray1, int *intarray2, int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosLongPtrPtrIntInt</name>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray1</declname>
          <briefdescription><para>first pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray2</declname>
          <briefdescription><para>second pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>first int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>second int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from five joint arrays of Long/pointer/pointer/ints/ints, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4136" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga3943216cbc8a77f7e25e4924498f1ba2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosLongPtrPtrBoolInt</definition>
        <argsstring>(SCIP_Longint *longarray, void **ptrarray1, void **ptrarray2, SCIP_Bool *boolarray, int *intarray, int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosLongPtrPtrBoolInt</name>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray1</declname>
          <briefdescription><para>first pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray2</declname>
          <briefdescription><para>second pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>boolarray</declname>
          <briefdescription><para>SCIP_Bool array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from five joint arrays of Long/pointer/pointer/Bool/ints, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4148" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga1386edd6064dde380fcca13aefd58a51" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosPtrIntIntBoolBool</definition>
        <argsstring>(void **ptrarray, int *intarray1, int *intarray2, SCIP_Bool *boolarray1, SCIP_Bool *boolarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosPtrIntIntBoolBool</name>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>first int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>second int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>boolarray1</declname>
          <briefdescription><para>first SCIP_Bool array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>boolarray2</declname>
          <briefdescription><para>second SCIP_Bool array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from five joint arrays of pointer/ints/ints/Bool/Bool, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4160" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga1088531fba7ccb9e41d106ae386b3636" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosIntPtrIntIntBoolBool</definition>
        <argsstring>(int *intarray1, void **ptrarray, int *intarray2, int *intarray3, SCIP_Bool *boolarray1, SCIP_Bool *boolarray2, int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosIntPtrIntIntBoolBool</name>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>int array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>second int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray3</declname>
          <briefdescription><para>thrid int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>boolarray1</declname>
          <briefdescription><para>first SCIP_Bool array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>boolarray2</declname>
          <briefdescription><para>second SCIP_Bool array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from six joint arrays of ints/pointer/ints/ints/Bool/Bool, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4173" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gab783363ddf2ba340e97bf6747f264dde" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosDownInd</definition>
        <argsstring>(int *indarray, SCIP_DECL_SORTINDCOMP((*indcomp)), void *dataptr, int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosDownInd</name>
        <param>
          <type>int *</type>
          <declname>indarray</declname>
          <briefdescription><para>pointer to the index array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="type__misc_8h_1a806c02f466e036f6e137df9eee2f7e9d" kindref="member">SCIP_DECL_SORTINDCOMP</ref>((*indcomp))</type>
        </param>
        <param>
          <type>void *</type>
          <declname>dataptr</declname>
          <briefdescription><para>pointer to data field that is given to the external compare method </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from an index array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4188" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gab0954e7426d6d10c3a5ae9401523fb55" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosDownPtr</definition>
        <argsstring>(void **ptrarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosDownPtr</name>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from an array of pointers in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4198" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga85ca287644b79a49fd3c8a51610df492" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosDownPtrPtr</definition>
        <argsstring>(void **ptrarray1, void **ptrarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosDownPtrPtr</name>
        <param>
          <type>void **</type>
          <declname>ptrarray1</declname>
          <briefdescription><para>first pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray2</declname>
          <briefdescription><para>second pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from two joint arrays of pointers/pointers, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4207" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gad91c1063417430d845afef76d5287057" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosDownPtrReal</definition>
        <argsstring>(void **ptrarray, SCIP_Real *realarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosDownPtrReal</name>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from two joint arrays of pointers/Reals, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4217" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga284ff994769f2202645978072574e8ce" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosDownPtrInt</definition>
        <argsstring>(void **ptrarray, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosDownPtrInt</name>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from two joint arrays of pointers/ints, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4227" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga5d4e68ac26b60202866d7ccf87fd144c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosDownPtrBool</definition>
        <argsstring>(void **ptrarray, SCIP_Bool *boolarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosDownPtrBool</name>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>boolarray</declname>
          <briefdescription><para>SCIP_Bool array where an element is to be inserted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be increased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from two joint arrays of pointers/Bools, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4237" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga59e24d77be67e1c6f8147686e5920360" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosDownPtrIntInt</definition>
        <argsstring>(void **ptrarray, int *intarray1, int *intarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosDownPtrIntInt</name>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>first int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>second int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from three joint arrays of pointers/ints/ints, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4247" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gaf9cef7d7ef0f503ef0a99b7a6af9afb6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosDownPtrRealInt</definition>
        <argsstring>(void **ptrarray, SCIP_Real *realarray, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosDownPtrRealInt</name>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from three joint arrays of pointers/Reals/ints, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4258" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga4f310645c6e36ec1a873e090ddeedd8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosDownPtrPtrInt</definition>
        <argsstring>(void **ptrarray1, void **ptrarray2, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosDownPtrPtrInt</name>
        <param>
          <type>void **</type>
          <declname>ptrarray1</declname>
          <briefdescription><para>first pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray2</declname>
          <briefdescription><para>second pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from three joint arrays of pointers/pointers/Ints, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4269" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga5136ee892cbf64cdaf587243acf04430" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosDownPtrPtrReal</definition>
        <argsstring>(void **ptrarray1, void **ptrarray2, SCIP_Real *realarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosDownPtrPtrReal</name>
        <param>
          <type>void **</type>
          <declname>ptrarray1</declname>
          <briefdescription><para>first pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray2</declname>
          <briefdescription><para>second pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from three joint arrays of pointers/pointers/Reals, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4280" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gaa747a6fd7d072338e1e59432168498fd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosDownPtrPtrIntInt</definition>
        <argsstring>(void **ptrarray1, void **ptrarray2, int *intarray1, int *intarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosDownPtrPtrIntInt</name>
        <param>
          <type>void **</type>
          <declname>ptrarray1</declname>
          <briefdescription><para>first pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray2</declname>
          <briefdescription><para>second pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>first int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>second int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from four joint arrays of pointers/pointers/ints/ints, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4291" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gac418640b93b72ae5f6249b6a7e821f1b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosDownPtrRealIntInt</definition>
        <argsstring>(void **ptrarray, SCIP_Real *realarray, int *intarray1, int *intarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosDownPtrRealIntInt</name>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>first int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>second int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from four joint arrays of pointers/Reals/ints/ints, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4303" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga8e0b61e8be8c0b136b036dccec6acceb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosDownPtrPtrRealInt</definition>
        <argsstring>(void **ptrarray1, void **ptrarray2, SCIP_Real *realarray, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosDownPtrPtrRealInt</name>
        <param>
          <type>void **</type>
          <declname>ptrarray1</declname>
          <briefdescription><para>first pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray2</declname>
          <briefdescription><para>second pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>deletes the element at the given position from four joint arrays of pointer/pointer/Reals/ints, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4315" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga0d4a5c63ce487d4237616a7f77e14730" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosDownPtrPtrLongInt</definition>
        <argsstring>(void **ptrarray1, void **ptrarray2, SCIP_Longint *longarray, int *intarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosDownPtrPtrLongInt</name>
        <param>
          <type>void **</type>
          <declname>ptrarray1</declname>
          <briefdescription><para>first pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray2</declname>
          <briefdescription><para>second pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>deletes the element at the given position from four joint arrays of pointer/pointer/Longs/ints, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4327" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga1293a56a9f59fb3d419ccc2f75ac8c47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosDownPtrPtrLongIntInt</definition>
        <argsstring>(void **ptrarray1, void **ptrarray2, SCIP_Longint *longarray, int *intarray1, int *intarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosDownPtrPtrLongIntInt</name>
        <param>
          <type>void **</type>
          <declname>ptrarray1</declname>
          <briefdescription><para>first pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray2</declname>
          <briefdescription><para>second pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>first int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>second int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>deletes the element at the given position from five joint arrays of pointer/pointer/Longs/ints/ints, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4339" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga3b259b7163bc48bca1b03bd99fb9c3a8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosDownReal</definition>
        <argsstring>(SCIP_Real *realarray, int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosDownReal</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from an array of Reals, sorted in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4352" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gaa25c1287e7f46816b54ecc4d72ee3adb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosDownRealBoolPtr</definition>
        <argsstring>(SCIP_Real *realarray, SCIP_Bool *boolarray, void **ptrarray, int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosDownRealBoolPtr</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array to be sorted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>boolarray</declname>
          <briefdescription><para>SCIP_Bool array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from three joint arrays of Reals/Bools/pointers, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4361" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga659358a62bec9f196791c85aa7eb026a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosDownRealPtr</definition>
        <argsstring>(SCIP_Real *realarray, void **ptrarray, int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosDownRealPtr</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from two joint arrays of Reals/pointers, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4371" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga8c4fca4d4cfd5894ee201ad690294394" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosDownRealInt</definition>
        <argsstring>(SCIP_Real *realarray, int *intarray, int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosDownRealInt</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from two joint arrays of Reals/ints, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4380" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga2f277c08a8c62a2d616289efd9ad015a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosDownRealIntLong</definition>
        <argsstring>(SCIP_Real *realarray, int *intarray, SCIP_Longint *longarray, int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosDownRealIntLong</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from three joint arrays of Reals/ints/Longs, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4389" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga58e1b790be0356015955b4be5093ae20" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosDownRealIntPtr</definition>
        <argsstring>(SCIP_Real *realarray, int *intarray, void **ptrarray, int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosDownRealIntPtr</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from three joint arrays of Reals/ints/Pointer, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4399" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gac28bdb363223134c1dd0652f26658bd3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosDownRealRealPtr</definition>
        <argsstring>(SCIP_Real *realarray1, SCIP_Real *realarray2, void **ptrarray, int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosDownRealRealPtr</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray1</declname>
          <briefdescription><para>first SCIP_Real array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray2</declname>
          <briefdescription><para>second SCIP_Real array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from three joint arrays of Reals/Reals/Pointer, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4409" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gaa24241a6bbc8ddf35cbcfa41bbe14870" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosDownRealPtrPtr</definition>
        <argsstring>(SCIP_Real *realarray, void **ptrarray1, void **ptrarray2, int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosDownRealPtrPtr</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>first SCIP_Real array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray1</declname>
          <briefdescription><para>first pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray2</declname>
          <briefdescription><para>second pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from three joint arrays of Reals/Reals/Pointer, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4419" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga6e3fa773f5378aa17a8663bbe769846f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosDownRealPtrPtrInt</definition>
        <argsstring>(SCIP_Real *realarray, void **ptrarray1, void **ptrarray2, int *intarray, int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosDownRealPtrPtrInt</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>first SCIP_Real array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray1</declname>
          <briefdescription><para>first pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray2</declname>
          <briefdescription><para>second pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from four joint arrays of Reals/pointers/pointers/ints, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4429" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga5ffab90d7120daa257e4ffde43fa77d1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosDownRealPtrPtrIntInt</definition>
        <argsstring>(SCIP_Real *realarray, void **ptrarray1, void **ptrarray2, int *intarray1, int *intarray2, int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosDownRealPtrPtrIntInt</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>first SCIP_Real array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray1</declname>
          <briefdescription><para>first pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray2</declname>
          <briefdescription><para>second pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from five joint arrays of Reals/pointers/pointers/ints/ints, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4440" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga9bad1c8df3ac1ff3a8b3ebc1033e5e16" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosDownRealLongRealInt</definition>
        <argsstring>(SCIP_Real *realarray1, SCIP_Longint *longarray, SCIP_Real *realarray3, int *intarray, int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosDownRealLongRealInt</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray1</declname>
          <briefdescription><para>SCIP_Real array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray3</declname>
          <briefdescription><para>SCIP_Real array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from four joint arrays of Reals/Long/Reals/ints, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4452" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga06d0a83c6c2860d99cc0a9367270e1e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosDownRealRealIntInt</definition>
        <argsstring>(SCIP_Real *realarray1, SCIP_Real *realarray2, int *intarray1, int *intarray2, int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosDownRealRealIntInt</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray1</declname>
          <briefdescription><para>SCIP_Real array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray2</declname>
          <briefdescription><para>SCIP_Real array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from four joint arrays of Reals/Reals/ints/ints, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4463" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gad6163d61719090374bfe1f7f067e52e8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosDownRealRealRealInt</definition>
        <argsstring>(SCIP_Real *realarray1, SCIP_Real *realarray2, SCIP_Real *realarray3, int *intarray, int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosDownRealRealRealInt</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray1</declname>
          <briefdescription><para>SCIP_Real array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray2</declname>
          <briefdescription><para>SCIP_Real array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray3</declname>
          <briefdescription><para>SCIP_Real array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from four joint arrays of Reals/Reals/Reals/ints, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4474" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gabd2ab8586c5415a8eef0dd81c950b2c6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosDownRealRealRealPtr</definition>
        <argsstring>(SCIP_Real *realarray1, SCIP_Real *realarray2, SCIP_Real *realarray3, void **ptrarray, int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosDownRealRealRealPtr</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray1</declname>
          <briefdescription><para>SCIP_Real array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray2</declname>
          <briefdescription><para>SCIP_Real array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray3</declname>
          <briefdescription><para>SCIP_Real array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from four joint arrays of Reals/Reals/Reals/pointers, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4485" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga19aef1e3777aaad1d2231f56c94754d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosDownRealRealRealBoolPtr</definition>
        <argsstring>(SCIP_Real *realarray1, SCIP_Real *realarray2, SCIP_Real *realarray3, SCIP_Bool *boolarray, void **ptrarray, int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosDownRealRealRealBoolPtr</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray1</declname>
          <briefdescription><para>SCIP_Real array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray2</declname>
          <briefdescription><para>SCIP_Real array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray3</declname>
          <briefdescription><para>SCIP_Real array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>boolarray</declname>
          <briefdescription><para>SCIP_Bool array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from five joint arrays of Reals/Reals/Reals/Bools/pointers, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4496" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gad1145e63c8125a365012cb005d6daec2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosDownInt</definition>
        <argsstring>(int *intarray, int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosDownInt</name>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from an array of ints in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4508" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga3592137191739688773e68ecb92a2954" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosDownIntInt</definition>
        <argsstring>(int *intarray1, int *intarray2, int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosDownIntInt</name>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>second int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from two joint arrays of ints/ints, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4516" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gae23a3861de091f32d8f30df8ef96a245" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosDownIntReal</definition>
        <argsstring>(int *intarray, SCIP_Real *realarray, int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosDownIntReal</name>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>real array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from two joint arrays of ints/reals, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4525" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga98bcb371ffbb704f9b2a0b7e8a92eb33" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosDownIntIntInt</definition>
        <argsstring>(int *intarray1, int *intarray2, int *intarray3, int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosDownIntIntInt</name>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>second int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray3</declname>
          <briefdescription><para>third int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from three joint arrays of ints/ints/ints, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4534" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga13dbc7faac98878278a7d82f147ae93c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosDownIntIntLong</definition>
        <argsstring>(int *intarray1, int *intarray2, SCIP_Longint *longarray, int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosDownIntIntLong</name>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>second int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from three joint arrays of ints/ints/SCIP_Longint, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4544" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gab8d853b7506c426d34ca9d56034c4f2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosDownIntIntPtr</definition>
        <argsstring>(int *intarray1, int *intarray2, void **ptrarray, int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosDownIntIntPtr</name>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>second int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from three joint arrays of ints/ints/pointers, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4554" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gaec60c0c53ee333c2d365c982ca59bad0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosDownIntIntReal</definition>
        <argsstring>(int *intarray1, int *intarray2, SCIP_Real *realarray, int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosDownIntIntReal</name>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>second int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>real array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from three joint arrays of ints/ints/Reals, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4564" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga43df436ace6011a7568d959d68f9d0a7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosDownIntPtr</definition>
        <argsstring>(int *intarray, void **ptrarray, int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosDownIntPtr</name>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from two joint arrays of ints/pointers, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4574" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1gac81c473a2561c2cce582da84428f69af" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosDownIntIntIntPtr</definition>
        <argsstring>(int *intarray1, int *intarray2, int *intarray3, void **ptrarray, int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosDownIntIntIntPtr</name>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray3</declname>
          <briefdescription><para>int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from four joint arrays of ints/ints/ints/pointers, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4584" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga60d56d852e33355b7b33ed3b09739504" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosDownIntPtrIntReal</definition>
        <argsstring>(int *intarray1, void **ptrarray, int *intarray2, SCIP_Real *realarray, int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosDownIntPtrIntReal</name>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from four joint arrays of ints/pointers/ints/Reals, sorted by first array in non-decreasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4595" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga1f509f41f8dc50da314caa05b8f5b6fe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosDownLong</definition>
        <argsstring>(SCIP_Longint *longarray, int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosDownLong</name>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from an array of Longints, sorted in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4606" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga82a0420979b32a33d0ac2ed1f936d82c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosDownLongPtr</definition>
        <argsstring>(SCIP_Longint *longarray, void **ptrarray, int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosDownLongPtr</name>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from three two arrays of Long/pointer, sorted by the first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4614" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga05c6ee6ce0784c5cb7171953c91fa2e0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosDownLongPtrInt</definition>
        <argsstring>(SCIP_Longint *longarray, void **ptrarray, int *intarray, int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosDownLongPtrInt</name>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from three joint arrays of Long/pointer/int, sorted by the first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4623" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga4401330b63fe2b84c52e8f87779e3470" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosDownLongPtrRealBool</definition>
        <argsstring>(SCIP_Longint *longarray, void **ptrarray, SCIP_Real *realarray, SCIP_Bool *boolarray, int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosDownLongPtrRealBool</name>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>boolarray</declname>
          <briefdescription><para>SCIP_Bool array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from three joint arrays of Long/pointer/Real/Bool, sorted by the first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4633" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga8878146d4b8d6655c6a1e7f8a1331771" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosDownLongPtrRealRealBool</definition>
        <argsstring>(SCIP_Longint *longarray, void **ptrarray, SCIP_Real *realarray, SCIP_Real *realarray2, SCIP_Bool *boolarray, int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosDownLongPtrRealRealBool</name>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>first SCIP_Real array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray2</declname>
          <briefdescription><para>second SCIP_Real array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>boolarray</declname>
          <briefdescription><para>SCIP_Bool array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from five joint arrays of Long/pointer/Real/Real/Bool, sorted by the first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4644" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga1d8566945198da63cc6e94169ef01969" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosDownLongPtrRealRealIntBool</definition>
        <argsstring>(SCIP_Longint *longarray, void **ptrarray, SCIP_Real *realarray, SCIP_Real *realarray2, int *intarray, SCIP_Bool *boolarray, int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosDownLongPtrRealRealIntBool</name>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>first SCIP_Real array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray2</declname>
          <briefdescription><para>second SCIP_Real array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>boolarray</declname>
          <briefdescription><para>SCIP_Bool array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from six joint arrays of Long/pointer/Real/Real/int/Bool, sorted by the first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4656" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga4bce001ffc72bbaececc5211f8c8accb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosDownLongPtrPtrInt</definition>
        <argsstring>(SCIP_Longint *longarray, void **ptrarray1, void **ptrarray2, int *intarray, int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosDownLongPtrPtrInt</name>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray1</declname>
          <briefdescription><para>first pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray2</declname>
          <briefdescription><para>second pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from four joint arrays of Long/pointer/pointer/ints, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4670" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga5229fc6dcac1bbb54697cb6584392f24" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosDownLongPtrPtrIntInt</definition>
        <argsstring>(SCIP_Longint *longarray, void **ptrarray1, void **ptrarray2, int *intarray1, int *intarray2, int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosDownLongPtrPtrIntInt</name>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray1</declname>
          <briefdescription><para>first pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray2</declname>
          <briefdescription><para>second pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>first int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>second int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from five joint arrays of Long/pointer/pointer/ints/ints, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4681" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga7ca8f3db0c84ecd952055c2987013bf3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosDownLongPtrPtrBoolInt</definition>
        <argsstring>(SCIP_Longint *longarray, void **ptrarray1, void **ptrarray2, SCIP_Bool *boolarray, int *intarray, int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosDownLongPtrPtrBoolInt</name>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray1</declname>
          <briefdescription><para>first pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray2</declname>
          <briefdescription><para>second pointer array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>boolarray</declname>
          <briefdescription><para>SCIP_Bool array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array where an element is to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from five joint arrays of Long/pointer/pointer/Bool/ints, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4693" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga0f3cba816a16cef786e266ab3ad558a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosDownPtrIntIntBoolBool</definition>
        <argsstring>(void **ptrarray, int *intarray1, int *intarray2, SCIP_Bool *boolarray1, SCIP_Bool *boolarray2, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosDownPtrIntIntBoolBool</name>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>first int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>second int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>boolarray1</declname>
          <briefdescription><para>first SCIP_Bool array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>boolarray2</declname>
          <briefdescription><para>second SCIP_Bool array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from five joint arrays of pointer/ints/ints/Bool/Bool, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4705" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga5b8df5f1b6979e0ea2639f2df9bf77f8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsortedvecDelPosDownIntPtrIntIntBoolBool</definition>
        <argsstring>(int *intarray1, void **ptrarray, int *intarray2, int *intarray3, SCIP_Bool *boolarray1, SCIP_Bool *boolarray2, int pos, int *len)</argsstring>
        <name>SCIPsortedvecDelPosDownIntPtrIntIntBoolBool</name>
        <param>
          <type>int *</type>
          <declname>intarray1</declname>
          <briefdescription><para>int array to be sorted </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray2</declname>
          <briefdescription><para>second int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>intarray3</declname>
          <briefdescription><para>thrid int array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>boolarray1</declname>
          <briefdescription><para>first SCIP_Bool array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>boolarray2</declname>
          <briefdescription><para>second SCIP_Bool array to be permuted in the same way </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>pos</declname>
          <briefdescription><para>array position of element to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>len</declname>
          <briefdescription><para>pointer to length of arrays (will be decreased by 1) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete the element at the given position from six joint arrays of ints/pointer/ints/ints/Bool/Bool, sorted by first array in non-increasing order </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4718" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga26d36bcbe4eb5695c83275f632b520e2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
        <definition>SCIP_Bool SCIPsortedvecFindInd</definition>
        <argsstring>(int *indarray, SCIP_DECL_SORTINDCOMP((*indcomp)), void *dataptr, int val, int len, int *pos)</argsstring>
        <name>SCIPsortedvecFindInd</name>
        <param>
          <type>int *</type>
          <declname>indarray</declname>
          <briefdescription><para>index array to be searched </para></briefdescription>
        </param>
        <param>
          <type><ref refid="type__misc_8h_1a806c02f466e036f6e137df9eee2f7e9d" kindref="member">SCIP_DECL_SORTINDCOMP</ref>((*indcomp))</type>
        </param>
        <param>
          <type>void *</type>
          <declname>dataptr</declname>
          <briefdescription><para>pointer to data field that is given to the external compare method </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>val</declname>
          <briefdescription><para>value to search </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of array </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store position of element </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Finds the position at which &apos;val&apos; is located in the sorted vector by binary search. If the element exists, the method returns TRUE and stores the position of the element in &apos;*pos&apos;. If the element does not exist, the method returns FALSE and stores the position of the element that follows &apos;val&apos; in the ordering in &apos;*pos&apos;, i.e., &apos;*pos&apos; is the position at which &apos;val&apos; would be inserted. Note that if the element is not found, &apos;*pos&apos; may be equal to len if all existing elements are smaller than &apos;val&apos;. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4739" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga0a1d3f8656491206c546d51d7d3bf984" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
        <definition>SCIP_Bool SCIPsortedvecFindPtr</definition>
        <argsstring>(void **ptrarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *val, int len, int *pos)</argsstring>
        <name>SCIPsortedvecFindPtr</name>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array to be searched </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>void *</type>
          <declname>val</declname>
          <briefdescription><para>value to search </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of array </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store position of element </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Finds the position at which &apos;val&apos; is located in the sorted vector by binary search. If the element exists, the method returns TRUE and stores the position of the element in &apos;*pos&apos;. If the element does not exist, the method returns FALSE and stores the position of the element that follows &apos;val&apos; in the ordering in &apos;*pos&apos;, i.e., &apos;*pos&apos; is the position at which &apos;val&apos; would be inserted. Note that if the element is not found, &apos;*pos&apos; may be equal to len if all existing elements are smaller than &apos;val&apos;. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4755" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga2df22126338d4b1c7383e3b5818e8e3f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
        <definition>SCIP_Bool SCIPsortedvecFindReal</definition>
        <argsstring>(SCIP_Real *realarray, SCIP_Real val, int len, int *pos)</argsstring>
        <name>SCIPsortedvecFindReal</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array to be searched </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>val</declname>
          <briefdescription><para>value to search </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of array </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store position of element </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Finds the position at which &apos;val&apos; is located in the sorted vector by binary search. If the element exists, the method returns TRUE and stores the position of the element in &apos;*pos&apos;. If the element does not exist, the method returns FALSE and stores the position of the element that follows &apos;val&apos; in the ordering in &apos;*pos&apos;, i.e., &apos;*pos&apos; is the position at which &apos;val&apos; would be inserted. Note that if the element is not found, &apos;*pos&apos; may be equal to len if all existing elements are smaller than &apos;val&apos;. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4770" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga4aae1f2e7c28d053b18974a066f03f2e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
        <definition>SCIP_Bool SCIPsortedvecFindInt</definition>
        <argsstring>(int *intarray, int val, int len, int *pos)</argsstring>
        <name>SCIPsortedvecFindInt</name>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array to be searched </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>val</declname>
          <briefdescription><para>value to search </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of array </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store position of element </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Finds the position at which &apos;val&apos; is located in the sorted vector by binary search. If the element exists, the method returns TRUE and stores the position of the element in &apos;*pos&apos;. If the element does not exist, the method returns FALSE and stores the position of the element that follows &apos;val&apos; in the ordering in &apos;*pos&apos;, i.e., &apos;*pos&apos; is the position at which &apos;val&apos; would be inserted. Note that if the element is not found, &apos;*pos&apos; may be equal to len if all existing elements are smaller than &apos;val&apos;. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4784" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga64379740155859235c21b655fc601f6f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
        <definition>SCIP_Bool SCIPsortedvecFindLong</definition>
        <argsstring>(SCIP_Longint *longarray, SCIP_Longint val, int len, int *pos)</argsstring>
        <name>SCIPsortedvecFindLong</name>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array to be searched </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref></type>
          <declname>val</declname>
          <briefdescription><para>value to search </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of array </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store position of element </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Finds the position at which &apos;val&apos; is located in the sorted vector by binary search. If the element exists, the method returns TRUE and stores the position of the element in &apos;*pos&apos;. If the element does not exist, the method returns FALSE and stores the position of the element that follows &apos;val&apos; in the ordering in &apos;*pos&apos;, i.e., &apos;*pos&apos; is the position at which &apos;val&apos; would be inserted. Note that if the element is not found, &apos;*pos&apos; may be equal to len if all existing elements are smaller than &apos;val&apos;. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4798" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga12f9bdff6d3008f30b5a176c72ad50df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
        <definition>SCIP_Bool SCIPsortedvecFindDownInd</definition>
        <argsstring>(int *indarray, SCIP_DECL_SORTINDCOMP((*indcomp)), void *dataptr, int val, int len, int *pos)</argsstring>
        <name>SCIPsortedvecFindDownInd</name>
        <param>
          <type>int *</type>
          <declname>indarray</declname>
          <briefdescription><para>index array to be searched </para></briefdescription>
        </param>
        <param>
          <type><ref refid="type__misc_8h_1a806c02f466e036f6e137df9eee2f7e9d" kindref="member">SCIP_DECL_SORTINDCOMP</ref>((*indcomp))</type>
        </param>
        <param>
          <type>void *</type>
          <declname>dataptr</declname>
          <briefdescription><para>pointer to data field that is given to the external compare method </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>val</declname>
          <briefdescription><para>value to search </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of array </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store position of element </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Finds the position at which &apos;val&apos; is located in the sorted vector by binary search. If the element exists, the method returns TRUE and stores the position of the element in &apos;*pos&apos;. If the element does not exist, the method returns FALSE and stores the position of the element that follows &apos;val&apos; in the ordering in &apos;*pos&apos;, i.e., &apos;*pos&apos; is the position at which &apos;val&apos; would be inserted. Note that if the element is not found, &apos;*pos&apos; may be equal to len if all existing elements are smaller than &apos;val&apos;. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4815" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga5f10914e9b9b12db9d286b1ea25a5ed5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
        <definition>SCIP_Bool SCIPsortedvecFindDownPtr</definition>
        <argsstring>(void **ptrarray, SCIP_DECL_SORTPTRCOMP((*ptrcomp)), void *val, int len, int *pos)</argsstring>
        <name>SCIPsortedvecFindDownPtr</name>
        <param>
          <type>void **</type>
          <declname>ptrarray</declname>
          <briefdescription><para>pointer array to be searched </para></briefdescription>
        </param>
        <param>
          <type><ref refid="pub__var_8h_1acc76c443b0261325685a3e3f459db4b3" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))</type>
        </param>
        <param>
          <type>void *</type>
          <declname>val</declname>
          <briefdescription><para>value to search </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of array </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store position of element </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Finds the position at which &apos;val&apos; is located in the sorted vector by binary search. If the element exists, the method returns TRUE and stores the position of the element in &apos;*pos&apos;. If the element does not exist, the method returns FALSE and stores the position of the element that follows &apos;val&apos; in the ordering in &apos;*pos&apos;, i.e., &apos;*pos&apos; is the position at which &apos;val&apos; would be inserted. Note that if the element is not found, &apos;*pos&apos; may be equal to len if all existing elements are smaller than &apos;val&apos;. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4831" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga962f1cd31b5d4b6dd60032d3c3a191c7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
        <definition>SCIP_Bool SCIPsortedvecFindDownReal</definition>
        <argsstring>(SCIP_Real *realarray, SCIP_Real val, int len, int *pos)</argsstring>
        <name>SCIPsortedvecFindDownReal</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>realarray</declname>
          <briefdescription><para>SCIP_Real array to be searched </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>val</declname>
          <briefdescription><para>value to search </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of array </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store position of element </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Finds the position at which &apos;val&apos; is located in the sorted vector by binary search. If the element exists, the method returns TRUE and stores the position of the element in &apos;*pos&apos;. If the element does not exist, the method returns FALSE and stores the position of the element that follows &apos;val&apos; in the ordering in &apos;*pos&apos;, i.e., &apos;*pos&apos; is the position at which &apos;val&apos; would be inserted. Note that if the element is not found, &apos;*pos&apos; may be equal to len if all existing elements are smaller than &apos;val&apos;. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4846" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga224ecda311a4771fa0a7e0d603e47710" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
        <definition>SCIP_Bool SCIPsortedvecFindDownInt</definition>
        <argsstring>(int *intarray, int val, int len, int *pos)</argsstring>
        <name>SCIPsortedvecFindDownInt</name>
        <param>
          <type>int *</type>
          <declname>intarray</declname>
          <briefdescription><para>int array to be searched </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>val</declname>
          <briefdescription><para>value to search </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of array </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store position of element </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Finds the position at which &apos;val&apos; is located in the sorted vector by binary search. If the element exists, the method returns TRUE and stores the position of the element in &apos;*pos&apos;. If the element does not exist, the method returns FALSE and stores the position of the element that follows &apos;val&apos; in the ordering in &apos;*pos&apos;, i.e., &apos;*pos&apos; is the position at which &apos;val&apos; would be inserted. Note that if the element is not found, &apos;*pos&apos; may be equal to len if all existing elements are smaller than &apos;val&apos;. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4860" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__SortingAlgorithms_1ga5cbfdcdfa4689c936ea0ee4d5df9f0cf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
        <definition>SCIP_Bool SCIPsortedvecFindDownLong</definition>
        <argsstring>(SCIP_Longint *longarray, SCIP_Longint val, int len, int *pos)</argsstring>
        <name>SCIPsortedvecFindDownLong</name>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>longarray</declname>
          <briefdescription><para>SCIP_Longint array to be searched </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref></type>
          <declname>val</declname>
          <briefdescription><para>value to search </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of array </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>pos</declname>
          <briefdescription><para>pointer to store position of element </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Finds the position at which &apos;val&apos; is located in the sorted vector by binary search. If the element exists, the method returns TRUE and stores the position of the element in &apos;*pos&apos;. If the element does not exist, the method returns FALSE and stores the position of the element that follows &apos;val&apos; in the ordering in &apos;*pos&apos;, i.e., &apos;*pos&apos; is the position at which &apos;val&apos; would be inserted. Note that if the element is not found, &apos;*pos&apos; may be equal to len if all existing elements are smaller than &apos;val&apos;. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4874" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__NumericalMethods_1gac6ef1b59cbfcd67e6d93d530b78e7b05" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
        <definition>SCIP_Real SCIPcalcMachineEpsilon</definition>
        <argsstring>(void)</argsstring>
        <name>SCIPcalcMachineEpsilon</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the machine epsilon: the smallest number eps &gt; 0, for which 1.0 + eps &gt; 1.0 </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4900" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__NumericalMethods_1ga09c76e8d696f37681aa4bd6d96618488" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref></type>
        <definition>SCIP_Longint SCIPcalcGreComDiv</definition>
        <argsstring>(SCIP_Longint val1, SCIP_Longint val2)</argsstring>
        <name>SCIPcalcGreComDiv</name>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref></type>
          <declname>val1</declname>
          <briefdescription><para>first value of greatest common devisor calculation </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref></type>
          <declname>val2</declname>
          <briefdescription><para>second value of greatest common devisor calculation </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>calculates the greatest common divisor of the two given values </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4906" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__NumericalMethods_1ga36422f92e6fe8eaed14484b069529f57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref></type>
        <definition>SCIP_Longint SCIPcalcSmaComMul</definition>
        <argsstring>(SCIP_Longint val1, SCIP_Longint val2)</argsstring>
        <name>SCIPcalcSmaComMul</name>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref></type>
          <declname>val1</declname>
          <briefdescription><para>first value of smallest common multiple calculation </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref></type>
          <declname>val2</declname>
          <briefdescription><para>second value of smallest common multiple calculation </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>calculates the smallest common multiple of the two given values </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4913" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__NumericalMethods_1ga7af717ac8e971d41e58aac8c395c73b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
        <definition>SCIP_Bool SCIPrealToRational</definition>
        <argsstring>(SCIP_Real val, SCIP_Real mindelta, SCIP_Real maxdelta, SCIP_Longint maxdnom, SCIP_Longint *nominator, SCIP_Longint *denominator)</argsstring>
        <name>SCIPrealToRational</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>val</declname>
          <briefdescription><para>real value r to convert into rational number </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>mindelta</declname>
          <briefdescription><para>minimal allowed difference r - q of real r and rational q = n/d </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>maxdelta</declname>
          <briefdescription><para>maximal allowed difference r - q of real r and rational q = n/d </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref></type>
          <declname>maxdnom</declname>
          <briefdescription><para>maximal denominator allowed </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>nominator</declname>
          <briefdescription><para>pointer to store the nominator n of the rational number </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>denominator</declname>
          <briefdescription><para>pointer to store the denominator d of the rational number </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>converts a real number into a (approximate) rational representation, and returns TRUE iff the conversion was successful </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4922" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__NumericalMethods_1gae52e2432fc460ea70a34b4921655f669" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPcalcIntegralScalar</definition>
        <argsstring>(SCIP_Real *vals, int nvals, SCIP_Real mindelta, SCIP_Real maxdelta, SCIP_Longint maxdnom, SCIP_Real maxscale, SCIP_Real *intscalar, SCIP_Bool *success)</argsstring>
        <name>SCIPcalcIntegralScalar</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>vals</declname>
          <briefdescription><para>values to scale </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>nvals</declname>
          <briefdescription><para>number of values to scale </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>mindelta</declname>
          <briefdescription><para>minimal relative allowed difference of scaled coefficient s*c and integral i </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>maxdelta</declname>
          <briefdescription><para>maximal relative allowed difference of scaled coefficient s*c and integral i </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref></type>
          <declname>maxdnom</declname>
          <briefdescription><para>maximal denominator allowed in rational numbers </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>maxscale</declname>
          <briefdescription><para>maximal allowed scalar </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>intscalar</declname>
          <briefdescription><para>pointer to store scalar that would make the coefficients integral, or NULL </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>success</declname>
          <briefdescription><para>stores whether returned value is valid </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>tries to find a value, such that all given values, if scaled with this value become integral in relative allowed difference in between mindelta and maxdelta </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4935" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__NumericalMethods_1gafc5af4af98dabe979112c4825963dd95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
        <definition>SCIP_Bool SCIPfindSimpleRational</definition>
        <argsstring>(SCIP_Real lb, SCIP_Real ub, SCIP_Longint maxdnom, SCIP_Longint *nominator, SCIP_Longint *denominator)</argsstring>
        <name>SCIPfindSimpleRational</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>lb</declname>
          <briefdescription><para>lower bound of the interval </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>ub</declname>
          <briefdescription><para>upper bound of the interval </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref></type>
          <declname>maxdnom</declname>
          <briefdescription><para>maximal denominator allowed for resulting rational number </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>nominator</declname>
          <briefdescription><para>pointer to store the nominator n of the rational number </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref> *</type>
          <declname>denominator</declname>
          <briefdescription><para>pointer to store the denominator d of the rational number </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>given a (usually very small) interval, tries to find a rational number with simple denominator (i.e. a small number, probably multiplied with powers of 10) out of this interval; returns TRUE iff a valid rational number inside the interval was found </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4951" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__NumericalMethods_1ga80d505d09eb06daa3e1d18454554dbd3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
        <definition>SCIP_Real SCIPselectSimpleValue</definition>
        <argsstring>(SCIP_Real lb, SCIP_Real ub, SCIP_Longint maxdnom)</argsstring>
        <name>SCIPselectSimpleValue</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>lb</declname>
          <briefdescription><para>lower bound of the interval </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>ub</declname>
          <briefdescription><para>upper bound of the interval </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref></type>
          <declname>maxdnom</declname>
          <briefdescription><para>maximal denominator allowed for resulting rational number </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>given a (usually very small) interval, selects a value inside this interval; it is tried to select a rational number with simple denominator (i.e. a small number, probably multiplied with powers of 10); if no valid rational number inside the interval was found, selects the central value of the interval </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4964" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__NumericalMethods_1gaee193fe9f075f6b12914b1ea9243a9d4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
        <definition>SCIP_Real SCIPrelDiff</definition>
        <argsstring>(SCIP_Real val1, SCIP_Real val2)</argsstring>
        <name>SCIPrelDiff</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>val1</declname>
          <briefdescription><para>first value to be compared </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>val2</declname>
          <briefdescription><para>second value to be compared </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the relative difference: (val1-val2)/max(|val1|,|val2|,1.0) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="4993" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__RandomNumbers_1gab8df37df07fa33ef9d01039302594a4e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SCIPgetRandomInt</definition>
        <argsstring>(int minrandval, int maxrandval, unsigned int *seedp)</argsstring>
        <name>SCIPgetRandomInt</name>
        <param>
          <type>int</type>
          <declname>minrandval</declname>
          <briefdescription><para>minimal value to return </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>maxrandval</declname>
          <briefdescription><para>maximal value to return </para></briefdescription>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>seedp</declname>
          <briefdescription><para>pointer to seed value </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns a random integer between minrandval and maxrandval </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="5022" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__RandomNumbers_1gadb68c7526c5d93416b08093b710fd25e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
        <definition>SCIP_Real SCIPgetRandomReal</definition>
        <argsstring>(SCIP_Real minrandval, SCIP_Real maxrandval, unsigned int *seedp)</argsstring>
        <name>SCIPgetRandomReal</name>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>minrandval</declname>
          <briefdescription><para>minimal value to return </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>maxrandval</declname>
          <briefdescription><para>maximal value to return </para></briefdescription>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>seedp</declname>
          <briefdescription><para>pointer to seed value </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns a random real between minrandval and maxrandval </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="5030" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__AdditionalMathFunctions_1ga120213bce932ebd1100a1916b40d3f50" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref></type>
        <definition>SCIP_Longint SCIPcalcBinomCoef</definition>
        <argsstring>(int n, int m)</argsstring>
        <name>SCIPcalcBinomCoef</name>
        <param>
          <type>int</type>
          <declname>n</declname>
          <briefdescription><para>number of different elements </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>m</declname>
          <briefdescription><para>number to choose out of the above </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>calculates a binomial coefficient n over m, choose m elements out of n, maximal value will be 33 over 16 (because the n=33 is the last line in the Pascal&apos;s triangle where each entry fits in a 4 byte value), an error occurs due to big numbers or an negative value m (and m &lt; n) and -1 will be returned </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="5053" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PermutationsShuffling_1ga18b8efe66f3adeeea73bd842b1a645ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPswapInts</definition>
        <argsstring>(int *value1, int *value2)</argsstring>
        <name>SCIPswapInts</name>
        <param>
          <type>int *</type>
          <declname>value1</declname>
          <briefdescription><para>pointer to first integer </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>value2</declname>
          <briefdescription><para>pointer ti second integer </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>swaps two ints </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="5071" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PermutationsShuffling_1ga431f86e1ef3e1500066fec3e3a4ace6d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPswapPointers</definition>
        <argsstring>(void **pointer1, void **pointer2)</argsstring>
        <name>SCIPswapPointers</name>
        <param>
          <type>void **</type>
          <declname>pointer1</declname>
          <briefdescription><para>first pointer </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>pointer2</declname>
          <briefdescription><para>second pointer </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>swaps the addresses of two pointers </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="5078" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PermutationsShuffling_1gac175082263a25d9ca1a1824c36e96ecf" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPpermuteIntArray</definition>
        <argsstring>(int *array, int begin, int end, unsigned int *randseed)</argsstring>
        <name>SCIPpermuteIntArray</name>
        <param>
          <type>int *</type>
          <declname>array</declname>
          <briefdescription><para>array to be shuffled </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>begin</declname>
          <briefdescription><para>first index that should be subject to shuffling (0 for whole array) </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>end</declname>
          <briefdescription><para>last index that should be subject to shuffling (array size for whole array) </para></briefdescription>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>randseed</declname>
          <briefdescription><para>seed value for the random generator </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>randomly shuffles parts of an integer array using the Fisher-Yates algorithm </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="5085" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PermutationsShuffling_1ga6ec4d1af1c69541e0f01d439e6fb0398" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPpermuteArray</definition>
        <argsstring>(void **array, int begin, int end, unsigned int *randseed)</argsstring>
        <name>SCIPpermuteArray</name>
        <param>
          <type>void **</type>
          <declname>array</declname>
          <briefdescription><para>array to be shuffled </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>begin</declname>
          <briefdescription><para>first index that should be subject to shuffling (0 for whole array) </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>end</declname>
          <briefdescription><para>last index that should be subject to shuffling (array size for whole array) </para></briefdescription>
        </param>
        <param>
          <type>unsigned int *</type>
          <declname>randseed</declname>
          <briefdescription><para>pointer to seed value for the random generator </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>randomly shuffles parts of an array using the Fisher-Yates algorithm </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="5096" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__PermutationsShuffling_1ga384de3f49754bbba1ca3dc87549f3027" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPgetRandomSubset</definition>
        <argsstring>(void **set, int nelems, void **subset, int nsubelems, unsigned int randseed)</argsstring>
        <name>SCIPgetRandomSubset</name>
        <param>
          <type>void **</type>
          <declname>set</declname>
          <briefdescription><para>original set, from which elements should be drawn </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>nelems</declname>
          <briefdescription><para>number of elements in original set </para></briefdescription>
        </param>
        <param>
          <type>void **</type>
          <declname>subset</declname>
          <briefdescription><para>subset in which drawn elements should be stored </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>nsubelems</declname>
          <briefdescription><para>number of elements that should be drawn and stored </para></briefdescription>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>randseed</declname>
          <briefdescription><para>seed value for random generator </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>draws a random subset of disjoint elements from a given set of disjoint elements; this implementation is suited for the case that nsubelems is considerably smaller then nelems </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="5109" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__StringMethods_1gadfc413b0c78b3d68f34895dae202c958" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SCIPmemccpy</definition>
        <argsstring>(char *dest, const char *src, char stop, unsigned int cnt)</argsstring>
        <name>SCIPmemccpy</name>
        <param>
          <type>char *</type>
          <declname>dest</declname>
          <briefdescription><para>destination pointer to copy to </para></briefdescription>
        </param>
        <param>
          <type>const char *</type>
          <declname>src</declname>
          <briefdescription><para>source pointer to copy to </para></briefdescription>
        </param>
        <param>
          <type>char</type>
          <declname>stop</declname>
          <briefdescription><para>character when found stop copying </para></briefdescription>
        </param>
        <param>
          <type>unsigned int</type>
          <declname>cnt</declname>
          <briefdescription><para>maximal number of characters to copy too </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>copies characters from &apos;src&apos; to &apos;dest&apos;, copying is stopped when either the &apos;stop&apos; character is reached or after &apos;cnt&apos; characters have been copied, whichever comes first.</para><para><simplesect kind="note"><para>undefined behaviuor on overlapping arrays </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="5134" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__StringMethods_1ga5e2316e35529d93dbfa735b10664e07c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPprintSysError</definition>
        <argsstring>(const char *message)</argsstring>
        <name>SCIPprintSysError</name>
        <param>
          <type>const char *</type>
          <declname>message</declname>
          <briefdescription><para>first part of the error message, e.g. the filename </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>prints an error message containing of the given string followed by a string describing the current system error; prefers to use the strerror_r method, which is threadsafe; on systems where this method does not exist, NO_STRERROR_R should be defined (see INSTALL), in this case, srerror is used which is not guaranteed to be threadsafe (on SUN-systems, it actually is) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="5147" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__StringMethods_1gaadc7dc75eacf8821453262816efbb912" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>char *</type>
        <definition>char* SCIPstrtok</definition>
        <argsstring>(char *s, const char *delim, char **ptrptr)</argsstring>
        <name>SCIPstrtok</name>
        <param>
          <type>char *</type>
          <declname>s</declname>
          <briefdescription><para>string to parse </para></briefdescription>
        </param>
        <param>
          <type>const char *</type>
          <declname>delim</declname>
          <briefdescription><para>delimiters for parsing </para></briefdescription>
        </param>
        <param>
          <type>char **</type>
          <declname>ptrptr</declname>
          <briefdescription><para>pointer to working char pointer - must stay the same while parsing </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>extracts tokens from strings - wrapper method for strtok_r() </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="5153" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__StringMethods_1ga4123f87ca6ab7b2d52977ad740976c34" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPescapeString</definition>
        <argsstring>(char *t, int bufsize, const char *s)</argsstring>
        <name>SCIPescapeString</name>
        <param>
          <type>char *</type>
          <declname>t</declname>
          <briefdescription><para>target buffer to store escaped string </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>bufsize</declname>
          <briefdescription><para>size of buffer t </para></briefdescription>
        </param>
        <param>
          <type>const char *</type>
          <declname>s</declname>
          <briefdescription><para>string to transform into escaped string </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>translates the given string into a string where symbols ", &apos;, and spaces are escaped with a \ prefix </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="5161" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__StringMethods_1ga12978de6e896abef8c5784a521d6326b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SCIPsnprintf</definition>
        <argsstring>(char *t, int len, const char *s,...)</argsstring>
        <name>SCIPsnprintf</name>
        <param>
          <type>char *</type>
          <declname>t</declname>
          <briefdescription><para>target string </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>len</declname>
          <briefdescription><para>length of the string to copy </para></briefdescription>
        </param>
        <param>
          <type>const char *</type>
          <declname>s</declname>
          <briefdescription><para>source string </para></briefdescription>
        </param>
        <param>
          <type>...</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>safe version of snprintf </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="5169" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__StringMethods_1ga05b8771e48755de9eb571e888a086820" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
        <definition>SCIP_Bool SCIPstrToIntValue</definition>
        <argsstring>(const char *str, int *value, char **endptr)</argsstring>
        <name>SCIPstrToIntValue</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
          <briefdescription><para>string to search </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>value</declname>
          <briefdescription><para>pointer to store the parsed value </para></briefdescription>
        </param>
        <param>
          <type>char **</type>
          <declname>endptr</declname>
          <briefdescription><para>pointer to store the final string position if successfully parsed, otherwise <computeroutput>str</computeroutput> </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>extract the next token as a integer value if it is one; in case no value is parsed the endptr is set to <computeroutput>str</computeroutput> </para><para><simplesect kind="return"><para>Returns TRUE if a value could be extracted, otherwise FALSE </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="5181" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__StringMethods_1ga2d02c64c4ef4b1265a2764239e2de842" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
        <definition>SCIP_Bool SCIPstrToRealValue</definition>
        <argsstring>(const char *str, SCIP_Real *value, char **endptr)</argsstring>
        <name>SCIPstrToRealValue</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
          <briefdescription><para>string to search </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>value</declname>
          <briefdescription><para>pointer to store the parsed value </para></briefdescription>
        </param>
        <param>
          <type>char **</type>
          <declname>endptr</declname>
          <briefdescription><para>pointer to store the final string position if successfully parsed, otherwise <computeroutput>str</computeroutput> </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>extract the next token as a double value if it is one; in case a value is parsed the endptr is set to <computeroutput>str</computeroutput> </para><para><simplesect kind="return"><para>Returns TRUE if a value could be extracted, otherwise FALSE </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="5192" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__StringMethods_1ga585e90a5b270e3bdda15d38ff49bbcf4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPstrCopySection</definition>
        <argsstring>(const char *str, char startchar, char endchar, char *token, int size, char **endptr)</argsstring>
        <name>SCIPstrCopySection</name>
        <param>
          <type>const char *</type>
          <declname>str</declname>
          <briefdescription><para>string to search </para></briefdescription>
        </param>
        <param>
          <type>char</type>
          <declname>startchar</declname>
          <briefdescription><para>character which defines the beginning </para></briefdescription>
        </param>
        <param>
          <type>char</type>
          <declname>endchar</declname>
          <briefdescription><para>character which defines the ending </para></briefdescription>
        </param>
        <param>
          <type>char *</type>
          <declname>token</declname>
          <briefdescription><para>string to store the copy </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>size</declname>
          <briefdescription><para>size of the token char array </para></briefdescription>
        </param>
        <param>
          <type>char **</type>
          <declname>endptr</declname>
          <briefdescription><para>pointer to store the final string position if successfully parsed, otherwise <computeroutput>str</computeroutput> </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>copies the first size characters between a start and end character of str into token, if no error occured endptr will point to the position after the read part, otherwise it will point to <computeroutput>str</computeroutput> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="5202" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__FileMethods_1ga26a194b806c67fca42015976a3b0b2ab" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
        <definition>SCIP_Bool SCIPfileExists</definition>
        <argsstring>(const char *filename)</argsstring>
        <name>SCIPfileExists</name>
        <param>
          <type>const char *</type>
          <declname>filename</declname>
          <briefdescription><para>file name </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns, whether the given file exists </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="5224" column="1"/>
      </memberdef>
      <memberdef kind="function" id="group__FileMethods_1gae6ca8a02a5500ad60a834a41588f632b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void SCIPsplitFilename</definition>
        <argsstring>(char *filename, char **path, char **name, char **extension, char **compression)</argsstring>
        <name>SCIPsplitFilename</name>
        <param>
          <type>char *</type>
          <declname>filename</declname>
          <briefdescription><para>filename to split; is destroyed (but not freed) during process </para></briefdescription>
        </param>
        <param>
          <type>char **</type>
          <declname>path</declname>
          <briefdescription><para>pointer to store path, or NULL if not needed </para></briefdescription>
        </param>
        <param>
          <type>char **</type>
          <declname>name</declname>
          <briefdescription><para>pointer to store name, or NULL if not needed </para></briefdescription>
        </param>
        <param>
          <type>char **</type>
          <declname>extension</declname>
          <briefdescription><para>pointer to store extension, or NULL if not needed </para></briefdescription>
        </param>
        <param>
          <type>char **</type>
          <declname>compression</declname>
          <briefdescription><para>pointer to store compression extension, or NULL if not needed </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>splits filename into path, name, and extension </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h" line="5230" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>public data structures and miscellaneous methods </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Tobias Achterberg </para></simplesect>
<simplesect kind="author"><para>Stefan Heinz </para></simplesect>
<simplesect kind="author"><para>Michael Winkler</para></simplesect>
This file contains a bunch of data structures and miscellaneous methods:</para><para><itemizedlist>
<listitem><para><ref refid="group__DataStructures" kindref="compound">Data structures</ref></para></listitem><listitem><para><ref refid="group__MiscellaneousMethods" kindref="compound">Miscellaneous Methods</ref> </para></listitem></itemizedlist>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>program<sp/>and<sp/>library<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SCIP<sp/>---<sp/>Solving<sp/>Constraint<sp/>Integer<sp/>Programs<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>Copyright<sp/>(C)<sp/>2002-2014<sp/>Konrad-Zuse-Zentrum<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fuer<sp/>Informationstechnik<sp/>Berlin<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>SCIP<sp/>is<sp/>distributed<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>ZIB<sp/>Academic<sp/>License.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>ZIB<sp/>Academic<sp/>License<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>along<sp/>with<sp/>SCIP;<sp/>see<sp/>the<sp/>file<sp/>COPYING.<sp/>If<sp/>not<sp/>email<sp/>to<sp/>scip@zib.de.<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="16"><highlight class="comment">/**@file<sp/><sp/><sp/>pub_misc.h</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>public<sp/>data<sp/>structures<sp/>and<sp/>miscellaneous<sp/>methods</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>@author<sp/>Tobias<sp/>Achterberg</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>@author<sp/>Stefan<sp/>Heinz</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>@author<sp/>Michael<sp/>Winkler</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>This<sp/>file<sp/>contains<sp/>a<sp/>bunch<sp/>of<sp/>data<sp/>structures<sp/>and<sp/>miscellaneous<sp/>methods:</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>-<sp/>\ref<sp/>DataStructures<sp/>&quot;Data<sp/>structures&quot;</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>-<sp/>\ref<sp/>MiscellaneousMethods<sp/>&quot;Miscellaneous<sp/>Methods&quot;</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="comment">/*---+----1----+----2----+----3----+----4----+----5----+----6----+----7----+----8----+----9----+----0----+----1----+----2*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__SCIP_PUB_MISC_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__SCIP_PUB_MISC_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>on<sp/>SunOS,<sp/>the<sp/>function<sp/>finite(a)<sp/>(for<sp/>the<sp/>SCIPisFinite<sp/>macro<sp/>below)<sp/>is<sp/>declared<sp/>in<sp/>ieeefp.h<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__sun</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;ieeefp.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;math.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="def_8h" kindref="compound">scip/def.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;blockmemshell/memory.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="type__retcode_8h" kindref="compound">scip/type_retcode.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="type__misc_8h" kindref="compound">scip/type_misc.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="type__message_8h" kindref="compound">scip/type_message.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="type__var_8h" kindref="compound">scip/type_var.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>in<sp/>optimized<sp/>mode<sp/>some<sp/>of<sp/>the<sp/>function<sp/>are<sp/>handled<sp/>via<sp/>defines,<sp/>for<sp/>that<sp/>the<sp/>structs<sp/>are<sp/>needed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>NDEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;scip/struct_misc.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*<sp/>GML<sp/>graphical<sp/>printing<sp/>methods</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*<sp/>For<sp/>a<sp/>detailed<sp/>format<sp/>decription<sp/>see<sp/>http://docs.yworks.com/yfiles/doc/developers-guide/gml.html</highlight></codeline>
<codeline lineno="58"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="60"><highlight class="comment">/**@defgroup<sp/>GMLgraph<sp/>GML<sp/>graphical<sp/>printing</highlight></codeline>
<codeline lineno="61"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/>*<sp/>@{</highlight></codeline>
<codeline lineno="63"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="65"><highlight class="comment">/**<sp/>writes<sp/>a<sp/>node<sp/>section<sp/>to<sp/>the<sp/>given<sp/>graph<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__GMLgraph_1ga40fdd8619694bf8e0b5d732d4228231b" kindref="member">SCIPgmlWriteNode</ref>(</highlight></codeline>
<codeline lineno="68"><highlight class="normal"><sp/><sp/><sp/>FILE*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>file<sp/>to<sp/>write<sp/>to<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>id<sp/>of<sp/>the<sp/>node<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>label,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>label<sp/>of<sp/>the<sp/>node<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodetype,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>type<sp/>of<sp/>the<sp/>node,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fillcolor,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>color<sp/>of<sp/>the<sp/>node&apos;s<sp/>interior,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bordercolor<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>color<sp/>of<sp/>the<sp/>node&apos;s<sp/>border,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="76"><highlight class="comment">/**<sp/>writes<sp/>a<sp/>node<sp/>section<sp/>including<sp/>weight<sp/>to<sp/>the<sp/>given<sp/>graph<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__GMLgraph_1ga37dd36258f0a9b3c6cabde117b9a8dc1" kindref="member">SCIPgmlWriteNodeWeight</ref>(</highlight></codeline>
<codeline lineno="79"><highlight class="normal"><sp/><sp/><sp/>FILE*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>file<sp/>to<sp/>write<sp/>to<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">id</highlight><highlight class="normal">,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>id<sp/>of<sp/>the<sp/>node<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>label,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>label<sp/>of<sp/>the<sp/>node<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodetype,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>type<sp/>of<sp/>the<sp/>node,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fillcolor,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>color<sp/>of<sp/>the<sp/>node&apos;s<sp/>interior,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bordercolor,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>color<sp/>of<sp/>the<sp/>node&apos;s<sp/>border,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weight<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>weight<sp/>of<sp/>node<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="88"><highlight class="comment">/**<sp/>writes<sp/>an<sp/>edge<sp/>section<sp/>to<sp/>the<sp/>given<sp/>graph<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__GMLgraph_1gaac2a4633be2d428b9a7723bc826db9fc" kindref="member">SCIPgmlWriteEdge</ref>(</highlight></codeline>
<codeline lineno="91"><highlight class="normal"><sp/><sp/><sp/>FILE*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>file<sp/>to<sp/>write<sp/>to<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>source,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>source<sp/>node<sp/>id<sp/>of<sp/>the<sp/>node<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>target<sp/>node<sp/>id<sp/>of<sp/>the<sp/>edge<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>label,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>label<sp/>of<sp/>the<sp/>edge,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>color<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>color<sp/>of<sp/>the<sp/>edge,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="98"><highlight class="comment">/**<sp/>writes<sp/>an<sp/>arc<sp/>section<sp/>to<sp/>the<sp/>given<sp/>graph<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__GMLgraph_1gaede0b40b61c571e5f07e05aac3c3ead7" kindref="member">SCIPgmlWriteArc</ref>(</highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/>FILE*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>file<sp/>to<sp/>write<sp/>to<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>source,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>source<sp/>node<sp/>id<sp/>of<sp/>the<sp/>node<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>target,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>target<sp/>node<sp/>id<sp/>of<sp/>the<sp/>edge<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>label,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>label<sp/>of<sp/>the<sp/>edge,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>color<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>color<sp/>of<sp/>the<sp/>edge,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="108"><highlight class="comment">/**<sp/>writes<sp/>the<sp/>starting<sp/>line<sp/>to<sp/>a<sp/>GML<sp/>graph<sp/>file,<sp/>does<sp/>not<sp/>open<sp/>a<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__GMLgraph_1ga739cfa7343d0c4e840c8ce5cae472215" kindref="member">SCIPgmlWriteOpening</ref>(</highlight></codeline>
<codeline lineno="111"><highlight class="normal"><sp/><sp/><sp/>FILE*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>file<sp/>to<sp/>write<sp/>to<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>directed<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>is<sp/>the<sp/>graph<sp/>directed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="114"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="115"><highlight class="comment">/**<sp/>writes<sp/>the<sp/>ending<sp/>lines<sp/>to<sp/>a<sp/>GML<sp/>graph<sp/>file,<sp/>does<sp/>not<sp/>close<sp/>a<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__GMLgraph_1ga47a94f613724a22ee73899487bf7e010" kindref="member">SCIPgmlWriteClosing</ref>(</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/>FILE*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>file<sp/>to<sp/>close<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="121"><highlight class="comment">/**@}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="124"><highlight class="comment">/**<sp/>@defgroup<sp/>DataStructures<sp/>Data<sp/>Structures</highlight></codeline>
<codeline lineno="125"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="126"><highlight class="comment"><sp/>*<sp/><sp/>Below<sp/>you<sp/>find<sp/>a<sp/>list<sp/>of<sp/>available<sp/>data<sp/>structures</highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/>*<sp/>@{</highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/>*<sp/>Sparse<sp/>solution</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="136"><highlight class="comment">/**@defgroup<sp/>SparseSol<sp/>Sparse<sp/>solution</highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/>*<sp/>@{</highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="141"><highlight class="comment">/**<sp/>creates<sp/>a<sp/>sparse<sp/>solution<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="143"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="group__SparseSol_1ga6ea4184cea0a17d2c95a60469ff49fcd" kindref="member">SCIPsparseSolCreate</ref>(</highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a88af7fd2fc5827a3e390b432a2e1a5b7" kindref="member">SCIP_SPARSESOL</ref>**<sp/><sp/><sp/><sp/><sp/><sp/>sparsesol,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>created<sp/>sparse<sp/>solution<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__var_8h_1a032edd1f5032513d49e397ebdcc8915b" kindref="member">SCIP_VAR</ref>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vars,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>variables<sp/>in<sp/>the<sp/>sparse<sp/>solution,<sp/>must<sp/>not<sp/>contain<sp/>continuous</highlight></codeline>
<codeline lineno="146"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>variables</highlight></codeline>
<codeline lineno="147"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nvars,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>number<sp/>of<sp/>variables<sp/>to<sp/>store,<sp/>size<sp/>of<sp/>the<sp/>lower<sp/>and<sp/>upper<sp/>bound</highlight></codeline>
<codeline lineno="149"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>arrays</highlight></codeline>
<codeline lineno="150"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cleared<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>should<sp/>the<sp/>lower<sp/>and<sp/>upper<sp/>bound<sp/>arrays<sp/>be<sp/>cleared<sp/>(entries<sp/>set<sp/>to</highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>0)</highlight></codeline>
<codeline lineno="153"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="156"><highlight class="comment">/**<sp/>frees<sp/>sparse<sp/>solution<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SparseSol_1gaa1912d1552fc9e04caa3fb5803bd9bc9" kindref="member">SCIPsparseSolFree</ref>(</highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a88af7fd2fc5827a3e390b432a2e1a5b7" kindref="member">SCIP_SPARSESOL</ref>**<sp/><sp/><sp/><sp/><sp/><sp/>sparsesol<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>a<sp/>sparse<sp/>solution<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="161"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="162"><highlight class="comment">/**<sp/>returns<sp/>the<sp/>variables<sp/>in<sp/>the<sp/>given<sp/>sparse<sp/>solution<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal"><ref refid="type__var_8h_1a032edd1f5032513d49e397ebdcc8915b" kindref="member">SCIP_VAR</ref>**<sp/><ref refid="group__SparseSol_1ga7babfe1bb55c4298018f2a22ecca59cd" kindref="member">SCIPsparseSolGetVars</ref>(</highlight></codeline>
<codeline lineno="165"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a88af7fd2fc5827a3e390b432a2e1a5b7" kindref="member">SCIP_SPARSESOL</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>sparsesol<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>a<sp/>sparse<sp/>solution<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="168"><highlight class="comment">/**<sp/>returns<sp/>the<sp/>number<sp/>of<sp/>variables<sp/>in<sp/>the<sp/>given<sp/>sparse<sp/>solution<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__SparseSol_1ga0bcf8b0410606ec598b8b6050f4fca5a" kindref="member">SCIPsparseSolGetNVars</ref>(</highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a88af7fd2fc5827a3e390b432a2e1a5b7" kindref="member">SCIP_SPARSESOL</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>sparsesol<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>a<sp/>sparse<sp/>solution<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="173"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="174"><highlight class="comment">/**<sp/>returns<sp/>the<sp/>the<sp/>lower<sp/>bound<sp/>array<sp/>for<sp/>all<sp/>variables<sp/>for<sp/>a<sp/>given<sp/>sparse<sp/>solution<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><ref refid="group__SparseSol_1ga6cc8487e1ba6b74d4b09bfb977eab897" kindref="member">SCIPsparseSolGetLbs</ref>(</highlight></codeline>
<codeline lineno="177"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a88af7fd2fc5827a3e390b432a2e1a5b7" kindref="member">SCIP_SPARSESOL</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>sparsesol<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>a<sp/>sparse<sp/>solution<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="180"><highlight class="comment">/**<sp/>returns<sp/>the<sp/>the<sp/>upper<sp/>bound<sp/>array<sp/>for<sp/>all<sp/>variables<sp/>for<sp/>a<sp/>given<sp/>sparse<sp/>solution<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="182"><highlight class="normal"><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><ref refid="group__SparseSol_1ga1a64ad4a509c455337393ae36465bdd2" kindref="member">SCIPsparseSolGetUbs</ref>(</highlight></codeline>
<codeline lineno="183"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a88af7fd2fc5827a3e390b432a2e1a5b7" kindref="member">SCIP_SPARSESOL</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>sparsesol<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>a<sp/>sparse<sp/>solution<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="185"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="186"><highlight class="comment">/**<sp/>constructs<sp/>the<sp/>first<sp/>solution<sp/>of<sp/>sparse<sp/>solution<sp/>(all<sp/>variables<sp/>are<sp/>set<sp/>to<sp/>their<sp/>lower<sp/>bound<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SparseSol_1ga56a6b00fdcf3eefa804e814f7ee2ea46" kindref="member">SCIPsparseSolGetFirstSol</ref>(</highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a88af7fd2fc5827a3e390b432a2e1a5b7" kindref="member">SCIP_SPARSESOL</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>sparsesol,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>sparse<sp/>solutions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sol,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>to<sp/>store<sp/>the<sp/>first<sp/>solution<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="191"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nvars<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>number<sp/>of<sp/>variables<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="194"><highlight class="comment">/**<sp/>constructs<sp/>the<sp/>next<sp/>solution<sp/>of<sp/>the<sp/>sparse<sp/>solution<sp/>and<sp/>return<sp/>whether<sp/>there<sp/>was<sp/>one<sp/>more<sp/>or<sp/>not<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="195"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="196"><highlight class="normal"><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><ref refid="group__SparseSol_1gaed7a10e2bd49c6b18a16e98d37174498" kindref="member">SCIPsparseSolGetNextSol</ref>(</highlight></codeline>
<codeline lineno="197"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a88af7fd2fc5827a3e390b432a2e1a5b7" kindref="member">SCIP_SPARSESOL</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>sparsesol,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>sparse<sp/>solutions<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sol,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>current<sp/>solution<sp/>array<sp/>which<sp/>get<sp/>changed<sp/>to<sp/>the<sp/>next<sp/>solution<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nvars<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>number<sp/>of<sp/>variables<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="202"><highlight class="comment">/**@}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="203"><highlight class="normal"></highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="206"><highlight class="comment"><sp/>*<sp/>Queue</highlight></codeline>
<codeline lineno="207"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="209"><highlight class="comment">/**@defgroup<sp/>Queue<sp/>Queue</highlight></codeline>
<codeline lineno="210"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="211"><highlight class="comment"><sp/>*<sp/>@{</highlight></codeline>
<codeline lineno="212"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="215"><highlight class="comment">/**<sp/>creates<sp/>a<sp/>(circular)<sp/>queue,<sp/>best<sp/>used<sp/>if<sp/>the<sp/>size<sp/>will<sp/>be<sp/>fixed<sp/>or<sp/>will<sp/>not<sp/>be<sp/>increased<sp/>that<sp/>much<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="group__Queue_1ga6dc8027538f4898c89fd5b66a2a2690c" kindref="member">SCIPqueueCreate</ref>(</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1ad5048974efcb22f91f975478cbad85f0" kindref="member">SCIP_QUEUE</ref>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>queue,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>the<sp/>new<sp/>queue<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initsize,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>initial<sp/>number<sp/>of<sp/>available<sp/>element<sp/>slots<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="220"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sizefac<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>memory<sp/>growing<sp/>factor<sp/>applied,<sp/>if<sp/>more<sp/>element<sp/>slots<sp/>are<sp/>needed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="224"><highlight class="comment">/**<sp/>frees<sp/>queue,<sp/>but<sp/>not<sp/>the<sp/>data<sp/>elements<sp/>themselves<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="225"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="226"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__Queue_1ga4fee7625e3c63c4fb57e3a361a1b48a7" kindref="member">SCIPqueueFree</ref>(</highlight></codeline>
<codeline lineno="227"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1ad5048974efcb22f91f975478cbad85f0" kindref="member">SCIP_QUEUE</ref>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>queue<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>a<sp/>queue<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="229"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="230"><highlight class="comment">/**<sp/>clears<sp/>the<sp/>queue,<sp/>but<sp/>doesn&apos;t<sp/>free<sp/>the<sp/>data<sp/>elements<sp/>themselves<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="231"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__Queue_1ga94edad9c6fbfa1c8c09524964b1a677e" kindref="member">SCIPqueueClear</ref>(</highlight></codeline>
<codeline lineno="233"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1ad5048974efcb22f91f975478cbad85f0" kindref="member">SCIP_QUEUE</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>queue<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>queue<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="235"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="236"><highlight class="comment">/**<sp/>inserts<sp/>element<sp/>at<sp/>the<sp/>end<sp/>of<sp/>the<sp/>queue<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="237"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="238"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="group__Queue_1ga9d95806f2a0e8d2838f9f46fa691db2d" kindref="member">SCIPqueueInsert</ref>(</highlight></codeline>
<codeline lineno="239"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1ad5048974efcb22f91f975478cbad85f0" kindref="member">SCIP_QUEUE</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>queue,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>queue<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elem<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>element<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="242"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="243"><highlight class="comment">/**<sp/>removes<sp/>and<sp/>returns<sp/>the<sp/>first<sp/>element<sp/>of<sp/>the<sp/>queue<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="245"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="group__Queue_1ga3bc00e0e5b0b021aa2a4fbb411da1b7a" kindref="member">SCIPqueueRemove</ref>(</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1ad5048974efcb22f91f975478cbad85f0" kindref="member">SCIP_QUEUE</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>queue<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>queue<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="249"><highlight class="comment">/**<sp/>returns<sp/>the<sp/>first<sp/>element<sp/>of<sp/>the<sp/>queue<sp/>without<sp/>removing<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="251"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="group__Queue_1ga13e91e15b6261afe9c85c946a2387fcd" kindref="member">SCIPqueueFirst</ref>(</highlight></codeline>
<codeline lineno="252"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1ad5048974efcb22f91f975478cbad85f0" kindref="member">SCIP_QUEUE</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>queue<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>queue<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="253"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="255"><highlight class="comment">/**<sp/>returns<sp/>whether<sp/>the<sp/>queue<sp/>is<sp/>empty<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="256"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><ref refid="group__Queue_1ga9e7f67671f7c29586116d525253201d7" kindref="member">SCIPqueueIsEmpty</ref>(</highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1ad5048974efcb22f91f975478cbad85f0" kindref="member">SCIP_QUEUE</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>queue<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>queue<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="261"><highlight class="comment">/**<sp/>returns<sp/>the<sp/>number<sp/>of<sp/>elements<sp/>in<sp/>the<sp/>queue<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="263"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__Queue_1ga1c13ac7b52e54fd467517c61d054eaac" kindref="member">SCIPqueueNElems</ref>(</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1ad5048974efcb22f91f975478cbad85f0" kindref="member">SCIP_QUEUE</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>queue<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>queue<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="265"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="266"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="267"><highlight class="comment">/**@}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="268"><highlight class="normal"></highlight></codeline>
<codeline lineno="269"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="270"><highlight class="comment"><sp/>*<sp/>Priority<sp/>Queue</highlight></codeline>
<codeline lineno="271"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="273"><highlight class="comment">/**@defgroup<sp/>PriorityQueue<sp/>Priority<sp/>Queue</highlight></codeline>
<codeline lineno="274"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="275"><highlight class="comment"><sp/>*<sp/>@{</highlight></codeline>
<codeline lineno="276"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="278"><highlight class="comment">/**<sp/>creates<sp/>priority<sp/>queue<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="group__PriorityQueue_1ga0ff8c437c92612853adabb903362fe17" kindref="member">SCIPpqueueCreate</ref>(</highlight></codeline>
<codeline lineno="281"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a9d2620c55e31a5c5c585c70609ceb208" kindref="member">SCIP_PQUEUE</ref>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pqueue,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>a<sp/>priority<sp/>queue<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initsize,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>initial<sp/>number<sp/>of<sp/>available<sp/>element<sp/>slots<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sizefac,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>memory<sp/>growing<sp/>factor<sp/>applied,<sp/>if<sp/>more<sp/>element<sp/>slots<sp/>are<sp/>needed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp))<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="286"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="287"><highlight class="comment">/**<sp/>frees<sp/>priority<sp/>queue,<sp/>but<sp/>not<sp/>the<sp/>data<sp/>elements<sp/>themselves<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="288"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__PriorityQueue_1gabc7da0a14aba48a1906ab62c872ca062" kindref="member">SCIPpqueueFree</ref>(</highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a9d2620c55e31a5c5c585c70609ceb208" kindref="member">SCIP_PQUEUE</ref>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pqueue<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>a<sp/>priority<sp/>queue<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="292"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="293"><highlight class="comment">/**<sp/>clears<sp/>the<sp/>priority<sp/>queue,<sp/>but<sp/>doesn&apos;t<sp/>free<sp/>the<sp/>data<sp/>elements<sp/>themselves<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__PriorityQueue_1ga7eb08f5cc4ffe7845de3433b892e632e" kindref="member">SCIPpqueueClear</ref>(</highlight></codeline>
<codeline lineno="296"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a9d2620c55e31a5c5c585c70609ceb208" kindref="member">SCIP_PQUEUE</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pqueue<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>priority<sp/>queue<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="298"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="299"><highlight class="comment">/**<sp/>inserts<sp/>element<sp/>into<sp/>priority<sp/>queue<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="group__PriorityQueue_1gad786b28e3b3f418aeaf93bd43dae8d8c" kindref="member">SCIPpqueueInsert</ref>(</highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a9d2620c55e31a5c5c585c70609ceb208" kindref="member">SCIP_PQUEUE</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pqueue,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>priority<sp/>queue<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>elem<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>element<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="305"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="306"><highlight class="comment">/**<sp/>removes<sp/>and<sp/>returns<sp/>best<sp/>element<sp/>from<sp/>the<sp/>priority<sp/>queue<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="307"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="308"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="group__PriorityQueue_1gadfc279ce0751db7702262ffe6e45f911" kindref="member">SCIPpqueueRemove</ref>(</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a9d2620c55e31a5c5c585c70609ceb208" kindref="member">SCIP_PQUEUE</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pqueue<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>priority<sp/>queue<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="312"><highlight class="comment">/**<sp/>returns<sp/>the<sp/>best<sp/>element<sp/>of<sp/>the<sp/>queue<sp/>without<sp/>removing<sp/>it<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="313"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="314"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="group__PriorityQueue_1ga52edb6c94c11d3a4bae5d7ce9449ed9d" kindref="member">SCIPpqueueFirst</ref>(</highlight></codeline>
<codeline lineno="315"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a9d2620c55e31a5c5c585c70609ceb208" kindref="member">SCIP_PQUEUE</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pqueue<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>priority<sp/>queue<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="318"><highlight class="comment">/**<sp/>returns<sp/>the<sp/>number<sp/>of<sp/>elements<sp/>in<sp/>the<sp/>queue<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__PriorityQueue_1gade8f0e94c24f95e49768652303f6cd64" kindref="member">SCIPpqueueNElems</ref>(</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a9d2620c55e31a5c5c585c70609ceb208" kindref="member">SCIP_PQUEUE</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pqueue<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>priority<sp/>queue<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="323"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="324"><highlight class="comment">/**<sp/>returns<sp/>the<sp/>elements<sp/>of<sp/>the<sp/>queue;<sp/>changing<sp/>the<sp/>returned<sp/>array<sp/>may<sp/>destroy<sp/>the<sp/>queue&apos;s<sp/>ordering!<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="325"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="326"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><ref refid="group__PriorityQueue_1ga3233b5a2a37b51a962e2bfdd9339bd3a" kindref="member">SCIPpqueueElems</ref>(</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a9d2620c55e31a5c5c585c70609ceb208" kindref="member">SCIP_PQUEUE</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pqueue<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>priority<sp/>queue<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="330"><highlight class="comment">/**@}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331"><highlight class="normal"></highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="334"><highlight class="comment"><sp/>*<sp/>Hash<sp/>Table</highlight></codeline>
<codeline lineno="335"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="336"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="337"><highlight class="comment">/**@defgroup<sp/>HashTable<sp/>Hash<sp/>Table</highlight></codeline>
<codeline lineno="338"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="339"><highlight class="comment"><sp/>*@{</highlight></codeline>
<codeline lineno="340"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="342"><highlight class="comment">/**<sp/>returns<sp/>a<sp/>reasonable<sp/>hash<sp/>table<sp/>size<sp/>(a<sp/>prime<sp/>number)<sp/>that<sp/>is<sp/>at<sp/>least<sp/>as<sp/>large<sp/>as<sp/>the<sp/>specified<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="343"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__HashTable_1ga88998585e83f8b9634e3de30c0064b24" kindref="member">SCIPcalcHashtableSize</ref>(</highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minsize<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>minimal<sp/>size<sp/>of<sp/>the<sp/>hash<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="346"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="347"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="348"><highlight class="comment">/**<sp/>creates<sp/>a<sp/>hash<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="group__HashTable_1ga710093a3fde556c004b45e027fc95544" kindref="member">SCIPhashtableCreate</ref>(</highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1ad34b75a37536cdd2c578a3ada6554117" kindref="member">SCIP_HASHTABLE</ref>**<sp/><sp/><sp/><sp/><sp/><sp/>hashtable,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>created<sp/>hash<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/>BMS_BLKMEM*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blkmem,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>block<sp/>memory<sp/>used<sp/>to<sp/>store<sp/>hash<sp/>table<sp/>entries<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="353"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tablesize,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>size<sp/>of<sp/>the<sp/>hash<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__HashTable_1gac7536110cb0a283654d0a5bb3d1cc6d7" kindref="member">SCIP_DECL_HASHGETKEY</ref>((*hashgetkey)),<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>gets<sp/>the<sp/>key<sp/>of<sp/>the<sp/>given<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="355"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__HashTable_1ga52b1c0d0843ed79188f9372f1a5a6965" kindref="member">SCIP_DECL_HASHKEYEQ</ref><sp/>((*hashkeyeq)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>returns<sp/>TRUE<sp/>iff<sp/>both<sp/>keys<sp/>are<sp/>equal<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__HashTable_1ga8c05b46e1e9846136e6db221a663ae91" kindref="member">SCIP_DECL_HASHKEYVAL</ref>((*hashkeyval)),<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>returns<sp/>the<sp/>hash<sp/>value<sp/>of<sp/>the<sp/>key<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="357"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>userptr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>user<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="358"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="360"><highlight class="comment">/**<sp/>frees<sp/>the<sp/>hash<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__HashTable_1ga196b167ef57e488adbf52344f6230285" kindref="member">SCIPhashtableFree</ref>(</highlight></codeline>
<codeline lineno="363"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1ad34b75a37536cdd2c578a3ada6554117" kindref="member">SCIP_HASHTABLE</ref>**<sp/><sp/><sp/><sp/><sp/><sp/>hashtable<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>the<sp/>hash<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="364"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="366"><highlight class="comment">/**<sp/>removes<sp/>all<sp/>elements<sp/>of<sp/>the<sp/>hash<sp/>table</highlight></codeline>
<codeline lineno="367"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="368"><highlight class="comment"><sp/>*<sp/><sp/>@note<sp/>From<sp/>a<sp/>performance<sp/>point<sp/>of<sp/>view<sp/>you<sp/>should<sp/>not<sp/>fill<sp/>and<sp/>clear<sp/>a<sp/>hash<sp/>table<sp/>too<sp/>often<sp/>since<sp/>the<sp/>clearing<sp/>can</highlight></codeline>
<codeline lineno="369"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>be<sp/>expensive.<sp/>Clearing<sp/>is<sp/>done<sp/>by<sp/>looping<sp/>over<sp/>all<sp/>buckets<sp/>and<sp/>removing<sp/>the<sp/>hash<sp/>table<sp/>lists<sp/>one-by-one.</highlight></codeline>
<codeline lineno="370"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="371"><highlight class="comment"><sp/>*<sp/><sp/>@deprecated<sp/>Please<sp/>use<sp/>SCIPhashtableRemoveAll()</highlight></codeline>
<codeline lineno="372"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="373"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__HashTable_1ga4469d030912856aa4da7a48063ab58d9" kindref="member">SCIPhashtableClear</ref>(</highlight></codeline>
<codeline lineno="375"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1ad34b75a37536cdd2c578a3ada6554117" kindref="member">SCIP_HASHTABLE</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>hashtable<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>hash<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="378"><highlight class="comment">/**<sp/>inserts<sp/>element<sp/>in<sp/>hash<sp/>table<sp/>(multiple<sp/>inserts<sp/>of<sp/>same<sp/>element<sp/>possible)</highlight></codeline>
<codeline lineno="379"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="380"><highlight class="comment"><sp/>*<sp/><sp/>@note<sp/>A<sp/>pointer<sp/>to<sp/>a<sp/>hashtablelist<sp/>returned<sp/>by<sp/>SCIPhashtableRetrieveNext()<sp/>might<sp/>get<sp/>invalid<sp/>when<sp/>adding<sp/>an<sp/>element</highlight></codeline>
<codeline lineno="381"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>to<sp/>the<sp/>hash<sp/>table,<sp/>due<sp/>to<sp/>dynamic<sp/>resizing.</highlight></codeline>
<codeline lineno="382"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="group__HashTable_1gad499ca1ae44ec958411757d0cb8c2f74" kindref="member">SCIPhashtableInsert</ref>(</highlight></codeline>
<codeline lineno="385"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1ad34b75a37536cdd2c578a3ada6554117" kindref="member">SCIP_HASHTABLE</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>hashtable,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>hash<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>element<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>element<sp/>to<sp/>insert<sp/>into<sp/>the<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="387"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="389"><highlight class="comment">/**<sp/>inserts<sp/>element<sp/>in<sp/>hash<sp/>table<sp/>(multiple<sp/>insertion<sp/>of<sp/>same<sp/>element<sp/>is<sp/>checked<sp/>and<sp/>results<sp/>in<sp/>an<sp/>error)</highlight></codeline>
<codeline lineno="390"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="391"><highlight class="comment"><sp/>*<sp/><sp/>@note<sp/>A<sp/>pointer<sp/>to<sp/>a<sp/>hashtablelist<sp/>returned<sp/>by<sp/>SCIPhashtableRetrieveNext()<sp/>might<sp/>get<sp/>invalid<sp/>when<sp/>adding<sp/>a<sp/>new</highlight></codeline>
<codeline lineno="392"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>element<sp/>to<sp/>the<sp/>hash<sp/>table,<sp/>due<sp/>to<sp/>dynamic<sp/>resizing.</highlight></codeline>
<codeline lineno="393"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="394"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="395"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="group__HashTable_1ga52179ec979e131317ffb07c9c9579ccb" kindref="member">SCIPhashtableSafeInsert</ref>(</highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1ad34b75a37536cdd2c578a3ada6554117" kindref="member">SCIP_HASHTABLE</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>hashtable,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>hash<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>element<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>element<sp/>to<sp/>insert<sp/>into<sp/>the<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="399"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="400"><highlight class="comment">/**<sp/>retrieve<sp/>element<sp/>with<sp/>key<sp/>from<sp/>hash<sp/>table,<sp/>returns<sp/>NULL<sp/>if<sp/>not<sp/>existing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="401"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="group__HashTable_1ga38af5e199e72c2d1e9e30a50b92f02de" kindref="member">SCIPhashtableRetrieve</ref>(</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1ad34b75a37536cdd2c578a3ada6554117" kindref="member">SCIP_HASHTABLE</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>hashtable,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>hash<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>to<sp/>retrieve<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="406"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="407"><highlight class="comment">/**<sp/>retrieve<sp/>element<sp/>with<sp/>key<sp/>from<sp/>hash<sp/>table,<sp/>returns<sp/>NULL<sp/>if<sp/>not<sp/>existing</highlight></codeline>
<codeline lineno="408"><highlight class="comment"><sp/>*<sp/><sp/>can<sp/>be<sp/>used<sp/>to<sp/>retrieve<sp/>all<sp/>entries<sp/>with<sp/>the<sp/>same<sp/>key<sp/>(one-by-one)</highlight></codeline>
<codeline lineno="409"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="410"><highlight class="comment"><sp/>*<sp/><sp/>@note<sp/>The<sp/>returned<sp/>hashtablelist<sp/>pointer<sp/>might<sp/>get<sp/>invalid<sp/>when<sp/>adding<sp/>a<sp/>new<sp/>element<sp/>to<sp/>the<sp/>hash<sp/>table.</highlight></codeline>
<codeline lineno="411"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="412"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="413"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="group__HashTable_1gae9c4d7208c3f38957f8eafa1094410ca" kindref="member">SCIPhashtableRetrieveNext</ref>(</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1ad34b75a37536cdd2c578a3ada6554117" kindref="member">SCIP_HASHTABLE</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>hashtable,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>hash<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a627f6a0ea9509715be86152028c3b1c8" kindref="member">SCIP_HASHTABLELIST</ref>**<sp/><sp/>hashtablelist,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>input:<sp/>entry<sp/>in<sp/>hash<sp/>table<sp/>list<sp/>from<sp/>which<sp/>to<sp/>start<sp/>searching,<sp/>or<sp/>NULL</highlight></codeline>
<codeline lineno="416"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>output:<sp/>entry<sp/>in<sp/>hash<sp/>table<sp/>list<sp/>corresponding<sp/>to<sp/>element<sp/>after</highlight></codeline>
<codeline lineno="417"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retrieved<sp/>one,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>key<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>to<sp/>retrieve<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="421"><highlight class="comment">/**<sp/>returns<sp/>whether<sp/>the<sp/>given<sp/>element<sp/>exists<sp/>in<sp/>the<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="423"><highlight class="normal"><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><ref refid="group__HashTable_1ga21e69c964ab3785e1aaa36b2af74c720" kindref="member">SCIPhashtableExists</ref>(</highlight></codeline>
<codeline lineno="424"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1ad34b75a37536cdd2c578a3ada6554117" kindref="member">SCIP_HASHTABLE</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>hashtable,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>hash<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>element<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>element<sp/>to<sp/>search<sp/>in<sp/>the<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="427"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="428"><highlight class="comment">/**<sp/>removes<sp/>element<sp/>from<sp/>the<sp/>hash<sp/>table,<sp/>if<sp/>it<sp/>exists<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="group__HashTable_1gad1088f82af9c0d3c1768e40aff2eb588" kindref="member">SCIPhashtableRemove</ref>(</highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1ad34b75a37536cdd2c578a3ada6554117" kindref="member">SCIP_HASHTABLE</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>hashtable,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>hash<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>element<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>element<sp/>to<sp/>remove<sp/>from<sp/>the<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="434"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="435"><highlight class="comment">/**<sp/>removes<sp/>all<sp/>elements<sp/>of<sp/>the<sp/>hash<sp/>table</highlight></codeline>
<codeline lineno="436"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="437"><highlight class="comment"><sp/>*<sp/><sp/>@note<sp/>From<sp/>a<sp/>performance<sp/>point<sp/>of<sp/>view<sp/>you<sp/>should<sp/>not<sp/>fill<sp/>and<sp/>clear<sp/>a<sp/>hash<sp/>table<sp/>too<sp/>often<sp/>since<sp/>the<sp/>clearing<sp/>can</highlight></codeline>
<codeline lineno="438"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>be<sp/>expensive.<sp/>Clearing<sp/>is<sp/>done<sp/>by<sp/>looping<sp/>over<sp/>all<sp/>buckets<sp/>and<sp/>removing<sp/>the<sp/>hash<sp/>table<sp/>lists<sp/>one-by-one.</highlight></codeline>
<codeline lineno="439"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="440"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="441"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__HashTable_1ga8942889cec8c64206cf464f75f720e11" kindref="member">SCIPhashtableRemoveAll</ref>(</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1ad34b75a37536cdd2c578a3ada6554117" kindref="member">SCIP_HASHTABLE</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>hashtable<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>hash<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="445"><highlight class="comment">/**<sp/>returns<sp/>number<sp/>of<sp/>hash<sp/>table<sp/>elements<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="446"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="447"><highlight class="normal"><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref><sp/><ref refid="group__HashTable_1gafd5202e03bcde6fa474a0653cb48687a" kindref="member">SCIPhashtableGetNElements</ref>(</highlight></codeline>
<codeline lineno="448"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1ad34b75a37536cdd2c578a3ada6554117" kindref="member">SCIP_HASHTABLE</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>hashtable<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>hash<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="451"><highlight class="comment">/**<sp/>returns<sp/>the<sp/>load<sp/>of<sp/>the<sp/>given<sp/>hash<sp/>table<sp/>in<sp/>percentage<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453"><highlight class="normal"><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><ref refid="group__HashTable_1gaa0de9e7fb99eaaa3c862ed0030ddaa6a" kindref="member">SCIPhashtableGetLoad</ref>(</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1ad34b75a37536cdd2c578a3ada6554117" kindref="member">SCIP_HASHTABLE</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>hashtable<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>hash<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="456"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="457"><highlight class="comment">/**<sp/>prints<sp/>statistics<sp/>about<sp/>hash<sp/>table<sp/>usage<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="458"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__HashTable_1gac2acac23d58b25c23bbc71f48d57b256" kindref="member">SCIPhashtablePrintStatistics</ref>(</highlight></codeline>
<codeline lineno="460"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1ad34b75a37536cdd2c578a3ada6554117" kindref="member">SCIP_HASHTABLE</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>hashtable,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>hash<sp/>table<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__message_8h_1a7d71113339d14873806c1399442fae8d" kindref="member">SCIP_MESSAGEHDLR</ref>*<sp/><sp/><sp/><sp/><sp/>messagehdlr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>message<sp/>handler<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="463"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="464"><highlight class="comment">/**<sp/>standard<sp/>hash<sp/>key<sp/>comparator<sp/>for<sp/>string<sp/>keys<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="465"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466"><highlight class="normal"><ref refid="group__HashTable_1ga52b1c0d0843ed79188f9372f1a5a6965" kindref="member">SCIP_DECL_HASHKEYEQ</ref>(SCIPhashKeyEqString);</highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="468"><highlight class="comment">/**<sp/>standard<sp/>hashing<sp/>function<sp/>for<sp/>string<sp/>keys<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="469"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="470"><highlight class="normal"><ref refid="group__HashTable_1ga8c05b46e1e9846136e6db221a663ae91" kindref="member">SCIP_DECL_HASHKEYVAL</ref>(SCIPhashKeyValString);</highlight></codeline>
<codeline lineno="471"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="472"><highlight class="comment">/**<sp/>gets<sp/>the<sp/>element<sp/>as<sp/>the<sp/>key<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="473"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="474"><highlight class="normal"><ref refid="group__HashTable_1gac7536110cb0a283654d0a5bb3d1cc6d7" kindref="member">SCIP_DECL_HASHGETKEY</ref>(SCIPhashGetKeyStandard);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="476"><highlight class="comment">/**<sp/>returns<sp/>TRUE<sp/>iff<sp/>both<sp/>keys(pointer)<sp/>are<sp/>equal<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="478"><highlight class="normal"><ref refid="group__HashTable_1ga52b1c0d0843ed79188f9372f1a5a6965" kindref="member">SCIP_DECL_HASHKEYEQ</ref>(SCIPhashKeyEqPtr);</highlight></codeline>
<codeline lineno="479"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="480"><highlight class="comment">/**<sp/>returns<sp/>the<sp/>hash<sp/>value<sp/>of<sp/>the<sp/>key<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="481"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="482"><highlight class="normal"><ref refid="group__HashTable_1ga8c05b46e1e9846136e6db221a663ae91" kindref="member">SCIP_DECL_HASHKEYVAL</ref>(SCIPhashKeyValPtr);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="484"><highlight class="comment">/**@}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"></highlight></codeline>
<codeline lineno="487"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="488"><highlight class="comment"><sp/>*<sp/>Hash<sp/>Map</highlight></codeline>
<codeline lineno="489"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="491"><highlight class="comment">/**@defgroup<sp/>HashMap<sp/>Hash<sp/>Map</highlight></codeline>
<codeline lineno="492"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="493"><highlight class="comment"><sp/>*@{</highlight></codeline>
<codeline lineno="494"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="495"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="496"><highlight class="comment">/**<sp/>creates<sp/>a<sp/>hash<sp/>map<sp/>mapping<sp/>pointers<sp/>to<sp/>pointers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="497"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="498"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="group__HashMap_1gaa89c4efb224675b9eb02d8077d66b589" kindref="member">SCIPhashmapCreate</ref>(</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a4372d6d4f362b30349748b72c8a28704" kindref="member">SCIP_HASHMAP</ref>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hashmap,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>created<sp/>hash<sp/>map<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/>BMS_BLKMEM*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blkmem,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>block<sp/>memory<sp/>used<sp/>to<sp/>store<sp/>hash<sp/>map<sp/>entries<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mapsize<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>size<sp/>of<sp/>the<sp/>hash<sp/>map<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="504"><highlight class="comment">/**<sp/>frees<sp/>the<sp/>hash<sp/>map<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="505"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="506"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__HashMap_1ga0608b946119ee33eddccdc7e11b536a5" kindref="member">SCIPhashmapFree</ref>(</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a4372d6d4f362b30349748b72c8a28704" kindref="member">SCIP_HASHMAP</ref>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hashmap<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>the<sp/>hash<sp/>map<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="510"><highlight class="comment">/**<sp/>inserts<sp/>new<sp/>origin-&gt;image<sp/>pair<sp/>in<sp/>hash<sp/>map<sp/>(must<sp/>not<sp/>be<sp/>called<sp/>for<sp/>already<sp/>existing<sp/>origins!)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="512"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="group__HashMap_1ga6c5891f54d8ad4b6687fbf656f7c790a" kindref="member">SCIPhashmapInsert</ref>(</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a4372d6d4f362b30349748b72c8a28704" kindref="member">SCIP_HASHMAP</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hashmap,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>hash<sp/>map<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>origin,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>origin<sp/>to<sp/>set<sp/>image<sp/>for<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>image<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>new<sp/>image<sp/>for<sp/>origin<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="518"><highlight class="comment">/**<sp/>retrieves<sp/>image<sp/>of<sp/>given<sp/>origin<sp/>from<sp/>the<sp/>hash<sp/>map,<sp/>or<sp/>NULL<sp/>if<sp/>no<sp/>image<sp/>exists<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="group__HashMap_1ga94d0a3d1317bd2c826aec734dfe7a578" kindref="member">SCIPhashmapGetImage</ref>(</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a4372d6d4f362b30349748b72c8a28704" kindref="member">SCIP_HASHMAP</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hashmap,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>hash<sp/>map<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>origin<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>origin<sp/>to<sp/>retrieve<sp/>image<sp/>for<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="525"><highlight class="comment">/**<sp/>sets<sp/>image<sp/>for<sp/>given<sp/>origin<sp/>in<sp/>the<sp/>hash<sp/>map,<sp/>either<sp/>by<sp/>modifying<sp/>existing<sp/>origin-&gt;image<sp/>pair<sp/>or<sp/>by<sp/>appending<sp/>a</highlight></codeline>
<codeline lineno="526"><highlight class="comment"><sp/>*<sp/><sp/>new<sp/>origin-&gt;image<sp/>pair</highlight></codeline>
<codeline lineno="527"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="528"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="529"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="group__HashMap_1ga775b2bba1e36c6d7a6a88bad540cd829" kindref="member">SCIPhashmapSetImage</ref>(</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a4372d6d4f362b30349748b72c8a28704" kindref="member">SCIP_HASHMAP</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hashmap,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>hash<sp/>map<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>origin,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>origin<sp/>to<sp/>set<sp/>image<sp/>for<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="532"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>image<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>new<sp/>image<sp/>for<sp/>origin<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="533"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="534"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="535"><highlight class="comment">/**<sp/>checks<sp/>whether<sp/>an<sp/>image<sp/>to<sp/>the<sp/>given<sp/>origin<sp/>exists<sp/>in<sp/>the<sp/>hash<sp/>map<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="537"><highlight class="normal"><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><ref refid="group__HashMap_1gaabc086ffe2d5d7a30c78fb6801d9824d" kindref="member">SCIPhashmapExists</ref>(</highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a4372d6d4f362b30349748b72c8a28704" kindref="member">SCIP_HASHMAP</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hashmap,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>hash<sp/>map<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>origin<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>origin<sp/>to<sp/>search<sp/>for<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="541"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="542"><highlight class="comment">/**<sp/>removes<sp/>origin-&gt;image<sp/>pair<sp/>from<sp/>the<sp/>hash<sp/>map,<sp/>if<sp/>it<sp/>exists<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="543"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="544"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="group__HashMap_1gadd88c803cd5317b9dd4d3cb67356c697" kindref="member">SCIPhashmapRemove</ref>(</highlight></codeline>
<codeline lineno="545"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a4372d6d4f362b30349748b72c8a28704" kindref="member">SCIP_HASHMAP</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hashmap,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>hash<sp/>map<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>origin<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>origin<sp/>to<sp/>remove<sp/>from<sp/>the<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="548"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="549"><highlight class="comment">/**<sp/>prints<sp/>statistics<sp/>about<sp/>hash<sp/>map<sp/>usage<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="550"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__HashMap_1ga449a592a52acdd69246f24ba02b710b5" kindref="member">SCIPhashmapPrintStatistics</ref>(</highlight></codeline>
<codeline lineno="552"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a4372d6d4f362b30349748b72c8a28704" kindref="member">SCIP_HASHMAP</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hashmap,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>hash<sp/>map<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__message_8h_1a7d71113339d14873806c1399442fae8d" kindref="member">SCIP_MESSAGEHDLR</ref>*<sp/><sp/><sp/><sp/><sp/>messagehdlr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>message<sp/>handler<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="555"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="556"><highlight class="comment">/**<sp/>indicates<sp/>whether<sp/>a<sp/>hash<sp/>map<sp/>has<sp/>no<sp/>entries<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="557"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="558"><highlight class="normal"><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><ref refid="group__HashMap_1gaaf786e6a1c5f570160cfbf980712ec97" kindref="member">SCIPhashmapIsEmpty</ref>(</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a4372d6d4f362b30349748b72c8a28704" kindref="member">SCIP_HASHMAP</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hashmap<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>hash<sp/>map<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="560"><highlight class="normal">);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="562"><highlight class="comment">/**<sp/>gives<sp/>the<sp/>number<sp/>of<sp/>entries<sp/>in<sp/>a<sp/>hash<sp/>map<sp/>*/</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="563"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="564"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__HashMap_1gaa42e2b5696030d88b617b59635bca41c" kindref="member">SCIPhashmapGetNEntries</ref>(</highlight></codeline>
<codeline lineno="565"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a4372d6d4f362b30349748b72c8a28704" kindref="member">SCIP_HASHMAP</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hashmap<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>hash<sp/>map<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="566"><highlight class="normal">);</highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="568"><highlight class="comment">/**<sp/>gives<sp/>the<sp/>number<sp/>of<sp/>lists<sp/>(buckets)<sp/>in<sp/>a<sp/>hash<sp/>map<sp/>*/</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="569"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__HashMap_1ga1c23f5d8b09596f36095c538a3ca8b90" kindref="member">SCIPhashmapGetNLists</ref>(</highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a4372d6d4f362b30349748b72c8a28704" kindref="member">SCIP_HASHMAP</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hashmap<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>hash<sp/>map<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal">);</highlight></codeline>
<codeline lineno="573"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="574"><highlight class="comment">/**<sp/>gives<sp/>a<sp/>specific<sp/>list<sp/>(bucket)<sp/>in<sp/>a<sp/>hash<sp/>map<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="575"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="576"><highlight class="normal"><ref refid="type__misc_8h_1a58bc076cfc7fa95aa5cb8a09cb7db240" kindref="member">SCIP_HASHMAPLIST</ref>*<sp/><ref refid="group__HashMap_1ga1b4928cccf29294eb7a0eef8d513eaf0" kindref="member">SCIPhashmapGetList</ref>(</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a4372d6d4f362b30349748b72c8a28704" kindref="member">SCIP_HASHMAP</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hashmap,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>hash<sp/>map<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>listindex<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>index<sp/>of<sp/>hash<sp/>map<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="579"><highlight class="normal">);</highlight></codeline>
<codeline lineno="580"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="581"><highlight class="comment">/**<sp/>gives<sp/>the<sp/>number<sp/>of<sp/>entries<sp/>in<sp/>a<sp/>list<sp/>of<sp/>a<sp/>hash<sp/>map<sp/>*/</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="582"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__HashMap_1gae5407947043ae5775285811aaca21ccd" kindref="member">SCIPhashmapListGetNEntries</ref>(</highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a58bc076cfc7fa95aa5cb8a09cb7db240" kindref="member">SCIP_HASHMAPLIST</ref>*<sp/><sp/><sp/><sp/><sp/>hashmaplist<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>hash<sp/>map<sp/>list,<sp/>can<sp/>be<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="585"><highlight class="normal">);</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="587"><highlight class="comment">/**<sp/>retrieves<sp/>origin<sp/>of<sp/>given<sp/>entry<sp/>in<sp/>a<sp/>hash<sp/>map<sp/>*/</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="group__HashMap_1gae36533115853982dbe9abf07a66dbf4c" kindref="member">SCIPhashmapListGetOrigin</ref>(</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a58bc076cfc7fa95aa5cb8a09cb7db240" kindref="member">SCIP_HASHMAPLIST</ref>*<sp/><sp/><sp/><sp/><sp/>hashmaplist<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>hash<sp/>map<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal">);</highlight></codeline>
<codeline lineno="592"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="593"><highlight class="comment">/**<sp/>retrieves<sp/>image<sp/>of<sp/>given<sp/>entry<sp/>in<sp/>a<sp/>hash<sp/>map<sp/>*/</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="594"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="595"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="group__HashMap_1gae6e3eb18475b04851577aafe1be61b41" kindref="member">SCIPhashmapListGetImage</ref>(</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a58bc076cfc7fa95aa5cb8a09cb7db240" kindref="member">SCIP_HASHMAPLIST</ref>*<sp/><sp/><sp/><sp/><sp/>hashmaplist<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>hash<sp/>map<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="597"><highlight class="normal">);</highlight></codeline>
<codeline lineno="598"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="599"><highlight class="comment">/**<sp/>retrieves<sp/>next<sp/>entry<sp/>from<sp/>given<sp/>entry<sp/>in<sp/>a<sp/>hash<sp/>map<sp/>list,<sp/>or<sp/>NULL<sp/>if<sp/>at<sp/>end<sp/>of<sp/>list.<sp/>*/</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="600"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="601"><highlight class="normal"><ref refid="type__misc_8h_1a58bc076cfc7fa95aa5cb8a09cb7db240" kindref="member">SCIP_HASHMAPLIST</ref>*<sp/><ref refid="group__HashMap_1gad112643475175485603d47d85a9a5839" kindref="member">SCIPhashmapListGetNext</ref>(</highlight></codeline>
<codeline lineno="602"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a58bc076cfc7fa95aa5cb8a09cb7db240" kindref="member">SCIP_HASHMAPLIST</ref>*<sp/><sp/><sp/><sp/><sp/>hashmaplist<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>hash<sp/>map<sp/>list<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal">);</highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="605"><highlight class="comment">/**<sp/>removes<sp/>all<sp/>entries<sp/>in<sp/>a<sp/>hash<sp/>map.<sp/>*/</highlight><highlight class="normal"><sp/></highlight></codeline>
<codeline lineno="606"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="607"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="group__HashMap_1gabe91bd21dcc1028a65d2dcde3566ec61" kindref="member">SCIPhashmapRemoveAll</ref>(</highlight></codeline>
<codeline lineno="608"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a4372d6d4f362b30349748b72c8a28704" kindref="member">SCIP_HASHMAP</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>hashmap<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>hash<sp/>map<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="609"><highlight class="normal">);</highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="611"><highlight class="comment">/**@}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="612"><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"></highlight></codeline>
<codeline lineno="615"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="616"><highlight class="comment"><sp/>*<sp/>Activity</highlight></codeline>
<codeline lineno="617"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="619"><highlight class="comment">/**@defgroup<sp/>ResourceActivity<sp/>Resource<sp/>activity</highlight></codeline>
<codeline lineno="620"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="621"><highlight class="comment"><sp/>*@{</highlight></codeline>
<codeline lineno="622"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="624"><highlight class="comment">/**<sp/>create<sp/>a<sp/>resource<sp/>activity<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="625"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="626"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="group__ResourceActivity_1ga35cb820e86220272113317077ac2ab1d" kindref="member">SCIPactivityCreate</ref>(</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a7514fdec34fb0e3416ada44705f1af46" kindref="member">SCIP_RESOURCEACTIVITY</ref>**<sp/>activity,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>resource<sp/>activity<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__var_8h_1a032edd1f5032513d49e397ebdcc8915b" kindref="member">SCIP_VAR</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>start<sp/>time<sp/>variable<sp/>of<sp/>the<sp/>activity<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>duration,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>duration<sp/>of<sp/>the<sp/>activity<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>demand<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>demand<sp/>of<sp/>the<sp/>activity<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="633"><highlight class="comment">/**<sp/>frees<sp/>a<sp/>resource<sp/>activity<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="634"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__ResourceActivity_1gadcb2d60a115167c46a0ac8a303f7c2da" kindref="member">SCIPactivityFree</ref>(</highlight></codeline>
<codeline lineno="636"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a7514fdec34fb0e3416ada44705f1af46" kindref="member">SCIP_RESOURCEACTIVITY</ref>**<sp/>activity<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>the<sp/>resource<sp/>activity<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="638"><highlight class="normal"></highlight></codeline>
<codeline lineno="639"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NDEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="641"><highlight class="comment">/**<sp/>returns<sp/>the<sp/>start<sp/>time<sp/>variable<sp/>of<sp/>the<sp/>resource<sp/>activity<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><ref refid="type__var_8h_1a032edd1f5032513d49e397ebdcc8915b" kindref="member">SCIP_VAR</ref>*<sp/><ref refid="group__ResourceActivity_1gaeb378f5caf6fcfa26956455f469a41fa" kindref="member">SCIPactivityGetVar</ref>(</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a7514fdec34fb0e3416ada44705f1af46" kindref="member">SCIP_RESOURCEACTIVITY</ref>*<sp/>activity<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>resource<sp/>activity<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="645"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="646"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="647"><highlight class="comment">/**<sp/>returns<sp/>the<sp/>duration<sp/>of<sp/>the<sp/>resource<sp/>activity<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="648"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="649"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__ResourceActivity_1ga778948d89fbc5e213c340f2c5eb54c9e" kindref="member">SCIPactivityGetDuration</ref>(</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a7514fdec34fb0e3416ada44705f1af46" kindref="member">SCIP_RESOURCEACTIVITY</ref>*<sp/>activity<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>resource<sp/>activity<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="653"><highlight class="comment">/**<sp/>returns<sp/>the<sp/>demand<sp/>of<sp/>the<sp/>resource<sp/>activity<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="654"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__ResourceActivity_1gad490e91d9eba4df4009054768850458a" kindref="member">SCIPactivityGetDemand</ref>(</highlight></codeline>
<codeline lineno="656"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a7514fdec34fb0e3416ada44705f1af46" kindref="member">SCIP_RESOURCEACTIVITY</ref>*<sp/>activity<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>resource<sp/>activity<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="658"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="659"><highlight class="comment">/**<sp/>returns<sp/>the<sp/>energy<sp/>of<sp/>the<sp/>resource<sp/>activity<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__ResourceActivity_1gab94f4fc18e475b6b8e4d23d841836efd" kindref="member">SCIPactivityGetEnergy</ref>(</highlight></codeline>
<codeline lineno="662"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a7514fdec34fb0e3416ada44705f1af46" kindref="member">SCIP_RESOURCEACTIVITY</ref>*<sp/>activity<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>resource<sp/>activity<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="666"><highlight class="normal"></highlight></codeline>
<codeline lineno="667"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCIPactivityGetVar(activity)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((activity)-&gt;var)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCIPactivityGetDuration(activity)<sp/><sp/><sp/><sp/>((activity)-&gt;duration)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCIPactivityGetDemand(activity)<sp/><sp/><sp/><sp/><sp/><sp/>((activity)-&gt;demand)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCIPactivityGetEnergy(activity)<sp/><sp/><sp/><sp/><sp/><sp/>((activity)-&gt;duration<sp/>*<sp/>(activity)-&gt;demand)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"></highlight></codeline>
<codeline lineno="672"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="673"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="674"><highlight class="comment">/**@}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="675"><highlight class="normal"></highlight></codeline>
<codeline lineno="676"><highlight class="normal"></highlight></codeline>
<codeline lineno="677"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="678"><highlight class="comment"><sp/>*<sp/>Resource<sp/>Profile</highlight></codeline>
<codeline lineno="679"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="680"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="681"><highlight class="comment">/**@defgroup<sp/>ResourceProfile<sp/>Resource<sp/>Profile</highlight></codeline>
<codeline lineno="682"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="683"><highlight class="comment"><sp/>*@{</highlight></codeline>
<codeline lineno="684"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="685"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="686"><highlight class="comment">/**<sp/>creates<sp/>resource<sp/>profile<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="687"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="688"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="group__ResourceProfile_1ga7658a32b854fc5191b46810bac73d9d7" kindref="member">SCIPprofileCreate</ref>(</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1adaf14c7d7037415e7ade9279c6e88e79" kindref="member">SCIP_PROFILE</ref>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>profile,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>resource<sp/>profile<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>capacity<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>resource<sp/>capacity<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="691"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="692"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="693"><highlight class="comment">/**<sp/>frees<sp/>given<sp/>resource<sp/>profile<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="695"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__ResourceProfile_1ga7016b24a2aeb343ad69769b24a784e65" kindref="member">SCIPprofileFree</ref>(</highlight></codeline>
<codeline lineno="696"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1adaf14c7d7037415e7ade9279c6e88e79" kindref="member">SCIP_PROFILE</ref>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>profile<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>the<sp/>resource<sp/>profile<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="697"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="699"><highlight class="comment">/**<sp/>output<sp/>of<sp/>the<sp/>given<sp/>resource<sp/>profile<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="700"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__ResourceProfile_1gafff0f400acc43043f90ccdeaa31c4371" kindref="member">SCIPprofilePrint</ref>(</highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1adaf14c7d7037415e7ade9279c6e88e79" kindref="member">SCIP_PROFILE</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>profile,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>resource<sp/>profile<sp/>to<sp/>output<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="703"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__message_8h_1a7d71113339d14873806c1399442fae8d" kindref="member">SCIP_MESSAGEHDLR</ref>*<sp/><sp/><sp/><sp/><sp/>messagehdlr,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>message<sp/>handler<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/>FILE*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>output<sp/>file<sp/>(or<sp/>NULL<sp/>for<sp/>standard<sp/>output)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="705"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="706"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="707"><highlight class="comment">/**<sp/>returns<sp/>the<sp/>capacity<sp/>of<sp/>the<sp/>resource<sp/>profile<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="708"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="709"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__ResourceProfile_1gaa8237b33dacf4c3be8b3b0a76d529509" kindref="member">SCIPprofileGetCapacity</ref>(</highlight></codeline>
<codeline lineno="710"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1adaf14c7d7037415e7ade9279c6e88e79" kindref="member">SCIP_PROFILE</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>profile<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>resource<sp/>profile<sp/>to<sp/>use<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="711"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="712"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="713"><highlight class="comment">/**<sp/>returns<sp/>the<sp/>number<sp/>time<sp/>points<sp/>of<sp/>the<sp/>resource<sp/>profile<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="715"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__ResourceProfile_1ga6eaf94363c61b860d3cf903184ac0a75" kindref="member">SCIPprofileGetNTimepoints</ref>(</highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1adaf14c7d7037415e7ade9279c6e88e79" kindref="member">SCIP_PROFILE</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>profile<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>resource<sp/>profile<sp/>to<sp/>use<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="718"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="719"><highlight class="comment">/**<sp/>returns<sp/>the<sp/>time<sp/>points<sp/>of<sp/>the<sp/>resource<sp/>profile<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="720"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><ref refid="group__ResourceProfile_1gaee9132728b61de6b1b471576abf7d2c9" kindref="member">SCIPprofileGetTimepoints</ref>(</highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1adaf14c7d7037415e7ade9279c6e88e79" kindref="member">SCIP_PROFILE</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>profile<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>resource<sp/>profile<sp/>to<sp/>use<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="723"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="724"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="725"><highlight class="comment">/**<sp/>returns<sp/>the<sp/>loads<sp/>of<sp/>the<sp/>resource<sp/>profile<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="726"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="727"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><ref refid="group__ResourceProfile_1ga276aa1ac0079173408930a4f08d99347" kindref="member">SCIPprofileGetLoads</ref>(</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1adaf14c7d7037415e7ade9279c6e88e79" kindref="member">SCIP_PROFILE</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>profile<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>resource<sp/>profile<sp/>to<sp/>use<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="730"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="731"><highlight class="comment">/**<sp/>returns<sp/>the<sp/>time<sp/>point<sp/>for<sp/>given<sp/>position<sp/>of<sp/>the<sp/>resource<sp/>profile<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__ResourceProfile_1ga7f086df0784e4b626fce1ce93633c2ce" kindref="member">SCIPprofileGetTime</ref>(</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1adaf14c7d7037415e7ade9279c6e88e79" kindref="member">SCIP_PROFILE</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>profile,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>resource<sp/>profile<sp/>to<sp/>use<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="735"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>position<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="736"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="737"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="738"><highlight class="comment">/**<sp/>returns<sp/>the<sp/>loads<sp/>of<sp/>the<sp/>resource<sp/>profile<sp/>at<sp/>the<sp/>given<sp/>position<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="740"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__ResourceProfile_1ga727e8e5ea628d6b362a26a37d2e5226a" kindref="member">SCIPprofileGetLoad</ref>(</highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1adaf14c7d7037415e7ade9279c6e88e79" kindref="member">SCIP_PROFILE</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>profile,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>resource<sp/>profile<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>position<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="744"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="745"><highlight class="comment">/**<sp/>returns<sp/>if<sp/>the<sp/>given<sp/>time<sp/>point<sp/>exists<sp/>in<sp/>the<sp/>resource<sp/>profile<sp/>and<sp/>stores<sp/>the<sp/>position<sp/>of<sp/>the<sp/>given<sp/>time<sp/>point<sp/>if<sp/>it</highlight></codeline>
<codeline lineno="746"><highlight class="comment"><sp/>*<sp/><sp/>exists;<sp/>otherwise<sp/>the<sp/>position<sp/>of<sp/>the<sp/>next<sp/>smaller<sp/>existing<sp/>time<sp/>point<sp/>is<sp/>stored</highlight></codeline>
<codeline lineno="747"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><ref refid="group__ResourceProfile_1ga68720f965a76eee6dfc162046a95b428" kindref="member">SCIPprofileFindLeft</ref>(</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1adaf14c7d7037415e7ade9279c6e88e79" kindref="member">SCIP_PROFILE</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>profile,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>resource<sp/>profile<sp/>to<sp/>search<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>timepoint,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>time<sp/>point<sp/>to<sp/>search<sp/>for<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>position<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="754"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="755"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>core<sp/>into<sp/>resource<sp/>profile;<sp/>if<sp/>the<sp/>core<sp/>is<sp/>non-empty<sp/>the<sp/>resource<sp/>profile<sp/>will<sp/>be<sp/>updated<sp/>otherwise<sp/>nothing</highlight></codeline>
<codeline lineno="756"><highlight class="comment"><sp/>*<sp/><sp/>happens</highlight></codeline>
<codeline lineno="757"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="759"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="group__ResourceProfile_1gaf308709a7674e108464c10a1d92c8b66" kindref="member">SCIPprofileInsertCore</ref>(</highlight></codeline>
<codeline lineno="760"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1adaf14c7d7037415e7ade9279c6e88e79" kindref="member">SCIP_PROFILE</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>profile,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>resource<sp/>profile<sp/>to<sp/>use<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="761"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>left,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>left<sp/>side<sp/>of<sp/>the<sp/>core<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="762"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>right,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>right<sp/>side<sp/>of<sp/>the<sp/>core<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>height,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>height<sp/>of<sp/>the<sp/>core<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>first<sp/>position<sp/>were<sp/>it<sp/>gets<sp/>infeasible<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="765"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>infeasible<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>if<sp/>the<sp/>core<sp/>does<sp/>not<sp/>fit<sp/>due<sp/>to<sp/>capacity<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="768"><highlight class="comment">/**<sp/>subtracts<sp/>the<sp/>height<sp/>from<sp/>the<sp/>resource<sp/>profile<sp/>during<sp/>core<sp/>time<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="group__ResourceProfile_1gaab71bc5b7a851f7ac5883f44b22469f9" kindref="member">SCIPprofileDeleteCore</ref>(</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1adaf14c7d7037415e7ade9279c6e88e79" kindref="member">SCIP_PROFILE</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>profile,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>resource<sp/>profile<sp/>to<sp/>use<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>left,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>left<sp/>side<sp/>of<sp/>the<sp/>core<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>right,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>right<sp/>side<sp/>of<sp/>the<sp/>core<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>height<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>height<sp/>of<sp/>the<sp/>core<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="776"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="777"><highlight class="comment">/**<sp/>return<sp/>the<sp/>earliest<sp/>possible<sp/>starting<sp/>point<sp/>within<sp/>the<sp/>time<sp/>interval<sp/>[lb,ub]<sp/>for<sp/>a<sp/>given<sp/>core<sp/>(given<sp/>by<sp/>its<sp/>height</highlight></codeline>
<codeline lineno="778"><highlight class="comment"><sp/>*<sp/><sp/>and<sp/>duration)</highlight></codeline>
<codeline lineno="779"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="780"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="781"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__ResourceProfile_1ga7a794ed1a686c2a98dd050bc652d6ac8" kindref="member">SCIPprofileGetEarliestFeasibleStart</ref>(</highlight></codeline>
<codeline lineno="782"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1adaf14c7d7037415e7ade9279c6e88e79" kindref="member">SCIP_PROFILE</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>profile,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>resource<sp/>profile<sp/>to<sp/>use<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="783"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>est,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>earliest<sp/>starting<sp/>time<sp/>of<sp/>the<sp/>given<sp/>core<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lst,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>latest<sp/>starting<sp/>time<sp/>of<sp/>the<sp/>given<sp/>core<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>duration,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>duration<sp/>of<sp/>the<sp/>core<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>height,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>height<sp/>of<sp/>the<sp/>core<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>infeasible<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>store<sp/>if<sp/>the<sp/>corer<sp/>cannot<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="789"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="790"><highlight class="comment">/**<sp/>return<sp/>the<sp/>latest<sp/>possible<sp/>starting<sp/>point<sp/>within<sp/>the<sp/>time<sp/>interval<sp/>[lb,ub]<sp/>for<sp/>a<sp/>given<sp/>core<sp/>(given<sp/>by<sp/>its<sp/>height<sp/>and</highlight></codeline>
<codeline lineno="791"><highlight class="comment"><sp/>*<sp/><sp/>duration)</highlight></codeline>
<codeline lineno="792"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__ResourceProfile_1ga2a0158b4eab283ed62ef510a2950b8a3" kindref="member">SCIPprofileGetLatestFeasibleStart</ref>(</highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1adaf14c7d7037415e7ade9279c6e88e79" kindref="member">SCIP_PROFILE</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>profile,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>resource<sp/>profile<sp/>to<sp/>use<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lb,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>earliest<sp/>possible<sp/>start<sp/>point<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ub,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>latest<sp/>possible<sp/>start<sp/>point<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>duration,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>duration<sp/>of<sp/>the<sp/>core<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>height,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>height<sp/>of<sp/>the<sp/>core<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>infeasible<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>store<sp/>if<sp/>the<sp/>core<sp/>cannot<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="802"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="803"><highlight class="comment">/**@}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"></highlight></codeline>
<codeline lineno="805"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="806"><highlight class="comment"><sp/>*<sp/>Directed<sp/>graph</highlight></codeline>
<codeline lineno="807"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="808"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="809"><highlight class="comment">/**@defgroup<sp/>DirectedGraph<sp/>Directed<sp/>Graph</highlight></codeline>
<codeline lineno="810"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="811"><highlight class="comment"><sp/>*@{</highlight></codeline>
<codeline lineno="812"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="813"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="814"><highlight class="comment">/**<sp/>creates<sp/>directed<sp/>graph<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="815"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="816"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="group__DirectedGraph_1ga68c7db9e3c65586baf542b0a681cceed" kindref="member">SCIPdigraphCreate</ref>(</highlight></codeline>
<codeline lineno="817"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a467b6a5a197769a299b70736cc38a34f" kindref="member">SCIP_DIGRAPH</ref>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digraph,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>created<sp/>directed<sp/>graph<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="818"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nnodes<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>number<sp/>of<sp/>nodes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="820"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="821"><highlight class="comment">/**<sp/>resize<sp/>directed<sp/>graph<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="group__DirectedGraph_1gaed650d35fc68d98e3fd48c16447d388b" kindref="member">SCIPdigraphResize</ref>(</highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a467b6a5a197769a299b70736cc38a34f" kindref="member">SCIP_DIGRAPH</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digraph,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>directed<sp/>graph<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nnodes<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>new<sp/>number<sp/>of<sp/>nodes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="827"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="828"><highlight class="comment">/**<sp/>copies<sp/>directed<sp/>graph<sp/>structure</highlight></codeline>
<codeline lineno="829"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="830"><highlight class="comment"><sp/>*<sp/><sp/>@note<sp/>The<sp/>data<sp/>in<sp/>nodedata<sp/>is<sp/>copied<sp/>verbatim.<sp/>This<sp/>possibly<sp/>has<sp/>to<sp/>be<sp/>adapted<sp/>by<sp/>the<sp/>user.</highlight></codeline>
<codeline lineno="831"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="832"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="833"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="group__DirectedGraph_1ga32c22d7006b40ce36da378ee84b4ddb5" kindref="member">SCIPdigraphCopy</ref>(</highlight></codeline>
<codeline lineno="834"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a467b6a5a197769a299b70736cc38a34f" kindref="member">SCIP_DIGRAPH</ref>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>targetdigraph,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>copied<sp/>directed<sp/>graph<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a467b6a5a197769a299b70736cc38a34f" kindref="member">SCIP_DIGRAPH</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sourcedigraph<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>source<sp/>directed<sp/>graph<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="837"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="838"><highlight class="comment">/**<sp/>sets<sp/>the<sp/>sizes<sp/>of<sp/>the<sp/>successor<sp/>lists<sp/>for<sp/>the<sp/>nodes<sp/>in<sp/>a<sp/>directed<sp/>graph<sp/>and<sp/>allocates<sp/>memory<sp/>for<sp/>the<sp/>lists<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="839"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="840"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="group__DirectedGraph_1ga81ba8c7a2c21ce9a3975101c223d0c22" kindref="member">SCIPdigraphSetSizes</ref>(</highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a467b6a5a197769a299b70736cc38a34f" kindref="member">SCIP_DIGRAPH</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digraph,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>directed<sp/>graph<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sizes<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>sizes<sp/>of<sp/>the<sp/>successor<sp/>lists<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="844"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="845"><highlight class="comment">/**<sp/>frees<sp/>given<sp/>directed<sp/>graph<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="846"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="847"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__DirectedGraph_1gab48ddd30f440bca80a4602e0a6a47df4" kindref="member">SCIPdigraphFree</ref>(</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a467b6a5a197769a299b70736cc38a34f" kindref="member">SCIP_DIGRAPH</ref>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digraph<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>the<sp/>directed<sp/>graph<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="850"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="851"><highlight class="comment">/**<sp/>add<sp/>(directed)<sp/>arc<sp/>and<sp/>a<sp/>related<sp/>data<sp/>to<sp/>the<sp/>directed<sp/>graph<sp/>structure</highlight></codeline>
<codeline lineno="852"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="853"><highlight class="comment"><sp/>*<sp/><sp/>@note<sp/>if<sp/>the<sp/>arc<sp/>is<sp/>already<sp/>contained,<sp/>it<sp/>is<sp/>added<sp/>a<sp/>second<sp/>time</highlight></codeline>
<codeline lineno="854"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="855"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="856"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="group__DirectedGraph_1ga57cea2a4d30a00fda1660a4da0e52646" kindref="member">SCIPdigraphAddArc</ref>(</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a467b6a5a197769a299b70736cc38a34f" kindref="member">SCIP_DIGRAPH</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digraph,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>directed<sp/>graph<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>startnode,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>start<sp/>node<sp/>of<sp/>the<sp/>arc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endnode,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>start<sp/>node<sp/>of<sp/>the<sp/>arc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>that<sp/>should<sp/>be<sp/>stored<sp/>for<sp/>the<sp/>arc;<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="862"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="863"><highlight class="comment">/**<sp/>add<sp/>(directed)<sp/>arc<sp/>to<sp/>the<sp/>directed<sp/>graph<sp/>structure,<sp/>if<sp/>it<sp/>is<sp/>not<sp/>contained,<sp/>yet</highlight></codeline>
<codeline lineno="864"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="865"><highlight class="comment"><sp/>*<sp/>@note<sp/>if<sp/>there<sp/>already<sp/>exists<sp/>an<sp/>arc<sp/>from<sp/>startnode<sp/>to<sp/>endnode,<sp/>the<sp/>new<sp/>arc<sp/>is<sp/>not<sp/>added,</highlight></codeline>
<codeline lineno="866"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>even<sp/>if<sp/>its<sp/>data<sp/>is<sp/>different</highlight></codeline>
<codeline lineno="867"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="868"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="869"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="group__DirectedGraph_1gaa616fd8ee564c5974bf10b13e25bfda1" kindref="member">SCIPdigraphAddArcSafe</ref>(</highlight></codeline>
<codeline lineno="870"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a467b6a5a197769a299b70736cc38a34f" kindref="member">SCIP_DIGRAPH</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digraph,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>directed<sp/>graph<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="871"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>startnode,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>start<sp/>node<sp/>of<sp/>the<sp/>arc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endnode,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>start<sp/>node<sp/>of<sp/>the<sp/>arc<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>data<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>that<sp/>should<sp/>be<sp/>stored<sp/>for<sp/>the<sp/>arc;<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="875"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="876"><highlight class="comment">/**<sp/>returns<sp/>the<sp/>number<sp/>of<sp/>nodes<sp/>of<sp/>the<sp/>given<sp/>digraph<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__DirectedGraph_1ga32f09fd970e3c01855899e2065099e82" kindref="member">SCIPdigraphGetNNodes</ref>(</highlight></codeline>
<codeline lineno="879"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a467b6a5a197769a299b70736cc38a34f" kindref="member">SCIP_DIGRAPH</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digraph<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>directed<sp/>graph<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="882"><highlight class="comment">/**<sp/>returns<sp/>the<sp/>node<sp/>data,<sp/>or<sp/>NULL<sp/>if<sp/>no<sp/>data<sp/>exist<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="883"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="884"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="group__DirectedGraph_1ga83bbfb239e98b6115abdb4b4b2de2aff" kindref="member">SCIPdigraphGetNodeData</ref>(</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a467b6a5a197769a299b70736cc38a34f" kindref="member">SCIP_DIGRAPH</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digraph,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>directed<sp/>graph<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="886"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>node<sp/>for<sp/>which<sp/>the<sp/>node<sp/>data<sp/>is<sp/>returned<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="888"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="889"><highlight class="comment">/**<sp/>sets<sp/>the<sp/>node<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="890"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="891"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__DirectedGraph_1gac2911f35227893d529f0ee08cca3b5c1" kindref="member">SCIPdigraphSetNodeData</ref>(</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a467b6a5a197769a299b70736cc38a34f" kindref="member">SCIP_DIGRAPH</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digraph,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>directed<sp/>graph<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataptr,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>user<sp/>node<sp/>data<sp/>pointer,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>node<sp/>for<sp/>which<sp/>the<sp/>node<sp/>data<sp/>is<sp/>returned<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="895"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="896"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="897"><highlight class="comment">/**<sp/>returns<sp/>the<sp/>total<sp/>number<sp/>of<sp/>arcs<sp/>in<sp/>the<sp/>given<sp/>digraph<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="898"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="899"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__DirectedGraph_1gab5dff47ee487760c0435dd2077350576" kindref="member">SCIPdigraphGetNArcs</ref>(</highlight></codeline>
<codeline lineno="900"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a467b6a5a197769a299b70736cc38a34f" kindref="member">SCIP_DIGRAPH</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digraph<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>directed<sp/>graph<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="902"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="903"><highlight class="comment">/**<sp/>returns<sp/>the<sp/>number<sp/>of<sp/>successor<sp/>nodes<sp/>of<sp/>the<sp/>given<sp/>node<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="904"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="905"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__DirectedGraph_1ga1751a9c083411bf978c188dd641335ce" kindref="member">SCIPdigraphGetNSuccessors</ref>(</highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a467b6a5a197769a299b70736cc38a34f" kindref="member">SCIP_DIGRAPH</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digraph,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>directed<sp/>graph<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>node<sp/>for<sp/>which<sp/>the<sp/>number<sp/>of<sp/>outgoing<sp/>arcs<sp/>is<sp/>returned<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="909"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="910"><highlight class="comment">/**<sp/>returns<sp/>the<sp/>array<sp/>of<sp/>indices<sp/>of<sp/>the<sp/>successor<sp/>nodes;<sp/>this<sp/>array<sp/>must<sp/>not<sp/>be<sp/>changed<sp/>from<sp/>outside<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="911"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="912"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><ref refid="group__DirectedGraph_1gafad223a2ce7651c447839fff8838078b" kindref="member">SCIPdigraphGetSuccessors</ref>(</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a467b6a5a197769a299b70736cc38a34f" kindref="member">SCIP_DIGRAPH</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digraph,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>directed<sp/>graph<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="914"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>node<sp/>for<sp/>which<sp/>the<sp/>array<sp/>of<sp/>outgoing<sp/>arcs<sp/>is<sp/>returned<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="915"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="916"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="917"><highlight class="comment">/**<sp/>returns<sp/>the<sp/>array<sp/>of<sp/>data<sp/>corresponding<sp/>to<sp/>the<sp/>arcs<sp/>originating<sp/>at<sp/>the<sp/>given<sp/>node,<sp/>or<sp/>NULL<sp/>if<sp/>no<sp/>data<sp/>exist;<sp/>this</highlight></codeline>
<codeline lineno="918"><highlight class="comment"><sp/>*<sp/><sp/>array<sp/>must<sp/>not<sp/>be<sp/>changed<sp/>from<sp/>outside</highlight></codeline>
<codeline lineno="919"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="921"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><ref refid="group__DirectedGraph_1ga87f5ee46dd27506323e994e686d2e089" kindref="member">SCIPdigraphGetSuccessorsDatas</ref>(</highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a467b6a5a197769a299b70736cc38a34f" kindref="member">SCIP_DIGRAPH</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digraph,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>directed<sp/>graph<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="923"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>node<sp/>for<sp/>which<sp/>the<sp/>data<sp/>corresponding<sp/>to<sp/>the<sp/>outgoing<sp/>arcs<sp/>is<sp/>returned<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="925"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="926"><highlight class="comment">/**<sp/>Compute<sp/>undirected<sp/>connected<sp/>components<sp/>on<sp/>the<sp/>given<sp/>graph.</highlight></codeline>
<codeline lineno="927"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="928"><highlight class="comment"><sp/>*<sp/><sp/>@note<sp/>For<sp/>each<sp/>arc,<sp/>its<sp/>reverse<sp/>is<sp/>added,<sp/>so<sp/>the<sp/>graph<sp/>does<sp/>not<sp/>need<sp/>to<sp/>be<sp/>the<sp/>directed<sp/>representation<sp/>of<sp/>an</highlight></codeline>
<codeline lineno="929"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>undirected<sp/>graph.</highlight></codeline>
<codeline lineno="930"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="931"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="932"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="group__DirectedGraph_1ga176d6f151c867099d3abb72a27162d97" kindref="member">SCIPdigraphComputeUndirectedComponents</ref>(</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a467b6a5a197769a299b70736cc38a34f" kindref="member">SCIP_DIGRAPH</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digraph,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>directed<sp/>graph<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minsize,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>all<sp/>components<sp/>with<sp/>less<sp/>nodes<sp/>are<sp/>ignored<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>components,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>with<sp/>as<sp/>many<sp/>slots<sp/>as<sp/>there<sp/>are<sp/>nodes<sp/>in<sp/>the<sp/>directed<sp/>graph</highlight></codeline>
<codeline lineno="936"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>to<sp/>store<sp/>for<sp/>each<sp/>node<sp/>the<sp/>component<sp/>to<sp/>which<sp/>it<sp/>belongs</highlight></codeline>
<codeline lineno="937"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>(components<sp/>are<sp/>numbered<sp/>0<sp/>to<sp/>ncomponents<sp/>-<sp/>1);<sp/>or<sp/>NULL,<sp/>if<sp/>components</highlight></codeline>
<codeline lineno="938"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>are<sp/>accessed<sp/>one-by-one<sp/>using<sp/>SCIPdigraphGetComponent()<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ncomponents<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>number<sp/>of<sp/>components;<sp/>or<sp/>NULL,<sp/>if<sp/>the</highlight></codeline>
<codeline lineno="940"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>number<sp/>of<sp/>components<sp/>is<sp/>accessed<sp/>by<sp/>SCIPdigraphGetNComponents()<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="941"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="942"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="943"><highlight class="comment">/**<sp/>Performes<sp/>an<sp/>(almost)<sp/>topological<sp/>sort<sp/>on<sp/>the<sp/>undirected<sp/>components<sp/>of<sp/>the<sp/>given<sp/>directed<sp/>graph.<sp/>The<sp/>undirected</highlight></codeline>
<codeline lineno="944"><highlight class="comment"><sp/>*<sp/><sp/>components<sp/>should<sp/>be<sp/>computed<sp/>before<sp/>using<sp/>SCIPdigraphComputeUndirectedComponents().</highlight></codeline>
<codeline lineno="945"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="946"><highlight class="comment"><sp/>*<sp/><sp/>@note<sp/>In<sp/>general<sp/>a<sp/>topological<sp/>sort<sp/>is<sp/>not<sp/>unique.<sp/><sp/>Note,<sp/>that<sp/>there<sp/>might<sp/>be<sp/>directed<sp/>cycles,<sp/>that<sp/>are<sp/>randomly</highlight></codeline>
<codeline lineno="947"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>broken,<sp/>which<sp/>is<sp/>the<sp/>reason<sp/>for<sp/>having<sp/>only<sp/>almost<sp/>topologically<sp/>sorted<sp/>arrays.</highlight></codeline>
<codeline lineno="948"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="949"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="950"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="group__DirectedGraph_1ga653be9d81f37690d8c07f89d9c9acdb3" kindref="member">SCIPdigraphTopoSortComponents</ref>(</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a467b6a5a197769a299b70736cc38a34f" kindref="member">SCIP_DIGRAPH</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digraph<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>directed<sp/>graph<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="953"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="954"><highlight class="comment">/**<sp/>returns<sp/>the<sp/>number<sp/>of<sp/>previously<sp/>computed<sp/>undirected<sp/>components<sp/>for<sp/>the<sp/>given<sp/>directed<sp/>graph<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="955"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__DirectedGraph_1gae960bbcc88860724b3f828bdf399f7f3" kindref="member">SCIPdigraphGetNComponents</ref>(</highlight></codeline>
<codeline lineno="957"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a467b6a5a197769a299b70736cc38a34f" kindref="member">SCIP_DIGRAPH</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digraph<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>directed<sp/>graph<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="959"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="960"><highlight class="comment">/**<sp/>Returns<sp/>the<sp/>previously<sp/>computed<sp/>undirected<sp/>component<sp/>of<sp/>the<sp/>given<sp/>number<sp/>for<sp/>the<sp/>given<sp/>directed<sp/>graph.</highlight></codeline>
<codeline lineno="961"><highlight class="comment"><sp/>*<sp/><sp/>If<sp/>the<sp/>components<sp/>were<sp/>sorted<sp/>using<sp/>SCIPdigraphTopoSortComponents(),<sp/>the<sp/>component<sp/>is<sp/>(almost)<sp/>topologically<sp/>sorted.</highlight></codeline>
<codeline lineno="962"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="963"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__DirectedGraph_1ga4e6a88c42edc4acc4f0bf5c9db23b797" kindref="member">SCIPdigraphGetComponent</ref>(</highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a467b6a5a197769a299b70736cc38a34f" kindref="member">SCIP_DIGRAPH</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digraph,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>directed<sp/>graph<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compidx,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>number<sp/>of<sp/>the<sp/>component<sp/>to<sp/>return<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nodes,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>nodes<sp/>in<sp/>the<sp/>component;<sp/>or<sp/>NULL,<sp/>if<sp/>not<sp/>needed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="968"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nnodes<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>number<sp/>of<sp/>nodes<sp/>in<sp/>the<sp/>component;</highlight></codeline>
<codeline lineno="969"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>or<sp/>NULL,<sp/>if<sp/>not<sp/>needed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="971"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="972"><highlight class="comment">/**<sp/>frees<sp/>the<sp/>component<sp/>information<sp/>for<sp/>the<sp/>given<sp/>directed<sp/>graph<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="973"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="974"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__DirectedGraph_1ga1524af78e159bf5d824eead5f05ad883" kindref="member">SCIPdigraphFreeComponents</ref>(</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a467b6a5a197769a299b70736cc38a34f" kindref="member">SCIP_DIGRAPH</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digraph<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>directed<sp/>graph<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="976"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="977"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="978"><highlight class="comment">/**<sp/>output<sp/>of<sp/>the<sp/>given<sp/>directed<sp/>graph<sp/>via<sp/>the<sp/>given<sp/>message<sp/>handler<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="979"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="980"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__DirectedGraph_1gab8a3d3a074d491cca1dee036ca0072eb" kindref="member">SCIPdigraphPrint</ref>(</highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a467b6a5a197769a299b70736cc38a34f" kindref="member">SCIP_DIGRAPH</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digraph,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>directed<sp/>graph<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__message_8h_1a7d71113339d14873806c1399442fae8d" kindref="member">SCIP_MESSAGEHDLR</ref>*<sp/><sp/><sp/><sp/><sp/>messagehdlr,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>message<sp/>handler<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/>FILE*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>output<sp/>file<sp/>(or<sp/>NULL<sp/>for<sp/>standard<sp/>output)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="984"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="985"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="986"><highlight class="comment">/**<sp/>prints<sp/>the<sp/>given<sp/>directed<sp/>graph<sp/>structure<sp/>in<sp/>GML<sp/>format<sp/>into<sp/>the<sp/>given<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="987"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="988"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__DirectedGraph_1ga3ea0abd797b16f531140bc168d110f7c" kindref="member">SCIPdigraphPrintGml</ref>(</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a467b6a5a197769a299b70736cc38a34f" kindref="member">SCIP_DIGRAPH</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digraph,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>directed<sp/>graph<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/>FILE*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>file<sp/>to<sp/>write<sp/>to<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="992"><highlight class="normal"></highlight></codeline>
<codeline lineno="993"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="994"><highlight class="comment">/**<sp/>output<sp/>of<sp/>the<sp/>given<sp/>directed<sp/>graph<sp/>via<sp/>the<sp/>given<sp/>message<sp/>handler<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__DirectedGraph_1ga03d523ddef7f34ce789ea534ba7e623f" kindref="member">SCIPdigraphPrintComponents</ref>(</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a467b6a5a197769a299b70736cc38a34f" kindref="member">SCIP_DIGRAPH</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>digraph,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>directed<sp/>graph<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__message_8h_1a7d71113339d14873806c1399442fae8d" kindref="member">SCIP_MESSAGEHDLR</ref>*<sp/><sp/><sp/><sp/><sp/>messagehdlr,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>message<sp/>handler<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/>FILE*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>output<sp/>file<sp/>(or<sp/>NULL<sp/>for<sp/>standard<sp/>output)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1001"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1002"><highlight class="comment">/**@}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1003"><highlight class="normal"></highlight></codeline>
<codeline lineno="1004"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1005"><highlight class="comment"><sp/>*<sp/>Binary<sp/>search<sp/>tree</highlight></codeline>
<codeline lineno="1006"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1007"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1008"><highlight class="comment">/**@defgroup<sp/>BinaryTree<sp/>Binary<sp/>Tree</highlight></codeline>
<codeline lineno="1009"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1010"><highlight class="comment"><sp/>*@{</highlight></codeline>
<codeline lineno="1011"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1012"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1013"><highlight class="comment">/**<sp/>creates<sp/>a<sp/>binary<sp/>tree<sp/>node<sp/>with<sp/>sorting<sp/>value<sp/>and<sp/>user<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1014"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="group__BinaryTree_1ga78b8df73d8d2debaa3b8fc7554ec07a0" kindref="member">SCIPbtnodeCreate</ref>(</highlight></codeline>
<codeline lineno="1016"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a758a7e0bd04009842c24fbabc8d3035d" kindref="member">SCIP_BT</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tree,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>binary<sp/>search<sp/>tree<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1017"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a980ac393ce697183a6116ca7d8e64fa8" kindref="member">SCIP_BTNODE</ref>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>created<sp/>search<sp/>node<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1018"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataptr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>user<sp/>node<sp/>data<sp/>pointer,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1019"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1020"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1021"><highlight class="comment">/**<sp/>frees<sp/>the<sp/>binary<sp/>node<sp/>including<sp/>the<sp/>rooted<sp/>subtree</highlight></codeline>
<codeline lineno="1022"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1023"><highlight class="comment"><sp/>*<sp/><sp/>@note<sp/>The<sp/>user<sp/>pointer<sp/>(object)<sp/>is<sp/>not<sp/>freed.<sp/>If<sp/>needed,<sp/>it<sp/>has<sp/>to<sp/>be<sp/>done<sp/>by<sp/>the<sp/>user.</highlight></codeline>
<codeline lineno="1024"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1025"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1026"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__BinaryTree_1ga39882d686b9bd60daff109176cf6ce5a" kindref="member">SCIPbtnodeFree</ref>(</highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a758a7e0bd04009842c24fbabc8d3035d" kindref="member">SCIP_BT</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tree,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>binary<sp/>tree<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a980ac393ce697183a6116ca7d8e64fa8" kindref="member">SCIP_BTNODE</ref>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>node<sp/>to<sp/>be<sp/>freed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1029"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1030"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1031"><highlight class="comment">/**<sp/>returns<sp/>the<sp/>user<sp/>data<sp/>pointer<sp/>stored<sp/>in<sp/>that<sp/>node<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1032"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1033"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="group__BinaryTree_1gade68a6c291b771f559d09f05b55ced08" kindref="member">SCIPbtnodeGetData</ref>(</highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a980ac393ce697183a6116ca7d8e64fa8" kindref="member">SCIP_BTNODE</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>node<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1035"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1036"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1037"><highlight class="comment">/**<sp/>returns<sp/>the<sp/>parent<sp/>which<sp/>can<sp/>be<sp/>NULL<sp/>if<sp/>the<sp/>given<sp/>node<sp/>is<sp/>the<sp/>root<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1038"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1039"><highlight class="normal"><ref refid="type__misc_8h_1a980ac393ce697183a6116ca7d8e64fa8" kindref="member">SCIP_BTNODE</ref>*<sp/><ref refid="group__BinaryTree_1ga6a077eeaf2e1446fa4331a017ce56e9b" kindref="member">SCIPbtnodeGetParent</ref>(</highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a980ac393ce697183a6116ca7d8e64fa8" kindref="member">SCIP_BTNODE</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>node<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1043"><highlight class="comment">/**<sp/>returns<sp/>left<sp/>child<sp/>which<sp/>can<sp/>be<sp/>NULL<sp/>if<sp/>the<sp/>given<sp/>node<sp/>is<sp/>a<sp/>leaf<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1044"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"><ref refid="type__misc_8h_1a980ac393ce697183a6116ca7d8e64fa8" kindref="member">SCIP_BTNODE</ref>*<sp/><ref refid="group__BinaryTree_1ga1091966d7b12b66985ae733b5914e8a2" kindref="member">SCIPbtnodeGetLeftchild</ref>(</highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a980ac393ce697183a6116ca7d8e64fa8" kindref="member">SCIP_BTNODE</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>node<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1047"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1049"><highlight class="comment">/**<sp/>returns<sp/>right<sp/>child<sp/>which<sp/>can<sp/>be<sp/>NULL<sp/>if<sp/>the<sp/>given<sp/>node<sp/>is<sp/>a<sp/>leaf<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1050"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1051"><highlight class="normal"><ref refid="type__misc_8h_1a980ac393ce697183a6116ca7d8e64fa8" kindref="member">SCIP_BTNODE</ref>*<sp/><ref refid="group__BinaryTree_1gaaf12d817c5974f80442791b0d1ffa1b2" kindref="member">SCIPbtnodeGetRightchild</ref>(</highlight></codeline>
<codeline lineno="1052"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a980ac393ce697183a6116ca7d8e64fa8" kindref="member">SCIP_BTNODE</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>node<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1053"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1054"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1055"><highlight class="comment">/**<sp/>returns<sp/>the<sp/>sibling<sp/>of<sp/>the<sp/>node<sp/>or<sp/>NULL<sp/>if<sp/>does<sp/>not<sp/>exist<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1056"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1057"><highlight class="normal"><ref refid="type__misc_8h_1a980ac393ce697183a6116ca7d8e64fa8" kindref="member">SCIP_BTNODE</ref>*<sp/><ref refid="group__BinaryTree_1ga948a96e770be5cd71e775c4ae3f9bfef" kindref="member">SCIPbtnodeGetSibling</ref>(</highlight></codeline>
<codeline lineno="1058"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a980ac393ce697183a6116ca7d8e64fa8" kindref="member">SCIP_BTNODE</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>node<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1059"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1060"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1061"><highlight class="comment">/**<sp/>returns<sp/>whether<sp/>the<sp/>node<sp/>is<sp/>a<sp/>root<sp/>node<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1062"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1063"><highlight class="normal"><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><ref refid="group__BinaryTree_1gaeb5f97aba4aa991030df3fc487eb9297" kindref="member">SCIPbtnodeIsRoot</ref>(</highlight></codeline>
<codeline lineno="1064"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a980ac393ce697183a6116ca7d8e64fa8" kindref="member">SCIP_BTNODE</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>node<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1065"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1066"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1067"><highlight class="comment">/**<sp/>returns<sp/>whether<sp/>the<sp/>node<sp/>is<sp/>a<sp/>leaf<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1068"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1069"><highlight class="normal"><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><ref refid="group__BinaryTree_1ga3d6b929fee8148871a8bc17de0c734b1" kindref="member">SCIPbtnodeIsLeaf</ref>(</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a980ac393ce697183a6116ca7d8e64fa8" kindref="member">SCIP_BTNODE</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>node<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1073"><highlight class="comment">/**<sp/>returns<sp/>TRUE<sp/>if<sp/>the<sp/>given<sp/>node<sp/>is<sp/>left<sp/>child<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1074"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><ref refid="group__BinaryTree_1gab09a39fc1856c3253c025c9715206376" kindref="member">SCIPbtnodeIsLeftchild</ref>(</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a980ac393ce697183a6116ca7d8e64fa8" kindref="member">SCIP_BTNODE</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>node<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1077"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1079"><highlight class="comment">/**<sp/>returns<sp/>TRUE<sp/>if<sp/>the<sp/>given<sp/>node<sp/>is<sp/>right<sp/>child<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1080"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><ref refid="group__BinaryTree_1ga79678bbe8032b08224c059e8d180131e" kindref="member">SCIPbtnodeIsRightchild</ref>(</highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a980ac393ce697183a6116ca7d8e64fa8" kindref="member">SCIP_BTNODE</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>node<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1083"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"></highlight></codeline>
<codeline lineno="1085"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>NDEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1086"><highlight class="normal"></highlight></codeline>
<codeline lineno="1087"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>In<sp/>optimized<sp/>mode,<sp/>the<sp/>function<sp/>calls<sp/>are<sp/>overwritten<sp/>by<sp/>defines<sp/>to<sp/>reduce<sp/>the<sp/>number<sp/>of<sp/>function<sp/>calls<sp/>and</highlight></codeline>
<codeline lineno="1088"><highlight class="comment"><sp/>*<sp/>speed<sp/>up<sp/>the<sp/>algorithms.</highlight></codeline>
<codeline lineno="1089"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1090"><highlight class="normal"></highlight></codeline>
<codeline lineno="1091"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCIPbtnodeGetData(node)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((node)-&gt;dataptr)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1092"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCIPbtnodeGetParent(node)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((node)-&gt;parent)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1093"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCIPbtnodeGetLeftchild(node)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((node)-&gt;left)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1094"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCIPbtnodeGetRightchild(node)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((node)-&gt;right)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1095"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCIPbtnodeGetSibling(node)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((node)-&gt;parent<sp/>==<sp/>NULL<sp/>?<sp/>NULL<sp/>:<sp/>\</highlight></codeline>
<codeline lineno="1096"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(node)-&gt;parent-&gt;left<sp/>==<sp/>(node)<sp/>?<sp/>(node)-&gt;parent-&gt;right<sp/>:<sp/>(node)-&gt;parent-&gt;left)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1097"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCIPbtnodeIsRoot(node)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((node)-&gt;parent<sp/>==<sp/>NULL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1098"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCIPbtnodeIsLeaf(node)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((node)-&gt;left<sp/>==<sp/>NULL<sp/>&amp;&amp;<sp/>(node)-&gt;right<sp/>==<sp/>NULL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1099"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCIPbtnodeIsLeftchild(node)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((node)-&gt;parent<sp/>==<sp/>NULL<sp/>?<sp/>FALSE<sp/>:<sp/>(node)-&gt;parent-&gt;left<sp/>==<sp/>(node)<sp/>?<sp/>TRUE<sp/>:<sp/>FALSE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1100"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCIPbtnodeIsRightchild(node)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>((node)-&gt;parent<sp/>==<sp/>NULL<sp/>?<sp/>FALSE<sp/>:<sp/>(node)-&gt;parent-&gt;right<sp/>==<sp/>(node)<sp/>?<sp/>TRUE<sp/>:<sp/>FALSE)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1101"><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1103"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1104"><highlight class="comment">/**<sp/>sets<sp/>the<sp/>give<sp/>node<sp/>data</highlight></codeline>
<codeline lineno="1105"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1106"><highlight class="comment"><sp/>*<sp/><sp/>@note<sp/>The<sp/>old<sp/>user<sp/>pointer<sp/>is<sp/>not<sp/>freed.</highlight></codeline>
<codeline lineno="1107"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1109"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__BinaryTree_1ga5071b8644fef886a3f7c63e1aabfdc61" kindref="member">SCIPbtnodeSetData</ref>(</highlight></codeline>
<codeline lineno="1110"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a980ac393ce697183a6116ca7d8e64fa8" kindref="member">SCIP_BTNODE</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>node<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataptr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>node<sp/>user<sp/>data<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1113"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1114"><highlight class="comment">/**<sp/>sets<sp/>parent<sp/>node</highlight></codeline>
<codeline lineno="1115"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1116"><highlight class="comment"><sp/>*<sp/><sp/>@note<sp/>The<sp/>old<sp/>parent<sp/>including<sp/>the<sp/>rooted<sp/>subtree<sp/>is<sp/>not<sp/>delete.</highlight></codeline>
<codeline lineno="1117"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1119"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__BinaryTree_1ga816b2c27020a5c7af8ec6fb1334a38e1" kindref="member">SCIPbtnodeSetParent</ref>(</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a980ac393ce697183a6116ca7d8e64fa8" kindref="member">SCIP_BTNODE</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>node<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1121"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a980ac393ce697183a6116ca7d8e64fa8" kindref="member">SCIP_BTNODE</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parent<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>new<sp/>parent<sp/>node,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1124"><highlight class="comment">/**<sp/>sets<sp/>left<sp/>child</highlight></codeline>
<codeline lineno="1125"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1126"><highlight class="comment"><sp/>*<sp/><sp/>@note<sp/>The<sp/>old<sp/>left<sp/>child<sp/>including<sp/>the<sp/>rooted<sp/>subtree<sp/>is<sp/>not<sp/>delete.</highlight></codeline>
<codeline lineno="1127"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1128"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1129"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__BinaryTree_1gab6a14881d02b367b50684023ad71a7ac" kindref="member">SCIPbtnodeSetLeftchild</ref>(</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a980ac393ce697183a6116ca7d8e64fa8" kindref="member">SCIP_BTNODE</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>node<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a980ac393ce697183a6116ca7d8e64fa8" kindref="member">SCIP_BTNODE</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>left<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>new<sp/>left<sp/>child,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1132"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1133"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1134"><highlight class="comment">/**<sp/>sets<sp/>right<sp/>child</highlight></codeline>
<codeline lineno="1135"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1136"><highlight class="comment"><sp/>*<sp/><sp/>@note<sp/>The<sp/>old<sp/>right<sp/>child<sp/>including<sp/>the<sp/>rooted<sp/>subtree<sp/>is<sp/>not<sp/>delete.</highlight></codeline>
<codeline lineno="1137"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1138"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1139"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__BinaryTree_1ga0fac029daad26ca276ad688da26b55fe" kindref="member">SCIPbtnodeSetRightchild</ref>(</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a980ac393ce697183a6116ca7d8e64fa8" kindref="member">SCIP_BTNODE</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>node,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>node<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a980ac393ce697183a6116ca7d8e64fa8" kindref="member">SCIP_BTNODE</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>right<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>new<sp/>right<sp/>child,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1144"><highlight class="comment">/**<sp/>creates<sp/>an<sp/>binary<sp/>tree<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1145"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="group__BinaryTree_1ga32e635b4ab57ff19c4d32b51fa96bcac" kindref="member">SCIPbtCreate</ref>(</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a758a7e0bd04009842c24fbabc8d3035d" kindref="member">SCIP_BT</ref>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tree,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>created<sp/>binary<sp/>tree<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/>BMS_BLKMEM*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blkmem<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>block<sp/>memory<sp/>used<sp/>to<sp/>create<sp/>nodes<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1151"><highlight class="comment">/**<sp/>frees<sp/>binary<sp/>tree</highlight></codeline>
<codeline lineno="1152"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1153"><highlight class="comment"><sp/>*<sp/><sp/>@note<sp/>The<sp/>user<sp/>pointers<sp/>(object)<sp/>of<sp/>the<sp/>search<sp/>nodes<sp/>are<sp/>not<sp/>freed.<sp/>If<sp/>needed,<sp/>it<sp/>has<sp/>to<sp/>be<sp/>done<sp/>by<sp/>the<sp/>user.</highlight></codeline>
<codeline lineno="1154"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1155"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1156"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__BinaryTree_1gac1b4e34e5acc37a698808c40faa15d25" kindref="member">SCIPbtFree</ref>(</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a758a7e0bd04009842c24fbabc8d3035d" kindref="member">SCIP_BT</ref>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tree<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>binary<sp/>tree<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1160"><highlight class="comment">/**<sp/>prints<sp/>the<sp/>binary<sp/>tree<sp/>in<sp/>GML<sp/>format<sp/>into<sp/>the<sp/>given<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1161"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1162"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__BinaryTree_1gaefaa788143db4f31938c216c7e7868f5" kindref="member">SCIPbtPrintGml</ref>(</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a758a7e0bd04009842c24fbabc8d3035d" kindref="member">SCIP_BT</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tree,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>binary<sp/>tree<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/>FILE*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>file<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>file<sp/>to<sp/>write<sp/>to<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1167"><highlight class="comment">/**<sp/>returns<sp/>whether<sp/>the<sp/>binary<sp/>tree<sp/>is<sp/>empty<sp/>(has<sp/>no<sp/>nodes)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1168"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1169"><highlight class="normal"><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><ref refid="group__BinaryTree_1ga1f7787ff2552e406d6b64069566d4e65" kindref="member">SCIPbtIsEmpty</ref>(</highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a758a7e0bd04009842c24fbabc8d3035d" kindref="member">SCIP_BT</ref><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tree<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>binary<sp/>tree<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1173"><highlight class="comment">/**<sp/>returns<sp/>the<sp/>root<sp/>node<sp/>of<sp/>the<sp/>binary<sp/>tree<sp/>or<sp/>NULL<sp/>if<sp/>the<sp/>binary<sp/>tree<sp/>is<sp/>empty<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1174"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1175"><highlight class="normal"><ref refid="type__misc_8h_1a980ac393ce697183a6116ca7d8e64fa8" kindref="member">SCIP_BTNODE</ref>*<sp/><ref refid="group__BinaryTree_1gaf0abe2ecae545aeefd155a36acdfccd2" kindref="member">SCIPbtGetRoot</ref>(</highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a758a7e0bd04009842c24fbabc8d3035d" kindref="member">SCIP_BT</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tree<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>tree<sp/>to<sp/>be<sp/>evaluated<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"></highlight></codeline>
<codeline lineno="1179"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>NDEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1180"><highlight class="normal"></highlight></codeline>
<codeline lineno="1181"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>In<sp/>optimized<sp/>mode,<sp/>the<sp/>function<sp/>calls<sp/>are<sp/>overwritten<sp/>by<sp/>defines<sp/>to<sp/>reduce<sp/>the<sp/>number<sp/>of<sp/>function<sp/>calls<sp/>and</highlight></codeline>
<codeline lineno="1182"><highlight class="comment"><sp/>*<sp/>speed<sp/>up<sp/>the<sp/>algorithms.</highlight></codeline>
<codeline lineno="1183"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1184"><highlight class="normal"></highlight></codeline>
<codeline lineno="1185"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCIPbtIsEmpty(tree)<sp/>(tree-&gt;root<sp/>==<sp/>NULL)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1186"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCIPbtGetRoot(tree)<sp/>(tree-&gt;root)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1187"><highlight class="normal"></highlight></codeline>
<codeline lineno="1188"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1189"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1190"><highlight class="comment">/**<sp/>sets<sp/>root<sp/>node</highlight></codeline>
<codeline lineno="1191"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1192"><highlight class="comment"><sp/>*<sp/><sp/>@note<sp/>The<sp/>old<sp/>root<sp/>including<sp/>the<sp/>rooted<sp/>subtree<sp/>is<sp/>not<sp/>delete.</highlight></codeline>
<codeline lineno="1193"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1194"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1195"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__BinaryTree_1gae277f19032b7baf8fd0078dc3e2e09c3" kindref="member">SCIPbtSetRoot</ref>(</highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a758a7e0bd04009842c24fbabc8d3035d" kindref="member">SCIP_BT</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>tree,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>tree<sp/>to<sp/>be<sp/>evaluated<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1197"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a980ac393ce697183a6116ca7d8e64fa8" kindref="member">SCIP_BTNODE</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>root<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>new<sp/>root,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1199"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1200"><highlight class="comment">/**@}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1201"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1202"><highlight class="comment">/**@}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1203"><highlight class="normal"></highlight></codeline>
<codeline lineno="1204"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1205"><highlight class="comment"><sp/>*<sp/>Sorting<sp/>algorithms</highlight></codeline>
<codeline lineno="1206"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1207"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1208"><highlight class="comment">/**@defgroup<sp/>SortingAlgorithms<sp/>Sorting<sp/>Algorithms</highlight></codeline>
<codeline lineno="1209"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1210"><highlight class="comment"><sp/>*<sp/>@{</highlight></codeline>
<codeline lineno="1211"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1212"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1213"><highlight class="comment">/**<sp/>default<sp/>comparer<sp/>for<sp/>integers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1214"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1215"><highlight class="normal"><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>(SCIPsortCompInt);</highlight></codeline>
<codeline lineno="1216"><highlight class="normal"></highlight></codeline>
<codeline lineno="1217"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>first<sp/>all<sp/>upwards-sorting<sp/>methods<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1218"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1219"><highlight class="comment">/**<sp/>sort<sp/>an<sp/>indexed<sp/>element<sp/>set<sp/>in<sp/>non-decreasing<sp/>order,<sp/>resulting<sp/>in<sp/>a<sp/>permutation<sp/>index<sp/>array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1220"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1221"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gaac0e97a29d3007027bb1b4b9ef9b0ac2" kindref="member">SCIPsort</ref>(</highlight></codeline>
<codeline lineno="1222"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perm,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>resulting<sp/>permutation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1223"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a806c02f466e036f6e137df9eee2f7e9d" kindref="member">SCIP_DECL_SORTINDCOMP</ref>((*indcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1224"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataptr,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>data<sp/>field<sp/>that<sp/>is<sp/>given<sp/>to<sp/>the<sp/>external<sp/>compare<sp/>method<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1225"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>number<sp/>of<sp/>elements<sp/>to<sp/>be<sp/>sorted<sp/>(valid<sp/>index<sp/>range)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1226"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1227"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1228"><highlight class="comment">/**<sp/>sort<sp/>an<sp/>index<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1229"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1230"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga0c1fe0f152d7e0b502d39b0425bd9f32" kindref="member">SCIPsortInd</ref>(</highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>the<sp/>index<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a806c02f466e036f6e137df9eee2f7e9d" kindref="member">SCIP_DECL_SORTINDCOMP</ref>((*indcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataptr,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>data<sp/>field<sp/>that<sp/>is<sp/>given<sp/>to<sp/>the<sp/>external<sp/>compare<sp/>method<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1236"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1237"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>an<sp/>array<sp/>of<sp/>pointers<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1238"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1239"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga103836cd14d6a053128195fc7c845cce" kindref="member">SCIPsortPtr</ref>(</highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1244"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1245"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>two<sp/>joint<sp/>arrays<sp/>of<sp/>pointers/pointers,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1246"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1247"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga6a2f7719f1552e87bf42aba67f1864a7" kindref="member">SCIPsortPtrPtr</ref>(</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1250"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1254"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>two<sp/>joint<sp/>arrays<sp/>of<sp/>pointers/Reals,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1255"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1256"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gadcf9f22a04f1a2b4a18cedc2c6ef6300" kindref="member">SCIPsortPtrReal</ref>(</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1259"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1261"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1262"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1263"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>two<sp/>joint<sp/>arrays<sp/>of<sp/>pointers/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1264"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1265"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gaaea12378fbf19d942f8aeea2617db398" kindref="member">SCIPsortPtrInt</ref>(</highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1272"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>two<sp/>joint<sp/>arrays<sp/>of<sp/>pointers/Bools,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1273"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1274"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gac2e61a64b363fc56dff42ea3d416f903" kindref="member">SCIPsortPtrBool</ref>(</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boolarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Bool<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1279"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1280"><highlight class="normal"></highlight></codeline>
<codeline lineno="1281"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1282"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>pointers/ints/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1283"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1284"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gaa03ed019c7693a292dcaf8870876262b" kindref="member">SCIPsortPtrIntInt</ref>(</highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1287"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1288"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1292"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>pointers/Reals/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1293"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1294"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gab093c601bdf585ac1dc6f592559335b3" kindref="member">SCIPsortPtrRealInt</ref>(</highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1297"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1302"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>pointers/pointers/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1303"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1304"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga0e990464910f3ec7e9177d318d8a13d4" kindref="member">SCIPsortPtrPtrInt</ref>(</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1306"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1307"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1311"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1312"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>pointers/pointers/Reals,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1313"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1314"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga04fef28d6d8b510f279cdba0402c4835" kindref="member">SCIPsortPtrPtrReal</ref>(</highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1319"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1322"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>four<sp/>joint<sp/>arrays<sp/>of<sp/>pointers/pointers/ints/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1323"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1324"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga3a89ea948900a2a8f8e308f5becb9379" kindref="member">SCIPsortPtrPtrIntInt</ref>(</highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1326"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1330"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1332"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1333"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>four<sp/>joint<sp/>arrays<sp/>of<sp/>pointers/Reals/ints/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1334"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1335"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gab09640f84657f886cc841369c980e9e5" kindref="member">SCIPsortPtrRealIntInt</ref>(</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1340"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1344"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>four<sp/>joint<sp/>arrays<sp/>of<sp/>pointer/pointer/Reals/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1345"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1346"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gaac079b7a19c09e6b09a15af0798fc288" kindref="member">SCIPsortPtrPtrRealInt</ref>(</highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1349"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1353"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1354"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1355"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>four<sp/>joint<sp/>arrays<sp/>of<sp/>pointer/pointer/Longs/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1356"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1357"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gaaece7fe23fb40bde9c03a4bae2015152" kindref="member">SCIPsortPtrPtrLongInt</ref>(</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1363"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1366"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>five<sp/>joint<sp/>arrays<sp/>of<sp/>pointer/pointer/Longs/ints/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1367"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1368"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga4adc99570f578746a1494d919e112117" kindref="member">SCIPsortPtrPtrLongIntInt</ref>(</highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1370"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1371"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1372"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1373"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1376"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1377"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1378"><highlight class="comment">/**<sp/>sort<sp/>an<sp/>array<sp/>of<sp/>Reals<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1379"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1380"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gada40be5d3ae456b7661463fc5fe649c9" kindref="member">SCIPsortReal</ref>(</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1382"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1385"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>two<sp/>joint<sp/>arrays<sp/>of<sp/>Reals/pointers,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1386"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1387"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga3aefb5a6ae0b10e1cea32b684aa0269c" kindref="member">SCIPsortRealPtr</ref>(</highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1389"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1393"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>two<sp/>joint<sp/>arrays<sp/>of<sp/>Reals/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1394"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1395"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga895f33e4a5924acc56132a476aa1e72f" kindref="member">SCIPsortRealInt</ref>(</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1401"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>Reals/Bools/Pointer,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1402"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1403"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga8accfee6a02f170a465b9c0466523a26" kindref="member">SCIPsortRealBoolPtr</ref>(</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boolarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Bool<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1406"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1407"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1408"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1409"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1410"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>Reals/ints/Longs,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1411"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1412"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gae6791f2300abc5c4b2b0e2ee86c97fee" kindref="member">SCIPsortRealIntLong</ref>(</highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1418"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1419"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>Reals/ints/Pointer,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1420"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1421"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gae38ed4f13a26993f24d9e019c0414329" kindref="member">SCIPsortRealIntPtr</ref>(</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1425"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1428"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>Reals/Reals/Pointer,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1429"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1430"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga509c605bf0b52a1a8f4bf4ecf51193c6" kindref="member">SCIPsortRealRealPtr</ref>(</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>SCIP_Real<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/><sp/>SCIP_Real<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1435"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1436"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1437"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>four<sp/>joint<sp/>arrays<sp/>of<sp/>Reals/pointers/pointers/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1438"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1439"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga88fc3a2f0c042af2b5c3dee19313eae7" kindref="member">SCIPsortRealPtrPtrInt</ref>(</highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1441"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1442"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1443"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1444"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1446"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1447"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>five<sp/>joint<sp/>arrays<sp/>of<sp/>Reals/pointers/pointers/ints/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1448"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1449"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga3af142a98e5b1efbc4bcc3097b11c578" kindref="member">SCIPsortRealPtrPtrIntInt</ref>(</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1452"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1455"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1458"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>four<sp/>joint<sp/>arrays<sp/>of<sp/>Reals/Longs/Reals/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1459"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1460"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga9666bab28bc49463557807e12b67b3d9" kindref="member">SCIPsortRealLongRealInt</ref>(</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1462"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray3,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1464"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/><sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1466"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1467"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1468"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>four<sp/>joint<sp/>arrays<sp/>of<sp/>Reals/Reals/ints/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1469"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1470"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga87cb27343958974d876925813c5bf52d" kindref="member">SCIPsortRealRealIntInt</ref>(</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1474"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1476"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1477"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1478"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>four<sp/>joint<sp/>arrays<sp/>of<sp/>Reals/Reals/Reals/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1479"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1480"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gaf7117ac571f15acd749a3a29690bb23c" kindref="member">SCIPsortRealRealRealInt</ref>(</highlight></codeline>
<codeline lineno="1481"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray3,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1484"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1485"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1487"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1488"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>four<sp/>joint<sp/>arrays<sp/>of<sp/>Reals/Reals/Reals/pointers,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1489"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1490"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gaaa964d0415f1bf73405a1b2a292c60a2" kindref="member">SCIPsortRealRealRealPtr</ref>(</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray3,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1494"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1496"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1497"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1498"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>five<sp/>joint<sp/>arrays<sp/>of<sp/>Reals/Reals/Reals/Bools/pointers,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1499"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1500"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga50fda9c79356fc79b71598db49c9fe27" kindref="member">SCIPsortRealRealRealBoolPtr</ref>(</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray3,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boolarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Bool<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1509"><highlight class="comment">/**<sp/>sort<sp/>array<sp/>of<sp/>ints<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1510"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1511"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gafebedfcb716eaaa657216bda67d301b6" kindref="member">SCIPsortInt</ref>(</highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1516"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>two<sp/>joint<sp/>arrays<sp/>of<sp/>ints/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1517"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1518"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga1459c044f3f78d257a8ec7aee731d5c9" kindref="member">SCIPsortIntInt</ref>(</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1524"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>two<sp/>joint<sp/>arrays<sp/>of<sp/>ints/pointers,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1525"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1526"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga61f5e6c0d4b1bc21d024e32537741509" kindref="member">SCIPsortIntPtr</ref>(</highlight></codeline>
<codeline lineno="1527"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1528"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1529"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1530"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1532"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>two<sp/>joint<sp/>arrays<sp/>of<sp/>ints/reals,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1533"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1534"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga8869d8fe40a7dd7e977d70265dda0431" kindref="member">SCIPsortIntReal</ref>(</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>real<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1537"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1540"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>ints/ints/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1541"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1542"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga2b7175014b131510a6b3cd77faca8a6e" kindref="member">SCIPsortIntIntInt</ref>(</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1545"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray3,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>third<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1547"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1549"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>ints/ints/Longints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1550"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1551"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga4d46cb7f885bc61f09266f59be88615e" kindref="member">SCIPsortIntIntLong</ref>(</highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1557"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1558"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>ints/ints/pointers,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1559"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1560"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga0677776b4caf087af2b2fce521926088" kindref="member">SCIPsortIntIntPtr</ref>(</highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1562"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1567"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>ints/ints/reals,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1568"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1569"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gaebfffc0e592706e78299db4a6b2adc7f" kindref="member">SCIPsortIntIntReal</ref>(</highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1571"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1574"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1575"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1576"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>ints/pointers/reals,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1577"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1578"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga6a126e14098adc085f3ee9f55b9c8c8d" kindref="member">SCIPsortIntPtrReal</ref>(</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1580"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1581"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>real<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1584"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1585"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>four<sp/>joint<sp/>arrays<sp/>of<sp/>ints/ints/ints/pointers,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1586"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1587"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga1d2463a2f2369a8abd8886927242d537" kindref="member">SCIPsortIntIntIntPtr</ref>(</highlight></codeline>
<codeline lineno="1588"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1590"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray3,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1593"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1594"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1595"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>four<sp/>joint<sp/>arrays<sp/>of<sp/>ints/pointers/ints/Reals,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1596"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1597"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gae15ccdf62d59b3384f72656ed0848069" kindref="member">SCIPsortIntPtrIntReal</ref>(</highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1602"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1604"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1605"><highlight class="comment">/**<sp/>sort<sp/>an<sp/>array<sp/>of<sp/>Longints<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1606"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1607"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga9538fe598b57ec44a3d80cfb18094440" kindref="member">SCIPsortLong</ref>(</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1610"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1612"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>two<sp/>joint<sp/>arrays<sp/>of<sp/>Long/pointer,<sp/>sorted<sp/>by<sp/>the<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1613"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1614"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gaa12c12f4875f5297607b53fcce5078c0" kindref="member">SCIPsortLongPtr</ref>(</highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1619"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1620"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>three<sp/>arrays<sp/>of<sp/>Long/pointer/ints,<sp/>sorted<sp/>by<sp/>the<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1621"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1622"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga7e4919b0b7d0459d9d7a04ca40541bce" kindref="member">SCIPsortLongPtrInt</ref>(</highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1624"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1626"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1629"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>four<sp/>arrays<sp/>of<sp/>Long/pointer/Real/Bool,<sp/>sorted<sp/>by<sp/>the<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1630"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1631"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga60ad9d0f47f519d1a2fd1e84d787b2da" kindref="member">SCIPsortLongPtrRealBool</ref>(</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1633"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1634"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boolarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Bool<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1638"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1639"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>five<sp/>arrays<sp/>of<sp/>Long/pointer/Real/Real/Bool,<sp/>sorted<sp/>by<sp/>the<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1640"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1641"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gaa59f9cf4c99208ae037431456f1eaaf2" kindref="member">SCIPsortLongPtrRealRealBool</ref>(</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1644"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>SCIP_Real<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>SCIP_Real<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1646"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boolarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Bool<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1650"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>six<sp/>arrays<sp/>of<sp/>Long/pointer/Real/Real/int/Bool,<sp/>sorted<sp/>by<sp/>the<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1651"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1652"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga815d17d360accc8ebd7cdcee40b7fbed" kindref="member">SCIPsortLongPtrRealRealIntBool</ref>(</highlight></codeline>
<codeline lineno="1653"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1654"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1655"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>SCIP_Real<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1656"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>SCIP_Real<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boolarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Bool<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1661"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1662"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>four<sp/>joint<sp/>arrays<sp/>of<sp/>Long/pointer/pointer/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1663"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1664"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga8e73c014a70752547f7aed211f268b20" kindref="member">SCIPsortLongPtrPtrInt</ref>(</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1667"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1669"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1672"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>five<sp/>joint<sp/>arrays<sp/>of<sp/>Long/pointer/pointer/ints/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1673"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1674"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga22eff78752d127b97492bbcb70b66c43" kindref="member">SCIPsortLongPtrPtrIntInt</ref>(</highlight></codeline>
<codeline lineno="1675"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1676"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1681"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1683"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>five<sp/>joint<sp/>arrays<sp/>of<sp/>Long/pointer/pointer/Bool/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1684"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1685"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga3bc9e484cf827b8061b60bb5723a4278" kindref="member">SCIPsortLongPtrPtrBoolInt</ref>(</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1688"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boolarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Bool<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1692"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1693"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1694"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>five<sp/>joint<sp/>arrays<sp/>of<sp/>pointer/ints/ints/Bool/Bool,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1695"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1696"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga7cd183599f5fdaa9a04b2c30c6c520aa" kindref="member">SCIPsortPtrIntIntBoolBool</ref>(</highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1699"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boolarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>SCIP_Bool<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boolarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>SCIP_Bool<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1702"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1706"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>six<sp/>joint<sp/>arrays<sp/>of<sp/>ints/pointer/ints/ints/Bool/Bool,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1707"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1708"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga9149039ad799eca87926af742bce2615" kindref="member">SCIPsortIntPtrIntIntBoolBool</ref>(</highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray3,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>thrid<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boolarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>SCIP_Bool<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boolarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>SCIP_Bool<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"></highlight></codeline>
<codeline lineno="1718"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>now<sp/>all<sp/>downwards-sorting<sp/>methods<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1719"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1720"><highlight class="comment">/**<sp/>sort<sp/>an<sp/>indexed<sp/>element<sp/>set<sp/>in<sp/>non-increasing<sp/>order,<sp/>resulting<sp/>in<sp/>a<sp/>permutation<sp/>index<sp/>array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1721"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1722"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga0d7c86da256aedb5fa4773376ac73e54" kindref="member">SCIPsortDown</ref>(</highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>perm,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>resulting<sp/>permutation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a806c02f466e036f6e137df9eee2f7e9d" kindref="member">SCIP_DECL_SORTINDCOMP</ref>((*indcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataptr,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>data<sp/>field<sp/>that<sp/>is<sp/>given<sp/>to<sp/>the<sp/>external<sp/>compare<sp/>method<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1726"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>number<sp/>of<sp/>elements<sp/>to<sp/>be<sp/>sorted<sp/>(valid<sp/>index<sp/>range)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1728"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1729"><highlight class="comment">/**<sp/>sort<sp/>an<sp/>index<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1730"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1731"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gafb82dba8399e90104928045d683f3b48" kindref="member">SCIPsortDownInd</ref>(</highlight></codeline>
<codeline lineno="1732"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>the<sp/>index<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1733"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a806c02f466e036f6e137df9eee2f7e9d" kindref="member">SCIP_DECL_SORTINDCOMP</ref>((*indcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataptr,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>data<sp/>field<sp/>that<sp/>is<sp/>given<sp/>to<sp/>the<sp/>external<sp/>compare<sp/>method<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1737"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1738"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>an<sp/>array<sp/>of<sp/>pointers<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1739"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1740"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga1d8fe6915a069a8c1e9af1fa18be54a9" kindref="member">SCIPsortDownPtr</ref>(</highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1746"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>two<sp/>joint<sp/>arrays<sp/>of<sp/>pointers/pointers,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1747"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1748"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gae3e65d3151ef6438ec2e75ae5eac544f" kindref="member">SCIPsortDownPtrPtr</ref>(</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1750"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1752"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1754"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1755"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>two<sp/>joint<sp/>arrays<sp/>of<sp/>pointers/Reals,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1756"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1757"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga411d1af78dca509d0341f297f13526d0" kindref="member">SCIPsortDownPtrReal</ref>(</highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1760"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1764"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>two<sp/>joint<sp/>arrays<sp/>of<sp/>pointers/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1765"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1766"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga4d581268144e15363728a08b90a1d124" kindref="member">SCIPsortDownPtrInt</ref>(</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1769"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1772"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1773"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>two<sp/>joint<sp/>arrays<sp/>of<sp/>pointers/Bools,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1774"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1775"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gae14243bcbee05b69985fb4f53a57eb14" kindref="member">SCIPsortDownPtrBool</ref>(</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boolarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Bool<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1782"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>pointers/ints/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1783"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1784"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gad961a8f2a993686f622cc54779c1dbb7" kindref="member">SCIPsortDownPtrIntInt</ref>(</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1792"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>pointers/Reals/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1793"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1794"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga9c82a6ec22c88c581fe469d62d7bbff9" kindref="member">SCIPsortDownPtrRealInt</ref>(</highlight></codeline>
<codeline lineno="1795"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1796"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1797"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1798"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1799"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1800"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1801"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1802"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>pointers/pointers/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1803"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1804"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga186399601a8f141b3fa80daa86325044" kindref="member">SCIPsortDownPtrPtrInt</ref>(</highlight></codeline>
<codeline lineno="1805"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1806"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1807"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1808"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1811"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1812"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>pointers/pointers/Reals,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1813"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1814"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga3f4625f35544d81cf6dd9caace7290ff" kindref="member">SCIPsortDownPtrPtrReal</ref>(</highlight></codeline>
<codeline lineno="1815"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1817"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1819"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1821"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1822"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>four<sp/>joint<sp/>arrays<sp/>of<sp/>pointers/pointers/ints/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1823"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1824"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga83c769947e7a805ac08faebc9aae624f" kindref="member">SCIPsortDownPtrPtrIntInt</ref>(</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1828"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1831"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1832"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1833"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>four<sp/>joint<sp/>arrays<sp/>of<sp/>pointers/Reals/ints/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1834"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1835"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga43b302ebc8ac0ebe0f63ea157d26a51b" kindref="member">SCIPsortDownPtrRealIntInt</ref>(</highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1837"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1838"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1839"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1840"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1843"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1844"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>four<sp/>joint<sp/>arrays<sp/>of<sp/>pointer/pointer/Reals/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1845"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1846"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga103409100475e1f3e85048bbe7349c99" kindref="member">SCIPsortDownPtrPtrRealInt</ref>(</highlight></codeline>
<codeline lineno="1847"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1849"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1851"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1853"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1855"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>four<sp/>joint<sp/>arrays<sp/>of<sp/>pointer/pointer/Longs/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1856"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1857"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gab43cef21fdbf1c9c17dfde17598c0c4a" kindref="member">SCIPsortDownPtrPtrLongInt</ref>(</highlight></codeline>
<codeline lineno="1858"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1859"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1862"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1865"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1866"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>five<sp/>joint<sp/>arrays<sp/>of<sp/>pointer/pointer/Longs/ints/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1867"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1868"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga1db3f9de34af7bd405cbf5c50f74346d" kindref="member">SCIPsortDownPtrPtrLongIntInt</ref>(</highlight></codeline>
<codeline lineno="1869"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1870"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1871"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1873"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1874"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1878"><highlight class="comment">/**<sp/>sort<sp/>an<sp/>array<sp/>of<sp/>Reals<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1879"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1880"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gaa623c01168142d857c65130066ba26ff" kindref="member">SCIPsortDownReal</ref>(</highlight></codeline>
<codeline lineno="1881"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/><sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1882"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1883"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1884"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1885"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>two<sp/>joint<sp/>arrays<sp/>of<sp/>Reals/pointers,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1886"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1887"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga84840a187b87bd89c6fd1c7884013b99" kindref="member">SCIPsortDownRealPtr</ref>(</highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/><sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1892"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1893"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>two<sp/>joint<sp/>arrays<sp/>of<sp/>Reals/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1894"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1895"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gadd4f5e75a6b3302b8f95684bd73a8889" kindref="member">SCIPsortDownRealInt</ref>(</highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/><sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1898"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1900"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1901"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>Reals/Bools/Pointer,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1902"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1903"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga1baa5680a01a45dc0348e41f2213db96" kindref="member">SCIPsortDownRealBoolPtr</ref>(</highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boolarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Bool<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1908"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1909"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1910"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>Reals/ints/Longs,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1911"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1912"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga993756b97de88ce3905b70c4916b03ea" kindref="member">SCIPsortDownRealIntLong</ref>(</highlight></codeline>
<codeline lineno="1913"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1914"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1915"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1916"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1917"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1918"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1919"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>Reals/ints/Pointer,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1920"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1921"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga2e907842a928670151b66d0dd0e3bcc8" kindref="member">SCIPsortDownRealIntPtr</ref>(</highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1923"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1924"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1925"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1926"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1927"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1928"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>Reals/Reals/Pointer,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1929"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1930"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga9479fd1bd7c85ee7fc8edc1c3f938e53" kindref="member">SCIPsortDownRealRealPtr</ref>(</highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>SCIP_Real<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>SCIP_Real<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1936"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1937"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>four<sp/>joint<sp/>arrays<sp/>of<sp/>Reals/pointers/pointers/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1938"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1939"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga817a57f4c3b3093c0a3c40f678ecd0fb" kindref="member">SCIPsortDownRealPtrPtrInt</ref>(</highlight></codeline>
<codeline lineno="1940"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1941"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1943"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1947"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>five<sp/>joint<sp/>arrays<sp/>of<sp/>Reals/pointers/pointers/ints/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1948"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1949"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga696e143ef9925f77d8b4de12ac3016ac" kindref="member">SCIPsortDownRealPtrPtrIntInt</ref>(</highlight></codeline>
<codeline lineno="1950"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1956"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1957"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1958"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>four<sp/>joint<sp/>arrays<sp/>of<sp/>Reals/Longs/Reals/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1959"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1960"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gaadec0881bdfa6a228e0e666a7490a0c2" kindref="member">SCIPsortDownRealLongRealInt</ref>(</highlight></codeline>
<codeline lineno="1961"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1963"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray3,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1964"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/><sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1965"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1966"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1967"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1968"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>four<sp/>joint<sp/>arrays<sp/>of<sp/>Reals/Reals/ints/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1969"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1970"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gaaf4a84d4a734bcebc99a4420738e5e3c" kindref="member">SCIPsortDownRealRealIntInt</ref>(</highlight></codeline>
<codeline lineno="1971"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1974"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1975"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1976"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1977"><highlight class="normal"></highlight></codeline>
<codeline lineno="1978"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1979"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>four<sp/>joint<sp/>arrays<sp/>of<sp/>Reals/Reals/Reals/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1980"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1981"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga50532e082cb45f17fd5bccf1b242e785" kindref="member">SCIPsortDownRealRealRealInt</ref>(</highlight></codeline>
<codeline lineno="1982"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1983"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1984"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray3,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1985"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1986"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1988"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1989"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>four<sp/>joint<sp/>arrays<sp/>of<sp/>Reals/Reals/Reals/pointers,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1990"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1991"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga4052498e105a5fd110f63d9fff7cbf0a" kindref="member">SCIPsortDownRealRealRealPtr</ref>(</highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1993"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray3,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1995"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1996"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1997"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="1998"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1999"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>Reals/pointers,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2000"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2001"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga332bb52badc574cb381f44acc91b5651" kindref="member">SCIPsortDownRealPtrPtr</ref>(</highlight></codeline>
<codeline lineno="2002"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2003"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2004"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2005"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2006"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2007"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2008"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>five<sp/>joint<sp/>arrays<sp/>of<sp/>Reals/Reals/Reals/Bools/pointers,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2009"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2010"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gaa98f80c21490cc4751fd2032348a0f0f" kindref="member">SCIPsortDownRealRealRealBoolPtr</ref>(</highlight></codeline>
<codeline lineno="2011"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2013"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray3,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2014"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boolarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Bool<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2015"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2016"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2017"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2018"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2019"><highlight class="comment">/**<sp/>sort<sp/>array<sp/>of<sp/>ints<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2020"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2021"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gafc2c490292d72a2c0bba1643fcf327a5" kindref="member">SCIPsortDownInt</ref>(</highlight></codeline>
<codeline lineno="2022"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2023"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2024"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2025"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2026"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>two<sp/>joint<sp/>arrays<sp/>of<sp/>ints/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2027"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2028"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga01925789e2248eb75d8285ef887e0640" kindref="member">SCIPsortDownIntInt</ref>(</highlight></codeline>
<codeline lineno="2029"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2030"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2032"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2033"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2034"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>two<sp/>joint<sp/>arrays<sp/>of<sp/>ints/pointers,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2035"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2036"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga55b71add7fd01d9b377f78a42d16cc64" kindref="member">SCIPsortDownIntPtr</ref>(</highlight></codeline>
<codeline lineno="2037"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2038"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2039"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2040"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2041"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2042"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>two<sp/>joint<sp/>arrays<sp/>of<sp/>ints/reals,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2043"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2044"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gafe3012bbb5eb43bc8757afccafb82d03" kindref="member">SCIPsortDownIntReal</ref>(</highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2046"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>real<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2049"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2050"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>ints/ints/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2051"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2052"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga8011151ff7cec8ee757981bf65ae6b2a" kindref="member">SCIPsortDownIntIntInt</ref>(</highlight></codeline>
<codeline lineno="2053"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2055"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray3,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>third<sp/>int<sp/><sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2056"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2057"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2058"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2059"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>ints/ints/SCIP_Longint,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2060"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2061"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gaea667c42803705ecdbcee0f5a8248540" kindref="member">SCIPsortDownIntIntLong</ref>(</highlight></codeline>
<codeline lineno="2062"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2063"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2064"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2065"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2066"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2067"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2068"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>ints/ints/pointers,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2069"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2070"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga775d4027f044f54761709621a1efb26a" kindref="member">SCIPsortDownIntIntPtr</ref>(</highlight></codeline>
<codeline lineno="2071"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2072"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2073"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2074"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2075"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2076"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2077"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>ints/ints/Reals,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2078"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2079"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga3264e0be63d9cc1179183ff0185057c7" kindref="member">SCIPsortDownIntIntReal</ref>(</highlight></codeline>
<codeline lineno="2080"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2081"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2083"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2084"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2085"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2086"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>four<sp/>joint<sp/>arrays<sp/>of<sp/>ints/ints/ints/pointers,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2087"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2088"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga2bec5a6855cf1369a4a15ae1a61810ec" kindref="member">SCIPsortDownIntIntIntPtr</ref>(</highlight></codeline>
<codeline lineno="2089"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2090"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2091"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray3,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2092"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2093"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2095"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2096"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>four<sp/>joint<sp/>arrays<sp/>of<sp/>ints/pointers/ints/Reals,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2097"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2098"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga31c092ded149d84097c1b16b6a5190a5" kindref="member">SCIPsortDownIntPtrIntReal</ref>(</highlight></codeline>
<codeline lineno="2099"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2101"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2102"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2103"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2104"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2105"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2106"><highlight class="comment">/**<sp/>sort<sp/>an<sp/>array<sp/>of<sp/>Longints<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2107"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2108"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga65b6dcbe8e2a19882877f75ca0b3bf7a" kindref="member">SCIPsortDownLong</ref>(</highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2110"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2111"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2112"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2113"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>two<sp/>joint<sp/>arrays<sp/>of<sp/>Long/pointer,<sp/>sorted<sp/>by<sp/>the<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2114"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2115"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga02c0c212fcce997d7fd828cba495cbbf" kindref="member">SCIPsortDownLongPtr</ref>(</highlight></codeline>
<codeline lineno="2116"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2117"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2118"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2119"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2120"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2121"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>three<sp/>arrays<sp/>of<sp/>Long/pointer/ints,<sp/>sorted<sp/>by<sp/>the<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2122"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2123"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gafbe313d646e84532917af8565963b57d" kindref="member">SCIPsortDownLongPtrInt</ref>(</highlight></codeline>
<codeline lineno="2124"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2125"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2126"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2127"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2128"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2129"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2130"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>four<sp/>arrays<sp/>of<sp/>Long/pointer/Real/Bool,<sp/>sorted<sp/>by<sp/>the<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2131"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2132"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga452ab65806aa320bff3720b7b4b28122" kindref="member">SCIPsortDownLongPtrRealBool</ref>(</highlight></codeline>
<codeline lineno="2133"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2134"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2135"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2136"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boolarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Bool<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2137"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2138"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2139"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2140"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>five<sp/>arrays<sp/>of<sp/>Long/pointer/Real/Real/Bool,<sp/>sorted<sp/>by<sp/>the<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2141"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2142"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga3ca8afb62ddbfd1f33e99b9d1b500af2" kindref="member">SCIPsortDownLongPtrRealRealBool</ref>(</highlight></codeline>
<codeline lineno="2143"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2144"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2145"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>SCIP_Real<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2146"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>SCIP_Real<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2147"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boolarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Bool<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2148"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2149"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2150"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2151"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>six<sp/>arrays<sp/>of<sp/>Long/pointer/Real/Real/int/Bool,<sp/>sorted<sp/>by<sp/>the<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2152"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2153"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gab4fd456883d9706d81aa702025175de1" kindref="member">SCIPsortDownLongPtrRealRealIntBool</ref>(</highlight></codeline>
<codeline lineno="2154"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2155"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2156"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>SCIP_Real<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2157"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>SCIP_Real<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2158"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2159"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boolarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Bool<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2160"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2161"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2162"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2163"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>four<sp/>joint<sp/>arrays<sp/>of<sp/>Long/pointer/pointer/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2164"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2165"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga5472b21dca58ff8bb22c87182ab9644b" kindref="member">SCIPsortDownLongPtrPtrInt</ref>(</highlight></codeline>
<codeline lineno="2166"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2167"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2168"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2169"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2170"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2171"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2172"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2173"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>five<sp/>joint<sp/>arrays<sp/>of<sp/>Long/pointer/pointer/ints/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2174"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2175"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga643e99ceae9a6dc322f115c435dd9af5" kindref="member">SCIPsortDownLongPtrPtrIntInt</ref>(</highlight></codeline>
<codeline lineno="2176"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2177"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2178"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2179"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2180"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2181"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2182"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2183"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2184"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>five<sp/>joint<sp/>arrays<sp/>of<sp/>Long/pointer/pointer/Bool/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2185"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2186"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gaabf37c20afcb335e4ef35d12e955804a" kindref="member">SCIPsortDownLongPtrPtrBoolInt</ref>(</highlight></codeline>
<codeline lineno="2187"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2188"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2189"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2190"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boolarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Bool<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2191"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2192"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2193"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2194"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2195"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>five<sp/>joint<sp/>arrays<sp/>of<sp/>pointer/ints/ints/Bool/Bool,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2196"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2197"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gae46567014ded78d5a0ba4174e0182af1" kindref="member">SCIPsortDownPtrIntIntBoolBool</ref>(</highlight></codeline>
<codeline lineno="2198"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2199"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2200"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2201"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boolarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>SCIP_Bool<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2202"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boolarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>SCIP_Bool<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2203"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2204"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2205"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2206"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2207"><highlight class="comment">/**<sp/>sort<sp/>of<sp/>six<sp/>joint<sp/>arrays<sp/>of<sp/>ints/pointer/ints/ints/Bool/Bool,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2208"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2209"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gaf03082c708f42cd3620e034238c79ee7" kindref="member">SCIPsortDownIntPtrIntIntBoolBool</ref>(</highlight></codeline>
<codeline lineno="2210"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2211"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2212"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2213"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray3,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>thrid<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2214"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boolarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>SCIP_Bool<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2215"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boolarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>SCIP_Bool<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2216"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>arrays<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2217"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2218"><highlight class="normal"></highlight></codeline>
<codeline lineno="2219"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2220"><highlight class="comment"><sp/>*<sp/>Sorted<sp/>vectors</highlight></codeline>
<codeline lineno="2221"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2222"><highlight class="normal"></highlight></codeline>
<codeline lineno="2223"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>upwards<sp/>insertion<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2224"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2225"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>an<sp/>index<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2226"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2227"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gadf69871e9d63b3bacc124e080afdc1d3" kindref="member">SCIPsortedvecInsertInd</ref>(</highlight></codeline>
<codeline lineno="2228"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>the<sp/>index<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2229"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a806c02f466e036f6e137df9eee2f7e9d" kindref="member">SCIP_DECL_SORTINDCOMP</ref>((*indcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2230"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataptr,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>data<sp/>field<sp/>that<sp/>is<sp/>given<sp/>to<sp/>the<sp/>external<sp/>compare<sp/>method<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2231"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2232"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2233"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2234"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2235"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2236"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>an<sp/>array<sp/>of<sp/>pointers<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2237"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2238"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gad2de8244f70b7d8ed2145f4873d0f827" kindref="member">SCIPsortedvecInsertPtr</ref>(</highlight></codeline>
<codeline lineno="2239"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>the<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2240"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2241"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2242"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2243"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2244"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2245"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2246"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>two<sp/>joint<sp/>arrays<sp/>of<sp/>pointers/pointers<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2247"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2248"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga82b5b776c82e6ca892eafaf7412c6f73" kindref="member">SCIPsortedvecInsertPtrPtr</ref>(</highlight></codeline>
<codeline lineno="2249"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2250"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2251"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2252"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2253"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2254"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2255"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2256"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2257"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2258"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>two<sp/>joint<sp/>arrays<sp/>of<sp/>pointers/Reals,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2259"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2260"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gab7645aaebf00eb16762f1a77a6ec43a2" kindref="member">SCIPsortedvecInsertPtrReal</ref>(</highlight></codeline>
<codeline lineno="2261"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2262"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2263"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2264"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2265"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2266"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2267"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2268"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2269"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2270"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>two<sp/>joint<sp/>arrays<sp/>of<sp/>pointers/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2271"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2272"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga1a2d6a8a92817d3043c49f76009a6110" kindref="member">SCIPsortedvecInsertPtrInt</ref>(</highlight></codeline>
<codeline lineno="2273"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2274"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2275"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2276"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2277"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2278"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2279"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2280"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2281"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2282"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>two<sp/>joint<sp/>arrays<sp/>of<sp/>pointers/Bools,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2283"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2284"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga287aaa7fb850a94b01c93da3ecc69053" kindref="member">SCIPsortedvecInsertPtrBool</ref>(</highlight></codeline>
<codeline lineno="2285"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2286"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boolarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Bool<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2287"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2288"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2289"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2290"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2291"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2292"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2293"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2294"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>pointers/ints/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2295"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2296"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga4e5b8f75079c59ef65f0822de4c4bd3a" kindref="member">SCIPsortedvecInsertPtrIntInt</ref>(</highlight></codeline>
<codeline lineno="2297"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2298"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2299"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2300"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2301"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2302"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2303"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field2val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2304"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2305"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2306"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2307"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2308"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>pointers/Reals/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2309"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2310"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gaa6f2603ab94a9210cd0bdd9b3fbf5b9a" kindref="member">SCIPsortedvecInsertPtrRealInt</ref>(</highlight></codeline>
<codeline lineno="2311"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2312"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2313"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2314"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2315"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2316"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2317"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field2val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2318"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2319"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2320"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2321"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2322"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>pointers/pointers/Ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2323"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2324"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga5a96ba0027ce1fb1990706d22a761bdd" kindref="member">SCIPsortedvecInsertPtrPtrInt</ref>(</highlight></codeline>
<codeline lineno="2325"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2326"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2327"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2328"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2329"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2330"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2331"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field2val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2332"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2333"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2334"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2335"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2336"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>pointers/pointers/Reals,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2337"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2338"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga4eea85f0cafa05790ba41f868d4ccba9" kindref="member">SCIPsortedvecInsertPtrPtrReal</ref>(</highlight></codeline>
<codeline lineno="2339"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2340"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2341"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2342"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2343"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2344"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2345"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field2val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2346"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2347"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2348"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2349"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2350"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>four<sp/>joint<sp/>arrays<sp/>of<sp/>pointers/pointers/ints/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2351"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2352"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga7c9b63e9f81d3abbd37f0d4f4778a32f" kindref="member">SCIPsortedvecInsertPtrPtrIntInt</ref>(</highlight></codeline>
<codeline lineno="2353"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2354"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2355"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2356"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2357"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2358"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2359"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2360"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field2val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2361"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field3val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2362"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2363"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2364"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2365"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2366"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>four<sp/>joint<sp/>arrays<sp/>of<sp/>pointers/Reals/ints/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2367"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2368"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gad39babe7886a3935819a7a8cf47bb03e" kindref="member">SCIPsortedvecInsertPtrRealIntInt</ref>(</highlight></codeline>
<codeline lineno="2369"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2370"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2371"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2372"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2373"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2374"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2375"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2376"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field2val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2377"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field3val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2378"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2379"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2380"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2381"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2382"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>four<sp/>joint<sp/>arrays<sp/>of<sp/>pointer/pointer/Reals/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2383"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2384"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gae553cc51ee93cc46ddf9b17864356af6" kindref="member">SCIPsortedvecInsertPtrPtrRealInt</ref>(</highlight></codeline>
<codeline lineno="2385"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2386"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2387"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2388"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2389"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2390"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2391"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2392"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field2val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2393"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field3val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2394"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2395"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2396"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2397"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2398"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>four<sp/>joint<sp/>arrays<sp/>of<sp/>pointer/pointer/Longs/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2399"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2400"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gae86ae870f9a6ce7955c47b49ad6d75a1" kindref="member">SCIPsortedvecInsertPtrPtrLongInt</ref>(</highlight></codeline>
<codeline lineno="2401"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2402"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2403"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2404"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2405"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2406"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2407"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2408"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field2val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2409"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field3val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2410"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2411"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2412"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2413"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2414"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>five<sp/>joint<sp/>arrays<sp/>of<sp/>pointer/pointer/Longs/ints/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2415"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2416"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gaeaeb6ae4678972440ef6c584b759d855" kindref="member">SCIPsortedvecInsertPtrPtrLongIntInt</ref>(</highlight></codeline>
<codeline lineno="2417"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2418"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2419"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2420"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2421"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2422"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2423"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2424"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2425"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field2val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2426"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field3val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2427"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field4val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2428"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2429"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2430"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2431"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2432"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>Reals/Bools/pointers,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2433"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2434"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga7bd94818f5da6aa73570287156de782c" kindref="member">SCIPsortedvecInsertRealBoolPtr</ref>(</highlight></codeline>
<codeline lineno="2435"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2436"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boolarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Bool<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2437"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2438"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2439"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2440"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field2val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2441"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2442"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2443"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2444"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2445"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>two<sp/>joint<sp/>arrays<sp/>of<sp/>Reals/pointers,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2446"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2447"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gae418cfc3d7edf6b841e3b41c05396db8" kindref="member">SCIPsortedvecInsertRealPtr</ref>(</highlight></codeline>
<codeline lineno="2448"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2449"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2450"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2451"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2452"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2453"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2454"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2455"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2456"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>an<sp/>arrays<sp/>of<sp/>Reals,<sp/>sorted<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2457"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2458"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga3366a4cd7ae4a55d7ca431d7cd88b695" kindref="member">SCIPsortedvecInsertReal</ref>(</highlight></codeline>
<codeline lineno="2459"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2460"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2461"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2462"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2463"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2464"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2465"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>two<sp/>joint<sp/>arrays<sp/>of<sp/>Reals/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2466"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2467"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga6f3fa13f984b8fd47cc437a0986e0eb8" kindref="member">SCIPsortedvecInsertRealInt</ref>(</highlight></codeline>
<codeline lineno="2468"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2469"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2470"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2471"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2472"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2473"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2474"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2475"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2476"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>Reals/ints/Longs,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2477"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2478"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga16f59970bfb334d816b41121c332c4dc" kindref="member">SCIPsortedvecInsertRealIntLong</ref>(</highlight></codeline>
<codeline lineno="2479"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2480"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2481"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2482"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2483"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2484"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field2val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2485"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2486"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2487"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2488"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2489"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>Reals/ints/Pointer,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2490"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2491"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gaf2c7e0b280b46ceeeb6af669a6e46ecd" kindref="member">SCIPsortedvecInsertRealIntPtr</ref>(</highlight></codeline>
<codeline lineno="2492"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2493"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2494"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2495"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2496"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2497"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field2val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2498"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2499"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2500"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2501"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2502"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>Reals/Reals/Pointer,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2503"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2504"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga3787f348b6be92d6aacaea1b7af6d472" kindref="member">SCIPsortedvecInsertRealRealPtr</ref>(</highlight></codeline>
<codeline lineno="2505"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2506"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/><sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2507"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2508"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2509"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2510"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field2val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2511"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2512"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2513"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2514"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2515"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>four<sp/>joint<sp/>arrays<sp/>of<sp/>Reals/pointers/pointers/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2516"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2517"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gaa021f9bbbb629a05a94d9bc9578b4dcf" kindref="member">SCIPsortedvecInsertRealPtrPtrInt</ref>(</highlight></codeline>
<codeline lineno="2518"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2519"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2520"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2521"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2522"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2523"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2524"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field2val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2525"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2526"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2527"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2528"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2529"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2530"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>five<sp/>joint<sp/>arrays<sp/>of<sp/>Reals/pointers/pointers/ints/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2531"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2532"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gae1a157e4781b1a108449aa2e6f25a8ec" kindref="member">SCIPsortedvecInsertRealPtrPtrIntInt</ref>(</highlight></codeline>
<codeline lineno="2533"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2534"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2535"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2536"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2537"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2538"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2539"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2540"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field2val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2541"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intval1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2542"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intval2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2543"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2544"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2545"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2546"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2547"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>four<sp/>joint<sp/>arrays<sp/>of<sp/>Reals/Long/Reals/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2548"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2549"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga3c2fd41694250800a33788757796766a" kindref="member">SCIPsortedvecInsertRealLongRealInt</ref>(</highlight></codeline>
<codeline lineno="2550"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2551"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2552"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray3,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2553"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2554"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2555"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2556"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field2val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2557"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field3val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2558"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2559"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2560"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2561"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2562"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>four<sp/>joint<sp/>arrays<sp/>of<sp/>Reals/Reals/ints/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2563"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2564"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gac3edc085b2c5f73d7903297fc37b07ea" kindref="member">SCIPsortedvecInsertRealRealIntInt</ref>(</highlight></codeline>
<codeline lineno="2565"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2566"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2567"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2568"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2569"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2570"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2571"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field2val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2572"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field3val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2573"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2574"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2575"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2576"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2577"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>four<sp/>joint<sp/>arrays<sp/>of<sp/>Reals/Reals/Reals/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2578"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2579"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga77d4c8c22de99edad167eabac9726137" kindref="member">SCIPsortedvecInsertRealRealRealInt</ref>(</highlight></codeline>
<codeline lineno="2580"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2581"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2582"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray3,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>third<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2583"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2584"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2585"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2586"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field2val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2587"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field3val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2588"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2589"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2590"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2591"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2592"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>four<sp/>joint<sp/>arrays<sp/>of<sp/>Reals/Reals/Reals/pointers,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2593"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2594"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gae42f95467cf1997a7a4a860abf197566" kindref="member">SCIPsortedvecInsertRealRealRealPtr</ref>(</highlight></codeline>
<codeline lineno="2595"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2596"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2597"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray3,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>third<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2598"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2599"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2600"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2601"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field2val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2602"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field3val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2603"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2604"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2605"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2606"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2607"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>five<sp/>joint<sp/>arrays<sp/>of<sp/>Reals/Reals/Reals/Bools/pointers,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2608"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2609"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga21db09a67cbaf2e5886207f85a5dfba9" kindref="member">SCIPsortedvecInsertRealRealRealBoolPtr</ref>(</highlight></codeline>
<codeline lineno="2610"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2611"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2612"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray3,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>third<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2613"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boolarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Bool<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2614"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2615"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2616"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2617"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field2val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2618"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field3val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2619"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field4val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2620"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2621"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2622"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2623"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2624"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>an<sp/>array<sp/>of<sp/>ints<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2625"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2626"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga6fa297c0cd844c08ddc3c3f79a51e4ca" kindref="member">SCIPsortedvecInsertInt</ref>(</highlight></codeline>
<codeline lineno="2627"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2628"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2629"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2630"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2631"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2632"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2633"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>two<sp/>joint<sp/>arrays<sp/>of<sp/>ints/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2634"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2635"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gaf8bde4b5fa0673e8762d6e24d0a39e99" kindref="member">SCIPsortedvecInsertIntInt</ref>(</highlight></codeline>
<codeline lineno="2636"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2637"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2638"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2639"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2640"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2641"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2642"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2643"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2644"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>two<sp/>joint<sp/>arrays<sp/>of<sp/>ints/pointers,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2645"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2646"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga77913089a99756fe6d7ce65135ce05ea" kindref="member">SCIPsortedvecInsertIntPtr</ref>(</highlight></codeline>
<codeline lineno="2647"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2648"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2649"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2650"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2651"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2652"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2653"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2654"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2655"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>two<sp/>joint<sp/>arrays<sp/>of<sp/>ints/reals,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2656"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2657"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga8b02bc8614dceb22e56a4fef399be177" kindref="member">SCIPsortedvecInsertIntReal</ref>(</highlight></codeline>
<codeline lineno="2658"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2659"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2660"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2661"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2662"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2663"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2664"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2665"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2666"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>ints/ints/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2667"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2668"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gad6e23029376ac733381d4ed263d17168" kindref="member">SCIPsortedvecInsertIntIntInt</ref>(</highlight></codeline>
<codeline lineno="2669"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2670"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2671"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray3,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>third<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2672"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2673"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2674"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field2val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2675"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2676"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2677"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2678"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2679"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>ints/ints/SCIP_Longint,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2680"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2681"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga51aea5f6da2a3c8ab3685739f6f4b0ff" kindref="member">SCIPsortedvecInsertIntIntLong</ref>(</highlight></codeline>
<codeline lineno="2682"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2683"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2684"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2685"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2686"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2687"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field2val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2688"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2689"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2690"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2691"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2692"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>ints/ints/pointers,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2693"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2694"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga0b94979d8d5cd5ce5847d21e9b4dd12d" kindref="member">SCIPsortedvecInsertIntIntPtr</ref>(</highlight></codeline>
<codeline lineno="2695"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2696"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2697"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2698"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2699"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2700"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field2val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2701"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2702"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2703"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2704"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2705"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>ints/ints/Reals,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2706"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2707"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gacf26beb3678a84f4572a6d72c65214ac" kindref="member">SCIPsortedvecInsertIntIntReal</ref>(</highlight></codeline>
<codeline lineno="2708"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2709"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2710"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2711"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2712"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2713"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field2val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2714"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2715"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2716"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2717"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2718"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>ints/pointers/Reals,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2719"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2720"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga2974b694dd67accbfbe698acd3c9d06c" kindref="member">SCIPsortedvecInsertIntPtrReal</ref>(</highlight></codeline>
<codeline lineno="2721"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2722"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2723"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2724"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2725"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2726"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field2val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2727"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2728"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2729"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2730"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2731"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>four<sp/>joint<sp/>arrays<sp/>of<sp/>ints/ints/ints/pointers,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2732"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2733"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gab375f6f88b3cc95fc3aa1d6543641a5b" kindref="member">SCIPsortedvecInsertIntIntIntPtr</ref>(</highlight></codeline>
<codeline lineno="2734"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2735"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2736"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray3,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2737"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2738"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2739"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2740"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field2val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2741"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field3val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2742"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2743"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2744"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2745"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2746"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>four<sp/>joint<sp/>arrays<sp/>of<sp/>ints/pointers/ints/Reals,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2747"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2748"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gabf59db0222c9f6417812e55250ad5668" kindref="member">SCIPsortedvecInsertIntPtrIntReal</ref>(</highlight></codeline>
<codeline lineno="2749"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2750"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2751"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2752"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2753"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2754"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2755"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field2val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2756"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field3val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2757"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2758"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2759"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2760"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2761"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>an<sp/>array<sp/>of<sp/>Longints,<sp/>sorted<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2762"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2763"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gaf19299232a058bd53f2a21d41c415e60" kindref="member">SCIPsortedvecInsertLong</ref>(</highlight></codeline>
<codeline lineno="2764"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2765"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2766"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2767"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2768"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2769"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2770"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>two<sp/>joint<sp/>arrays<sp/>of<sp/>Long/pointer,<sp/>sorted<sp/>by<sp/>the<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2771"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2772"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga906ab8c78435d189f9e5bca3b97f694b" kindref="member">SCIPsortedvecInsertLongPtr</ref>(</highlight></codeline>
<codeline lineno="2773"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2774"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2775"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2776"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2777"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2778"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2779"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2780"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2781"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>Long/pointer/ints,<sp/>sorted<sp/>by<sp/>the<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2782"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2783"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga7c6e98ed28a19ddd0d6410b3e58ce580" kindref="member">SCIPsortedvecInsertLongPtrInt</ref>(</highlight></codeline>
<codeline lineno="2784"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2785"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2786"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2787"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2788"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2789"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field2val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2790"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2791"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2792"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2793"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2794"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>four<sp/>joint<sp/>arrays<sp/>of<sp/>Long/pointer/Real/Bool,<sp/>sorted<sp/>by<sp/>the<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2795"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2796"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga8b9b2aac4a28c87a0e2d22a5f65578cd" kindref="member">SCIPsortedvecInsertLongPtrRealBool</ref>(</highlight></codeline>
<codeline lineno="2797"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2798"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2799"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2800"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boolarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Bool<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2801"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2802"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2803"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field2val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2804"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field3val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2805"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2806"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2807"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2808"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2809"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>five<sp/>joint<sp/>arrays<sp/>of<sp/>Long/pointer/Real/Real/Bool,<sp/>sorted<sp/>by<sp/>the<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2810"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2811"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga8d578aca8107caf59dcdebf202ebd1b9" kindref="member">SCIPsortedvecInsertLongPtrRealRealBool</ref>(</highlight></codeline>
<codeline lineno="2812"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2813"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2814"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2815"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2816"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boolarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Bool<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2817"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2818"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2819"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field2val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2820"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field3val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2821"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field4val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2822"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2823"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2824"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2825"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2826"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>six<sp/>joint<sp/>arrays<sp/>of<sp/>Long/pointer/Real/Real/int/Bool,<sp/>sorted<sp/>by<sp/>the<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2827"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2828"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga533ef5c1fba06474716d706f27158145" kindref="member">SCIPsortedvecInsertLongPtrRealRealIntBool</ref>(</highlight></codeline>
<codeline lineno="2829"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2830"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2831"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2832"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2833"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2834"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boolarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Bool<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2835"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2836"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2837"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field2val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2838"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field3val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2839"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field4val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2840"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field5val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2841"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2842"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2843"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2844"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2845"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>four<sp/>joint<sp/>arrays<sp/>of<sp/>Long/pointer/pointer/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2846"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2847"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gad4fad2efa21d170b320dec6726219942" kindref="member">SCIPsortedvecInsertLongPtrPtrInt</ref>(</highlight></codeline>
<codeline lineno="2848"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2849"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2850"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2851"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2852"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2853"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2854"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field2val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2855"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field3val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2856"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2857"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2858"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2859"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2860"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>five<sp/>joint<sp/>arrays<sp/>of<sp/>Long/pointer/pointer/ints/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2861"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2862"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga864aaaff34e17870f10b2fe8cf96ec4f" kindref="member">SCIPsortedvecInsertLongPtrPtrIntInt</ref>(</highlight></codeline>
<codeline lineno="2863"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2864"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2865"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2866"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2867"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2868"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2869"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2870"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field2val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2871"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field3val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2872"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field4val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2873"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2874"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2875"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2876"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2877"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>five<sp/>joint<sp/>arrays<sp/>of<sp/>Long/pointer/pointer/Bool/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2878"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2879"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga7ed6f2c5ff651a751d1e6f2aedf313f4" kindref="member">SCIPsortedvecInsertLongPtrPtrBoolInt</ref>(</highlight></codeline>
<codeline lineno="2880"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2881"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2882"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2883"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boolarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Bool<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2884"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2885"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2886"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2887"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field2val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2888"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field3val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2889"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field4val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2890"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2891"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2892"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2893"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2894"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>five<sp/>joint<sp/>arrays<sp/>of<sp/>pointer/ints/ints/Bool/Bool,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2895"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2896"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga0ef7201c7a2227f9090045b124728712" kindref="member">SCIPsortedvecInsertPtrIntIntBoolBool</ref>(</highlight></codeline>
<codeline lineno="2897"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2898"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2899"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2900"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boolarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>SCIP_Bool<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2901"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boolarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>SCIP_Bool<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2902"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2903"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2904"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2905"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field2val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2906"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field3val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2907"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field4val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2908"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2909"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2910"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2911"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2912"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>six<sp/>joint<sp/>arrays<sp/>of<sp/>ints/pointer/ints/ints/Bool/Bool,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2913"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2914"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga8e191e75eee6196024aaaabe93b3313d" kindref="member">SCIPsortedvecInsertIntPtrIntIntBoolBool</ref>(</highlight></codeline>
<codeline lineno="2915"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2916"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2917"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2918"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray3,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>thrid<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2919"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boolarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>SCIP_Bool<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2920"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boolarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>SCIP_Bool<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2921"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2922"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2923"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field2val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2924"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field3val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2925"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field4val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2926"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field5val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2927"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2928"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2929"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2930"><highlight class="normal"></highlight></codeline>
<codeline lineno="2931"><highlight class="normal"></highlight></codeline>
<codeline lineno="2932"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>downwards<sp/>insertion<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2933"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2934"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>an<sp/>index<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2935"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2936"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga59c1acec2d250b84864f2e81956b7359" kindref="member">SCIPsortedvecInsertDownInd</ref>(</highlight></codeline>
<codeline lineno="2937"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>the<sp/>index<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2938"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a806c02f466e036f6e137df9eee2f7e9d" kindref="member">SCIP_DECL_SORTINDCOMP</ref>((*indcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2939"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataptr,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>data<sp/>field<sp/>that<sp/>is<sp/>given<sp/>to<sp/>the<sp/>external<sp/>compare<sp/>method<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2940"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2941"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2942"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2943"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2944"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2945"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>an<sp/>array<sp/>of<sp/>pointers<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2946"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2947"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gaca2423e91bda64b8c7d25a54215ca3d1" kindref="member">SCIPsortedvecInsertDownPtr</ref>(</highlight></codeline>
<codeline lineno="2948"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2949"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2950"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2951"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2952"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2953"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2954"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2955"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>two<sp/>joint<sp/>arrays<sp/>of<sp/>pointers/pointers,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2956"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2957"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga835ec50c9f25c7ec2a416608cbc4fcb2" kindref="member">SCIPsortedvecInsertDownPtrPtr</ref>(</highlight></codeline>
<codeline lineno="2958"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2959"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2960"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2961"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2962"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2963"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2964"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2965"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2966"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2967"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>two<sp/>joint<sp/>arrays<sp/>of<sp/>pointers/Reals,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2968"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2969"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gaa40de1dda2d8f402c0dd9a53e7cc2e38" kindref="member">SCIPsortedvecInsertDownPtrReal</ref>(</highlight></codeline>
<codeline lineno="2970"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2971"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2972"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2973"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2974"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2975"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2976"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2977"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2978"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2979"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>two<sp/>joint<sp/>arrays<sp/>of<sp/>pointers/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2980"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2981"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga9d22da9fb1bfc1dc07a231b97d9d4b6f" kindref="member">SCIPsortedvecInsertDownPtrInt</ref>(</highlight></codeline>
<codeline lineno="2982"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2983"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2984"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2985"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2986"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2987"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2988"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2989"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="2990"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2991"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>two<sp/>joint<sp/>arrays<sp/>of<sp/>pointers/Bools,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2992"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2993"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga8f9a20c55090d404759aa36b006cffbb" kindref="member">SCIPsortedvecInsertDownPtrBool</ref>(</highlight></codeline>
<codeline lineno="2994"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2995"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boolarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Bool<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2996"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2997"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2998"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2999"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3000"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3001"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3002"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3003"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>pointers/ints/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3004"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3005"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gadf9daca125ab208b56bc77567aefcaf2" kindref="member">SCIPsortedvecInsertDownPtrIntInt</ref>(</highlight></codeline>
<codeline lineno="3006"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3007"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3008"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3009"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3010"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3011"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3012"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field2val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3013"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3014"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3015"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3016"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3017"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>pointers/Reals/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3018"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3019"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gad1b76a2f7426a3e41c2c14ef9dc9ef03" kindref="member">SCIPsortedvecInsertDownPtrRealInt</ref>(</highlight></codeline>
<codeline lineno="3020"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3021"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3022"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3023"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3024"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3025"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3026"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field2val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3027"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3028"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3029"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3030"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3031"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>pointers/pointers/Ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3032"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3033"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga82d01cef246898127613355ecdf89731" kindref="member">SCIPsortedvecInsertDownPtrPtrInt</ref>(</highlight></codeline>
<codeline lineno="3034"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3035"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3036"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3037"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3038"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3039"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3040"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field2val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3041"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3042"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3043"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3044"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3045"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>pointers/pointers/Reals,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3046"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3047"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga67411e7f96d4a88b59a496f9cafd4ea6" kindref="member">SCIPsortedvecInsertDownPtrPtrReal</ref>(</highlight></codeline>
<codeline lineno="3048"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3049"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3050"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3051"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3052"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3053"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3054"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field2val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3055"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3056"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3057"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3058"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3059"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>four<sp/>joint<sp/>arrays<sp/>of<sp/>pointers/pointers/ints/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3060"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3061"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga77ccca73a88b559d5f312a3deff81f55" kindref="member">SCIPsortedvecInsertDownPtrPtrIntInt</ref>(</highlight></codeline>
<codeline lineno="3062"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3063"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3064"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3065"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3066"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3067"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3068"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3069"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field2val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3070"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field3val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3071"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3072"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3073"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3074"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3075"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>four<sp/>joint<sp/>arrays<sp/>of<sp/>pointers/Reals/ints/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3076"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3077"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gaa58a2ef0e974d10bf0925ff1336de2f3" kindref="member">SCIPsortedvecInsertDownPtrRealIntInt</ref>(</highlight></codeline>
<codeline lineno="3078"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3079"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3080"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3081"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3082"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3083"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3084"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3085"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field2val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3086"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field3val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3087"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3088"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3089"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3090"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3091"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>four<sp/>joint<sp/>arrays<sp/>of<sp/>pointer/pointer/Reals/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3092"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3093"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gac3bbff9dd9ab9bbbd8455c318f4f4ee9" kindref="member">SCIPsortedvecInsertDownPtrPtrRealInt</ref>(</highlight></codeline>
<codeline lineno="3094"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3095"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3096"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3097"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3098"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3099"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3100"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3101"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field2val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3102"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field3val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3103"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3104"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3105"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3106"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3107"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>four<sp/>joint<sp/>arrays<sp/>of<sp/>pointer/pointer/Longs/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3108"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3109"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gae0039d522a36fb292a1cec8084e45bc5" kindref="member">SCIPsortedvecInsertDownPtrPtrLongInt</ref>(</highlight></codeline>
<codeline lineno="3110"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3111"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3112"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3113"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3114"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3115"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3116"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3117"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field2val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3118"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field3val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3119"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3120"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3121"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3122"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3123"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>five<sp/>joint<sp/>arrays<sp/>of<sp/>pointer/pointer/Longs/ints/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3124"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3125"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gae9ce0f43e93974b7d3a2e0a7a7ba432f" kindref="member">SCIPsortedvecInsertDownPtrPtrLongIntInt</ref>(</highlight></codeline>
<codeline lineno="3126"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3127"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3128"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3129"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3130"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3131"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3132"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3133"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3134"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field2val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3135"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field3val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3136"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field4val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3137"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3138"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3139"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3140"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3141"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>an<sp/>array<sp/>of<sp/>Reals,<sp/>sorted<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3142"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3143"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga08af98bef2d270020bb6964df08ff23b" kindref="member">SCIPsortedvecInsertDownReal</ref>(</highlight></codeline>
<codeline lineno="3144"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3145"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3146"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3147"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3148"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3149"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3150"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>Reals/Bools/pointers,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3151"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3152"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga41609bb513ec30972367fc640933211b" kindref="member">SCIPsortedvecInsertDownRealBoolPtr</ref>(</highlight></codeline>
<codeline lineno="3153"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3154"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boolarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Bool<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3155"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3156"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3157"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3158"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field2val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3159"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3160"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3161"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3162"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3163"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>two<sp/>joint<sp/>arrays<sp/>of<sp/>Reals/pointers,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3164"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3165"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga98b6f1db459fe1f12b53be84532759e7" kindref="member">SCIPsortedvecInsertDownRealPtr</ref>(</highlight></codeline>
<codeline lineno="3166"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3167"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3168"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3169"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3170"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3171"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3172"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3173"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3174"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>Reals/pointers,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3175"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3176"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga6b3e2a2ecba8507c87c9f1bd2188bbff" kindref="member">SCIPsortedvecInsertDownRealPtrPtr</ref>(</highlight></codeline>
<codeline lineno="3177"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3178"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3179"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3180"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3181"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3182"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field2val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3183"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3184"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3185"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3186"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3187"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>two<sp/>joint<sp/>arrays<sp/>of<sp/>Reals/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3188"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3189"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gadf3bad34197d77b4853c02c9d4f18741" kindref="member">SCIPsortedvecInsertDownRealInt</ref>(</highlight></codeline>
<codeline lineno="3190"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3191"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3192"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3193"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3194"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3195"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3196"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3197"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3198"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>Reals/ints/Longs,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3199"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3200"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gafd667e4e16cded8c1d9d67c1b1c0b9c0" kindref="member">SCIPsortedvecInsertDownRealIntLong</ref>(</highlight></codeline>
<codeline lineno="3201"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3202"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3203"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3204"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3205"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3206"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field2val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3207"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3208"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3209"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3210"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3211"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>Reals/ints/Pointer,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3212"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3213"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga8a6797db23e8da203fe1f9f9d02158f4" kindref="member">SCIPsortedvecInsertDownRealIntPtr</ref>(</highlight></codeline>
<codeline lineno="3214"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3215"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3216"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3217"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3218"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3219"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field2val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3220"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3221"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3222"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3223"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3224"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>Reals/Reals/Pointer,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3225"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3226"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga887380ecc2746bbba42600646353c91b" kindref="member">SCIPsortedvecInsertDownRealRealPtr</ref>(</highlight></codeline>
<codeline lineno="3227"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3228"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/><sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3229"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3230"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3231"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3232"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field2val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3233"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3234"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3235"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3236"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3237"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>four<sp/>joint<sp/>arrays<sp/>of<sp/>Reals/pointers/pointers/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3238"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3239"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga9387717c5e3e2d2397ecc0c69ec36a72" kindref="member">SCIPsortedvecInsertDownRealPtrPtrInt</ref>(</highlight></codeline>
<codeline lineno="3240"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3241"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3242"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3243"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3244"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3245"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3246"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field2val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3247"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3248"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3249"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3250"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3251"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3252"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>five<sp/>joint<sp/>arrays<sp/>of<sp/>Reals/pointers/pointers/ints/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3253"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3254"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gac863ab031ebba08275ba5d6ffd262b4f" kindref="member">SCIPsortedvecInsertDownRealPtrPtrIntInt</ref>(</highlight></codeline>
<codeline lineno="3255"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3256"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3257"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3258"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3259"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3260"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3261"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3262"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field2val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3263"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intval1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3264"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intval2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3265"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3266"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3267"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3268"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3269"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>four<sp/>joint<sp/>arrays<sp/>of<sp/>Reals/Longs/Reals/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3270"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3271"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gaabc89e8de0a2063d10d543edb0c0c00e" kindref="member">SCIPsortedvecInsertDownRealLongRealInt</ref>(</highlight></codeline>
<codeline lineno="3272"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3273"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3274"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray3,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3275"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/><sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3276"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3277"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3278"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field2val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3279"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field3val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3280"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3281"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3282"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3283"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3284"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>four<sp/>joint<sp/>arrays<sp/>of<sp/>Reals/Reals/ints/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3285"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3286"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga8ba1f592f43ebb5d99a990e0e7c03bc2" kindref="member">SCIPsortedvecInsertDownRealRealIntInt</ref>(</highlight></codeline>
<codeline lineno="3287"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3288"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3289"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3290"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3291"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3292"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3293"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field2val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3294"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field3val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3295"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3296"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3297"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3298"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3299"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>four<sp/>joint<sp/>arrays<sp/>of<sp/>Reals/Reals/Reals/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3300"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3301"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gaac4e81ec52dd6dce9abae8b862f4787f" kindref="member">SCIPsortedvecInsertDownRealRealRealInt</ref>(</highlight></codeline>
<codeline lineno="3302"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3303"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3304"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray3,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3305"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3306"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3307"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3308"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field2val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3309"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field3val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3310"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3311"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3312"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3313"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3314"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>four<sp/>joint<sp/>arrays<sp/>of<sp/>Reals/Reals/Reals/pointers,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3315"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3316"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga84b7efbe85e6d7b702c4d95271b660c2" kindref="member">SCIPsortedvecInsertDownRealRealRealPtr</ref>(</highlight></codeline>
<codeline lineno="3317"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3318"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3319"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray3,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3320"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3321"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3322"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3323"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field2val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3324"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field3val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3325"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3326"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3327"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3328"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3329"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>five<sp/>joint<sp/>arrays<sp/>of<sp/>Reals/Reals/Reals/Bools/pointers,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3330"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3331"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga716f0b942bf42cc6256aa15b39bb1a3d" kindref="member">SCIPsortedvecInsertDownRealRealRealBoolPtr</ref>(</highlight></codeline>
<codeline lineno="3332"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3333"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3334"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray3,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3335"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boolarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Bool<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3336"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3337"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3338"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3339"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field2val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3340"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field3val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3341"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field4val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3342"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3343"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3344"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3345"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3346"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>an<sp/>array<sp/>of<sp/>ints<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3347"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3348"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga2eca02f3a209a20d499a54ea95940dd6" kindref="member">SCIPsortedvecInsertDownInt</ref>(</highlight></codeline>
<codeline lineno="3349"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3350"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3351"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3352"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3353"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3354"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3355"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>two<sp/>joint<sp/>arrays<sp/>of<sp/>ints/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3356"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3357"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gad08f8787f4e8d9a62367554b6e6be8ee" kindref="member">SCIPsortedvecInsertDownIntInt</ref>(</highlight></codeline>
<codeline lineno="3358"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3359"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3360"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3361"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3362"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3363"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3364"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3365"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3366"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>two<sp/>joint<sp/>arrays<sp/>of<sp/>ints/reals,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3367"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3368"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gaad293029f7176106c15d49266c1eadbf" kindref="member">SCIPsortedvecInsertDownIntReal</ref>(</highlight></codeline>
<codeline lineno="3369"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3370"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3371"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3372"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3373"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3374"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3375"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3376"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3377"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>ints/ints/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3378"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3379"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga02f50ee8d91d6725adbdef669a116c06" kindref="member">SCIPsortedvecInsertDownIntIntInt</ref>(</highlight></codeline>
<codeline lineno="3380"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3381"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3382"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray3,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>third<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3383"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3384"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3385"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field2val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3386"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3387"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3388"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3389"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3390"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>ints/ints/SCIP_Longint,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3391"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3392"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga722e49d273149c8152fadfc94d2bed57" kindref="member">SCIPsortedvecInsertDownIntIntLong</ref>(</highlight></codeline>
<codeline lineno="3393"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3394"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3395"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3396"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3397"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3398"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field2val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3399"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3400"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3401"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3402"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3403"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>ints/ints/pointers,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3404"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3405"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gadd1de4af1e54953ae8711c39437ee840" kindref="member">SCIPsortedvecInsertDownIntIntPtr</ref>(</highlight></codeline>
<codeline lineno="3406"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3407"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3408"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3409"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3410"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3411"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field2val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3412"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3413"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3414"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3415"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3416"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>ints/ints/Reals,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3417"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3418"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga186d21e8b10b0bc88971a515491277fc" kindref="member">SCIPsortedvecInsertDownIntIntReal</ref>(</highlight></codeline>
<codeline lineno="3419"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3420"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3421"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3422"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3423"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3424"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field2val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3425"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3426"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3427"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3428"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3429"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>two<sp/>joint<sp/>arrays<sp/>of<sp/>ints/pointers,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3430"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3431"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga4e355ecc8d97dbe5563f393a9dbd70a5" kindref="member">SCIPsortedvecInsertDownIntPtr</ref>(</highlight></codeline>
<codeline lineno="3432"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3433"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3434"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3435"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3436"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3437"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3438"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3439"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3440"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>four<sp/>joint<sp/>arrays<sp/>of<sp/>ints/pointers/ints/Reals,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3441"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3442"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga01064f36ac0aaae67a60841fc8181ef5" kindref="member">SCIPsortedvecInsertDownIntIntIntPtr</ref>(</highlight></codeline>
<codeline lineno="3443"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3444"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3445"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray3,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3446"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3447"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3448"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3449"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field2val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3450"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field3val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3451"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3452"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3453"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3454"><highlight class="normal"></highlight></codeline>
<codeline lineno="3455"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3456"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>four<sp/>joint<sp/>arrays<sp/>of<sp/>ints/pointers/ints/Reals,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3457"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3458"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gaa833d6a0de51cb62c438c97781a64c0c" kindref="member">SCIPsortedvecInsertDownIntPtrIntReal</ref>(</highlight></codeline>
<codeline lineno="3459"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3460"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3461"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3462"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3463"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3464"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3465"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field2val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3466"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field3val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3467"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3468"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3469"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3470"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3471"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>an<sp/>array<sp/>of<sp/>Longints,<sp/>sorted<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3472"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3473"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga1ef18ae0406b43543d11b536cf174615" kindref="member">SCIPsortedvecInsertDownLong</ref>(</highlight></codeline>
<codeline lineno="3474"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3475"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3476"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3477"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3478"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3479"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3480"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>two<sp/>joint<sp/>arrays<sp/>of<sp/>Long/pointer,<sp/>sorted<sp/>by<sp/>the<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3481"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3482"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga6444f96368f219efc569757c1132d597" kindref="member">SCIPsortedvecInsertDownLongPtr</ref>(</highlight></codeline>
<codeline lineno="3483"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3484"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3485"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3486"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3487"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3488"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3489"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3490"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3491"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>Long/pointer/ints,<sp/>sorted<sp/>by<sp/>the<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3492"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3493"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga922eef52b308bcba9254755bb436f18a" kindref="member">SCIPsortedvecInsertDownLongPtrInt</ref>(</highlight></codeline>
<codeline lineno="3494"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3495"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3496"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3497"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3498"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3499"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field2val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3500"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3501"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3502"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3503"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3504"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>four<sp/>joint<sp/>arrays<sp/>of<sp/>Long/pointer/Real/Bool,<sp/>sorted<sp/>by<sp/>the<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3505"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3506"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga7578a3f3d29473f85e6eab3b6d23ca84" kindref="member">SCIPsortedvecInsertDownLongPtrRealBool</ref>(</highlight></codeline>
<codeline lineno="3507"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3508"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3509"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3510"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boolarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Bool<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3511"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3512"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3513"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field2val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3514"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field3val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3515"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3516"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3517"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3518"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3519"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>five<sp/>joint<sp/>arrays<sp/>of<sp/>Long/pointer/Real/Real/Bool,<sp/>sorted<sp/>by<sp/>the<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3520"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3521"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga70878e39db5ca31aa39b74078eaed71a" kindref="member">SCIPsortedvecInsertDownLongPtrRealRealBool</ref>(</highlight></codeline>
<codeline lineno="3522"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3523"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3524"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3525"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3526"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boolarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Bool<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3527"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3528"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3529"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field2val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3530"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field3val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3531"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field4val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3532"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3533"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3534"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3535"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3536"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>six<sp/>joint<sp/>arrays<sp/>of<sp/>Long/pointer/Real/Real/int/Bool,<sp/>sorted<sp/>by<sp/>the<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3537"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3538"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga670bdb3eb7a949eafb359da3a8d322c8" kindref="member">SCIPsortedvecInsertDownLongPtrRealRealIntBool</ref>(</highlight></codeline>
<codeline lineno="3539"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3540"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3541"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3542"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3543"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3544"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boolarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Bool<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3545"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3546"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3547"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field2val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3548"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field3val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3549"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field4val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3550"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field5val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3551"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3552"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3553"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3554"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3555"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>four<sp/>joint<sp/>arrays<sp/>of<sp/>Long/pointer/pointer/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3556"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3557"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gab8b6a9160e87c4a0f0e376c57f4ebadd" kindref="member">SCIPsortedvecInsertDownLongPtrPtrInt</ref>(</highlight></codeline>
<codeline lineno="3558"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3559"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3560"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3561"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3562"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3563"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3564"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field2val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3565"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field3val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3566"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3567"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3568"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3569"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3570"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>five<sp/>joint<sp/>arrays<sp/>of<sp/>Long/pointer/pointer/ints/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3571"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3572"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga0350b5e2e3649986aae703e2f3219920" kindref="member">SCIPsortedvecInsertDownLongPtrPtrIntInt</ref>(</highlight></codeline>
<codeline lineno="3573"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3574"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3575"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3576"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3577"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3578"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3579"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3580"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field2val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3581"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field3val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3582"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field4val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3583"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3584"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3585"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3586"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3587"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>five<sp/>joint<sp/>arrays<sp/>of<sp/>Long/pointer/pointer/Bool/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3588"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3589"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga2225627a6cda4f7e0c156f163f1e6ef8" kindref="member">SCIPsortedvecInsertDownLongPtrPtrBoolInt</ref>(</highlight></codeline>
<codeline lineno="3590"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3591"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3592"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3593"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boolarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Bool<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3594"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3595"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3596"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3597"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field2val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3598"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field3val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3599"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field4val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3600"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3601"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3602"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3603"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3604"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>five<sp/>joint<sp/>arrays<sp/>of<sp/>pointer/ints/ints/Bool/Bool,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3605"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3606"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga03809a9e8378a46a3932dec87ad6d7f4" kindref="member">SCIPsortedvecInsertDownPtrIntIntBoolBool</ref>(</highlight></codeline>
<codeline lineno="3607"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3608"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3609"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3610"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boolarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>SCIP_Bool<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3611"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boolarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>SCIP_Bool<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3612"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3613"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3614"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3615"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field2val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3616"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field3val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3617"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field4val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3618"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3619"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3620"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3621"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3622"><highlight class="comment">/**<sp/>insert<sp/>a<sp/>new<sp/>element<sp/>into<sp/>six<sp/>joint<sp/>arrays<sp/>of<sp/>ints/pointer/ints/ints/Bool/Bool,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increased<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3623"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3624"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga6bd6236a63fce88b0a719841257076aa" kindref="member">SCIPsortedvecInsertDownIntPtrIntIntBoolBool</ref>(</highlight></codeline>
<codeline lineno="3625"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3626"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3627"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3628"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray3,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>thrid<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3629"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boolarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>SCIP_Bool<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3630"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boolarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>SCIP_Bool<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3631"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>keyval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>key<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3632"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field1val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3633"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field2val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3634"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field3val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3635"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field4val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3636"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>field5val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>additional<sp/>value<sp/>of<sp/>new<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3637"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3638"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>insertion<sp/>position,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3639"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3640"><highlight class="normal"></highlight></codeline>
<codeline lineno="3641"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>upwards<sp/>position<sp/>deletion<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3642"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3643"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>an<sp/>index<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3644"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3645"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga1ba6bf2635678490757beddc4f0bddc2" kindref="member">SCIPsortedvecDelPosInd</ref>(</highlight></codeline>
<codeline lineno="3646"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>the<sp/>index<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3647"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a806c02f466e036f6e137df9eee2f7e9d" kindref="member">SCIP_DECL_SORTINDCOMP</ref>((*indcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3648"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataptr,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>data<sp/>field<sp/>that<sp/>is<sp/>given<sp/>to<sp/>the<sp/>external<sp/>compare<sp/>method<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3649"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3650"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3651"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3652"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3653"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>an<sp/>array<sp/>of<sp/>pointers<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3654"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3655"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gaf6dc99f91f5c829fa749a7a997312b22" kindref="member">SCIPsortedvecDelPosPtr</ref>(</highlight></codeline>
<codeline lineno="3656"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3657"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3658"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3659"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3660"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3661"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3662"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>two<sp/>joint<sp/>arrays<sp/>of<sp/>pointers/pointers,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3663"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3664"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga0e84353cc889e5f4ecf7e462e7df81ca" kindref="member">SCIPsortedvecDelPosPtrPtr</ref>(</highlight></codeline>
<codeline lineno="3665"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3666"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3667"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3668"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3669"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3670"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3671"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3672"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>two<sp/>joint<sp/>arrays<sp/>of<sp/>pointers/Reals,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3673"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3674"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga3ac75cc1ed130558bf1bb5e00b84b512" kindref="member">SCIPsortedvecDelPosPtrReal</ref>(</highlight></codeline>
<codeline lineno="3675"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3676"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3677"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3678"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3679"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3680"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3681"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3682"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>two<sp/>joint<sp/>arrays<sp/>of<sp/>pointers/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3683"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3684"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gad40dee1c116e8b6a50dcfa934c474702" kindref="member">SCIPsortedvecDelPosPtrInt</ref>(</highlight></codeline>
<codeline lineno="3685"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3686"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3687"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3688"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3689"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3690"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3691"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3692"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>two<sp/>joint<sp/>arrays<sp/>of<sp/>pointers/Bools,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3693"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3694"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gad92cce5a5af6dfde39eccb9c7bff7358" kindref="member">SCIPsortedvecDelPosPtrBool</ref>(</highlight></codeline>
<codeline lineno="3695"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3696"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boolarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Bool<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3697"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3698"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3699"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3700"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3701"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3702"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>pointers/ints/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3703"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3704"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gaedc1ba8d1e287bfee8f327b46e1bf78b" kindref="member">SCIPsortedvecDelPosPtrIntInt</ref>(</highlight></codeline>
<codeline lineno="3705"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3706"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3707"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3708"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3709"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3710"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3711"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3712"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3713"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>pointers/Reals/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3714"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3715"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gafea706371cf2046c34058e9f1c81b4d8" kindref="member">SCIPsortedvecDelPosPtrRealInt</ref>(</highlight></codeline>
<codeline lineno="3716"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3717"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3718"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3719"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3720"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3721"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3722"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3723"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3724"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>pointers/pointers/Ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3725"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3726"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga6a605a457ed0de0f66ca95ca5c270a0d" kindref="member">SCIPsortedvecDelPosPtrPtrInt</ref>(</highlight></codeline>
<codeline lineno="3727"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3728"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3729"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3730"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3731"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3732"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3733"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3734"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3735"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>pointers/pointers/Reals,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3736"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3737"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga2bbd853fd6e2651a7f61b00833b5873b" kindref="member">SCIPsortedvecDelPosPtrPtrReal</ref>(</highlight></codeline>
<codeline lineno="3738"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3739"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3740"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3741"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3742"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3743"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3744"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3745"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3746"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>four<sp/>joint<sp/>arrays<sp/>of<sp/>pointers/pointers/ints/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3747"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3748"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga78eb0357ed2ea2ac2e32962ec6f3549f" kindref="member">SCIPsortedvecDelPosPtrPtrIntInt</ref>(</highlight></codeline>
<codeline lineno="3749"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3750"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3751"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3752"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3753"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3754"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3755"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3756"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3757"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3758"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>four<sp/>joint<sp/>arrays<sp/>of<sp/>pointers/Reals/ints/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3759"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3760"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga019adafef0cb45339a5f171d0a0fc547" kindref="member">SCIPsortedvecDelPosPtrRealIntInt</ref>(</highlight></codeline>
<codeline lineno="3761"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3762"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3763"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3764"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3765"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3766"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3767"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3768"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3769"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3770"><highlight class="comment">/**<sp/>deletes<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>four<sp/>joint<sp/>arrays<sp/>of<sp/>pointer/pointer/Reals/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3771"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3772"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga969950b40f484a95464e77834e01196c" kindref="member">SCIPsortedvecDelPosPtrPtrRealInt</ref>(</highlight></codeline>
<codeline lineno="3773"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3774"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3775"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3776"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3777"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3778"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3779"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3780"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3781"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3782"><highlight class="comment">/**<sp/>deletes<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>four<sp/>joint<sp/>arrays<sp/>of<sp/>pointer/pointer/Longs/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3783"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3784"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga8a8d0602f705d27204adcf898d5e77cc" kindref="member">SCIPsortedvecDelPosPtrPtrLongInt</ref>(</highlight></codeline>
<codeline lineno="3785"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3786"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3787"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3788"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3789"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3790"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3791"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3792"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3793"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3794"><highlight class="comment">/**<sp/>deletes<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>five<sp/>joint<sp/>arrays<sp/>of<sp/>pointer/pointer/Longs/ints/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3795"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3796"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gade80bc2016ec8a9c584744cae523c856" kindref="member">SCIPsortedvecDelPosPtrPtrLongIntInt</ref>(</highlight></codeline>
<codeline lineno="3797"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3798"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3799"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3800"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3801"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3802"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3803"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3804"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3805"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3806"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3807"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>Reals/Bools/pointers,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3808"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3809"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gad21c9cc987f9d1cd2fdb72857a2c55fe" kindref="member">SCIPsortedvecDelPosRealBoolPtr</ref>(</highlight></codeline>
<codeline lineno="3810"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3811"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boolarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Bool<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3812"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3813"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3814"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3815"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3816"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3817"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>two<sp/>joint<sp/>arrays<sp/>of<sp/>Reals/pointers,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3818"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3819"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga898b63b8acd39bf2a668058fe5c9778e" kindref="member">SCIPsortedvecDelPosRealPtr</ref>(</highlight></codeline>
<codeline lineno="3820"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3821"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3822"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3823"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3824"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3825"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3826"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>an<sp/>arrays<sp/>of<sp/>Reals,<sp/>sorted<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3827"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3828"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gad213474e1a49139686bba95381f7d97f" kindref="member">SCIPsortedvecDelPosReal</ref>(</highlight></codeline>
<codeline lineno="3829"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3830"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3831"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3832"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3833"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3834"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>two<sp/>joint<sp/>arrays<sp/>of<sp/>Reals/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3835"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3836"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gaa1847c5736a91aea66b0f1f0baf996fb" kindref="member">SCIPsortedvecDelPosRealInt</ref>(</highlight></codeline>
<codeline lineno="3837"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3838"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3839"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3840"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3841"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3842"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3843"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>Reals/ints/Longs,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3844"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3845"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga1969ee389ff9b79a83460099b15abc33" kindref="member">SCIPsortedvecDelPosRealIntLong</ref>(</highlight></codeline>
<codeline lineno="3846"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3847"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3848"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3849"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3850"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3851"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3852"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3853"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>Reals/ints/Pointer,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3854"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3855"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga86f1334392ac82a6379392e6a6e5d0d0" kindref="member">SCIPsortedvecDelPosRealIntPtr</ref>(</highlight></codeline>
<codeline lineno="3856"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3857"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3858"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3859"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3860"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3861"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3862"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3863"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>Reals/Reals/Pointer,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3864"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3865"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga09ca0b7aafd09cbb1f1e09fd1249615d" kindref="member">SCIPsortedvecDelPosRealRealPtr</ref>(</highlight></codeline>
<codeline lineno="3866"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3867"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/><sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3868"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3869"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3870"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3871"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3872"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3873"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>four<sp/>joint<sp/>arrays<sp/>of<sp/>Reals/pointers/pointers/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3874"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3875"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gafb455ab548c1af658dfb16cfb49ccf9b" kindref="member">SCIPsortedvecDelPosRealPtrPtrInt</ref>(</highlight></codeline>
<codeline lineno="3876"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3877"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3878"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3879"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3880"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3881"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3882"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3883"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3884"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>five<sp/>joint<sp/>arrays<sp/>of<sp/>Reals/pointers/pointers/ints/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3885"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3886"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gaf06f320595327fdf006dc3f6df82e51b" kindref="member">SCIPsortedvecDelPosRealPtrPtrIntInt</ref>(</highlight></codeline>
<codeline lineno="3887"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3888"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3889"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3890"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3891"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3892"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3893"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3894"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3895"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3896"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>four<sp/>joint<sp/>arrays<sp/>of<sp/>Reals/Long/Reals/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3897"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3898"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gad2c530ed9592706e68bf3f7be4783971" kindref="member">SCIPsortedvecDelPosRealLongRealInt</ref>(</highlight></codeline>
<codeline lineno="3899"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3900"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3901"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray3,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3902"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/><sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3903"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3904"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3905"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3906"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3907"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>four<sp/>joint<sp/>arrays<sp/>of<sp/>Reals/Reals/ints/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3908"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3909"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gae00d52da1986de23e78badd586d54df8" kindref="member">SCIPsortedvecDelPosRealRealIntInt</ref>(</highlight></codeline>
<codeline lineno="3910"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3911"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3912"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3913"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3914"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3915"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3916"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3917"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3918"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>four<sp/>joint<sp/>arrays<sp/>of<sp/>Reals/Reals/Reals/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3919"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3920"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga9a4907c0ea7cf6def5583fc2bc974448" kindref="member">SCIPsortedvecDelPosRealRealRealInt</ref>(</highlight></codeline>
<codeline lineno="3921"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3922"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3923"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray3,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3924"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3925"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3926"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3927"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3928"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3929"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>four<sp/>joint<sp/>arrays<sp/>of<sp/>Reals/Reals/Reals/pointers,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3930"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3931"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga933e721d0a2519df9080cb441e4bbc0f" kindref="member">SCIPsortedvecDelPosRealRealRealPtr</ref>(</highlight></codeline>
<codeline lineno="3932"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3933"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3934"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray3,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3935"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3936"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3937"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3938"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3939"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3940"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>five<sp/>joint<sp/>arrays<sp/>of<sp/>Reals/Reals/Reals/Bools/pointers,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3941"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3942"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gaf27dab7c724c9497338bac04b1f076af" kindref="member">SCIPsortedvecDelPosRealRealRealBoolPtr</ref>(</highlight></codeline>
<codeline lineno="3943"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3944"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3945"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray3,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3946"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boolarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Bool<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3947"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3948"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3949"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3950"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3951"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3952"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>an<sp/>array<sp/>of<sp/>ints<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3953"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3954"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gafe873202aca60be08d4fb19542ef89c9" kindref="member">SCIPsortedvecDelPosInt</ref>(</highlight></codeline>
<codeline lineno="3955"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3956"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3957"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3958"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3959"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3960"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>two<sp/>joint<sp/>arrays<sp/>of<sp/>ints/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3961"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3962"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga8a710d458fa14f7c263497abfc82c6ba" kindref="member">SCIPsortedvecDelPosIntInt</ref>(</highlight></codeline>
<codeline lineno="3963"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3964"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3965"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3966"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3967"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3968"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3969"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>two<sp/>joint<sp/>arrays<sp/>of<sp/>ints/reals,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3970"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3971"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gae8864d8fae67aa06173a7b2ed7292806" kindref="member">SCIPsortedvecDelPosIntReal</ref>(</highlight></codeline>
<codeline lineno="3972"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3973"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3974"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3975"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3976"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3977"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3978"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>ints/ints/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3979"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3980"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga5cdf19876b8a3c6e183d2b958d9d8daf" kindref="member">SCIPsortedvecDelPosIntIntInt</ref>(</highlight></codeline>
<codeline lineno="3981"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3982"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3983"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray3,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>third<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3984"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3985"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3986"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3987"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3988"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>ints/ints/SCIP_Longint,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3989"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3990"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga077cfe1b5b9e2d490d67df8fe1eb280c" kindref="member">SCIPsortedvecDelPosIntIntLong</ref>(</highlight></codeline>
<codeline lineno="3991"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3992"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3993"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3994"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3995"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3996"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="3997"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3998"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>ints/ints/pointers,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3999"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4000"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gaef5e46a1e943300fc1a8c26a6aa2841f" kindref="member">SCIPsortedvecDelPosIntIntPtr</ref>(</highlight></codeline>
<codeline lineno="4001"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4002"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4003"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4004"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4005"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4006"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4007"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4008"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>ints/ints/Reals,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4009"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4010"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gaafd698c3897a06e8782bb8f6ac6bb388" kindref="member">SCIPsortedvecDelPosIntIntReal</ref>(</highlight></codeline>
<codeline lineno="4011"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4012"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4013"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4014"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4015"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4016"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4017"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4018"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>two<sp/>joint<sp/>arrays<sp/>of<sp/>ints/pointers,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4019"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4020"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga12bc163a41c4f16603e4462d0c6bfc31" kindref="member">SCIPsortedvecDelPosIntPtr</ref>(</highlight></codeline>
<codeline lineno="4021"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4022"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4023"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4024"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4025"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4026"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4027"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>ints/pointers/Reals,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4028"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4029"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gaeb4c1cf463b06c90f3f637997755d6c4" kindref="member">SCIPsortedvecDelPosIntPtrReal</ref>(</highlight></codeline>
<codeline lineno="4030"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4031"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4032"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4033"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4034"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4035"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4036"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4037"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>four<sp/>joint<sp/>arrays<sp/>of<sp/>ints/ints/ints/pointers,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4038"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4039"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gae85b5fed9f87f736b3b93301e4198092" kindref="member">SCIPsortedvecDelPosIntIntIntPtr</ref>(</highlight></codeline>
<codeline lineno="4040"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4041"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4042"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray3,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4043"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4044"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4045"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4046"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4047"><highlight class="normal"></highlight></codeline>
<codeline lineno="4048"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4049"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>four<sp/>joint<sp/>arrays<sp/>of<sp/>ints/pointers/ints/Reals,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4050"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4051"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gafba6dd480f1e08b7bd8c386fd43e9fcb" kindref="member">SCIPsortedvecDelPosIntPtrIntReal</ref>(</highlight></codeline>
<codeline lineno="4052"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4053"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4054"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4055"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4056"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4057"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4058"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4059"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4060"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>an<sp/>array<sp/>of<sp/>Longints,<sp/>sorted<sp/>by<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4061"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4062"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga761d8b092913e063d05b543434013e89" kindref="member">SCIPsortedvecDelPosLong</ref>(</highlight></codeline>
<codeline lineno="4063"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4064"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4065"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4066"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4067"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4068"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>two<sp/>joint<sp/>arrays<sp/>of<sp/>Long/pointer,<sp/>sorted<sp/>by<sp/>the<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4069"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4070"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga97ffb8d73904d1427da32adb9b2be1c9" kindref="member">SCIPsortedvecDelPosLongPtr</ref>(</highlight></codeline>
<codeline lineno="4071"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4072"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4073"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4074"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4075"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4076"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4077"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>Long/pointer/int,<sp/>sorted<sp/>by<sp/>the<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4078"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4079"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gae4bdf5ad1bc8297b852357cda0e9736c" kindref="member">SCIPsortedvecDelPosLongPtrInt</ref>(</highlight></codeline>
<codeline lineno="4080"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4081"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4082"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4083"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4084"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4085"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4086"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4087"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>four<sp/>joint<sp/>arrays<sp/>of<sp/>Long/pointer/Real/Bool,<sp/>sorted<sp/>by<sp/>the<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4088"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4089"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga0be3e7579337c65f9b04ce915fb9e12d" kindref="member">SCIPsortedvecDelPosLongPtrRealBool</ref>(</highlight></codeline>
<codeline lineno="4090"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4091"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4092"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4093"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boolarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Bool<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4094"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4095"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4096"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4097"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4098"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>five<sp/>joint<sp/>arrays<sp/>of<sp/>Long/pointer/Real/Real/Bool,<sp/>sorted<sp/>by<sp/>the<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4099"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4100"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga0f0821b4140658c5de00134ddd4d2699" kindref="member">SCIPsortedvecDelPosLongPtrRealRealBool</ref>(</highlight></codeline>
<codeline lineno="4101"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4102"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4103"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4104"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4105"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boolarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Bool<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4106"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4107"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4108"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4109"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4110"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>six<sp/>joint<sp/>arrays<sp/>of<sp/>Long/pointer/Real/Real/int/Bool,<sp/>sorted<sp/>by<sp/>the<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4111"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4112"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga44260295f28fcfefc9ce852150cf97da" kindref="member">SCIPsortedvecDelPosLongPtrRealRealIntBool</ref>(</highlight></codeline>
<codeline lineno="4113"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4114"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4115"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4116"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4117"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4118"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boolarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Bool<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4119"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4120"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4121"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4122"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4123"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>four<sp/>joint<sp/>arrays<sp/>of<sp/>Long/pointer/pointer/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4124"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4125"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gaae3667acc4ee15633552653bd26c8960" kindref="member">SCIPsortedvecDelPosLongPtrPtrInt</ref>(</highlight></codeline>
<codeline lineno="4126"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4127"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4128"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4129"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4130"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4131"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4132"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4133"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4134"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>five<sp/>joint<sp/>arrays<sp/>of<sp/>Long/pointer/pointer/ints/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4135"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4136"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gaf6b4e245d8095e5721dfa66d5a28a76a" kindref="member">SCIPsortedvecDelPosLongPtrPtrIntInt</ref>(</highlight></codeline>
<codeline lineno="4137"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4138"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4139"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4140"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4141"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4142"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4143"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4144"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4145"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4146"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>five<sp/>joint<sp/>arrays<sp/>of<sp/>Long/pointer/pointer/Bool/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4147"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4148"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga3943216cbc8a77f7e25e4924498f1ba2" kindref="member">SCIPsortedvecDelPosLongPtrPtrBoolInt</ref>(</highlight></codeline>
<codeline lineno="4149"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4150"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4151"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4152"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boolarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Bool<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4153"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4154"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4155"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4156"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4157"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4158"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>five<sp/>joint<sp/>arrays<sp/>of<sp/>pointer/ints/ints/Bool/Bool,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4159"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4160"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga1386edd6064dde380fcca13aefd58a51" kindref="member">SCIPsortedvecDelPosPtrIntIntBoolBool</ref>(</highlight></codeline>
<codeline lineno="4161"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4162"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4163"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4164"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boolarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>SCIP_Bool<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4165"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boolarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>SCIP_Bool<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4166"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4167"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4168"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4169"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4170"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4171"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>six<sp/>joint<sp/>arrays<sp/>of<sp/>ints/pointer/ints/ints/Bool/Bool,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4172"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4173"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga1088531fba7ccb9e41d106ae386b3636" kindref="member">SCIPsortedvecDelPosIntPtrIntIntBoolBool</ref>(</highlight></codeline>
<codeline lineno="4174"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4175"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4176"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4177"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray3,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>thrid<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4178"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boolarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>SCIP_Bool<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4179"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boolarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>SCIP_Bool<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4180"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4181"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4182"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4183"><highlight class="normal"></highlight></codeline>
<codeline lineno="4184"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>downwards<sp/>position<sp/>deletion<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4185"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4186"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>an<sp/>index<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4187"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4188"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gab783363ddf2ba340e97bf6747f264dde" kindref="member">SCIPsortedvecDelPosDownInd</ref>(</highlight></codeline>
<codeline lineno="4189"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>the<sp/>index<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4190"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a806c02f466e036f6e137df9eee2f7e9d" kindref="member">SCIP_DECL_SORTINDCOMP</ref>((*indcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4191"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataptr,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>data<sp/>field<sp/>that<sp/>is<sp/>given<sp/>to<sp/>the<sp/>external<sp/>compare<sp/>method<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4192"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4193"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4194"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4195"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4196"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>an<sp/>array<sp/>of<sp/>pointers<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4197"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4198"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gab0954e7426d6d10c3a5ae9401523fb55" kindref="member">SCIPsortedvecDelPosDownPtr</ref>(</highlight></codeline>
<codeline lineno="4199"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4200"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4201"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4202"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4203"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4204"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4205"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>two<sp/>joint<sp/>arrays<sp/>of<sp/>pointers/pointers,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4206"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4207"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga85ca287644b79a49fd3c8a51610df492" kindref="member">SCIPsortedvecDelPosDownPtrPtr</ref>(</highlight></codeline>
<codeline lineno="4208"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4209"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4210"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4211"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4212"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4213"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4214"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4215"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>two<sp/>joint<sp/>arrays<sp/>of<sp/>pointers/Reals,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4216"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4217"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gad91c1063417430d845afef76d5287057" kindref="member">SCIPsortedvecDelPosDownPtrReal</ref>(</highlight></codeline>
<codeline lineno="4218"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4219"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4220"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4221"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4222"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4223"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4224"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4225"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>two<sp/>joint<sp/>arrays<sp/>of<sp/>pointers/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4226"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4227"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga284ff994769f2202645978072574e8ce" kindref="member">SCIPsortedvecDelPosDownPtrInt</ref>(</highlight></codeline>
<codeline lineno="4228"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4229"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4230"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4231"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4232"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4233"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4234"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4235"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>two<sp/>joint<sp/>arrays<sp/>of<sp/>pointers/Bools,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4236"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4237"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga5d4e68ac26b60202866d7ccf87fd144c" kindref="member">SCIPsortedvecDelPosDownPtrBool</ref>(</highlight></codeline>
<codeline lineno="4238"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4239"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boolarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Bool<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>inserted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4240"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4241"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4242"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>increased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4243"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4244"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4245"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>pointers/ints/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4246"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4247"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga59e24d77be67e1c6f8147686e5920360" kindref="member">SCIPsortedvecDelPosDownPtrIntInt</ref>(</highlight></codeline>
<codeline lineno="4248"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4249"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4250"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4251"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4252"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4253"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4254"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4255"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4256"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>pointers/Reals/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4257"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4258"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gaf9cef7d7ef0f503ef0a99b7a6af9afb6" kindref="member">SCIPsortedvecDelPosDownPtrRealInt</ref>(</highlight></codeline>
<codeline lineno="4259"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4260"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4261"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4262"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4263"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4264"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4265"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4266"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4267"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>pointers/pointers/Ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4268"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4269"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga4f310645c6e36ec1a873e090ddeedd8e" kindref="member">SCIPsortedvecDelPosDownPtrPtrInt</ref>(</highlight></codeline>
<codeline lineno="4270"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4271"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4272"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4273"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4274"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4275"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4276"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4277"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4278"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>pointers/pointers/Reals,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4279"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4280"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga5136ee892cbf64cdaf587243acf04430" kindref="member">SCIPsortedvecDelPosDownPtrPtrReal</ref>(</highlight></codeline>
<codeline lineno="4281"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4282"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4283"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4284"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4285"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4286"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4287"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4288"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4289"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>four<sp/>joint<sp/>arrays<sp/>of<sp/>pointers/pointers/ints/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4290"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4291"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gaa747a6fd7d072338e1e59432168498fd" kindref="member">SCIPsortedvecDelPosDownPtrPtrIntInt</ref>(</highlight></codeline>
<codeline lineno="4292"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4293"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4294"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4295"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4296"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4297"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4298"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4299"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4300"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4301"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>four<sp/>joint<sp/>arrays<sp/>of<sp/>pointers/Reals/ints/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4302"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4303"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gac418640b93b72ae5f6249b6a7e821f1b" kindref="member">SCIPsortedvecDelPosDownPtrRealIntInt</ref>(</highlight></codeline>
<codeline lineno="4304"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4305"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4306"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4307"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4308"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4309"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4310"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4311"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4312"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4313"><highlight class="comment">/**<sp/>deletes<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>four<sp/>joint<sp/>arrays<sp/>of<sp/>pointer/pointer/Reals/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4314"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4315"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga8e0b61e8be8c0b136b036dccec6acceb" kindref="member">SCIPsortedvecDelPosDownPtrPtrRealInt</ref>(</highlight></codeline>
<codeline lineno="4316"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4317"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4318"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4319"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4320"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4321"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4322"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4323"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4324"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4325"><highlight class="comment">/**<sp/>deletes<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>four<sp/>joint<sp/>arrays<sp/>of<sp/>pointer/pointer/Longs/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4326"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4327"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga0d4a5c63ce487d4237616a7f77e14730" kindref="member">SCIPsortedvecDelPosDownPtrPtrLongInt</ref>(</highlight></codeline>
<codeline lineno="4328"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4329"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4330"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4331"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4332"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4333"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4334"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4335"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4336"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4337"><highlight class="comment">/**<sp/>deletes<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>five<sp/>joint<sp/>arrays<sp/>of<sp/>pointer/pointer/Longs/ints/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4338"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4339"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga1293a56a9f59fb3d419ccc2f75ac8c47" kindref="member">SCIPsortedvecDelPosDownPtrPtrLongIntInt</ref>(</highlight></codeline>
<codeline lineno="4340"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4341"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4342"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4343"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4344"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4345"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4346"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4347"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4348"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4349"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4350"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>an<sp/>array<sp/>of<sp/>Reals,<sp/>sorted<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4351"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4352"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga3b259b7163bc48bca1b03bd99fb9c3a8" kindref="member">SCIPsortedvecDelPosDownReal</ref>(</highlight></codeline>
<codeline lineno="4353"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4354"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4355"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4356"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4357"><highlight class="normal"></highlight></codeline>
<codeline lineno="4358"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4359"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>Reals/Bools/pointers,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4360"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4361"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gaa25c1287e7f46816b54ecc4d72ee3adb" kindref="member">SCIPsortedvecDelPosDownRealBoolPtr</ref>(</highlight></codeline>
<codeline lineno="4362"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4363"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boolarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Bool<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4364"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4365"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4366"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4367"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4368"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4369"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>two<sp/>joint<sp/>arrays<sp/>of<sp/>Reals/pointers,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4370"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4371"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga659358a62bec9f196791c85aa7eb026a" kindref="member">SCIPsortedvecDelPosDownRealPtr</ref>(</highlight></codeline>
<codeline lineno="4372"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4373"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4374"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4375"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4376"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4377"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4378"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>two<sp/>joint<sp/>arrays<sp/>of<sp/>Reals/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4379"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4380"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga8c4fca4d4cfd5894ee201ad690294394" kindref="member">SCIPsortedvecDelPosDownRealInt</ref>(</highlight></codeline>
<codeline lineno="4381"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4382"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4383"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4384"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4385"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4386"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4387"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>Reals/ints/Longs,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4388"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4389"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga2f277c08a8c62a2d616289efd9ad015a" kindref="member">SCIPsortedvecDelPosDownRealIntLong</ref>(</highlight></codeline>
<codeline lineno="4390"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4391"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4392"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4393"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4394"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4395"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4396"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4397"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>Reals/ints/Pointer,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4398"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4399"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga58e1b790be0356015955b4be5093ae20" kindref="member">SCIPsortedvecDelPosDownRealIntPtr</ref>(</highlight></codeline>
<codeline lineno="4400"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4401"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4402"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4403"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4404"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4405"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4406"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4407"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>Reals/Reals/Pointer,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4408"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4409"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gac28bdb363223134c1dd0652f26658bd3" kindref="member">SCIPsortedvecDelPosDownRealRealPtr</ref>(</highlight></codeline>
<codeline lineno="4410"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4411"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4412"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4413"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4414"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4415"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4416"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4417"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>Reals/Reals/Pointer,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4418"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4419"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gaa24241a6bbc8ddf35cbcfa41bbe14870" kindref="member">SCIPsortedvecDelPosDownRealPtrPtr</ref>(</highlight></codeline>
<codeline lineno="4420"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4421"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4422"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4423"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4424"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4425"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4426"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4427"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>four<sp/>joint<sp/>arrays<sp/>of<sp/>Reals/pointers/pointers/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4428"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4429"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga6e3fa773f5378aa17a8663bbe769846f" kindref="member">SCIPsortedvecDelPosDownRealPtrPtrInt</ref>(</highlight></codeline>
<codeline lineno="4430"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4431"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4432"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4433"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4434"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4435"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4436"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4437"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4438"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>five<sp/>joint<sp/>arrays<sp/>of<sp/>Reals/pointers/pointers/ints/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4439"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4440"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga5ffab90d7120daa257e4ffde43fa77d1" kindref="member">SCIPsortedvecDelPosDownRealPtrPtrIntInt</ref>(</highlight></codeline>
<codeline lineno="4441"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4442"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4443"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4444"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4445"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4446"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4447"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4448"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4449"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4450"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>four<sp/>joint<sp/>arrays<sp/>of<sp/>Reals/Long/Reals/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4451"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4452"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga9bad1c8df3ac1ff3a8b3ebc1033e5e16" kindref="member">SCIPsortedvecDelPosDownRealLongRealInt</ref>(</highlight></codeline>
<codeline lineno="4453"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4454"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4455"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray3,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4456"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4457"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4458"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4459"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4460"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4461"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>four<sp/>joint<sp/>arrays<sp/>of<sp/>Reals/Reals/ints/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4462"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4463"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga06d0a83c6c2860d99cc0a9367270e1e0" kindref="member">SCIPsortedvecDelPosDownRealRealIntInt</ref>(</highlight></codeline>
<codeline lineno="4464"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4465"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4466"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4467"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4468"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4469"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4470"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4471"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4472"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>four<sp/>joint<sp/>arrays<sp/>of<sp/>Reals/Reals/Reals/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4473"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4474"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gad6163d61719090374bfe1f7f067e52e8" kindref="member">SCIPsortedvecDelPosDownRealRealRealInt</ref>(</highlight></codeline>
<codeline lineno="4475"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4476"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4477"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray3,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4478"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4479"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4480"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4481"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4482"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4483"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>four<sp/>joint<sp/>arrays<sp/>of<sp/>Reals/Reals/Reals/pointers,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4484"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4485"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gabd2ab8586c5415a8eef0dd81c950b2c6" kindref="member">SCIPsortedvecDelPosDownRealRealRealPtr</ref>(</highlight></codeline>
<codeline lineno="4486"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4487"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4488"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray3,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4489"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4490"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4491"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4492"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4493"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4494"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>five<sp/>joint<sp/>arrays<sp/>of<sp/>Reals/Reals/Reals/Bools/pointers,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4495"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4496"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga19aef1e3777aaad1d2231f56c94754d5" kindref="member">SCIPsortedvecDelPosDownRealRealRealBoolPtr</ref>(</highlight></codeline>
<codeline lineno="4497"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4498"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4499"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray3,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4500"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boolarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Bool<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4501"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4502"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4503"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4504"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4505"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4506"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>an<sp/>array<sp/>of<sp/>ints<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4507"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4508"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gad1145e63c8125a365012cb005d6daec2" kindref="member">SCIPsortedvecDelPosDownInt</ref>(</highlight></codeline>
<codeline lineno="4509"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4510"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4511"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4512"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4513"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4514"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>two<sp/>joint<sp/>arrays<sp/>of<sp/>ints/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4515"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4516"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga3592137191739688773e68ecb92a2954" kindref="member">SCIPsortedvecDelPosDownIntInt</ref>(</highlight></codeline>
<codeline lineno="4517"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4518"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4519"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4520"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4521"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4522"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4523"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>two<sp/>joint<sp/>arrays<sp/>of<sp/>ints/reals,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4524"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4525"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gae23a3861de091f32d8f30df8ef96a245" kindref="member">SCIPsortedvecDelPosDownIntReal</ref>(</highlight></codeline>
<codeline lineno="4526"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4527"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4528"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4529"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4530"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4531"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4532"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>ints/ints/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4533"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4534"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga98bcb371ffbb704f9b2a0b7e8a92eb33" kindref="member">SCIPsortedvecDelPosDownIntIntInt</ref>(</highlight></codeline>
<codeline lineno="4535"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4536"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4537"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray3,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>third<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4538"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4539"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4540"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4541"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4542"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>ints/ints/SCIP_Longint,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4543"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4544"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga13dbc7faac98878278a7d82f147ae93c" kindref="member">SCIPsortedvecDelPosDownIntIntLong</ref>(</highlight></codeline>
<codeline lineno="4545"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4546"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4547"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4548"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4549"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4550"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4551"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4552"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>ints/ints/pointers,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4553"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4554"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gab8d853b7506c426d34ca9d56034c4f2b" kindref="member">SCIPsortedvecDelPosDownIntIntPtr</ref>(</highlight></codeline>
<codeline lineno="4555"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4556"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4557"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4558"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4559"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4560"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4561"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4562"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>ints/ints/Reals,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4563"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4564"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gaec60c0c53ee333c2d365c982ca59bad0" kindref="member">SCIPsortedvecDelPosDownIntIntReal</ref>(</highlight></codeline>
<codeline lineno="4565"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4566"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4567"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4568"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4569"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4570"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4571"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4572"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>two<sp/>joint<sp/>arrays<sp/>of<sp/>ints/pointers,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4573"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4574"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga43df436ace6011a7568d959d68f9d0a7" kindref="member">SCIPsortedvecDelPosDownIntPtr</ref>(</highlight></codeline>
<codeline lineno="4575"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4576"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4577"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4578"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4579"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4580"><highlight class="normal"></highlight></codeline>
<codeline lineno="4581"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4582"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>four<sp/>joint<sp/>arrays<sp/>of<sp/>ints/ints/ints/pointers,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4583"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4584"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1gac81c473a2561c2cce582da84428f69af" kindref="member">SCIPsortedvecDelPosDownIntIntIntPtr</ref>(</highlight></codeline>
<codeline lineno="4585"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4586"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4587"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray3,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4588"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4589"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4590"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4591"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4592"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4593"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>four<sp/>joint<sp/>arrays<sp/>of<sp/>ints/pointers/ints/Reals,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-decreasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4594"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4595"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga60d56d852e33355b7b33ed3b09739504" kindref="member">SCIPsortedvecDelPosDownIntPtrIntReal</ref>(</highlight></codeline>
<codeline lineno="4596"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4597"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4598"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4599"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4600"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4601"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4602"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4603"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4604"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>an<sp/>array<sp/>of<sp/>Longints,<sp/>sorted<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4605"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4606"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga1f509f41f8dc50da314caa05b8f5b6fe" kindref="member">SCIPsortedvecDelPosDownLong</ref>(</highlight></codeline>
<codeline lineno="4607"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4608"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4609"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4610"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4611"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4612"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>three<sp/>two<sp/>arrays<sp/>of<sp/>Long/pointer,<sp/>sorted<sp/>by<sp/>the<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4613"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4614"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga82a0420979b32a33d0ac2ed1f936d82c" kindref="member">SCIPsortedvecDelPosDownLongPtr</ref>(</highlight></codeline>
<codeline lineno="4615"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4616"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4617"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4618"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4619"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4620"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4621"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>Long/pointer/int,<sp/>sorted<sp/>by<sp/>the<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4622"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4623"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga05c6ee6ce0784c5cb7171953c91fa2e0" kindref="member">SCIPsortedvecDelPosDownLongPtrInt</ref>(</highlight></codeline>
<codeline lineno="4624"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4625"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4626"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4627"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4628"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4629"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4630"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4631"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>three<sp/>joint<sp/>arrays<sp/>of<sp/>Long/pointer/Real/Bool,<sp/>sorted<sp/>by<sp/>the<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4632"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4633"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga4401330b63fe2b84c52e8f87779e3470" kindref="member">SCIPsortedvecDelPosDownLongPtrRealBool</ref>(</highlight></codeline>
<codeline lineno="4634"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4635"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4636"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4637"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boolarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Bool<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4638"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4639"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4640"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4641"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4642"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>five<sp/>joint<sp/>arrays<sp/>of<sp/>Long/pointer/Real/Real/Bool,<sp/>sorted<sp/>by<sp/>the<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4643"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4644"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga8878146d4b8d6655c6a1e7f8a1331771" kindref="member">SCIPsortedvecDelPosDownLongPtrRealRealBool</ref>(</highlight></codeline>
<codeline lineno="4645"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4646"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4647"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4648"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4649"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boolarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Bool<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4650"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4651"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4652"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4653"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4654"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>six<sp/>joint<sp/>arrays<sp/>of<sp/>Long/pointer/Real/Real/int/Bool,<sp/>sorted<sp/>by<sp/>the<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4655"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4656"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga1d8566945198da63cc6e94169ef01969" kindref="member">SCIPsortedvecDelPosDownLongPtrRealRealIntBool</ref>(</highlight></codeline>
<codeline lineno="4657"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4658"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4659"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4660"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>SCIP_Real<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4661"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4662"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boolarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Bool<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4663"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4664"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4665"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4666"><highlight class="normal"></highlight></codeline>
<codeline lineno="4667"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4668"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>four<sp/>joint<sp/>arrays<sp/>of<sp/>Long/pointer/pointer/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4669"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4670"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga4bce001ffc72bbaececc5211f8c8accb" kindref="member">SCIPsortedvecDelPosDownLongPtrPtrInt</ref>(</highlight></codeline>
<codeline lineno="4671"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4672"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4673"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4674"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4675"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4676"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4677"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4678"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4679"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>five<sp/>joint<sp/>arrays<sp/>of<sp/>Long/pointer/pointer/ints/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4680"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4681"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga5229fc6dcac1bbb54697cb6584392f24" kindref="member">SCIPsortedvecDelPosDownLongPtrPtrIntInt</ref>(</highlight></codeline>
<codeline lineno="4682"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4683"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4684"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4685"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4686"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4687"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4688"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4689"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4690"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4691"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>five<sp/>joint<sp/>arrays<sp/>of<sp/>Long/pointer/pointer/Bool/ints,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4692"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4693"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga7ca8f3db0c84ecd952055c2987013bf3" kindref="member">SCIPsortedvecDelPosDownLongPtrPtrBoolInt</ref>(</highlight></codeline>
<codeline lineno="4694"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4695"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4696"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>pointer<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4697"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boolarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Bool<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4698"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>where<sp/>an<sp/>element<sp/>is<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4699"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4700"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4701"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4702"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4703"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>five<sp/>joint<sp/>arrays<sp/>of<sp/>pointer/ints/ints/Bool/Bool,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4704"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4705"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga0f3cba816a16cef786e266ab3ad558a3" kindref="member">SCIPsortedvecDelPosDownPtrIntIntBoolBool</ref>(</highlight></codeline>
<codeline lineno="4706"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4707"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4708"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4709"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boolarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>SCIP_Bool<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4710"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boolarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>SCIP_Bool<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4711"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4712"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4713"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4714"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4715"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4716"><highlight class="comment">/**<sp/>delete<sp/>the<sp/>element<sp/>at<sp/>the<sp/>given<sp/>position<sp/>from<sp/>six<sp/>joint<sp/>arrays<sp/>of<sp/>ints/pointer/ints/ints/Bool/Bool,<sp/>sorted<sp/>by<sp/>first<sp/>array<sp/>in<sp/>non-increasing<sp/>order<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4717"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4718"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__SortingAlgorithms_1ga5b8df5f1b6979e0ea2639f2df9bf77f8" kindref="member">SCIPsortedvecDelPosDownIntPtrIntIntBoolBool</ref>(</highlight></codeline>
<codeline lineno="4719"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>to<sp/>be<sp/>sorted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4720"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4721"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4722"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray3,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>thrid<sp/>int<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4723"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boolarray1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>SCIP_Bool<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4724"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>boolarray2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>SCIP_Bool<sp/>array<sp/>to<sp/>be<sp/>permuted<sp/>in<sp/>the<sp/>same<sp/>way<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4725"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>position<sp/>of<sp/>element<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4726"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>length<sp/>of<sp/>arrays<sp/>(will<sp/>be<sp/>decreased<sp/>by<sp/>1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4727"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4728"><highlight class="normal"></highlight></codeline>
<codeline lineno="4729"><highlight class="normal"></highlight></codeline>
<codeline lineno="4730"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>upwards<sp/>binary<sp/>search<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4731"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4732"><highlight class="comment">/**<sp/>Finds<sp/>the<sp/>position<sp/>at<sp/>which<sp/>&apos;val&apos;<sp/>is<sp/>located<sp/>in<sp/>the<sp/>sorted<sp/>vector<sp/>by<sp/>binary<sp/>search.</highlight></codeline>
<codeline lineno="4733"><highlight class="comment"><sp/>*<sp/><sp/>If<sp/>the<sp/>element<sp/>exists,<sp/>the<sp/>method<sp/>returns<sp/>TRUE<sp/>and<sp/>stores<sp/>the<sp/>position<sp/>of<sp/>the<sp/>element<sp/>in<sp/>&apos;*pos&apos;.</highlight></codeline>
<codeline lineno="4734"><highlight class="comment"><sp/>*<sp/><sp/>If<sp/>the<sp/>element<sp/>does<sp/>not<sp/>exist,<sp/>the<sp/>method<sp/>returns<sp/>FALSE<sp/>and<sp/>stores<sp/>the<sp/>position<sp/>of<sp/>the<sp/>element<sp/>that<sp/>follows</highlight></codeline>
<codeline lineno="4735"><highlight class="comment"><sp/>*<sp/><sp/>&apos;val&apos;<sp/>in<sp/>the<sp/>ordering<sp/>in<sp/>&apos;*pos&apos;,<sp/>i.e.,<sp/>&apos;*pos&apos;<sp/>is<sp/>the<sp/>position<sp/>at<sp/>which<sp/>&apos;val&apos;<sp/>would<sp/>be<sp/>inserted.</highlight></codeline>
<codeline lineno="4736"><highlight class="comment"><sp/>*<sp/><sp/>Note<sp/>that<sp/>if<sp/>the<sp/>element<sp/>is<sp/>not<sp/>found,<sp/>&apos;*pos&apos;<sp/>may<sp/>be<sp/>equal<sp/>to<sp/>len<sp/>if<sp/>all<sp/>existing<sp/>elements<sp/>are<sp/>smaller<sp/>than<sp/>&apos;val&apos;.</highlight></codeline>
<codeline lineno="4737"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4738"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4739"><highlight class="normal"><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><ref refid="group__SortingAlgorithms_1ga26d36bcbe4eb5695c83275f632b520e2" kindref="member">SCIPsortedvecFindInd</ref>(</highlight></codeline>
<codeline lineno="4740"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>index<sp/>array<sp/>to<sp/>be<sp/>searched<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4741"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a806c02f466e036f6e137df9eee2f7e9d" kindref="member">SCIP_DECL_SORTINDCOMP</ref>((*indcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4742"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataptr,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>data<sp/>field<sp/>that<sp/>is<sp/>given<sp/>to<sp/>the<sp/>external<sp/>compare<sp/>method<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4743"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>value<sp/>to<sp/>search<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4744"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4745"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>position<sp/>of<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4746"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4747"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4748"><highlight class="comment">/**<sp/>Finds<sp/>the<sp/>position<sp/>at<sp/>which<sp/>&apos;val&apos;<sp/>is<sp/>located<sp/>in<sp/>the<sp/>sorted<sp/>vector<sp/>by<sp/>binary<sp/>search.</highlight></codeline>
<codeline lineno="4749"><highlight class="comment"><sp/>*<sp/><sp/>If<sp/>the<sp/>element<sp/>exists,<sp/>the<sp/>method<sp/>returns<sp/>TRUE<sp/>and<sp/>stores<sp/>the<sp/>position<sp/>of<sp/>the<sp/>element<sp/>in<sp/>&apos;*pos&apos;.</highlight></codeline>
<codeline lineno="4750"><highlight class="comment"><sp/>*<sp/><sp/>If<sp/>the<sp/>element<sp/>does<sp/>not<sp/>exist,<sp/>the<sp/>method<sp/>returns<sp/>FALSE<sp/>and<sp/>stores<sp/>the<sp/>position<sp/>of<sp/>the<sp/>element<sp/>that<sp/>follows</highlight></codeline>
<codeline lineno="4751"><highlight class="comment"><sp/>*<sp/><sp/>&apos;val&apos;<sp/>in<sp/>the<sp/>ordering<sp/>in<sp/>&apos;*pos&apos;,<sp/>i.e.,<sp/>&apos;*pos&apos;<sp/>is<sp/>the<sp/>position<sp/>at<sp/>which<sp/>&apos;val&apos;<sp/>would<sp/>be<sp/>inserted.</highlight></codeline>
<codeline lineno="4752"><highlight class="comment"><sp/>*<sp/><sp/>Note<sp/>that<sp/>if<sp/>the<sp/>element<sp/>is<sp/>not<sp/>found,<sp/>&apos;*pos&apos;<sp/>may<sp/>be<sp/>equal<sp/>to<sp/>len<sp/>if<sp/>all<sp/>existing<sp/>elements<sp/>are<sp/>smaller<sp/>than<sp/>&apos;val&apos;.</highlight></codeline>
<codeline lineno="4753"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4754"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4755"><highlight class="normal"><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><ref refid="group__SortingAlgorithms_1ga0a1d3f8656491206c546d51d7d3bf984" kindref="member">SCIPsortedvecFindPtr</ref>(</highlight></codeline>
<codeline lineno="4756"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>searched<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4757"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4758"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>value<sp/>to<sp/>search<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4759"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4760"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>position<sp/>of<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4761"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4762"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4763"><highlight class="comment">/**<sp/>Finds<sp/>the<sp/>position<sp/>at<sp/>which<sp/>&apos;val&apos;<sp/>is<sp/>located<sp/>in<sp/>the<sp/>sorted<sp/>vector<sp/>by<sp/>binary<sp/>search.</highlight></codeline>
<codeline lineno="4764"><highlight class="comment"><sp/>*<sp/><sp/>If<sp/>the<sp/>element<sp/>exists,<sp/>the<sp/>method<sp/>returns<sp/>TRUE<sp/>and<sp/>stores<sp/>the<sp/>position<sp/>of<sp/>the<sp/>element<sp/>in<sp/>&apos;*pos&apos;.</highlight></codeline>
<codeline lineno="4765"><highlight class="comment"><sp/>*<sp/><sp/>If<sp/>the<sp/>element<sp/>does<sp/>not<sp/>exist,<sp/>the<sp/>method<sp/>returns<sp/>FALSE<sp/>and<sp/>stores<sp/>the<sp/>position<sp/>of<sp/>the<sp/>element<sp/>that<sp/>follows</highlight></codeline>
<codeline lineno="4766"><highlight class="comment"><sp/>*<sp/><sp/>&apos;val&apos;<sp/>in<sp/>the<sp/>ordering<sp/>in<sp/>&apos;*pos&apos;,<sp/>i.e.,<sp/>&apos;*pos&apos;<sp/>is<sp/>the<sp/>position<sp/>at<sp/>which<sp/>&apos;val&apos;<sp/>would<sp/>be<sp/>inserted.</highlight></codeline>
<codeline lineno="4767"><highlight class="comment"><sp/>*<sp/><sp/>Note<sp/>that<sp/>if<sp/>the<sp/>element<sp/>is<sp/>not<sp/>found,<sp/>&apos;*pos&apos;<sp/>may<sp/>be<sp/>equal<sp/>to<sp/>len<sp/>if<sp/>all<sp/>existing<sp/>elements<sp/>are<sp/>smaller<sp/>than<sp/>&apos;val&apos;.</highlight></codeline>
<codeline lineno="4768"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4769"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4770"><highlight class="normal"><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><ref refid="group__SortingAlgorithms_1ga2df22126338d4b1c7383e3b5818e8e3f" kindref="member">SCIPsortedvecFindReal</ref>(</highlight></codeline>
<codeline lineno="4771"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>to<sp/>be<sp/>searched<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4772"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>value<sp/>to<sp/>search<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4773"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4774"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>position<sp/>of<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4775"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4776"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4777"><highlight class="comment">/**<sp/>Finds<sp/>the<sp/>position<sp/>at<sp/>which<sp/>&apos;val&apos;<sp/>is<sp/>located<sp/>in<sp/>the<sp/>sorted<sp/>vector<sp/>by<sp/>binary<sp/>search.</highlight></codeline>
<codeline lineno="4778"><highlight class="comment"><sp/>*<sp/><sp/>If<sp/>the<sp/>element<sp/>exists,<sp/>the<sp/>method<sp/>returns<sp/>TRUE<sp/>and<sp/>stores<sp/>the<sp/>position<sp/>of<sp/>the<sp/>element<sp/>in<sp/>&apos;*pos&apos;.</highlight></codeline>
<codeline lineno="4779"><highlight class="comment"><sp/>*<sp/><sp/>If<sp/>the<sp/>element<sp/>does<sp/>not<sp/>exist,<sp/>the<sp/>method<sp/>returns<sp/>FALSE<sp/>and<sp/>stores<sp/>the<sp/>position<sp/>of<sp/>the<sp/>element<sp/>that<sp/>follows</highlight></codeline>
<codeline lineno="4780"><highlight class="comment"><sp/>*<sp/><sp/>&apos;val&apos;<sp/>in<sp/>the<sp/>ordering<sp/>in<sp/>&apos;*pos&apos;,<sp/>i.e.,<sp/>&apos;*pos&apos;<sp/>is<sp/>the<sp/>position<sp/>at<sp/>which<sp/>&apos;val&apos;<sp/>would<sp/>be<sp/>inserted.</highlight></codeline>
<codeline lineno="4781"><highlight class="comment"><sp/>*<sp/><sp/>Note<sp/>that<sp/>if<sp/>the<sp/>element<sp/>is<sp/>not<sp/>found,<sp/>&apos;*pos&apos;<sp/>may<sp/>be<sp/>equal<sp/>to<sp/>len<sp/>if<sp/>all<sp/>existing<sp/>elements<sp/>are<sp/>smaller<sp/>than<sp/>&apos;val&apos;.</highlight></codeline>
<codeline lineno="4782"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4783"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4784"><highlight class="normal"><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><ref refid="group__SortingAlgorithms_1ga4aae1f2e7c28d053b18974a066f03f2e" kindref="member">SCIPsortedvecFindInt</ref>(</highlight></codeline>
<codeline lineno="4785"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>to<sp/>be<sp/>searched<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4786"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>value<sp/>to<sp/>search<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4787"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4788"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>position<sp/>of<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4789"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4790"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4791"><highlight class="comment">/**<sp/>Finds<sp/>the<sp/>position<sp/>at<sp/>which<sp/>&apos;val&apos;<sp/>is<sp/>located<sp/>in<sp/>the<sp/>sorted<sp/>vector<sp/>by<sp/>binary<sp/>search.</highlight></codeline>
<codeline lineno="4792"><highlight class="comment"><sp/>*<sp/><sp/>If<sp/>the<sp/>element<sp/>exists,<sp/>the<sp/>method<sp/>returns<sp/>TRUE<sp/>and<sp/>stores<sp/>the<sp/>position<sp/>of<sp/>the<sp/>element<sp/>in<sp/>&apos;*pos&apos;.</highlight></codeline>
<codeline lineno="4793"><highlight class="comment"><sp/>*<sp/><sp/>If<sp/>the<sp/>element<sp/>does<sp/>not<sp/>exist,<sp/>the<sp/>method<sp/>returns<sp/>FALSE<sp/>and<sp/>stores<sp/>the<sp/>position<sp/>of<sp/>the<sp/>element<sp/>that<sp/>follows</highlight></codeline>
<codeline lineno="4794"><highlight class="comment"><sp/>*<sp/><sp/>&apos;val&apos;<sp/>in<sp/>the<sp/>ordering<sp/>in<sp/>&apos;*pos&apos;,<sp/>i.e.,<sp/>&apos;*pos&apos;<sp/>is<sp/>the<sp/>position<sp/>at<sp/>which<sp/>&apos;val&apos;<sp/>would<sp/>be<sp/>inserted.</highlight></codeline>
<codeline lineno="4795"><highlight class="comment"><sp/>*<sp/><sp/>Note<sp/>that<sp/>if<sp/>the<sp/>element<sp/>is<sp/>not<sp/>found,<sp/>&apos;*pos&apos;<sp/>may<sp/>be<sp/>equal<sp/>to<sp/>len<sp/>if<sp/>all<sp/>existing<sp/>elements<sp/>are<sp/>smaller<sp/>than<sp/>&apos;val&apos;.</highlight></codeline>
<codeline lineno="4796"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4797"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4798"><highlight class="normal"><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><ref refid="group__SortingAlgorithms_1ga64379740155859235c21b655fc601f6f" kindref="member">SCIPsortedvecFindLong</ref>(</highlight></codeline>
<codeline lineno="4799"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>to<sp/>be<sp/>searched<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4800"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>value<sp/>to<sp/>search<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4801"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4802"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>position<sp/>of<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4803"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4804"><highlight class="normal"></highlight></codeline>
<codeline lineno="4805"><highlight class="normal"></highlight></codeline>
<codeline lineno="4806"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>downwards<sp/>binary<sp/>search<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4807"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4808"><highlight class="comment">/**<sp/>Finds<sp/>the<sp/>position<sp/>at<sp/>which<sp/>&apos;val&apos;<sp/>is<sp/>located<sp/>in<sp/>the<sp/>sorted<sp/>vector<sp/>by<sp/>binary<sp/>search.</highlight></codeline>
<codeline lineno="4809"><highlight class="comment"><sp/>*<sp/><sp/>If<sp/>the<sp/>element<sp/>exists,<sp/>the<sp/>method<sp/>returns<sp/>TRUE<sp/>and<sp/>stores<sp/>the<sp/>position<sp/>of<sp/>the<sp/>element<sp/>in<sp/>&apos;*pos&apos;.</highlight></codeline>
<codeline lineno="4810"><highlight class="comment"><sp/>*<sp/><sp/>If<sp/>the<sp/>element<sp/>does<sp/>not<sp/>exist,<sp/>the<sp/>method<sp/>returns<sp/>FALSE<sp/>and<sp/>stores<sp/>the<sp/>position<sp/>of<sp/>the<sp/>element<sp/>that<sp/>follows</highlight></codeline>
<codeline lineno="4811"><highlight class="comment"><sp/>*<sp/><sp/>&apos;val&apos;<sp/>in<sp/>the<sp/>ordering<sp/>in<sp/>&apos;*pos&apos;,<sp/>i.e.,<sp/>&apos;*pos&apos;<sp/>is<sp/>the<sp/>position<sp/>at<sp/>which<sp/>&apos;val&apos;<sp/>would<sp/>be<sp/>inserted.</highlight></codeline>
<codeline lineno="4812"><highlight class="comment"><sp/>*<sp/><sp/>Note<sp/>that<sp/>if<sp/>the<sp/>element<sp/>is<sp/>not<sp/>found,<sp/>&apos;*pos&apos;<sp/>may<sp/>be<sp/>equal<sp/>to<sp/>len<sp/>if<sp/>all<sp/>existing<sp/>elements<sp/>are<sp/>smaller<sp/>than<sp/>&apos;val&apos;.</highlight></codeline>
<codeline lineno="4813"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4814"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4815"><highlight class="normal"><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><ref refid="group__SortingAlgorithms_1ga12f9bdff6d3008f30b5a176c72ad50df" kindref="member">SCIPsortedvecFindDownInd</ref>(</highlight></codeline>
<codeline lineno="4816"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>index<sp/>array<sp/>to<sp/>be<sp/>searched<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4817"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__misc_8h_1a806c02f466e036f6e137df9eee2f7e9d" kindref="member">SCIP_DECL_SORTINDCOMP</ref>((*indcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4818"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dataptr,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>data<sp/>field<sp/>that<sp/>is<sp/>given<sp/>to<sp/>the<sp/>external<sp/>compare<sp/>method<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4819"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>value<sp/>to<sp/>search<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4820"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4821"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>position<sp/>of<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4822"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4823"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4824"><highlight class="comment">/**<sp/>Finds<sp/>the<sp/>position<sp/>at<sp/>which<sp/>&apos;val&apos;<sp/>is<sp/>located<sp/>in<sp/>the<sp/>sorted<sp/>vector<sp/>by<sp/>binary<sp/>search.</highlight></codeline>
<codeline lineno="4825"><highlight class="comment"><sp/>*<sp/><sp/>If<sp/>the<sp/>element<sp/>exists,<sp/>the<sp/>method<sp/>returns<sp/>TRUE<sp/>and<sp/>stores<sp/>the<sp/>position<sp/>of<sp/>the<sp/>element<sp/>in<sp/>&apos;*pos&apos;.</highlight></codeline>
<codeline lineno="4826"><highlight class="comment"><sp/>*<sp/><sp/>If<sp/>the<sp/>element<sp/>does<sp/>not<sp/>exist,<sp/>the<sp/>method<sp/>returns<sp/>FALSE<sp/>and<sp/>stores<sp/>the<sp/>position<sp/>of<sp/>the<sp/>element<sp/>that<sp/>follows</highlight></codeline>
<codeline lineno="4827"><highlight class="comment"><sp/>*<sp/><sp/>&apos;val&apos;<sp/>in<sp/>the<sp/>ordering<sp/>in<sp/>&apos;*pos&apos;,<sp/>i.e.,<sp/>&apos;*pos&apos;<sp/>is<sp/>the<sp/>position<sp/>at<sp/>which<sp/>&apos;val&apos;<sp/>would<sp/>be<sp/>inserted.</highlight></codeline>
<codeline lineno="4828"><highlight class="comment"><sp/>*<sp/><sp/>Note<sp/>that<sp/>if<sp/>the<sp/>element<sp/>is<sp/>not<sp/>found,<sp/>&apos;*pos&apos;<sp/>may<sp/>be<sp/>equal<sp/>to<sp/>len<sp/>if<sp/>all<sp/>existing<sp/>elements<sp/>are<sp/>smaller<sp/>than<sp/>&apos;val&apos;.</highlight></codeline>
<codeline lineno="4829"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4830"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4831"><highlight class="normal"><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><ref refid="group__SortingAlgorithms_1ga5f10914e9b9b12db9d286b1ea25a5ed5" kindref="member">SCIPsortedvecFindDownPtr</ref>(</highlight></codeline>
<codeline lineno="4832"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>array<sp/>to<sp/>be<sp/>searched<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4833"><highlight class="normal"><sp/><sp/><sp/><ref refid="group__SortingAlgorithms_1gab19fb986ed7bd7eed096d85e62366249" kindref="member">SCIP_DECL_SORTPTRCOMP</ref>((*ptrcomp)),<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>data<sp/>element<sp/>comparator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4834"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>value<sp/>to<sp/>search<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4835"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4836"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>position<sp/>of<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4837"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4838"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4839"><highlight class="comment">/**<sp/>Finds<sp/>the<sp/>position<sp/>at<sp/>which<sp/>&apos;val&apos;<sp/>is<sp/>located<sp/>in<sp/>the<sp/>sorted<sp/>vector<sp/>by<sp/>binary<sp/>search.</highlight></codeline>
<codeline lineno="4840"><highlight class="comment"><sp/>*<sp/><sp/>If<sp/>the<sp/>element<sp/>exists,<sp/>the<sp/>method<sp/>returns<sp/>TRUE<sp/>and<sp/>stores<sp/>the<sp/>position<sp/>of<sp/>the<sp/>element<sp/>in<sp/>&apos;*pos&apos;.</highlight></codeline>
<codeline lineno="4841"><highlight class="comment"><sp/>*<sp/><sp/>If<sp/>the<sp/>element<sp/>does<sp/>not<sp/>exist,<sp/>the<sp/>method<sp/>returns<sp/>FALSE<sp/>and<sp/>stores<sp/>the<sp/>position<sp/>of<sp/>the<sp/>element<sp/>that<sp/>follows</highlight></codeline>
<codeline lineno="4842"><highlight class="comment"><sp/>*<sp/><sp/>&apos;val&apos;<sp/>in<sp/>the<sp/>ordering<sp/>in<sp/>&apos;*pos&apos;,<sp/>i.e.,<sp/>&apos;*pos&apos;<sp/>is<sp/>the<sp/>position<sp/>at<sp/>which<sp/>&apos;val&apos;<sp/>would<sp/>be<sp/>inserted.</highlight></codeline>
<codeline lineno="4843"><highlight class="comment"><sp/>*<sp/><sp/>Note<sp/>that<sp/>if<sp/>the<sp/>element<sp/>is<sp/>not<sp/>found,<sp/>&apos;*pos&apos;<sp/>may<sp/>be<sp/>equal<sp/>to<sp/>len<sp/>if<sp/>all<sp/>existing<sp/>elements<sp/>are<sp/>smaller<sp/>than<sp/>&apos;val&apos;.</highlight></codeline>
<codeline lineno="4844"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4845"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4846"><highlight class="normal"><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><ref refid="group__SortingAlgorithms_1ga962f1cd31b5d4b6dd60032d3c3a191c7" kindref="member">SCIPsortedvecFindDownReal</ref>(</highlight></codeline>
<codeline lineno="4847"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>realarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Real<sp/>array<sp/>to<sp/>be<sp/>searched<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4848"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>value<sp/>to<sp/>search<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4849"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4850"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>position<sp/>of<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4851"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4852"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4853"><highlight class="comment">/**<sp/>Finds<sp/>the<sp/>position<sp/>at<sp/>which<sp/>&apos;val&apos;<sp/>is<sp/>located<sp/>in<sp/>the<sp/>sorted<sp/>vector<sp/>by<sp/>binary<sp/>search.</highlight></codeline>
<codeline lineno="4854"><highlight class="comment"><sp/>*<sp/><sp/>If<sp/>the<sp/>element<sp/>exists,<sp/>the<sp/>method<sp/>returns<sp/>TRUE<sp/>and<sp/>stores<sp/>the<sp/>position<sp/>of<sp/>the<sp/>element<sp/>in<sp/>&apos;*pos&apos;.</highlight></codeline>
<codeline lineno="4855"><highlight class="comment"><sp/>*<sp/><sp/>If<sp/>the<sp/>element<sp/>does<sp/>not<sp/>exist,<sp/>the<sp/>method<sp/>returns<sp/>FALSE<sp/>and<sp/>stores<sp/>the<sp/>position<sp/>of<sp/>the<sp/>element<sp/>that<sp/>follows</highlight></codeline>
<codeline lineno="4856"><highlight class="comment"><sp/>*<sp/><sp/>&apos;val&apos;<sp/>in<sp/>the<sp/>ordering<sp/>in<sp/>&apos;*pos&apos;,<sp/>i.e.,<sp/>&apos;*pos&apos;<sp/>is<sp/>the<sp/>position<sp/>at<sp/>which<sp/>&apos;val&apos;<sp/>would<sp/>be<sp/>inserted.</highlight></codeline>
<codeline lineno="4857"><highlight class="comment"><sp/>*<sp/><sp/>Note<sp/>that<sp/>if<sp/>the<sp/>element<sp/>is<sp/>not<sp/>found,<sp/>&apos;*pos&apos;<sp/>may<sp/>be<sp/>equal<sp/>to<sp/>len<sp/>if<sp/>all<sp/>existing<sp/>elements<sp/>are<sp/>smaller<sp/>than<sp/>&apos;val&apos;.</highlight></codeline>
<codeline lineno="4858"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4859"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4860"><highlight class="normal"><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><ref refid="group__SortingAlgorithms_1ga224ecda311a4771fa0a7e0d603e47710" kindref="member">SCIPsortedvecFindDownInt</ref>(</highlight></codeline>
<codeline lineno="4861"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>int<sp/>array<sp/>to<sp/>be<sp/>searched<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4862"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>value<sp/>to<sp/>search<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4863"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4864"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>position<sp/>of<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4865"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4866"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4867"><highlight class="comment">/**<sp/>Finds<sp/>the<sp/>position<sp/>at<sp/>which<sp/>&apos;val&apos;<sp/>is<sp/>located<sp/>in<sp/>the<sp/>sorted<sp/>vector<sp/>by<sp/>binary<sp/>search.</highlight></codeline>
<codeline lineno="4868"><highlight class="comment"><sp/>*<sp/><sp/>If<sp/>the<sp/>element<sp/>exists,<sp/>the<sp/>method<sp/>returns<sp/>TRUE<sp/>and<sp/>stores<sp/>the<sp/>position<sp/>of<sp/>the<sp/>element<sp/>in<sp/>&apos;*pos&apos;.</highlight></codeline>
<codeline lineno="4869"><highlight class="comment"><sp/>*<sp/><sp/>If<sp/>the<sp/>element<sp/>does<sp/>not<sp/>exist,<sp/>the<sp/>method<sp/>returns<sp/>FALSE<sp/>and<sp/>stores<sp/>the<sp/>position<sp/>of<sp/>the<sp/>element<sp/>that<sp/>follows</highlight></codeline>
<codeline lineno="4870"><highlight class="comment"><sp/>*<sp/><sp/>&apos;val&apos;<sp/>in<sp/>the<sp/>ordering<sp/>in<sp/>&apos;*pos&apos;,<sp/>i.e.,<sp/>&apos;*pos&apos;<sp/>is<sp/>the<sp/>position<sp/>at<sp/>which<sp/>&apos;val&apos;<sp/>would<sp/>be<sp/>inserted.</highlight></codeline>
<codeline lineno="4871"><highlight class="comment"><sp/>*<sp/><sp/>Note<sp/>that<sp/>if<sp/>the<sp/>element<sp/>is<sp/>not<sp/>found,<sp/>&apos;*pos&apos;<sp/>may<sp/>be<sp/>equal<sp/>to<sp/>len<sp/>if<sp/>all<sp/>existing<sp/>elements<sp/>are<sp/>smaller<sp/>than<sp/>&apos;val&apos;.</highlight></codeline>
<codeline lineno="4872"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4873"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4874"><highlight class="normal"><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><ref refid="group__SortingAlgorithms_1ga5cbfdcdfa4689c936ea0ee4d5df9f0cf" kindref="member">SCIPsortedvecFindDownLong</ref>(</highlight></codeline>
<codeline lineno="4875"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>longarray,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP_Longint<sp/>array<sp/>to<sp/>be<sp/>searched<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4876"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>value<sp/>to<sp/>search<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4877"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4878"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pos<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>position<sp/>of<sp/>element<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4879"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4880"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4881"><highlight class="comment">/**@}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4882"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4883"><highlight class="comment">/**@defgroup<sp/>MiscellaneousMethods<sp/>Miscellaneous<sp/>Methods</highlight></codeline>
<codeline lineno="4884"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4885"><highlight class="comment"><sp/>*<sp/>Below<sp/>you<sp/>find<sp/>a<sp/>list<sp/>of<sp/>miscellaneous<sp/>methods<sp/>grouped<sp/>by<sp/>different<sp/>categories</highlight></codeline>
<codeline lineno="4886"><highlight class="comment"><sp/>*@{</highlight></codeline>
<codeline lineno="4887"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4888"><highlight class="normal"></highlight></codeline>
<codeline lineno="4889"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4890"><highlight class="comment"><sp/>*<sp/>Numerical<sp/>methods</highlight></codeline>
<codeline lineno="4891"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4892"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4893"><highlight class="comment">/**@defgroup<sp/>NumericalMethods<sp/>Numerical<sp/>Methods</highlight></codeline>
<codeline lineno="4894"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="4895"><highlight class="comment"><sp/>*@{</highlight></codeline>
<codeline lineno="4896"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4897"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4898"><highlight class="comment">/**<sp/>returns<sp/>the<sp/>machine<sp/>epsilon:<sp/>the<sp/>smallest<sp/>number<sp/>eps<sp/>&gt;<sp/>0,<sp/>for<sp/>which<sp/>1.0<sp/>+<sp/>eps<sp/>&gt;<sp/>1.0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4899"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4900"><highlight class="normal"><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><ref refid="group__NumericalMethods_1gac6ef1b59cbfcd67e6d93d530b78e7b05" kindref="member">SCIPcalcMachineEpsilon</ref>(</highlight></codeline>
<codeline lineno="4901"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4902"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4903"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4904"><highlight class="comment">/**<sp/>calculates<sp/>the<sp/>greatest<sp/>common<sp/>divisor<sp/>of<sp/>the<sp/>two<sp/>given<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4905"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4906"><highlight class="normal"><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref><sp/><ref refid="group__NumericalMethods_1ga09c76e8d696f37681aa4bd6d96618488" kindref="member">SCIPcalcGreComDiv</ref>(</highlight></codeline>
<codeline lineno="4907"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>value<sp/>of<sp/>greatest<sp/>common<sp/>devisor<sp/>calculation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4908"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>value<sp/>of<sp/>greatest<sp/>common<sp/>devisor<sp/>calculation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4909"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4910"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4911"><highlight class="comment">/**<sp/>calculates<sp/>the<sp/>smallest<sp/>common<sp/>multiple<sp/>of<sp/>the<sp/>two<sp/>given<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4912"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4913"><highlight class="normal"><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref><sp/><ref refid="group__NumericalMethods_1ga36422f92e6fe8eaed14484b069529f57" kindref="member">SCIPcalcSmaComMul</ref>(</highlight></codeline>
<codeline lineno="4914"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>value<sp/>of<sp/>smallest<sp/>common<sp/>multiple<sp/>calculation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4915"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>value<sp/>of<sp/>smallest<sp/>common<sp/>multiple<sp/>calculation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4916"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4917"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4918"><highlight class="comment">/**<sp/>converts<sp/>a<sp/>real<sp/>number<sp/>into<sp/>a<sp/>(approximate)<sp/>rational<sp/>representation,<sp/>and<sp/>returns<sp/>TRUE<sp/>iff<sp/>the<sp/>conversion<sp/>was</highlight></codeline>
<codeline lineno="4919"><highlight class="comment"><sp/>*<sp/><sp/>successful</highlight></codeline>
<codeline lineno="4920"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4921"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4922"><highlight class="normal"><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><ref refid="group__NumericalMethods_1ga7af717ac8e971d41e58aac8c395c73b5" kindref="member">SCIPrealToRational</ref>(</highlight></codeline>
<codeline lineno="4923"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>real<sp/>value<sp/>r<sp/>to<sp/>convert<sp/>into<sp/>rational<sp/>number<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4924"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mindelta,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>minimal<sp/>allowed<sp/>difference<sp/>r<sp/>-<sp/>q<sp/>of<sp/>real<sp/>r<sp/>and<sp/>rational<sp/>q<sp/>=<sp/>n/d<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4925"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxdelta,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>maximal<sp/>allowed<sp/>difference<sp/>r<sp/>-<sp/>q<sp/>of<sp/>real<sp/>r<sp/>and<sp/>rational<sp/>q<sp/>=<sp/>n/d<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4926"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxdnom,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>maximal<sp/>denominator<sp/>allowed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4927"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nominator,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>nominator<sp/>n<sp/>of<sp/>the<sp/>rational<sp/>number<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4928"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>denominator<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>denominator<sp/>d<sp/>of<sp/>the<sp/>rational<sp/>number<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4929"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4930"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4931"><highlight class="comment">/**<sp/>tries<sp/>to<sp/>find<sp/>a<sp/>value,<sp/>such<sp/>that<sp/>all<sp/>given<sp/>values,<sp/>if<sp/>scaled<sp/>with<sp/>this<sp/>value<sp/>become<sp/>integral<sp/>in<sp/>relative<sp/>allowed</highlight></codeline>
<codeline lineno="4932"><highlight class="comment"><sp/>*<sp/><sp/>difference<sp/>in<sp/>between<sp/>mindelta<sp/>and<sp/>maxdelta</highlight></codeline>
<codeline lineno="4933"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4934"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4935"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="group__NumericalMethods_1gae52e2432fc460ea70a34b4921655f669" kindref="member">SCIPcalcIntegralScalar</ref>(</highlight></codeline>
<codeline lineno="4936"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vals,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>values<sp/>to<sp/>scale<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4937"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nvals,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>number<sp/>of<sp/>values<sp/>to<sp/>scale<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4938"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mindelta,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>minimal<sp/>relative<sp/>allowed<sp/>difference<sp/>of<sp/>scaled<sp/>coefficient<sp/>s*c<sp/>and<sp/>integral<sp/>i<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4939"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxdelta,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>maximal<sp/>relative<sp/>allowed<sp/>difference<sp/>of<sp/>scaled<sp/>coefficient<sp/>s*c<sp/>and<sp/>integral<sp/>i<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4940"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxdnom,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>maximal<sp/>denominator<sp/>allowed<sp/>in<sp/>rational<sp/>numbers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4941"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxscale,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>maximal<sp/>allowed<sp/>scalar<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4942"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intscalar,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>scalar<sp/>that<sp/>would<sp/>make<sp/>the<sp/>coefficients<sp/>integral,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4943"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>success<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>stores<sp/>whether<sp/>returned<sp/>value<sp/>is<sp/>valid<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4944"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4945"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4946"><highlight class="comment">/**<sp/>given<sp/>a<sp/>(usually<sp/>very<sp/>small)<sp/>interval,<sp/>tries<sp/>to<sp/>find<sp/>a<sp/>rational<sp/>number<sp/>with<sp/>simple<sp/>denominator<sp/>(i.e.<sp/>a<sp/>small</highlight></codeline>
<codeline lineno="4947"><highlight class="comment"><sp/>*<sp/><sp/>number,<sp/>probably<sp/>multiplied<sp/>with<sp/>powers<sp/>of<sp/>10)<sp/>out<sp/>of<sp/>this<sp/>interval;<sp/>returns<sp/>TRUE<sp/>iff<sp/>a<sp/>valid<sp/>rational</highlight></codeline>
<codeline lineno="4948"><highlight class="comment"><sp/>*<sp/><sp/>number<sp/>inside<sp/>the<sp/>interval<sp/>was<sp/>found</highlight></codeline>
<codeline lineno="4949"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4950"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4951"><highlight class="normal"><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><ref refid="group__NumericalMethods_1gafc5af4af98dabe979112c4825963dd95" kindref="member">SCIPfindSimpleRational</ref>(</highlight></codeline>
<codeline lineno="4952"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lb,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>lower<sp/>bound<sp/>of<sp/>the<sp/>interval<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4953"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ub,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>upper<sp/>bound<sp/>of<sp/>the<sp/>interval<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4954"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxdnom,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>maximal<sp/>denominator<sp/>allowed<sp/>for<sp/>resulting<sp/>rational<sp/>number<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4955"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nominator,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>nominator<sp/>n<sp/>of<sp/>the<sp/>rational<sp/>number<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4956"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>denominator<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>denominator<sp/>d<sp/>of<sp/>the<sp/>rational<sp/>number<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4957"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4958"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4959"><highlight class="comment">/**<sp/>given<sp/>a<sp/>(usually<sp/>very<sp/>small)<sp/>interval,<sp/>selects<sp/>a<sp/>value<sp/>inside<sp/>this<sp/>interval;<sp/>it<sp/>is<sp/>tried<sp/>to<sp/>select<sp/>a<sp/>rational<sp/>number</highlight></codeline>
<codeline lineno="4960"><highlight class="comment"><sp/>*<sp/><sp/>with<sp/>simple<sp/>denominator<sp/>(i.e.<sp/>a<sp/>small<sp/>number,<sp/>probably<sp/>multiplied<sp/>with<sp/>powers<sp/>of<sp/>10);</highlight></codeline>
<codeline lineno="4961"><highlight class="comment"><sp/>*<sp/><sp/>if<sp/>no<sp/>valid<sp/>rational<sp/>number<sp/>inside<sp/>the<sp/>interval<sp/>was<sp/>found,<sp/>selects<sp/>the<sp/>central<sp/>value<sp/>of<sp/>the<sp/>interval</highlight></codeline>
<codeline lineno="4962"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4963"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4964"><highlight class="normal"><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><ref refid="group__NumericalMethods_1ga80d505d09eb06daa3e1d18454554dbd3" kindref="member">SCIPselectSimpleValue</ref>(</highlight></codeline>
<codeline lineno="4965"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lb,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>lower<sp/>bound<sp/>of<sp/>the<sp/>interval<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4966"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ub,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>upper<sp/>bound<sp/>of<sp/>the<sp/>interval<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4967"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxdnom<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>maximal<sp/>denominator<sp/>allowed<sp/>for<sp/>resulting<sp/>rational<sp/>number<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4968"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4969"><highlight class="normal"></highlight></codeline>
<codeline lineno="4970"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>C99<sp/>standard<sp/>defines<sp/>the<sp/>function<sp/>(or<sp/>macro)<sp/>isfinite.</highlight></codeline>
<codeline lineno="4971"><highlight class="comment"><sp/>*<sp/>On<sp/>MacOS<sp/>X,<sp/>isfinite<sp/>is<sp/>also<sp/>available.</highlight></codeline>
<codeline lineno="4972"><highlight class="comment"><sp/>*<sp/>From<sp/>the<sp/>BSD<sp/>world,<sp/>there<sp/>comes<sp/>a<sp/>function<sp/>finite.</highlight></codeline>
<codeline lineno="4973"><highlight class="comment"><sp/>*<sp/>On<sp/>SunOS,<sp/>finite<sp/>is<sp/>also<sp/>available.</highlight></codeline>
<codeline lineno="4974"><highlight class="comment"><sp/>*<sp/>In<sp/>the<sp/>MS<sp/>compiler<sp/>world,<sp/>there<sp/>is<sp/>a<sp/>function<sp/>_finite.</highlight></codeline>
<codeline lineno="4975"><highlight class="comment"><sp/>*<sp/>As<sp/>last<sp/>resort,<sp/>we<sp/>check<sp/>whether<sp/>x<sp/>==<sp/>x<sp/>does<sp/>not<sp/>hold,<sp/>but<sp/>this<sp/>works<sp/>only<sp/>for<sp/>NaN&apos;s,<sp/>not<sp/>for<sp/>infinities!</highlight></codeline>
<codeline lineno="4976"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4977"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>_XOPEN_SOURCE<sp/>&gt;=<sp/>600<sp/>||<sp/>defined(_ISOC99_SOURCE)<sp/>||<sp/>_POSIX_C_SOURCE<sp/>&gt;=<sp/>200112L<sp/>||<sp/>defined(__APPLE__)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4978"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCIPisFinite<sp/>isfinite</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4979"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(_BSD_SOURCE)<sp/>||<sp/>defined(__sun)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4980"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCIPisFinite<sp/>finite</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4981"><highlight class="normal"></highlight><highlight class="preprocessor">#elif<sp/>defined(_MSC_VER)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4982"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCIPisFinite<sp/>_finite</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4983"><highlight class="normal"></highlight><highlight class="preprocessor">#else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4984" refid="group__NumericalMethods_1ga1c0f12e349cb69625d9d7fe9441c47b5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCIPisFinite(x)<sp/>((x)<sp/>==<sp/>(x))</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4985"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4986"><highlight class="normal"></highlight></codeline>
<codeline lineno="4987"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>In<sp/>debug<sp/>mode,<sp/>the<sp/>following<sp/>methods<sp/>are<sp/>implemented<sp/>as<sp/>function<sp/>calls<sp/>to<sp/>ensure</highlight></codeline>
<codeline lineno="4988"><highlight class="comment"><sp/>*<sp/>type<sp/>validity.</highlight></codeline>
<codeline lineno="4989"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4990"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4991"><highlight class="comment">/**<sp/>returns<sp/>the<sp/>relative<sp/>difference:<sp/>(val1-val2)/max(|val1|,|val2|,1.0)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4992"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4993"><highlight class="normal"><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><ref refid="group__NumericalMethods_1gaee193fe9f075f6b12914b1ea9243a9d4" kindref="member">SCIPrelDiff</ref>(</highlight></codeline>
<codeline lineno="4994"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>value<sp/>to<sp/>be<sp/>compared<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4995"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>value<sp/>to<sp/>be<sp/>compared<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4996"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="4997"><highlight class="normal"></highlight></codeline>
<codeline lineno="4998"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>NDEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4999"><highlight class="normal"></highlight></codeline>
<codeline lineno="5000"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>In<sp/>optimized<sp/>mode,<sp/>the<sp/>function<sp/>calls<sp/>are<sp/>overwritten<sp/>by<sp/>defines<sp/>to<sp/>reduce<sp/>the<sp/>number<sp/>of<sp/>function<sp/>calls<sp/>and</highlight></codeline>
<codeline lineno="5001"><highlight class="comment"><sp/>*<sp/>speed<sp/>up<sp/>the<sp/>algorithms.</highlight></codeline>
<codeline lineno="5002"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5003"><highlight class="normal"></highlight></codeline>
<codeline lineno="5004"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCIPrelDiff(val1,<sp/>val2)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>(<sp/>((val1)-(val2))/(MAX3(1.0,REALABS(val1),REALABS(val2)))<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5005"><highlight class="normal"></highlight></codeline>
<codeline lineno="5006"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5007"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="5008"><highlight class="comment">/**@}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5009"><highlight class="normal"></highlight></codeline>
<codeline lineno="5010"><highlight class="normal"></highlight></codeline>
<codeline lineno="5011"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="5012"><highlight class="comment"><sp/>*<sp/>Random<sp/>Numbers</highlight></codeline>
<codeline lineno="5013"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5014"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="5015"><highlight class="comment">/**@defgroup<sp/>RandomNumbers<sp/>Random<sp/>Numbers</highlight></codeline>
<codeline lineno="5016"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5017"><highlight class="comment"><sp/>*@{</highlight></codeline>
<codeline lineno="5018"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5019"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="5020"><highlight class="comment">/**<sp/>returns<sp/>a<sp/>random<sp/>integer<sp/>between<sp/>minrandval<sp/>and<sp/>maxrandval<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5021"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5022"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__RandomNumbers_1gab8df37df07fa33ef9d01039302594a4e" kindref="member">SCIPgetRandomInt</ref>(</highlight></codeline>
<codeline lineno="5023"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minrandval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>minimal<sp/>value<sp/>to<sp/>return<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5024"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxrandval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>maximal<sp/>value<sp/>to<sp/>return<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5025"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seedp<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>seed<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5026"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="5027"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="5028"><highlight class="comment">/**<sp/>returns<sp/>a<sp/>random<sp/>real<sp/>between<sp/>minrandval<sp/>and<sp/>maxrandval<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5029"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5030"><highlight class="normal"><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><ref refid="group__RandomNumbers_1gadb68c7526c5d93416b08093b710fd25e" kindref="member">SCIPgetRandomReal</ref>(</highlight></codeline>
<codeline lineno="5031"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>minrandval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>minimal<sp/>value<sp/>to<sp/>return<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5032"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>maxrandval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>maximal<sp/>value<sp/>to<sp/>return<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5033"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>seedp<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>seed<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5034"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="5035"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="5036"><highlight class="comment">/**@}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5037"><highlight class="normal"></highlight></codeline>
<codeline lineno="5038"><highlight class="normal"></highlight></codeline>
<codeline lineno="5039"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="5040"><highlight class="comment"><sp/>*<sp/>Additional<sp/>math<sp/>functions</highlight></codeline>
<codeline lineno="5041"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5042"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="5043"><highlight class="comment">/**@defgroup<sp/>AdditionalMathFunctions<sp/>Additional<sp/>math<sp/>functions</highlight></codeline>
<codeline lineno="5044"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5045"><highlight class="comment"><sp/>*@{</highlight></codeline>
<codeline lineno="5046"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5047"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="5048"><highlight class="comment">/**<sp/>calculates<sp/>a<sp/>binomial<sp/>coefficient<sp/>n<sp/>over<sp/>m,<sp/>choose<sp/>m<sp/>elements<sp/>out<sp/>of<sp/>n,<sp/>maximal<sp/>value<sp/>will<sp/>be<sp/>33<sp/>over<sp/>16<sp/>(because</highlight></codeline>
<codeline lineno="5049"><highlight class="comment"><sp/>*<sp/><sp/>the<sp/>n=33<sp/>is<sp/>the<sp/>last<sp/>line<sp/>in<sp/>the<sp/>Pascal&apos;s<sp/>triangle<sp/>where<sp/>each<sp/>entry<sp/>fits<sp/>in<sp/>a<sp/>4<sp/>byte<sp/>value),<sp/>an<sp/>error<sp/>occurs<sp/>due<sp/>to</highlight></codeline>
<codeline lineno="5050"><highlight class="comment"><sp/>*<sp/><sp/>big<sp/>numbers<sp/>or<sp/>an<sp/>negative<sp/>value<sp/>m<sp/>(and<sp/>m<sp/>&lt;<sp/>n)<sp/>and<sp/>-1<sp/>will<sp/>be<sp/>returned</highlight></codeline>
<codeline lineno="5051"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5052"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5053"><highlight class="normal"><ref refid="def_8h_1a1e6171040084cc1f39f88e386238ee10" kindref="member">SCIP_Longint</ref><sp/><ref refid="group__AdditionalMathFunctions_1ga120213bce932ebd1100a1916b40d3f50" kindref="member">SCIPcalcBinomCoef</ref>(</highlight></codeline>
<codeline lineno="5054"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>n,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>number<sp/>of<sp/>different<sp/>elements<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5055"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>number<sp/>to<sp/>choose<sp/>out<sp/>of<sp/>the<sp/>above<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5056"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="5057"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="5058"><highlight class="comment">/**@}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5059"><highlight class="normal"></highlight></codeline>
<codeline lineno="5060"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="5061"><highlight class="comment"><sp/>*<sp/>Permutations<sp/>/<sp/>Shuffling</highlight></codeline>
<codeline lineno="5062"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5063"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="5064"><highlight class="comment">/**@defgroup<sp/>PermutationsShuffling<sp/>Permutations<sp/>Shuffling</highlight></codeline>
<codeline lineno="5065"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5066"><highlight class="comment"><sp/>*@{</highlight></codeline>
<codeline lineno="5067"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5068"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="5069"><highlight class="comment">/**<sp/>swaps<sp/>two<sp/>ints<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5070"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5071"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__PermutationsShuffling_1ga18b8efe66f3adeeea73bd842b1a645ff" kindref="member">SCIPswapInts</ref>(</highlight></codeline>
<codeline lineno="5072"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>first<sp/>integer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5073"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>ti<sp/>second<sp/>integer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5074"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="5075"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="5076"><highlight class="comment">/**<sp/>swaps<sp/>the<sp/>addresses<sp/>of<sp/>two<sp/>pointers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5077"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5078"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__PermutationsShuffling_1ga431f86e1ef3e1500066fec3e3a4ace6d" kindref="member">SCIPswapPointers</ref>(</highlight></codeline>
<codeline lineno="5079"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointer1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5080"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pointer2<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>second<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5081"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="5082"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="5083"><highlight class="comment">/**<sp/>randomly<sp/>shuffles<sp/>parts<sp/>of<sp/>an<sp/>integer<sp/>array<sp/>using<sp/>the<sp/>Fisher-Yates<sp/>algorithm<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5084"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5085"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__PermutationsShuffling_1gac175082263a25d9ca1a1824c36e96ecf" kindref="member">SCIPpermuteIntArray</ref>(</highlight></codeline>
<codeline lineno="5086"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>array,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>to<sp/>be<sp/>shuffled<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5087"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>begin,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>index<sp/>that<sp/>should<sp/>be<sp/>subject<sp/>to<sp/>shuffling<sp/>(0<sp/>for<sp/>whole<sp/>array)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5088"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>last<sp/>index<sp/>that<sp/>should<sp/>be<sp/>subject<sp/>to<sp/>shuffling<sp/>(array<sp/>size<sp/>for<sp/>whole</highlight></codeline>
<codeline lineno="5089"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>array)</highlight></codeline>
<codeline lineno="5090"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5091"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>randseed<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>seed<sp/>value<sp/>for<sp/>the<sp/>random<sp/>generator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5092"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="5093"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="5094"><highlight class="comment">/**<sp/>randomly<sp/>shuffles<sp/>parts<sp/>of<sp/>an<sp/>array<sp/>using<sp/>the<sp/>Fisher-Yates<sp/>algorithm<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5095"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5096"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__PermutationsShuffling_1ga6ec4d1af1c69541e0f01d439e6fb0398" kindref="member">SCIPpermuteArray</ref>(</highlight></codeline>
<codeline lineno="5097"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>array,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>to<sp/>be<sp/>shuffled<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5098"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>begin,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>index<sp/>that<sp/>should<sp/>be<sp/>subject<sp/>to<sp/>shuffling<sp/>(0<sp/>for<sp/>whole<sp/>array)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5099"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>end,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>last<sp/>index<sp/>that<sp/>should<sp/>be<sp/>subject<sp/>to<sp/>shuffling<sp/>(array<sp/>size<sp/>for<sp/>whole</highlight></codeline>
<codeline lineno="5100"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>array)</highlight></codeline>
<codeline lineno="5101"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5102"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>randseed<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>seed<sp/>value<sp/>for<sp/>the<sp/>random<sp/>generator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5103"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="5104"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="5105"><highlight class="comment">/**<sp/>draws<sp/>a<sp/>random<sp/>subset<sp/>of<sp/>disjoint<sp/>elements<sp/>from<sp/>a<sp/>given<sp/>set<sp/>of<sp/>disjoint<sp/>elements;</highlight></codeline>
<codeline lineno="5106"><highlight class="comment"><sp/>*<sp/><sp/>this<sp/>implementation<sp/>is<sp/>suited<sp/>for<sp/>the<sp/>case<sp/>that<sp/>nsubelems<sp/>is<sp/>considerably<sp/>smaller<sp/>then<sp/>nelems</highlight></codeline>
<codeline lineno="5107"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5108"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5109"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="group__PermutationsShuffling_1ga384de3f49754bbba1ca3dc87549f3027" kindref="member">SCIPgetRandomSubset</ref>(</highlight></codeline>
<codeline lineno="5110"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>set,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>original<sp/>set,<sp/>from<sp/>which<sp/>elements<sp/>should<sp/>be<sp/>drawn<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5111"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nelems,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>number<sp/>of<sp/>elements<sp/>in<sp/>original<sp/>set<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5112"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>subset,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>subset<sp/>in<sp/>which<sp/>drawn<sp/>elements<sp/>should<sp/>be<sp/>stored<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5113"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nsubelems,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>number<sp/>of<sp/>elements<sp/>that<sp/>should<sp/>be<sp/>drawn<sp/>and<sp/>stored<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5114"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>randseed<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>seed<sp/>value<sp/>for<sp/>random<sp/>generator<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5115"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="5116"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="5117"><highlight class="comment">/**@}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5118"><highlight class="normal"></highlight></codeline>
<codeline lineno="5119"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="5120"><highlight class="comment"><sp/>*<sp/>Strings</highlight></codeline>
<codeline lineno="5121"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5122"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="5123"><highlight class="comment">/**@defgroup<sp/>StringMethods<sp/>String<sp/>Methods</highlight></codeline>
<codeline lineno="5124"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5125"><highlight class="comment"><sp/>*@{</highlight></codeline>
<codeline lineno="5126"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5127"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="5128"><highlight class="comment">/**<sp/>copies<sp/>characters<sp/>from<sp/>&apos;src&apos;<sp/>to<sp/>&apos;dest&apos;,<sp/>copying<sp/>is<sp/>stopped<sp/>when<sp/>either<sp/>the<sp/>&apos;stop&apos;<sp/>character<sp/>is<sp/>reached<sp/>or<sp/>after</highlight></codeline>
<codeline lineno="5129"><highlight class="comment"><sp/>*<sp/><sp/>&apos;cnt&apos;<sp/>characters<sp/>have<sp/>been<sp/>copied,<sp/>whichever<sp/>comes<sp/>first.</highlight></codeline>
<codeline lineno="5130"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5131"><highlight class="comment"><sp/>*<sp/><sp/>@note<sp/>undefined<sp/>behaviuor<sp/>on<sp/>overlapping<sp/>arrays</highlight></codeline>
<codeline lineno="5132"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5133"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5134"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__StringMethods_1gadfc413b0c78b3d68f34895dae202c958" kindref="member">SCIPmemccpy</ref>(</highlight></codeline>
<codeline lineno="5135"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>destination<sp/>pointer<sp/>to<sp/>copy<sp/>to<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5136"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>src,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>source<sp/>pointer<sp/>to<sp/>copy<sp/>to<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5137"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stop,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>character<sp/>when<sp/>found<sp/>stop<sp/>copying<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5138"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cnt<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>maximal<sp/>number<sp/>of<sp/>characters<sp/>to<sp/>copy<sp/>too<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5139"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="5140"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="5141"><highlight class="comment">/**<sp/>prints<sp/>an<sp/>error<sp/>message<sp/>containing<sp/>of<sp/>the<sp/>given<sp/>string<sp/>followed<sp/>by<sp/>a<sp/>string<sp/>describing<sp/>the<sp/>current<sp/>system<sp/>error;</highlight></codeline>
<codeline lineno="5142"><highlight class="comment"><sp/>*<sp/><sp/>prefers<sp/>to<sp/>use<sp/>the<sp/>strerror_r<sp/>method,<sp/>which<sp/>is<sp/>threadsafe;<sp/>on<sp/>systems<sp/>where<sp/>this<sp/>method<sp/>does<sp/>not<sp/>exist,</highlight></codeline>
<codeline lineno="5143"><highlight class="comment"><sp/>*<sp/><sp/>NO_STRERROR_R<sp/>should<sp/>be<sp/>defined<sp/>(see<sp/>INSTALL),<sp/>in<sp/>this<sp/>case,<sp/>srerror<sp/>is<sp/>used<sp/>which<sp/>is<sp/>not<sp/>guaranteed<sp/>to<sp/>be</highlight></codeline>
<codeline lineno="5144"><highlight class="comment"><sp/>*<sp/><sp/>threadsafe<sp/>(on<sp/>SUN-systems,<sp/>it<sp/>actually<sp/>is)<sp/></highlight></codeline>
<codeline lineno="5145"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5146"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5147"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__StringMethods_1ga5e2316e35529d93dbfa735b10664e07c" kindref="member">SCIPprintSysError</ref>(</highlight></codeline>
<codeline lineno="5148"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>message<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>part<sp/>of<sp/>the<sp/>error<sp/>message,<sp/>e.g.<sp/>the<sp/>filename<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5149"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="5150"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="5151"><highlight class="comment">/**<sp/>extracts<sp/>tokens<sp/>from<sp/>strings<sp/>-<sp/>wrapper<sp/>method<sp/>for<sp/>strtok_r()<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5152"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5153"><highlight class="normal"></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="group__StringMethods_1gaadc7dc75eacf8821453262816efbb912" kindref="member">SCIPstrtok</ref>(</highlight></codeline>
<codeline lineno="5154"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>string<sp/>to<sp/>parse<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5155"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>delim,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>delimiters<sp/>for<sp/>parsing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5156"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ptrptr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>working<sp/>char<sp/>pointer<sp/>-<sp/>must<sp/>stay<sp/>the<sp/>same<sp/>while<sp/>parsing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5157"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="5158"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="5159"><highlight class="comment">/**<sp/>translates<sp/>the<sp/>given<sp/>string<sp/>into<sp/>a<sp/>string<sp/>where<sp/>symbols<sp/>&quot;,<sp/>&apos;,<sp/>and<sp/>spaces<sp/>are<sp/>escaped<sp/>with<sp/>a<sp/>\<sp/>prefix<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5160"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5161"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__StringMethods_1ga4123f87ca6ab7b2d52977ad740976c34" kindref="member">SCIPescapeString</ref>(</highlight></codeline>
<codeline lineno="5162"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>target<sp/>buffer<sp/>to<sp/>store<sp/>escaped<sp/>string<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5163"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bufsize,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>size<sp/>of<sp/>buffer<sp/>t<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5164"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>string<sp/>to<sp/>transform<sp/>into<sp/>escaped<sp/>string<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5165"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="5166"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="5167"><highlight class="comment">/**<sp/>safe<sp/>version<sp/>of<sp/>snprintf<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5168"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5169"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="group__StringMethods_1ga12978de6e896abef8c5784a521d6326b" kindref="member">SCIPsnprintf</ref>(</highlight></codeline>
<codeline lineno="5170"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>t,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>target<sp/>string<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5171"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>len,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>length<sp/>of<sp/>the<sp/>string<sp/>to<sp/>copy<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5172"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>s,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>source<sp/>string<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5173"><highlight class="normal"><sp/><sp/><sp/>...<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>further<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5174"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="5175"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="5176"><highlight class="comment">/**<sp/>extract<sp/>the<sp/>next<sp/>token<sp/>as<sp/>a<sp/>integer<sp/>value<sp/>if<sp/>it<sp/>is<sp/>one;<sp/>in<sp/>case<sp/>no<sp/>value<sp/>is<sp/>parsed<sp/>the<sp/>endptr<sp/>is<sp/>set<sp/>to<sp/>@p<sp/>str</highlight></codeline>
<codeline lineno="5177"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5178"><highlight class="comment"><sp/>*<sp/><sp/>@return<sp/>Returns<sp/>TRUE<sp/>if<sp/>a<sp/>value<sp/>could<sp/>be<sp/>extracted,<sp/>otherwise<sp/>FALSE</highlight></codeline>
<codeline lineno="5179"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5180"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5181"><highlight class="normal"><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><ref refid="group__StringMethods_1ga05b8771e48755de9eb571e888a086820" kindref="member">SCIPstrToIntValue</ref>(</highlight></codeline>
<codeline lineno="5182"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>string<sp/>to<sp/>search<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5183"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>parsed<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5184"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endptr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>final<sp/>string<sp/>position<sp/>if<sp/>successfully<sp/>parsed,<sp/>otherwise<sp/>@p<sp/>str<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5185"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="5186"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="5187"><highlight class="comment">/**<sp/>extract<sp/>the<sp/>next<sp/>token<sp/>as<sp/>a<sp/>double<sp/>value<sp/>if<sp/>it<sp/>is<sp/>one;<sp/>in<sp/>case<sp/>a<sp/>value<sp/>is<sp/>parsed<sp/>the<sp/>endptr<sp/>is<sp/>set<sp/>to<sp/>@p<sp/>str</highlight></codeline>
<codeline lineno="5188"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5189"><highlight class="comment"><sp/>*<sp/><sp/>@return<sp/>Returns<sp/>TRUE<sp/>if<sp/>a<sp/>value<sp/>could<sp/>be<sp/>extracted,<sp/>otherwise<sp/>FALSE</highlight></codeline>
<codeline lineno="5190"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5191"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5192"><highlight class="normal"><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><ref refid="group__StringMethods_1ga2d02c64c4ef4b1265a2764239e2de842" kindref="member">SCIPstrToRealValue</ref>(</highlight></codeline>
<codeline lineno="5193"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>string<sp/>to<sp/>search<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5194"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>value,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>parsed<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5195"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endptr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>final<sp/>string<sp/>position<sp/>if<sp/>successfully<sp/>parsed,<sp/>otherwise<sp/>@p<sp/>str<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5196"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="5197"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="5198"><highlight class="comment">/**<sp/>copies<sp/>the<sp/>first<sp/>size<sp/>characters<sp/>between<sp/>a<sp/>start<sp/>and<sp/>end<sp/>character<sp/>of<sp/>str<sp/>into<sp/>token,<sp/>if<sp/>no<sp/>error<sp/>occured<sp/>endptr</highlight></codeline>
<codeline lineno="5199"><highlight class="comment"><sp/>*<sp/><sp/>will<sp/>point<sp/>to<sp/>the<sp/>position<sp/>after<sp/>the<sp/>read<sp/>part,<sp/>otherwise<sp/>it<sp/>will<sp/>point<sp/>to<sp/>@p<sp/>str</highlight></codeline>
<codeline lineno="5200"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5201"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5202"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__StringMethods_1ga585e90a5b270e3bdda15d38ff49bbcf4" kindref="member">SCIPstrCopySection</ref>(</highlight></codeline>
<codeline lineno="5203"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>str,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>string<sp/>to<sp/>search<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5204"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>startchar,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>character<sp/>which<sp/>defines<sp/>the<sp/>beginning<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5205"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endchar,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>character<sp/>which<sp/>defines<sp/>the<sp/>ending<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5206"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>token,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>string<sp/>to<sp/>store<sp/>the<sp/>copy<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5207"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>size,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>size<sp/>of<sp/>the<sp/>token<sp/>char<sp/>array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5208"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>endptr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>final<sp/>string<sp/>position<sp/>if<sp/>successfully<sp/>parsed,<sp/>otherwise<sp/>@p<sp/>str<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5209"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="5210"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="5211"><highlight class="comment">/**@}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5212"><highlight class="normal"></highlight></codeline>
<codeline lineno="5213"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="5214"><highlight class="comment"><sp/>*<sp/>File<sp/>methods</highlight></codeline>
<codeline lineno="5215"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5216"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="5217"><highlight class="comment">/**@defgroup<sp/>FileMethods<sp/>File<sp/>Methods</highlight></codeline>
<codeline lineno="5218"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="5219"><highlight class="comment"><sp/>*@{</highlight></codeline>
<codeline lineno="5220"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5221"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="5222"><highlight class="comment">/**<sp/>returns,<sp/>whether<sp/>the<sp/>given<sp/>file<sp/>exists<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5223"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5224"><highlight class="normal"><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><ref refid="group__FileMethods_1ga26a194b806c67fca42015976a3b0b2ab" kindref="member">SCIPfileExists</ref>(</highlight></codeline>
<codeline lineno="5225"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filename<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>file<sp/>name<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5226"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="5227"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="5228"><highlight class="comment">/**<sp/>splits<sp/>filename<sp/>into<sp/>path,<sp/>name,<sp/>and<sp/>extension<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5229"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5230"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="group__FileMethods_1gae6ca8a02a5500ad60a834a41588f632b" kindref="member">SCIPsplitFilename</ref>(</highlight></codeline>
<codeline lineno="5231"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>filename,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>filename<sp/>to<sp/>split;<sp/>is<sp/>destroyed<sp/>(but<sp/>not<sp/>freed)<sp/>during<sp/>process<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5232"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>path,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>path,<sp/>or<sp/>NULL<sp/>if<sp/>not<sp/>needed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5233"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>name,<sp/>or<sp/>NULL<sp/>if<sp/>not<sp/>needed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5234"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>extension,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>extension,<sp/>or<sp/>NULL<sp/>if<sp/>not<sp/>needed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5235"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>compression<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>compression<sp/>extension,<sp/>or<sp/>NULL<sp/>if<sp/>not<sp/>needed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5236"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="5237"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="5238"><highlight class="comment">/**@}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5239"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="5240"><highlight class="comment">/**@}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5241"><highlight class="normal"></highlight></codeline>
<codeline lineno="5242"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5243"><highlight class="normal">}</highlight></codeline>
<codeline lineno="5244"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5245"><highlight class="normal"></highlight></codeline>
<codeline lineno="5246"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/pub_misc.h"/>
  </compounddef>
</doxygen>
