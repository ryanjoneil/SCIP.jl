<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="cons__sos2_8h" kind="file" language="C++">
    <compoundname>cons_sos2.h</compoundname>
    <includes refid="scip_8h" local="yes">scip/scip.h</includes>
    <includedby refid="scipdefplugins_8h" local="yes">scipdefplugins.h</includedby>
    <incdepgraph>
      <node id="3061">
        <label>scip/type_pricer.h</label>
        <link refid="type__pricer_8h"/>
        <childnode refid="3027" relation="include">
        </childnode>
        <childnode refid="3033" relation="include">
        </childnode>
        <childnode refid="3042" relation="include">
        </childnode>
      </node>
      <node id="3035">
        <label>stdarg.h</label>
      </node>
      <node id="3103">
        <label>scip/intervalarith.h</label>
      </node>
      <node id="3045">
        <label>scip/type_lp.h</label>
        <link refid="type__lp_8h"/>
      </node>
      <node id="3092">
        <label>scip/pub_pricer.h</label>
        <link refid="pub__pricer_8h"/>
        <childnode refid="3027" relation="include">
        </childnode>
        <childnode refid="3040" relation="include">
        </childnode>
        <childnode refid="3061" relation="include">
        </childnode>
      </node>
      <node id="3084">
        <label>scip/type_set.h</label>
        <link refid="type__set_8h"/>
      </node>
      <node id="3032">
        <label>assert.h</label>
      </node>
      <node id="3031">
        <label>float.h</label>
      </node>
      <node id="3046">
        <label>scip/type_nlp.h</label>
        <link refid="type__nlp_8h"/>
      </node>
      <node id="3052">
        <label>scip/type_cons.h</label>
        <link refid="type__cons_8h"/>
        <childnode refid="3027" relation="include">
        </childnode>
        <childnode refid="3033" relation="include">
        </childnode>
        <childnode refid="3038" relation="include">
        </childnode>
        <childnode refid="3047" relation="include">
        </childnode>
        <childnode refid="3053" relation="include">
        </childnode>
        <childnode refid="3042" relation="include">
        </childnode>
        <childnode refid="3041" relation="include">
        </childnode>
        <childnode refid="3054" relation="include">
        </childnode>
      </node>
      <node id="3082">
        <label>scip/type_implics.h</label>
        <link refid="type__implics_8h"/>
      </node>
      <node id="3098">
        <label>scip/pub_tree.h</label>
        <link refid="pub__tree_8h"/>
        <childnode refid="3027" relation="include">
        </childnode>
        <childnode refid="3040" relation="include">
        </childnode>
        <childnode refid="3049" relation="include">
        </childnode>
        <childnode refid="3099" relation="include">
        </childnode>
      </node>
      <node id="3070">
        <label>scip/pub_cons.h</label>
        <link refid="pub__cons_8h"/>
        <childnode refid="3027" relation="include">
        </childnode>
        <childnode refid="3040" relation="include">
        </childnode>
        <childnode refid="3052" relation="include">
        </childnode>
      </node>
      <node id="3050">
        <label>scip/type_branch.h</label>
        <link refid="type__branch_8h"/>
        <childnode refid="3027" relation="include">
        </childnode>
        <childnode refid="3038" relation="include">
        </childnode>
        <childnode refid="3042" relation="include">
        </childnode>
      </node>
      <node id="3028">
        <label>stdint.h</label>
      </node>
      <node id="3038">
        <label>scip/type_result.h</label>
        <link refid="type__result_8h"/>
      </node>
      <node id="3076">
        <label>scip/pub_fileio.h</label>
        <link refid="pub__fileio_8h"/>
        <childnode refid="3077" relation="include">
        </childnode>
        <childnode refid="3027" relation="include">
        </childnode>
      </node>
      <node id="3041">
        <label>scip/type_timing.h</label>
        <link refid="type__timing_8h"/>
        <childnode refid="3027" relation="include">
        </childnode>
        <childnode refid="3038" relation="include">
        </childnode>
        <childnode refid="3042" relation="include">
        </childnode>
      </node>
      <node id="3089">
        <label>scip/pub_nodesel.h</label>
        <link refid="pub__nodesel_8h"/>
        <childnode refid="3027" relation="include">
        </childnode>
        <childnode refid="3059" relation="include">
        </childnode>
      </node>
      <node id="3075">
        <label>scip/pub_event.h</label>
        <link refid="pub__event_8h"/>
        <childnode refid="3027" relation="include">
        </childnode>
        <childnode refid="3033" relation="include">
        </childnode>
        <childnode refid="3044" relation="include">
        </childnode>
        <childnode refid="3047" relation="include">
        </childnode>
        <childnode refid="3053" relation="include">
        </childnode>
        <childnode refid="3049" relation="include">
        </childnode>
      </node>
      <node id="3055">
        <label>scip/type_dialog.h</label>
        <link refid="type__dialog_8h"/>
        <childnode refid="3027" relation="include">
        </childnode>
        <childnode refid="3033" relation="include">
        </childnode>
        <childnode refid="3042" relation="include">
        </childnode>
      </node>
      <node id="3042">
        <label>scip/type_scip.h</label>
        <link refid="type__scip_8h"/>
      </node>
      <node id="3027">
        <label>scip/def.h</label>
        <link refid="def_8h"/>
        <childnode refid="3026" relation="include">
        </childnode>
        <childnode refid="3028" relation="include">
        </childnode>
        <childnode refid="3029" relation="include">
        </childnode>
        <childnode refid="3030" relation="include">
        </childnode>
        <childnode refid="3031" relation="include">
        </childnode>
        <childnode refid="3032" relation="include">
        </childnode>
        <childnode refid="3033" relation="include">
        </childnode>
        <childnode refid="3034" relation="include">
        </childnode>
      </node>
      <node id="3093">
        <label>scip/pub_reader.h</label>
        <link refid="pub__reader_8h"/>
        <childnode refid="3027" relation="include">
        </childnode>
        <childnode refid="3062" relation="include">
        </childnode>
      </node>
      <node id="3024">
        <label>cons_sos2.h</label>
        <link refid="cons_sos2.h"/>
        <childnode refid="3025" relation="include">
        </childnode>
      </node>
      <node id="3077">
        <label>stddef.h</label>
      </node>
      <node id="3065">
        <label>scip/type_prop.h</label>
        <link refid="type__prop_8h"/>
        <childnode refid="3027" relation="include">
        </childnode>
        <childnode refid="3033" relation="include">
        </childnode>
        <childnode refid="3038" relation="include">
        </childnode>
        <childnode refid="3042" relation="include">
        </childnode>
        <childnode refid="3041" relation="include">
        </childnode>
      </node>
      <node id="3091">
        <label>scip/pub_presol.h</label>
        <link refid="pub__presol_8h"/>
        <childnode refid="3027" relation="include">
        </childnode>
        <childnode refid="3040" relation="include">
        </childnode>
        <childnode refid="3060" relation="include">
        </childnode>
      </node>
      <node id="3058">
        <label>scip/type_history.h</label>
        <link refid="type__history_8h"/>
      </node>
      <node id="3072">
        <label>scip/type_cutpool.h</label>
        <link refid="type__cutpool_8h"/>
      </node>
      <node id="3049">
        <label>scip/type_tree.h</label>
        <link refid="type__tree_8h"/>
      </node>
      <node id="3030">
        <label>limits.h</label>
      </node>
      <node id="3064">
        <label>scip/type_sepa.h</label>
        <link refid="type__sepa_8h"/>
        <childnode refid="3027" relation="include">
        </childnode>
        <childnode refid="3033" relation="include">
        </childnode>
        <childnode refid="3038" relation="include">
        </childnode>
        <childnode refid="3053" relation="include">
        </childnode>
        <childnode refid="3042" relation="include">
        </childnode>
      </node>
      <node id="3054">
        <label>scip/type_heur.h</label>
        <link refid="type__heur_8h"/>
        <childnode refid="3027" relation="include">
        </childnode>
        <childnode refid="3042" relation="include">
        </childnode>
        <childnode refid="3038" relation="include">
        </childnode>
        <childnode refid="3041" relation="include">
        </childnode>
      </node>
      <node id="3053">
        <label>scip/type_sol.h</label>
        <link refid="type__sol_8h"/>
      </node>
      <node id="3067">
        <label>nlpi/type_expr.h</label>
        <link refid="type__expr_8h"/>
      </node>
      <node id="3085">
        <label>scip/type_stat.h</label>
        <link refid="type__stat_8h"/>
      </node>
      <node id="3059">
        <label>scip/type_nodesel.h</label>
        <link refid="type__nodesel_8h"/>
        <childnode refid="3027" relation="include">
        </childnode>
        <childnode refid="3033" relation="include">
        </childnode>
        <childnode refid="3049" relation="include">
        </childnode>
        <childnode refid="3042" relation="include">
        </childnode>
      </node>
      <node id="3105">
        <label>scip/presolve.h</label>
      </node>
      <node id="3039">
        <label>scip/type_clock.h</label>
        <link refid="type__clock_8h"/>
        <childnode refid="3027" relation="include">
        </childnode>
      </node>
      <node id="3040">
        <label>scip/type_misc.h</label>
        <link refid="type__misc_8h"/>
        <childnode refid="3027" relation="include">
        </childnode>
      </node>
      <node id="3078">
        <label>scip/pub_heur.h</label>
        <link refid="pub__heur_8h"/>
        <childnode refid="3027" relation="include">
        </childnode>
        <childnode refid="3040" relation="include">
        </childnode>
        <childnode refid="3054" relation="include">
        </childnode>
      </node>
      <node id="3056">
        <label>scip/type_disp.h</label>
        <link refid="type__disp_8h"/>
        <childnode refid="3026" relation="include">
        </childnode>
        <childnode refid="3027" relation="include">
        </childnode>
        <childnode refid="3033" relation="include">
        </childnode>
        <childnode refid="3042" relation="include">
        </childnode>
      </node>
      <node id="3095">
        <label>scip/pub_sepa.h</label>
        <link refid="pub__sepa_8h"/>
        <childnode refid="3027" relation="include">
        </childnode>
        <childnode refid="3040" relation="include">
        </childnode>
        <childnode refid="3064" relation="include">
        </childnode>
      </node>
      <node id="3102">
        <label>nlpi/pub_expr.h</label>
        <link refid="pub__expr_8h"/>
        <childnode refid="3027" relation="include">
        </childnode>
        <childnode refid="3034" relation="include">
        </childnode>
        <childnode refid="3103" relation="include">
        </childnode>
        <childnode refid="3037" relation="include">
        </childnode>
        <childnode refid="3067" relation="include">
        </childnode>
        <childnode refid="3104" relation="include">
        </childnode>
      </node>
      <node id="3063">
        <label>scip/type_relax.h</label>
        <link refid="type__relax_8h"/>
        <childnode refid="3027" relation="include">
        </childnode>
        <childnode refid="3033" relation="include">
        </childnode>
        <childnode refid="3038" relation="include">
        </childnode>
        <childnode refid="3042" relation="include">
        </childnode>
      </node>
      <node id="3025">
        <label>scip/scip.h</label>
        <link refid="scip_8h"/>
        <childnode refid="3026" relation="include">
        </childnode>
        <childnode refid="3027" relation="include">
        </childnode>
        <childnode refid="3037" relation="include">
        </childnode>
        <childnode refid="3033" relation="include">
        </childnode>
        <childnode refid="3038" relation="include">
        </childnode>
        <childnode refid="3039" relation="include">
        </childnode>
        <childnode refid="3040" relation="include">
        </childnode>
        <childnode refid="3041" relation="include">
        </childnode>
        <childnode refid="3043" relation="include">
        </childnode>
        <childnode refid="3044" relation="include">
        </childnode>
        <childnode refid="3045" relation="include">
        </childnode>
        <childnode refid="3046" relation="include">
        </childnode>
        <childnode refid="3047" relation="include">
        </childnode>
        <childnode refid="3048" relation="include">
        </childnode>
        <childnode refid="3049" relation="include">
        </childnode>
        <childnode refid="3042" relation="include">
        </childnode>
        <childnode refid="3050" relation="include">
        </childnode>
        <childnode refid="3051" relation="include">
        </childnode>
        <childnode refid="3052" relation="include">
        </childnode>
        <childnode refid="3055" relation="include">
        </childnode>
        <childnode refid="3056" relation="include">
        </childnode>
        <childnode refid="3054" relation="include">
        </childnode>
        <childnode refid="3057" relation="include">
        </childnode>
        <childnode refid="3058" relation="include">
        </childnode>
        <childnode refid="3059" relation="include">
        </childnode>
        <childnode refid="3060" relation="include">
        </childnode>
        <childnode refid="3061" relation="include">
        </childnode>
        <childnode refid="3062" relation="include">
        </childnode>
        <childnode refid="3063" relation="include">
        </childnode>
        <childnode refid="3064" relation="include">
        </childnode>
        <childnode refid="3065" relation="include">
        </childnode>
        <childnode refid="3066" relation="include">
        </childnode>
        <childnode refid="3068" relation="include">
        </childnode>
        <childnode refid="3069" relation="include">
        </childnode>
        <childnode refid="3070" relation="include">
        </childnode>
        <childnode refid="3071" relation="include">
        </childnode>
        <childnode refid="3073" relation="include">
        </childnode>
        <childnode refid="3074" relation="include">
        </childnode>
        <childnode refid="3075" relation="include">
        </childnode>
        <childnode refid="3076" relation="include">
        </childnode>
        <childnode refid="3078" relation="include">
        </childnode>
        <childnode refid="3079" relation="include">
        </childnode>
        <childnode refid="3080" relation="include">
        </childnode>
        <childnode refid="3081" relation="include">
        </childnode>
        <childnode refid="3083" relation="include">
        </childnode>
        <childnode refid="3087" relation="include">
        </childnode>
        <childnode refid="3034" relation="include">
        </childnode>
        <childnode refid="3088" relation="include">
        </childnode>
        <childnode refid="3089" relation="include">
        </childnode>
        <childnode refid="3090" relation="include">
        </childnode>
        <childnode refid="3091" relation="include">
        </childnode>
        <childnode refid="3092" relation="include">
        </childnode>
        <childnode refid="3093" relation="include">
        </childnode>
        <childnode refid="3094" relation="include">
        </childnode>
        <childnode refid="3095" relation="include">
        </childnode>
        <childnode refid="3096" relation="include">
        </childnode>
        <childnode refid="3097" relation="include">
        </childnode>
        <childnode refid="3098" relation="include">
        </childnode>
        <childnode refid="3100" relation="include">
        </childnode>
        <childnode refid="3101" relation="include">
        </childnode>
        <childnode refid="3102" relation="include">
        </childnode>
        <childnode refid="3105" relation="include">
        </childnode>
      </node>
      <node id="3069">
        <label>scip/pub_conflict.h</label>
        <link refid="pub__conflict_8h"/>
        <childnode refid="3027" relation="include">
        </childnode>
        <childnode refid="3040" relation="include">
        </childnode>
        <childnode refid="3051" relation="include">
        </childnode>
      </node>
      <node id="3104">
        <label>nlpi/type_exprinterpret.h</label>
        <link refid="type__exprinterpret_8h"/>
      </node>
      <node id="3080">
        <label>scip/pub_history.h</label>
        <link refid="pub__history_8h"/>
      </node>
      <node id="3060">
        <label>scip/type_presol.h</label>
        <link refid="type__presol_8h"/>
        <childnode refid="3027" relation="include">
        </childnode>
        <childnode refid="3033" relation="include">
        </childnode>
        <childnode refid="3038" relation="include">
        </childnode>
        <childnode refid="3042" relation="include">
        </childnode>
      </node>
      <node id="3066">
        <label>nlpi/type_nlpi.h</label>
        <link refid="type__nlpi_8h"/>
        <childnode refid="3027" relation="include">
        </childnode>
        <childnode refid="3036" relation="include">
        </childnode>
        <childnode refid="3037" relation="include">
        </childnode>
        <childnode refid="3067" relation="include">
        </childnode>
      </node>
      <node id="3074">
        <label>scip/pub_disp.h</label>
        <link refid="pub__disp_8h"/>
        <childnode refid="3026" relation="include">
        </childnode>
        <childnode refid="3027" relation="include">
        </childnode>
        <childnode refid="3033" relation="include">
        </childnode>
        <childnode refid="3056" relation="include">
        </childnode>
      </node>
      <node id="3068">
        <label>scip/pub_branch.h</label>
        <link refid="pub__branch_8h"/>
        <childnode refid="3027" relation="include">
        </childnode>
        <childnode refid="3040" relation="include">
        </childnode>
        <childnode refid="3050" relation="include">
        </childnode>
      </node>
      <node id="3029">
        <label>math.h</label>
      </node>
      <node id="3037">
        <label>blockmemshell/memory.h</label>
      </node>
      <node id="3090">
        <label>scip/pub_paramset.h</label>
        <link refid="pub__paramset_8h"/>
        <childnode refid="3027" relation="include">
        </childnode>
        <childnode refid="3043" relation="include">
        </childnode>
        <childnode refid="3042" relation="include">
        </childnode>
      </node>
      <node id="3096">
        <label>scip/pub_prop.h</label>
        <link refid="pub__prop_8h"/>
        <childnode refid="3027" relation="include">
        </childnode>
        <childnode refid="3040" relation="include">
        </childnode>
        <childnode refid="3065" relation="include">
        </childnode>
      </node>
      <node id="3033">
        <label>scip/type_retcode.h</label>
        <link refid="type__retcode_8h"/>
      </node>
      <node id="3057">
        <label>scip/type_compr.h</label>
        <link refid="type__compr_8h"/>
        <childnode refid="3027" relation="include">
        </childnode>
        <childnode refid="3042" relation="include">
        </childnode>
        <childnode refid="3038" relation="include">
        </childnode>
        <childnode refid="3041" relation="include">
        </childnode>
      </node>
      <node id="3062">
        <label>scip/type_reader.h</label>
        <link refid="type__reader_8h"/>
        <childnode refid="3027" relation="include">
        </childnode>
        <childnode refid="3033" relation="include">
        </childnode>
        <childnode refid="3038" relation="include">
        </childnode>
        <childnode refid="3042" relation="include">
        </childnode>
      </node>
      <node id="3079">
        <label>scip/pub_compr.h</label>
        <link refid="pub__compr_8h"/>
        <childnode refid="3027" relation="include">
        </childnode>
        <childnode refid="3040" relation="include">
        </childnode>
        <childnode refid="3057" relation="include">
        </childnode>
      </node>
      <node id="3071">
        <label>scip/pub_cutpool.h</label>
        <link refid="pub__cutpool_8h"/>
        <childnode refid="3027" relation="include">
        </childnode>
        <childnode refid="3072" relation="include">
        </childnode>
      </node>
      <node id="3087">
        <label>scip/pub_nlp.h</label>
        <link refid="pub__nlp_8h"/>
        <childnode refid="3026" relation="include">
        </childnode>
        <childnode refid="3027" relation="include">
        </childnode>
        <childnode refid="3036" relation="include">
        </childnode>
        <childnode refid="3037" relation="include">
        </childnode>
        <childnode refid="3084" relation="include">
        </childnode>
        <childnode refid="3085" relation="include">
        </childnode>
        <childnode refid="3046" relation="include">
        </childnode>
        <childnode refid="3047" relation="include">
        </childnode>
        <childnode refid="3053" relation="include">
        </childnode>
        <childnode refid="3067" relation="include">
        </childnode>
        <childnode refid="3066" relation="include">
        </childnode>
      </node>
      <node id="3044">
        <label>scip/type_event.h</label>
        <link refid="type__event_8h"/>
        <childnode refid="3027" relation="include">
        </childnode>
        <childnode refid="3033" relation="include">
        </childnode>
        <childnode refid="3042" relation="include">
        </childnode>
      </node>
      <node id="3097">
        <label>scip/pub_sol.h</label>
        <link refid="pub__sol_8h"/>
        <childnode refid="3027" relation="include">
        </childnode>
        <childnode refid="3053" relation="include">
        </childnode>
        <childnode refid="3054" relation="include">
        </childnode>
      </node>
      <node id="3051">
        <label>scip/type_conflict.h</label>
        <link refid="type__conflict_8h"/>
        <childnode refid="3027" relation="include">
        </childnode>
        <childnode refid="3033" relation="include">
        </childnode>
        <childnode refid="3038" relation="include">
        </childnode>
        <childnode refid="3047" relation="include">
        </childnode>
      </node>
      <node id="3094">
        <label>scip/pub_relax.h</label>
        <link refid="pub__relax_8h"/>
        <childnode refid="3027" relation="include">
        </childnode>
        <childnode refid="3040" relation="include">
        </childnode>
        <childnode refid="3063" relation="include">
        </childnode>
      </node>
      <node id="3043">
        <label>scip/type_paramset.h</label>
        <link refid="type__paramset_8h"/>
        <childnode refid="3027" relation="include">
        </childnode>
        <childnode refid="3033" relation="include">
        </childnode>
        <childnode refid="3042" relation="include">
        </childnode>
      </node>
      <node id="3086">
        <label>lpi/type_lpi.h</label>
        <link refid="type__lpi_8h"/>
      </node>
      <node id="3034">
        <label>scip/pub_message.h</label>
        <link refid="pub__message_8h"/>
        <childnode refid="3035" relation="include">
        </childnode>
        <childnode refid="3027" relation="include">
        </childnode>
        <childnode refid="3036" relation="include">
        </childnode>
      </node>
      <node id="3048">
        <label>scip/type_prob.h</label>
        <link refid="type__prob_8h"/>
        <childnode refid="3027" relation="include">
        </childnode>
        <childnode refid="3033" relation="include">
        </childnode>
        <childnode refid="3042" relation="include">
        </childnode>
      </node>
      <node id="3036">
        <label>scip/type_message.h</label>
        <link refid="type__message_8h"/>
        <childnode refid="3026" relation="include">
        </childnode>
      </node>
      <node id="3100">
        <label>scip/pub_var.h</label>
        <link refid="pub__var_8h"/>
        <childnode refid="3027" relation="include">
        </childnode>
        <childnode refid="3033" relation="include">
        </childnode>
        <childnode refid="3040" relation="include">
        </childnode>
        <childnode refid="3058" relation="include">
        </childnode>
        <childnode refid="3047" relation="include">
        </childnode>
        <childnode refid="3082" relation="include">
        </childnode>
        <childnode refid="3052" relation="include">
        </childnode>
      </node>
      <node id="3026">
        <label>stdio.h</label>
      </node>
      <node id="3101">
        <label>lpi/lpi.h</label>
        <link refid="lpi_8h"/>
        <childnode refid="3027" relation="include">
        </childnode>
        <childnode refid="3037" relation="include">
        </childnode>
        <childnode refid="3033" relation="include">
        </childnode>
        <childnode refid="3086" relation="include">
        </childnode>
      </node>
      <node id="3073">
        <label>scip/pub_dialog.h</label>
        <link refid="pub__dialog_8h"/>
        <childnode refid="3027" relation="include">
        </childnode>
        <childnode refid="3033" relation="include">
        </childnode>
        <childnode refid="3042" relation="include">
        </childnode>
        <childnode refid="3055" relation="include">
        </childnode>
      </node>
      <node id="3047">
        <label>scip/type_var.h</label>
        <link refid="type__var_8h"/>
      </node>
      <node id="3081">
        <label>scip/pub_implics.h</label>
        <link refid="pub__implics_8h"/>
        <childnode refid="3027" relation="include">
        </childnode>
        <childnode refid="3047" relation="include">
        </childnode>
        <childnode refid="3082" relation="include">
        </childnode>
      </node>
      <node id="3099">
        <label>scip/type_reopt.h</label>
        <link refid="type__reopt_8h"/>
      </node>
      <node id="3083">
        <label>scip/pub_lp.h</label>
        <link refid="pub__lp_8h"/>
        <childnode refid="3026" relation="include">
        </childnode>
        <childnode refid="3027" relation="include">
        </childnode>
        <childnode refid="3037" relation="include">
        </childnode>
        <childnode refid="3084" relation="include">
        </childnode>
        <childnode refid="3085" relation="include">
        </childnode>
        <childnode refid="3045" relation="include">
        </childnode>
        <childnode refid="3047" relation="include">
        </childnode>
        <childnode refid="3053" relation="include">
        </childnode>
        <childnode refid="3064" relation="include">
        </childnode>
        <childnode refid="3040" relation="include">
        </childnode>
        <childnode refid="3086" relation="include">
        </childnode>
      </node>
      <node id="3088">
        <label>scip/pub_misc.h</label>
        <link refid="pub__misc_8h"/>
        <childnode refid="3029" relation="include">
        </childnode>
        <childnode refid="3027" relation="include">
        </childnode>
        <childnode refid="3037" relation="include">
        </childnode>
        <childnode refid="3033" relation="include">
        </childnode>
        <childnode refid="3040" relation="include">
        </childnode>
        <childnode refid="3036" relation="include">
        </childnode>
        <childnode refid="3047" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="3106">
        <label>cons_sos2.h</label>
        <link refid="cons_sos2.h"/>
        <childnode refid="3107" relation="include">
        </childnode>
      </node>
      <node id="3107">
        <label>scipdefplugins.h</label>
        <link refid="scipdefplugins_8h"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="cons__sos2_8h_1a553b36330a5538c651c0c39ee9d4186d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPincludeConshdlrSOS2</definition>
        <argsstring>(SCIP *scip)</argsstring>
        <name>SCIPincludeConshdlrSOS2</name>
        <param>
          <type><ref refid="type__scip_8h_1a4792a242d315bf76f05b1f4e0712bc33" kindref="member">SCIP</ref> *</type>
          <declname>scip</declname>
          <briefdescription><para>SCIP data structure </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>creates the handler for SOS2 constraints and includes it in SCIP </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/scip/cons_sos2.h" line="41" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cons__sos2_8h_1aa7a96c42d087a779412ca2001f32014c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPcreateConsSOS2</definition>
        <argsstring>(SCIP *scip, SCIP_CONS **cons, const char *name, int nvars, SCIP_VAR **vars, SCIP_Real *weights, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode)</argsstring>
        <name>SCIPcreateConsSOS2</name>
        <param>
          <type><ref refid="type__scip_8h_1a4792a242d315bf76f05b1f4e0712bc33" kindref="member">SCIP</ref> *</type>
          <declname>scip</declname>
          <briefdescription><para>SCIP data structure </para></briefdescription>
        </param>
        <param>
          <type><ref refid="type__cons_8h_1a38a65729afa6b1cef58fcff906850886" kindref="member">SCIP_CONS</ref> **</type>
          <declname>cons</declname>
          <briefdescription><para>pointer to hold the created constraint </para></briefdescription>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
          <briefdescription><para>name of constraint </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>nvars</declname>
          <briefdescription><para>number of variables in the constraint </para></briefdescription>
        </param>
        <param>
          <type><ref refid="type__var_8h_1a032edd1f5032513d49e397ebdcc8915b" kindref="member">SCIP_VAR</ref> **</type>
          <declname>vars</declname>
          <briefdescription><para>array with variables of constraint entries </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>weights</declname>
          <briefdescription><para>weights determining the variable order, or NULL if natural order should be used </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
          <declname>initial</declname>
          <briefdescription><para>should the LP relaxation of constraint be in the initial LP? Usually set to TRUE. Set to FALSE for &apos;lazy constraints&apos;. </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
          <declname>separate</declname>
          <briefdescription><para>should the constraint be separated during LP processing? Usually set to TRUE. </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
          <declname>enforce</declname>
          <briefdescription><para>should the constraint be enforced during node processing? TRUE for model constraints, FALSE for additional, redundant constraints. </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
          <declname>check</declname>
          <briefdescription><para>should the constraint be checked for feasibility? TRUE for model constraints, FALSE for additional, redundant constraints. </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
          <declname>propagate</declname>
          <briefdescription><para>should the constraint be propagated during node processing? Usually set to TRUE. </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
          <declname>local</declname>
          <briefdescription><para>is constraint only valid locally? Usually set to FALSE. Has to be set to TRUE, e.g., for branching constraints. </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
          <declname>dynamic</declname>
          <briefdescription><para>is constraint subject to aging? Usually set to FALSE. Set to TRUE for own cuts which are separated as constraints. </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
          <declname>removable</declname>
          <briefdescription><para>should the relaxation be removed from the LP due to aging or cleanup? Usually set to FALSE. Set to TRUE for &apos;lazy constraints&apos; and &apos;user cuts&apos;. </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
          <declname>stickingatnode</declname>
          <briefdescription><para>should the constraint always be kept at the node where it was added, even if it may be moved to a more global node? Usually set to FALSE. Set to TRUE to for constraints that represent node data. </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>creates and captures an SOS2 constraint</para><para>We set the constraint to not be modifable. If the weights are non NULL, the variables are ordered according to these weights (in ascending order).</para><para><simplesect kind="note"><para>the constraint gets captured, hence at one point you have to release it using the method <ref refid="scip_8h_1ae7055a40bc1c895c4acb118bcb8de4de" kindref="member">SCIPreleaseCons()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/scip/cons_sos2.h" line="54" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cons__sos2_8h_1aec28d34ec82f61a6168afa67e6a34469" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPcreateConsBasicSOS2</definition>
        <argsstring>(SCIP *scip, SCIP_CONS **cons, const char *name, int nvars, SCIP_VAR **vars, SCIP_Real *weights)</argsstring>
        <name>SCIPcreateConsBasicSOS2</name>
        <param>
          <type><ref refid="type__scip_8h_1a4792a242d315bf76f05b1f4e0712bc33" kindref="member">SCIP</ref> *</type>
          <declname>scip</declname>
          <briefdescription><para>SCIP data structure </para></briefdescription>
        </param>
        <param>
          <type><ref refid="type__cons_8h_1a38a65729afa6b1cef58fcff906850886" kindref="member">SCIP_CONS</ref> **</type>
          <declname>cons</declname>
          <briefdescription><para>pointer to hold the created constraint </para></briefdescription>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
          <briefdescription><para>name of constraint </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>nvars</declname>
          <briefdescription><para>number of variables in the constraint </para></briefdescription>
        </param>
        <param>
          <type><ref refid="type__var_8h_1a032edd1f5032513d49e397ebdcc8915b" kindref="member">SCIP_VAR</ref> **</type>
          <declname>vars</declname>
          <briefdescription><para>array with variables of constraint entries </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>weights</declname>
          <briefdescription><para>weights determining the variable order, or NULL if natural order should be used </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>creates and captures a SOS2 constraint with all constraint flags set to their default values.</para><para><simplesect kind="warning"><para>Do NOT set the constraint to be modifiable manually, because this might lead to wrong results as the variable array will not be resorted</para></simplesect>
<simplesect kind="note"><para>the constraint gets captured, hence at one point you have to release it using the method <ref refid="scip_8h_1ae7055a40bc1c895c4acb118bcb8de4de" kindref="member">SCIPreleaseCons()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/scip/cons_sos2.h" line="91" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cons__sos2_8h_1aead66a32db6389504977e34349aa4ba9" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPaddVarSOS2</definition>
        <argsstring>(SCIP *scip, SCIP_CONS *cons, SCIP_VAR *var, SCIP_Real weight)</argsstring>
        <name>SCIPaddVarSOS2</name>
        <param>
          <type><ref refid="type__scip_8h_1a4792a242d315bf76f05b1f4e0712bc33" kindref="member">SCIP</ref> *</type>
          <declname>scip</declname>
          <briefdescription><para>SCIP data structure </para></briefdescription>
        </param>
        <param>
          <type><ref refid="type__cons_8h_1a38a65729afa6b1cef58fcff906850886" kindref="member">SCIP_CONS</ref> *</type>
          <declname>cons</declname>
          <briefdescription><para>constraint </para></briefdescription>
        </param>
        <param>
          <type><ref refid="type__var_8h_1a032edd1f5032513d49e397ebdcc8915b" kindref="member">SCIP_VAR</ref> *</type>
          <declname>var</declname>
          <briefdescription><para>variable to add to the constraint </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>weight</declname>
          <briefdescription><para>weight determining position of variable </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>adds variable to SOS2 constraint, the position is determined by the given weight </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/scip/cons_sos2.h" line="102" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cons__sos2_8h_1a5c7952f62a015dc8b94ba1f416104963" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPappendVarSOS2</definition>
        <argsstring>(SCIP *scip, SCIP_CONS *cons, SCIP_VAR *var)</argsstring>
        <name>SCIPappendVarSOS2</name>
        <param>
          <type><ref refid="type__scip_8h_1a4792a242d315bf76f05b1f4e0712bc33" kindref="member">SCIP</ref> *</type>
          <declname>scip</declname>
          <briefdescription><para>SCIP data structure </para></briefdescription>
        </param>
        <param>
          <type><ref refid="type__cons_8h_1a38a65729afa6b1cef58fcff906850886" kindref="member">SCIP_CONS</ref> *</type>
          <declname>cons</declname>
          <briefdescription><para>constraint </para></briefdescription>
        </param>
        <param>
          <type><ref refid="type__var_8h_1a032edd1f5032513d49e397ebdcc8915b" kindref="member">SCIP_VAR</ref> *</type>
          <declname>var</declname>
          <briefdescription><para>variable to add to the constraint </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>appends variable to SOS2 constraint </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/scip/cons_sos2.h" line="111" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cons__sos2_8h_1a6b003078ba8c81ab2c5245f2f9b23f4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SCIPgetNVarsSOS2</definition>
        <argsstring>(SCIP *scip, SCIP_CONS *cons)</argsstring>
        <name>SCIPgetNVarsSOS2</name>
        <param>
          <type><ref refid="type__scip_8h_1a4792a242d315bf76f05b1f4e0712bc33" kindref="member">SCIP</ref> *</type>
          <declname>scip</declname>
          <briefdescription><para>SCIP data structure </para></briefdescription>
        </param>
        <param>
          <type><ref refid="type__cons_8h_1a38a65729afa6b1cef58fcff906850886" kindref="member">SCIP_CONS</ref> *</type>
          <declname>cons</declname>
          <briefdescription><para>constraint </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>gets number of variables in SOS2 constraint </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/scip/cons_sos2.h" line="119" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cons__sos2_8h_1a62dc70676518cb28c1f06a2e7633411e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__var_8h_1a032edd1f5032513d49e397ebdcc8915b" kindref="member">SCIP_VAR</ref> **</type>
        <definition>SCIP_VAR** SCIPgetVarsSOS2</definition>
        <argsstring>(SCIP *scip, SCIP_CONS *cons)</argsstring>
        <name>SCIPgetVarsSOS2</name>
        <param>
          <type><ref refid="type__scip_8h_1a4792a242d315bf76f05b1f4e0712bc33" kindref="member">SCIP</ref> *</type>
          <declname>scip</declname>
          <briefdescription><para>SCIP data structure </para></briefdescription>
        </param>
        <param>
          <type><ref refid="type__cons_8h_1a38a65729afa6b1cef58fcff906850886" kindref="member">SCIP_CONS</ref> *</type>
          <declname>cons</declname>
          <briefdescription><para>constraint data </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>gets array of variables in SOS2 constraint </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/scip/cons_sos2.h" line="126" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cons__sos2_8h_1a4c5475f39692e3cc71e7e9d6653c87fb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
        <definition>SCIP_Real* SCIPgetWeightsSOS2</definition>
        <argsstring>(SCIP *scip, SCIP_CONS *cons)</argsstring>
        <name>SCIPgetWeightsSOS2</name>
        <param>
          <type><ref refid="type__scip_8h_1a4792a242d315bf76f05b1f4e0712bc33" kindref="member">SCIP</ref> *</type>
          <declname>scip</declname>
          <briefdescription><para>SCIP data structure </para></briefdescription>
        </param>
        <param>
          <type><ref refid="type__cons_8h_1a38a65729afa6b1cef58fcff906850886" kindref="member">SCIP_CONS</ref> *</type>
          <declname>cons</declname>
          <briefdescription><para>constraint data </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>gets array of weights in SOS2 constraint (or NULL if not existent) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/scip/cons_sos2.h" line="133" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>constraint handler for SOS type 2 constraints </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Marc Pfetsch</para></simplesect>
A specially ordered set of type 2 (SOS2) is a sequence of variables such that at most two variables are nonzero and if two variables are nonzero they must be adjacent in the specified sequence. Note that it is in principle allowed that a variable appears twice, but it then can be fixed to 0 if it is at least two apart in the sequence. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>program<sp/>and<sp/>library<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SCIP<sp/>---<sp/>Solving<sp/>Constraint<sp/>Integer<sp/>Programs<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>Copyright<sp/>(C)<sp/>2002-2015<sp/>Konrad-Zuse-Zentrum<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fuer<sp/>Informationstechnik<sp/>Berlin<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>SCIP<sp/>is<sp/>distributed<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>ZIB<sp/>Academic<sp/>License.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>ZIB<sp/>Academic<sp/>License<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>along<sp/>with<sp/>SCIP;<sp/>see<sp/>the<sp/>file<sp/>COPYING.<sp/>If<sp/>not<sp/>email<sp/>to<sp/>scip@zib.de.<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="16"><highlight class="comment">/**@file<sp/><sp/><sp/>cons_sos2.h</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>@ingroup<sp/>CONSHDLRS</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>constraint<sp/>handler<sp/>for<sp/>SOS<sp/>type<sp/>2<sp/>constraints</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>@author<sp/>Marc<sp/>Pfetsch</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>A<sp/>specially<sp/>ordered<sp/>set<sp/>of<sp/>type<sp/>2<sp/>(SOS2)<sp/>is<sp/>a<sp/>sequence<sp/>of<sp/>variables<sp/>such<sp/>that<sp/>at<sp/>most<sp/>two</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>variables<sp/>are<sp/>nonzero<sp/>and<sp/>if<sp/>two<sp/>variables<sp/>are<sp/>nonzero<sp/>they<sp/>must<sp/>be<sp/>adjacent<sp/>in<sp/>the<sp/>specified</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>sequence.<sp/>Note<sp/>that<sp/>it<sp/>is<sp/>in<sp/>principle<sp/>allowed<sp/>that<sp/>a<sp/>variable<sp/>appears<sp/>twice,<sp/>but<sp/>it<sp/>then<sp/>can<sp/>be</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/>fixed<sp/>to<sp/>0<sp/>if<sp/>it<sp/>is<sp/>at<sp/>least<sp/>two<sp/>apart<sp/>in<sp/>the<sp/>sequence.</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight><highlight class="comment">/*---+----1----+----2----+----3----+----4----+----5----+----6----+----7----+----8----+----9----+----0----+----1----+----2*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__SCIP_CONS_SOS2_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__SCIP_CONS_SOS2_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="scip_8h" kindref="compound">scip/scip.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="39"><highlight class="comment">/**<sp/>creates<sp/>the<sp/>handler<sp/>for<sp/>SOS2<sp/>constraints<sp/>and<sp/>includes<sp/>it<sp/>in<sp/>SCIP<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="cons__sos2_8h_1a553b36330a5538c651c0c39ee9d4186d" kindref="member">SCIPincludeConshdlrSOS2</ref>(</highlight></codeline>
<codeline lineno="42"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__scip_8h_1a4792a242d315bf76f05b1f4e0712bc33" kindref="member">SCIP</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scip<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP<sp/>data<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="45"><highlight class="comment">/**<sp/>creates<sp/>and<sp/>captures<sp/>an<sp/>SOS2<sp/>constraint</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="47"><highlight class="comment"><sp/>*<sp/><sp/>We<sp/>set<sp/>the<sp/>constraint<sp/>to<sp/>not<sp/>be<sp/>modifable.<sp/>If<sp/>the<sp/>weights<sp/>are<sp/>non</highlight></codeline>
<codeline lineno="48"><highlight class="comment"><sp/>*<sp/><sp/>NULL,<sp/>the<sp/>variables<sp/>are<sp/>ordered<sp/>according<sp/>to<sp/>these<sp/>weights<sp/>(in</highlight></codeline>
<codeline lineno="49"><highlight class="comment"><sp/>*<sp/><sp/>ascending<sp/>order).</highlight></codeline>
<codeline lineno="50"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="51"><highlight class="comment"><sp/>*<sp/><sp/>@note<sp/>the<sp/>constraint<sp/>gets<sp/>captured,<sp/>hence<sp/>at<sp/>one<sp/>point<sp/>you<sp/>have<sp/>to<sp/>release<sp/>it<sp/>using<sp/>the<sp/>method<sp/>SCIPreleaseCons()</highlight></codeline>
<codeline lineno="52"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="cons__sos2_8h_1aa7a96c42d087a779412ca2001f32014c" kindref="member">SCIPcreateConsSOS2</ref>(</highlight></codeline>
<codeline lineno="55"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__scip_8h_1a4792a242d315bf76f05b1f4e0712bc33" kindref="member">SCIP</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scip,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP<sp/>data<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__cons_8h_1a38a65729afa6b1cef58fcff906850886" kindref="member">SCIP_CONS</ref>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cons,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>hold<sp/>the<sp/>created<sp/>constraint<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>name<sp/>of<sp/>constraint<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nvars,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>number<sp/>of<sp/>variables<sp/>in<sp/>the<sp/>constraint<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__var_8h_1a032edd1f5032513d49e397ebdcc8915b" kindref="member">SCIP_VAR</ref>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vars,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>with<sp/>variables<sp/>of<sp/>constraint<sp/>entries<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weights,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>weights<sp/>determining<sp/>the<sp/>variable<sp/>order,<sp/>or<sp/>NULL<sp/>if<sp/>natural<sp/>order<sp/>should<sp/>be<sp/>used<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initial,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>should<sp/>the<sp/>LP<sp/>relaxation<sp/>of<sp/>constraint<sp/>be<sp/>in<sp/>the<sp/>initial<sp/>LP?</highlight></codeline>
<codeline lineno="62"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>Usually<sp/>set<sp/>to<sp/>TRUE.<sp/>Set<sp/>to<sp/>FALSE<sp/>for<sp/>&apos;lazy<sp/>constraints&apos;.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>separate,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>should<sp/>the<sp/>constraint<sp/>be<sp/>separated<sp/>during<sp/>LP<sp/>processing?</highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>Usually<sp/>set<sp/>to<sp/>TRUE.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enforce,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>should<sp/>the<sp/>constraint<sp/>be<sp/>enforced<sp/>during<sp/>node<sp/>processing?</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>TRUE<sp/>for<sp/>model<sp/>constraints,<sp/>FALSE<sp/>for<sp/>additional,<sp/>redundant<sp/>constraints.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>check,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>should<sp/>the<sp/>constraint<sp/>be<sp/>checked<sp/>for<sp/>feasibility?</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>TRUE<sp/>for<sp/>model<sp/>constraints,<sp/>FALSE<sp/>for<sp/>additional,<sp/>redundant<sp/>constraints.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>propagate,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>should<sp/>the<sp/>constraint<sp/>be<sp/>propagated<sp/>during<sp/>node<sp/>processing?</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>Usually<sp/>set<sp/>to<sp/>TRUE.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>local,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>is<sp/>constraint<sp/>only<sp/>valid<sp/>locally?</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>Usually<sp/>set<sp/>to<sp/>FALSE.<sp/>Has<sp/>to<sp/>be<sp/>set<sp/>to<sp/>TRUE,<sp/>e.g.,<sp/>for<sp/>branching<sp/>constraints.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dynamic,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>is<sp/>constraint<sp/>subject<sp/>to<sp/>aging?</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>Usually<sp/>set<sp/>to<sp/>FALSE.<sp/>Set<sp/>to<sp/>TRUE<sp/>for<sp/>own<sp/>cuts<sp/>which</highlight></codeline>
<codeline lineno="75"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>are<sp/>separated<sp/>as<sp/>constraints.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>removable,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>should<sp/>the<sp/>relaxation<sp/>be<sp/>removed<sp/>from<sp/>the<sp/>LP<sp/>due<sp/>to<sp/>aging<sp/>or<sp/>cleanup?</highlight></codeline>
<codeline lineno="77"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>Usually<sp/>set<sp/>to<sp/>FALSE.<sp/>Set<sp/>to<sp/>TRUE<sp/>for<sp/>&apos;lazy<sp/>constraints&apos;<sp/>and<sp/>&apos;user<sp/>cuts&apos;.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stickingatnode<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>should<sp/>the<sp/>constraint<sp/>always<sp/>be<sp/>kept<sp/>at<sp/>the<sp/>node<sp/>where<sp/>it<sp/>was<sp/>added,<sp/>even</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>if<sp/>it<sp/>may<sp/>be<sp/>moved<sp/>to<sp/>a<sp/>more<sp/>global<sp/>node?</highlight></codeline>
<codeline lineno="80"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>Usually<sp/>set<sp/>to<sp/>FALSE.<sp/>Set<sp/>to<sp/>TRUE<sp/>to<sp/>for<sp/>constraints<sp/>that<sp/>represent<sp/>node<sp/>data.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="82"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="83"><highlight class="comment">/**<sp/>creates<sp/>and<sp/>captures<sp/>a<sp/>SOS2<sp/>constraint<sp/>with<sp/>all<sp/>constraint<sp/>flags<sp/>set<sp/>to<sp/>their<sp/>default<sp/>values.</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="85"><highlight class="comment"><sp/>*<sp/><sp/>@warning<sp/>Do<sp/>NOT<sp/>set<sp/>the<sp/>constraint<sp/>to<sp/>be<sp/>modifiable<sp/>manually,<sp/>because<sp/>this<sp/>might<sp/>lead</highlight></codeline>
<codeline lineno="86"><highlight class="comment"><sp/>*<sp/><sp/>to<sp/>wrong<sp/>results<sp/>as<sp/>the<sp/>variable<sp/>array<sp/>will<sp/>not<sp/>be<sp/>resorted</highlight></codeline>
<codeline lineno="87"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/>*<sp/><sp/>@note<sp/>the<sp/>constraint<sp/>gets<sp/>captured,<sp/>hence<sp/>at<sp/>one<sp/>point<sp/>you<sp/>have<sp/>to<sp/>release<sp/>it<sp/>using<sp/>the<sp/>method<sp/>SCIPreleaseCons()</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="cons__sos2_8h_1aec28d34ec82f61a6168afa67e6a34469" kindref="member">SCIPcreateConsBasicSOS2</ref>(</highlight></codeline>
<codeline lineno="92"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__scip_8h_1a4792a242d315bf76f05b1f4e0712bc33" kindref="member">SCIP</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scip,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP<sp/>data<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__cons_8h_1a38a65729afa6b1cef58fcff906850886" kindref="member">SCIP_CONS</ref>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cons,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>hold<sp/>the<sp/>created<sp/>constraint<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>name<sp/>of<sp/>constraint<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nvars,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>number<sp/>of<sp/>variables<sp/>in<sp/>the<sp/>constraint<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__var_8h_1a032edd1f5032513d49e397ebdcc8915b" kindref="member">SCIP_VAR</ref>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vars,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>with<sp/>variables<sp/>of<sp/>constraint<sp/>entries<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weights<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>weights<sp/>determining<sp/>the<sp/>variable<sp/>order,<sp/>or<sp/>NULL<sp/>if<sp/>natural<sp/>order<sp/>should<sp/>be<sp/>used<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="99"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="100"><highlight class="comment">/**<sp/>adds<sp/>variable<sp/>to<sp/>SOS2<sp/>constraint,<sp/>the<sp/>position<sp/>is<sp/>determined<sp/>by<sp/>the<sp/>given<sp/>weight<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="cons__sos2_8h_1aead66a32db6389504977e34349aa4ba9" kindref="member">SCIPaddVarSOS2</ref>(</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__scip_8h_1a4792a242d315bf76f05b1f4e0712bc33" kindref="member">SCIP</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scip,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP<sp/>data<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__cons_8h_1a38a65729afa6b1cef58fcff906850886" kindref="member">SCIP_CONS</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cons,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>constraint<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__var_8h_1a032edd1f5032513d49e397ebdcc8915b" kindref="member">SCIP_VAR</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>variable<sp/>to<sp/>add<sp/>to<sp/>the<sp/>constraint<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>weight<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>weight<sp/>determining<sp/>position<sp/>of<sp/>variable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="109"><highlight class="comment">/**<sp/>appends<sp/>variable<sp/>to<sp/>SOS2<sp/>constraint<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="cons__sos2_8h_1a5c7952f62a015dc8b94ba1f416104963" kindref="member">SCIPappendVarSOS2</ref>(</highlight></codeline>
<codeline lineno="112"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__scip_8h_1a4792a242d315bf76f05b1f4e0712bc33" kindref="member">SCIP</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scip,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP<sp/>data<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__cons_8h_1a38a65729afa6b1cef58fcff906850886" kindref="member">SCIP_CONS</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cons,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>constraint<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__var_8h_1a032edd1f5032513d49e397ebdcc8915b" kindref="member">SCIP_VAR</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>var<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>variable<sp/>to<sp/>add<sp/>to<sp/>the<sp/>constraint<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="117"><highlight class="comment">/**<sp/>gets<sp/>number<sp/>of<sp/>variables<sp/>in<sp/>SOS2<sp/>constraint<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="119"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="cons__sos2_8h_1a6b003078ba8c81ab2c5245f2f9b23f4d" kindref="member">SCIPgetNVarsSOS2</ref>(</highlight></codeline>
<codeline lineno="120"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__scip_8h_1a4792a242d315bf76f05b1f4e0712bc33" kindref="member">SCIP</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scip,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP<sp/>data<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__cons_8h_1a38a65729afa6b1cef58fcff906850886" kindref="member">SCIP_CONS</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cons<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>constraint<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="123"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="124"><highlight class="comment">/**<sp/>gets<sp/>array<sp/>of<sp/>variables<sp/>in<sp/>SOS2<sp/>constraint<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><ref refid="type__var_8h_1a032edd1f5032513d49e397ebdcc8915b" kindref="member">SCIP_VAR</ref>**<sp/><ref refid="cons__sos2_8h_1a62dc70676518cb28c1f06a2e7633411e" kindref="member">SCIPgetVarsSOS2</ref>(</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__scip_8h_1a4792a242d315bf76f05b1f4e0712bc33" kindref="member">SCIP</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scip,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP<sp/>data<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__cons_8h_1a38a65729afa6b1cef58fcff906850886" kindref="member">SCIP_CONS</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cons<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>constraint<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="131"><highlight class="comment">/**<sp/>gets<sp/>array<sp/>of<sp/>weights<sp/>in<sp/>SOS2<sp/>constraint<sp/>(or<sp/>NULL<sp/>if<sp/>not<sp/>existent)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><ref refid="cons__sos2_8h_1a4c5475f39692e3cc71e7e9d6653c87fb" kindref="member">SCIPgetWeightsSOS2</ref>(</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__scip_8h_1a4792a242d315bf76f05b1f4e0712bc33" kindref="member">SCIP</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scip,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP<sp/>data<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__cons_8h_1a38a65729afa6b1cef58fcff906850886" kindref="member">SCIP_CONS</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cons<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>constraint<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/scip/cons_sos2.h"/>
  </compounddef>
</doxygen>
