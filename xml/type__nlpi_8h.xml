<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="type__nlpi_8h" kind="file">
    <compoundname>type_nlpi.h</compoundname>
    <includes refid="def_8h" local="yes">scip/def.h</includes>
    <includes refid="type__message_8h" local="yes">scip/type_message.h</includes>
    <includes local="yes">blockmemshell/memory.h</includes>
    <includes refid="type__expr_8h" local="yes">nlpi/type_expr.h</includes>
    <includedby refid="cons__quadratic_8h" local="yes">cons_quadratic.h</includedby>
    <includedby refid="cons__soc_8h" local="yes">cons_soc.h</includedby>
    <includedby refid="pub__nlp_8h" local="yes">pub_nlp.h</includedby>
    <includedby refid="scip_8h" local="yes">scip.h</includedby>
    <includedby refid="nlpi__ipopt_8h" local="yes">nlpi_ipopt.h</includedby>
    <incdepgraph>
      <node id="17653">
        <label>stdarg.h</label>
      </node>
      <node id="17650">
        <label>assert.h</label>
      </node>
      <node id="17649">
        <label>float.h</label>
      </node>
      <node id="17648">
        <label>limits.h</label>
      </node>
      <node id="17654">
        <label>scip/type_message.h</label>
        <link refid="type__message_8h"/>
        <childnode refid="17646" relation="include">
        </childnode>
      </node>
      <node id="17644">
        <label>type_nlpi.h</label>
        <link refid="type_nlpi.h"/>
        <childnode refid="17645" relation="include">
        </childnode>
        <childnode refid="17654" relation="include">
        </childnode>
        <childnode refid="17655" relation="include">
        </childnode>
        <childnode refid="17656" relation="include">
        </childnode>
      </node>
      <node id="17652">
        <label>scip/pub_message.h</label>
        <link refid="pub__message_8h"/>
        <childnode refid="17653" relation="include">
        </childnode>
        <childnode refid="17645" relation="include">
        </childnode>
        <childnode refid="17654" relation="include">
        </childnode>
      </node>
      <node id="17651">
        <label>scip/type_retcode.h</label>
        <link refid="type__retcode_8h"/>
      </node>
      <node id="17656">
        <label>nlpi/type_expr.h</label>
        <link refid="type__expr_8h"/>
      </node>
      <node id="17647">
        <label>math.h</label>
      </node>
      <node id="17655">
        <label>blockmemshell/memory.h</label>
      </node>
      <node id="17645">
        <label>scip/def.h</label>
        <link refid="def_8h"/>
        <childnode refid="17646" relation="include">
        </childnode>
        <childnode refid="17647" relation="include">
        </childnode>
        <childnode refid="17648" relation="include">
        </childnode>
        <childnode refid="17649" relation="include">
        </childnode>
        <childnode refid="17650" relation="include">
        </childnode>
        <childnode refid="17651" relation="include">
        </childnode>
        <childnode refid="17652" relation="include">
        </childnode>
      </node>
      <node id="17646">
        <label>stdio.h</label>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="17699">
        <label>heur_clique.h</label>
        <link refid="heur__clique_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17695">
        <label>cons_xor.h</label>
        <link refid="cons__xor_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17771">
        <label>reader_pbm.h</label>
        <link refid="reader__pbm_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17700">
        <label>heur_coefdiving.h</label>
        <link refid="heur__coefdiving_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17745">
        <label>presol_convertinttobin.h</label>
        <link refid="presol__convertinttobin_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17790">
        <label>sepa_zerohalf.h</label>
        <link refid="sepa__zerohalf_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17731">
        <label>heur_undercover.h</label>
        <link refid="heur__undercover_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17726">
        <label>heur_simplerounding.h</label>
        <link refid="heur__simplerounding_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17711">
        <label>heur_localbranching.h</label>
        <link refid="heur__localbranching_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17773">
        <label>reader_ppm.h</label>
        <link refid="reader__ppm_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17662">
        <label>scip.h</label>
        <link refid="scip_8h"/>
        <childnode refid="17663" relation="include">
        </childnode>
        <childnode refid="17664" relation="include">
        </childnode>
        <childnode refid="17665" relation="include">
        </childnode>
        <childnode refid="17666" relation="include">
        </childnode>
        <childnode refid="17667" relation="include">
        </childnode>
        <childnode refid="17668" relation="include">
        </childnode>
        <childnode refid="17669" relation="include">
        </childnode>
        <childnode refid="17670" relation="include">
        </childnode>
        <childnode refid="17671" relation="include">
        </childnode>
        <childnode refid="17672" relation="include">
        </childnode>
        <childnode refid="17673" relation="include">
        </childnode>
        <childnode refid="17674" relation="include">
        </childnode>
        <childnode refid="17675" relation="include">
        </childnode>
        <childnode refid="17676" relation="include">
        </childnode>
        <childnode refid="17677" relation="include">
        </childnode>
        <childnode refid="17678" relation="include">
        </childnode>
        <childnode refid="17679" relation="include">
        </childnode>
        <childnode refid="17680" relation="include">
        </childnode>
        <childnode refid="17681" relation="include">
        </childnode>
        <childnode refid="17682" relation="include">
        </childnode>
        <childnode refid="17683" relation="include">
        </childnode>
        <childnode refid="17684" relation="include">
        </childnode>
        <childnode refid="17685" relation="include">
        </childnode>
        <childnode refid="17686" relation="include">
        </childnode>
        <childnode refid="17687" relation="include">
        </childnode>
        <childnode refid="17688" relation="include">
        </childnode>
        <childnode refid="17689" relation="include">
        </childnode>
        <childnode refid="17658" relation="include">
        </childnode>
        <childnode refid="17690" relation="include">
        </childnode>
        <childnode refid="17660" relation="include">
        </childnode>
        <childnode refid="17691" relation="include">
        </childnode>
        <childnode refid="17692" relation="include">
        </childnode>
        <childnode refid="17693" relation="include">
        </childnode>
        <childnode refid="17694" relation="include">
        </childnode>
        <childnode refid="17695" relation="include">
        </childnode>
        <childnode refid="17696" relation="include">
        </childnode>
        <childnode refid="17697" relation="include">
        </childnode>
        <childnode refid="17698" relation="include">
        </childnode>
        <childnode refid="17699" relation="include">
        </childnode>
        <childnode refid="17700" relation="include">
        </childnode>
        <childnode refid="17701" relation="include">
        </childnode>
        <childnode refid="17702" relation="include">
        </childnode>
        <childnode refid="17703" relation="include">
        </childnode>
        <childnode refid="17704" relation="include">
        </childnode>
        <childnode refid="17705" relation="include">
        </childnode>
        <childnode refid="17706" relation="include">
        </childnode>
        <childnode refid="17707" relation="include">
        </childnode>
        <childnode refid="17708" relation="include">
        </childnode>
        <childnode refid="17709" relation="include">
        </childnode>
        <childnode refid="17710" relation="include">
        </childnode>
        <childnode refid="17711" relation="include">
        </childnode>
        <childnode refid="17712" relation="include">
        </childnode>
        <childnode refid="17713" relation="include">
        </childnode>
        <childnode refid="17714" relation="include">
        </childnode>
        <childnode refid="17715" relation="include">
        </childnode>
        <childnode refid="17716" relation="include">
        </childnode>
        <childnode refid="17717" relation="include">
        </childnode>
        <childnode refid="17718" relation="include">
        </childnode>
        <childnode refid="17719" relation="include">
        </childnode>
        <childnode refid="17720" relation="include">
        </childnode>
        <childnode refid="17721" relation="include">
        </childnode>
        <childnode refid="17722" relation="include">
        </childnode>
        <childnode refid="17723" relation="include">
        </childnode>
        <childnode refid="17724" relation="include">
        </childnode>
        <childnode refid="17725" relation="include">
        </childnode>
        <childnode refid="17726" relation="include">
        </childnode>
        <childnode refid="17727" relation="include">
        </childnode>
        <childnode refid="17728" relation="include">
        </childnode>
        <childnode refid="17729" relation="include">
        </childnode>
        <childnode refid="17730" relation="include">
        </childnode>
        <childnode refid="17731" relation="include">
        </childnode>
        <childnode refid="17732" relation="include">
        </childnode>
        <childnode refid="17733" relation="include">
        </childnode>
        <childnode refid="17734" relation="include">
        </childnode>
        <childnode refid="17735" relation="include">
        </childnode>
        <childnode refid="17736" relation="include">
        </childnode>
        <childnode refid="17737" relation="include">
        </childnode>
        <childnode refid="17738" relation="include">
        </childnode>
        <childnode refid="17739" relation="include">
        </childnode>
        <childnode refid="17740" relation="include">
        </childnode>
        <childnode refid="17741" relation="include">
        </childnode>
        <childnode refid="17742" relation="include">
        </childnode>
        <childnode refid="17743" relation="include">
        </childnode>
        <childnode refid="17744" relation="include">
        </childnode>
        <childnode refid="17745" relation="include">
        </childnode>
        <childnode refid="17746" relation="include">
        </childnode>
        <childnode refid="17747" relation="include">
        </childnode>
        <childnode refid="17748" relation="include">
        </childnode>
        <childnode refid="17749" relation="include">
        </childnode>
        <childnode refid="17750" relation="include">
        </childnode>
        <childnode refid="17751" relation="include">
        </childnode>
        <childnode refid="17752" relation="include">
        </childnode>
        <childnode refid="17753" relation="include">
        </childnode>
        <childnode refid="17754" relation="include">
        </childnode>
        <childnode refid="17755" relation="include">
        </childnode>
        <childnode refid="17756" relation="include">
        </childnode>
        <childnode refid="17757" relation="include">
        </childnode>
        <childnode refid="17758" relation="include">
        </childnode>
        <childnode refid="17759" relation="include">
        </childnode>
        <childnode refid="17760" relation="include">
        </childnode>
        <childnode refid="17761" relation="include">
        </childnode>
        <childnode refid="17762" relation="include">
        </childnode>
        <childnode refid="17763" relation="include">
        </childnode>
        <childnode refid="17764" relation="include">
        </childnode>
        <childnode refid="17765" relation="include">
        </childnode>
        <childnode refid="17766" relation="include">
        </childnode>
        <childnode refid="17767" relation="include">
        </childnode>
        <childnode refid="17768" relation="include">
        </childnode>
        <childnode refid="17769" relation="include">
        </childnode>
        <childnode refid="17770" relation="include">
        </childnode>
        <childnode refid="17771" relation="include">
        </childnode>
        <childnode refid="17772" relation="include">
        </childnode>
        <childnode refid="17773" relation="include">
        </childnode>
        <childnode refid="17774" relation="include">
        </childnode>
        <childnode refid="17775" relation="include">
        </childnode>
        <childnode refid="17776" relation="include">
        </childnode>
        <childnode refid="17777" relation="include">
        </childnode>
        <childnode refid="17659" relation="include">
        </childnode>
        <childnode refid="17778" relation="include">
        </childnode>
        <childnode refid="17779" relation="include">
        </childnode>
        <childnode refid="17780" relation="include">
        </childnode>
        <childnode refid="17781" relation="include">
        </childnode>
        <childnode refid="17782" relation="include">
        </childnode>
        <childnode refid="17783" relation="include">
        </childnode>
        <childnode refid="17784" relation="include">
        </childnode>
        <childnode refid="17785" relation="include">
        </childnode>
        <childnode refid="17786" relation="include">
        </childnode>
        <childnode refid="17787" relation="include">
        </childnode>
        <childnode refid="17788" relation="include">
        </childnode>
        <childnode refid="17789" relation="include">
        </childnode>
        <childnode refid="17790" relation="include">
        </childnode>
      </node>
      <node id="17666">
        <label>branch_inference.h</label>
        <link refid="branch__inference_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17689">
        <label>cons_pseudoboolean.h</label>
        <link refid="cons__pseudoboolean_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17725">
        <label>heur_shifting.h</label>
        <link refid="heur__shifting_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17716">
        <label>heur_oneopt.h</label>
        <link refid="heur__oneopt_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17691">
        <label>cons_sos1.h</label>
        <link refid="cons__sos1_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17741">
        <label>nodesel_restartdfs.h</label>
        <link refid="nodesel__restartdfs_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17780">
        <label>sepa_closecuts.h</label>
        <link refid="sepa__closecuts_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17673">
        <label>cons_and.h</label>
        <link refid="cons__and_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17772">
        <label>reader_pip.h</label>
        <link refid="reader__pip_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17723">
        <label>heur_rounding.h</label>
        <link refid="heur__rounding_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17721">
        <label>heur_rins.h</label>
        <link refid="heur__rins_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17659">
        <label>scipdefplugins.h</label>
        <link refid="scipdefplugins_8h"/>
      </node>
      <node id="17697">
        <label>disp_default.h</label>
        <link refid="disp__default_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17702">
        <label>heur_dins.h</label>
        <link refid="heur__dins_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17734">
        <label>heur_zeroobj.h</label>
        <link refid="heur__zeroobj_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17696">
        <label>dialog_default.h</label>
        <link refid="dialog__default_8h"/>
      </node>
      <node id="17665">
        <label>branch_fullstrong.h</label>
        <link refid="branch__fullstrong_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17707">
        <label>heur_guideddiving.h</label>
        <link refid="heur__guideddiving_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17769">
        <label>reader_opb.h</label>
        <link refid="reader__opb_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17687">
        <label>cons_or.h</label>
        <link refid="cons__or_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17748">
        <label>presol_gateextraction.h</label>
        <link refid="presol__gateextraction_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17670">
        <label>branch_random.h</label>
        <link refid="branch__random_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17706">
        <label>heur_fracdiving.h</label>
        <link refid="heur__fracdiving_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17679">
        <label>cons_disjunction.h</label>
        <link refid="cons__disjunction_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17760">
        <label>reader_bnd.h</label>
        <link refid="reader__bnd_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17671">
        <label>branch_relpscost.h</label>
        <link refid="branch__relpscost_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17709">
        <label>heur_intshifting.h</label>
        <link refid="heur__intshifting_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17694">
        <label>cons_varbound.h</label>
        <link refid="cons__varbound_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17742">
        <label>nodesel_uct.h</label>
        <link refid="nodesel__uct_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17678">
        <label>cons_cumulative.h</label>
        <link refid="cons__cumulative_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17680">
        <label>cons_indicator.h</label>
        <link refid="cons__indicator_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17757">
        <label>prop_redcost.h</label>
        <link refid="prop__redcost_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17704">
        <label>heur_feaspump.h</label>
        <link refid="heur__feaspump_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17777">
        <label>reader_zpl.h</label>
        <link refid="reader__zpl_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17778">
        <label>sepa_cgmip.h</label>
        <link refid="sepa__cgmip_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17718">
        <label>heur_pscostdiving.h</label>
        <link refid="heur__pscostdiving_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17764">
        <label>reader_fix.h</label>
        <link refid="reader__fix_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17692">
        <label>cons_sos2.h</label>
        <link refid="cons__sos2_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17728">
        <label>heur_trivial.h</label>
        <link refid="heur__trivial_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17683">
        <label>cons_linear.h</label>
        <link refid="cons__linear_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17713">
        <label>heur_nlpdiving.h</label>
        <link refid="heur__nlpdiving_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17681">
        <label>cons_integral.h</label>
        <link refid="cons__integral_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17781">
        <label>sepa_cmir.h</label>
        <link refid="sepa__cmir_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17720">
        <label>heur_rens.h</label>
        <link refid="heur__rens_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17703">
        <label>heur_dualval.h</label>
        <link refid="heur__dualval_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17722">
        <label>heur_rootsoldiving.h</label>
        <link refid="heur__rootsoldiving_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17755">
        <label>prop_probing.h</label>
        <link refid="prop__probing_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17688">
        <label>cons_orbitope.h</label>
        <link refid="cons__orbitope_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17677">
        <label>cons_countsols.h</label>
        <link refid="cons__countsols_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17788">
        <label>sepa_rapidlearning.h</label>
        <link refid="sepa__rapidlearning_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17719">
        <label>heur_randrounding.h</label>
        <link refid="heur__randrounding_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17737">
        <label>nodesel_breadthfirst.h</label>
        <link refid="nodesel__breadthfirst_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17727">
        <label>heur_subnlp.h</label>
        <link refid="heur__subnlp_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17762">
        <label>reader_cip.h</label>
        <link refid="reader__cip_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17739">
        <label>nodesel_estimate.h</label>
        <link refid="nodesel__estimate_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17752">
        <label>prop_dualfix.h</label>
        <link refid="prop__dualfix_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17708">
        <label>heur_intdiving.h</label>
        <link refid="heur__intdiving_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17754">
        <label>prop_obbt.h</label>
        <link refid="prop__obbt_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17756">
        <label>prop_pseudoobj.h</label>
        <link refid="prop__pseudoobj_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17749">
        <label>presol_implics.h</label>
        <link refid="presol__implics_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17712">
        <label>heur_mutation.h</label>
        <link refid="heur__mutation_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17779">
        <label>sepa_clique.h</label>
        <link refid="sepa__clique_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17729">
        <label>heur_trysol.h</label>
        <link refid="heur__trysol_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17767">
        <label>reader_lp.h</label>
        <link refid="reader__lp_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17785">
        <label>sepa_intobj.h</label>
        <link refid="sepa__intobj_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17730">
        <label>heur_twoopt.h</label>
        <link refid="heur__twoopt_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17733">
        <label>heur_veclendiving.h</label>
        <link refid="heur__veclendiving_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17657">
        <label>type_nlpi.h</label>
        <link refid="type_nlpi.h"/>
        <childnode refid="17658" relation="include">
        </childnode>
        <childnode refid="17660" relation="include">
        </childnode>
        <childnode refid="17661" relation="include">
        </childnode>
        <childnode refid="17662" relation="include">
        </childnode>
        <childnode refid="17791" relation="include">
        </childnode>
      </node>
      <node id="17672">
        <label>cons_abspower.h</label>
        <link refid="cons__abspower_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17690">
        <label>cons_setppc.h</label>
        <link refid="cons__setppc_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17717">
        <label>heur_proximity.h</label>
        <link refid="heur__proximity_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17783">
        <label>sepa_gomory.h</label>
        <link refid="sepa__gomory_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17682">
        <label>cons_knapsack.h</label>
        <link refid="cons__knapsack_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17758">
        <label>prop_rootredcost.h</label>
        <link refid="prop__rootredcost_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17740">
        <label>nodesel_hybridestim.h</label>
        <link refid="nodesel__hybridestim_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17684">
        <label>cons_linking.h</label>
        <link refid="cons__linking_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17663">
        <label>branch_allfullstrong.h</label>
        <link refid="branch__allfullstrong_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17775">
        <label>reader_sol.h</label>
        <link refid="reader__sol_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17744">
        <label>presol_components.h</label>
        <link refid="presol__components_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17768">
        <label>reader_mps.h</label>
        <link refid="reader__mps_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17714">
        <label>heur_objpscostdiving.h</label>
        <link refid="heur__objpscostdiving_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17698">
        <label>heur_actconsdiving.h</label>
        <link refid="heur__actconsdiving_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17750">
        <label>presol_inttobinary.h</label>
        <link refid="presol__inttobinary_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17759">
        <label>prop_vbounds.h</label>
        <link refid="prop__vbounds_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17661">
        <label>pub_nlp.h</label>
        <link refid="pub__nlp_8h"/>
        <childnode refid="17662" relation="include">
        </childnode>
      </node>
      <node id="17786">
        <label>sepa_mcf.h</label>
        <link refid="sepa__mcf_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17782">
        <label>sepa_flowcover.h</label>
        <link refid="sepa__flowcover_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17753">
        <label>prop_genvbounds.h</label>
        <link refid="prop__genvbounds_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17747">
        <label>presol_dualinfer.h</label>
        <link refid="presol__dualinfer_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17660">
        <label>cons_soc.h</label>
        <link refid="cons__soc_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17736">
        <label>nodesel_bfs.h</label>
        <link refid="nodesel__bfs_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17669">
        <label>branch_pscost.h</label>
        <link refid="branch__pscost_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17784">
        <label>sepa_impliedbounds.h</label>
        <link refid="sepa__impliedbounds_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17686">
        <label>cons_nonlinear.h</label>
        <link refid="cons__nonlinear_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17763">
        <label>reader_cnf.h</label>
        <link refid="reader__cnf_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17732">
        <label>heur_vbounds.h</label>
        <link refid="heur__vbounds_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17746">
        <label>presol_domcol.h</label>
        <link refid="presol__domcol_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17710">
        <label>heur_linesearchdiving.h</label>
        <link refid="heur__linesearchdiving_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17766">
        <label>reader_gms.h</label>
        <link refid="reader__gms_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17774">
        <label>reader_rlp.h</label>
        <link refid="reader__rlp_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17693">
        <label>cons_superindicator.h</label>
        <link refid="cons__superindicator_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17667">
        <label>branch_leastinf.h</label>
        <link refid="branch__leastinf_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17724">
        <label>heur_shiftandpropagate.h</label>
        <link refid="heur__shiftandpropagate_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17743">
        <label>presol_boundshift.h</label>
        <link refid="presol__boundshift_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17791">
        <label>nlpi_ipopt.h</label>
        <link refid="nlpi__ipopt_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17685">
        <label>cons_logicor.h</label>
        <link refid="cons__logicor_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17770">
        <label>reader_osil.h</label>
        <link refid="reader__osil_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17765">
        <label>reader_fzn.h</label>
        <link refid="reader__fzn_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17738">
        <label>nodesel_dfs.h</label>
        <link refid="nodesel__dfs_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17676">
        <label>cons_conjunction.h</label>
        <link refid="cons__conjunction_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17789">
        <label>sepa_strongcg.h</label>
        <link refid="sepa__strongcg_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17761">
        <label>reader_ccg.h</label>
        <link refid="reader__ccg_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17751">
        <label>presol_trivial.h</label>
        <link refid="presol__trivial_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17705">
        <label>heur_fixandinfer.h</label>
        <link refid="heur__fixandinfer_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17658">
        <label>cons_quadratic.h</label>
        <link refid="cons__quadratic_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17664">
        <label>branch_cloud.h</label>
        <link refid="branch__cloud_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17787">
        <label>sepa_oddcycle.h</label>
        <link refid="sepa__oddcycle_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17701">
        <label>heur_crossover.h</label>
        <link refid="heur__crossover_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17675">
        <label>cons_bounddisjunction.h</label>
        <link refid="cons__bounddisjunction_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17674">
        <label>cons_bivariate.h</label>
        <link refid="cons__bivariate_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17776">
        <label>reader_wbo.h</label>
        <link refid="reader__wbo_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17735">
        <label>heur_zirounding.h</label>
        <link refid="heur__zirounding_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17715">
        <label>heur_octane.h</label>
        <link refid="heur__octane_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
      <node id="17668">
        <label>branch_mostinf.h</label>
        <link refid="branch__mostinf_8h"/>
        <childnode refid="17659" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="user-defined">
      <header>Parameter Methods</header>
      <memberdef kind="define" id="type__nlpi_8h_1a2aee1fdd81c62a25faf1c63f6fae89aa" prot="public" static="no">
        <name>SCIP_DECL_NLPIGETINTPAR</name>
        <param><defname>x</defname></param>
        <initializer><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref> x (<ref refid="type__nlpi_8h_1a62acbad3cf059a2fc3604b8cb23061e1" kindref="member">SCIP_NLPI</ref>* nlpi, <ref refid="type__nlpi_8h_1a014fc2228c3a9d9f119ce8112dd166a7" kindref="member">SCIP_NLPIPROBLEM</ref>* problem, <ref refid="type__nlpi_8h_1a3eeb8b06ecf7465c7be298fc84a404c1" kindref="member">SCIP_NLPPARAM</ref> type, int* ival)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>gets integer parameter of NLP</para><para>input:<itemizedlist>
<listitem><para>nlpi NLP interface structure</para></listitem><listitem><para>problem datastructure for problem instance</para></listitem><listitem><para>type parameter number</para></listitem><listitem><para>ival pointer to store the parameter value</para></listitem></itemizedlist>
</para><para>output:<itemizedlist>
<listitem><para>ival parameter value </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" line="443" column="9" bodyfile="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" bodystart="443" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="type__nlpi_8h_1aaaacc6ace66183cff40073fa122e166e" prot="public" static="no">
        <name>SCIP_DECL_NLPISETINTPAR</name>
        <param><defname>x</defname></param>
        <initializer><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref> x (<ref refid="type__nlpi_8h_1a62acbad3cf059a2fc3604b8cb23061e1" kindref="member">SCIP_NLPI</ref>* nlpi, <ref refid="type__nlpi_8h_1a014fc2228c3a9d9f119ce8112dd166a7" kindref="member">SCIP_NLPIPROBLEM</ref>* problem, <ref refid="type__nlpi_8h_1a3eeb8b06ecf7465c7be298fc84a404c1" kindref="member">SCIP_NLPPARAM</ref> type, int ival)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sets integer parameter of NLP</para><para>input:<itemizedlist>
<listitem><para>nlpi NLP interface structure</para></listitem><listitem><para>problem datastructure for problem instance</para></listitem><listitem><para>type parameter number</para></listitem><listitem><para>ival parameter value </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" line="453" column="9" bodyfile="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" bodystart="453" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="type__nlpi_8h_1ae4ca7b5fadc5d5eeb4448a4f233c4adb" prot="public" static="no">
        <name>SCIP_DECL_NLPIGETREALPAR</name>
        <param><defname>x</defname></param>
        <initializer><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref> x (<ref refid="type__nlpi_8h_1a62acbad3cf059a2fc3604b8cb23061e1" kindref="member">SCIP_NLPI</ref>* nlpi, <ref refid="type__nlpi_8h_1a014fc2228c3a9d9f119ce8112dd166a7" kindref="member">SCIP_NLPIPROBLEM</ref>* problem, <ref refid="type__nlpi_8h_1a3eeb8b06ecf7465c7be298fc84a404c1" kindref="member">SCIP_NLPPARAM</ref> type, <ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>* dval)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>gets floating point parameter of NLP</para><para>input:<itemizedlist>
<listitem><para>nlpi NLP interface structure</para></listitem><listitem><para>problem datastructure for problem instance, can be NULL only if type == SCIP_NLPPAR_INFINITY</para></listitem><listitem><para>type parameter number</para></listitem><listitem><para>dval pointer to store the parameter value</para></listitem></itemizedlist>
</para><para>output:<itemizedlist>
<listitem><para>dval parameter value </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" line="466" column="9" bodyfile="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" bodystart="466" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="type__nlpi_8h_1a173c8b4c47d84d50dc892f530e6310f1" prot="public" static="no">
        <name>SCIP_DECL_NLPISETREALPAR</name>
        <param><defname>x</defname></param>
        <initializer><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref> x (<ref refid="type__nlpi_8h_1a62acbad3cf059a2fc3604b8cb23061e1" kindref="member">SCIP_NLPI</ref>* nlpi, <ref refid="type__nlpi_8h_1a014fc2228c3a9d9f119ce8112dd166a7" kindref="member">SCIP_NLPIPROBLEM</ref>* problem, <ref refid="type__nlpi_8h_1a3eeb8b06ecf7465c7be298fc84a404c1" kindref="member">SCIP_NLPPARAM</ref> type, <ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> dval)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sets floating point parameter of NLP</para><para>input:<itemizedlist>
<listitem><para>nlpi NLP interface structure</para></listitem><listitem><para>problem datastructure for problem instance, can be NULL only if type == SCIP_NLPPAR_INFINITY</para></listitem><listitem><para>type parameter number</para></listitem><listitem><para>dval parameter value </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" line="476" column="9" bodyfile="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" bodystart="476" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="type__nlpi_8h_1ae1855ccd523640954479cd237f15eb31" prot="public" static="no">
        <name>SCIP_DECL_NLPIGETSTRINGPAR</name>
        <param><defname>x</defname></param>
        <initializer><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref> x (<ref refid="type__nlpi_8h_1a62acbad3cf059a2fc3604b8cb23061e1" kindref="member">SCIP_NLPI</ref>* nlpi, <ref refid="type__nlpi_8h_1a014fc2228c3a9d9f119ce8112dd166a7" kindref="member">SCIP_NLPIPROBLEM</ref>* problem, <ref refid="type__nlpi_8h_1a3eeb8b06ecf7465c7be298fc84a404c1" kindref="member">SCIP_NLPPARAM</ref> type, const char** sval)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>gets string parameter of NLP</para><para>input:<itemizedlist>
<listitem><para>nlpi NLP interface structure</para></listitem><listitem><para>problem datastructure for problem instance</para></listitem><listitem><para>type parameter number</para></listitem><listitem><para>sval pointer to store the string value, the user must not modify the string</para></listitem></itemizedlist>
</para><para>output:<itemizedlist>
<listitem><para>sval parameter value </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" line="489" column="9" bodyfile="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" bodystart="489" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="type__nlpi_8h_1a592b7226617ec182a6da6e13840620a3" prot="public" static="no">
        <name>SCIP_DECL_NLPISETSTRINGPAR</name>
        <param><defname>x</defname></param>
        <initializer><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref> x (<ref refid="type__nlpi_8h_1a62acbad3cf059a2fc3604b8cb23061e1" kindref="member">SCIP_NLPI</ref>* nlpi, <ref refid="type__nlpi_8h_1a014fc2228c3a9d9f119ce8112dd166a7" kindref="member">SCIP_NLPIPROBLEM</ref>* problem, <ref refid="type__nlpi_8h_1a3eeb8b06ecf7465c7be298fc84a404c1" kindref="member">SCIP_NLPPARAM</ref> type, const char* sval)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sets string parameter of NLP</para><para>input:<itemizedlist>
<listitem><para>nlpi NLP interface structure</para></listitem><listitem><para>problem datastructure for problem instance</para></listitem><listitem><para>type parameter number</para></listitem><listitem><para>sval parameter value </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" line="499" column="9" bodyfile="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" bodystart="499" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="type__nlpi_8h_1ab7e8000232c4625a6c7075ce6414517d" prot="public" static="no">
        <name>SCIP_DECL_NLPISETMESSAGEHDLR</name>
        <param><defname>x</defname></param>
        <initializer><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref> x (<ref refid="type__nlpi_8h_1a62acbad3cf059a2fc3604b8cb23061e1" kindref="member">SCIP_NLPI</ref>* nlpi, <ref refid="type__message_8h_1a7d71113339d14873806c1399442fae8d" kindref="member">SCIP_MESSAGEHDLR</ref>* messagehdlr)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sets message handler for message output</para><para>input:<itemizedlist>
<listitem><para>nlpi NLP interface structure</para></listitem><listitem><para>messagehdlr SCIP message handler, or NULL to suppress all output </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" line="507" column="9" bodyfile="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" bodystart="507" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="type__nlpi_8h_1ab444b70f0450a62fbe8b6678183083ec" prot="public" static="no">
        <name>SCIP_DECL_NLPICOPY</name>
        <param><defname>x</defname></param>
        <initializer><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref> x (BMS_BLKMEM* blkmem, <ref refid="type__nlpi_8h_1a62acbad3cf059a2fc3604b8cb23061e1" kindref="member">SCIP_NLPI</ref>* sourcenlpi, <ref refid="type__nlpi_8h_1a62acbad3cf059a2fc3604b8cb23061e1" kindref="member">SCIP_NLPI</ref>** targetnlpi)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>NLP solver termination status copy method of NLP interface (called when SCIP copies plugins)</para><para>input:<itemizedlist>
<listitem><para>blkmem block memory of target SCIP</para></listitem><listitem><para>sourcenlpi the NLP interface to copy</para></listitem><listitem><para>targetnlpi buffer to store pointer to copy of NLP interface </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" line="94" column="9" bodyfile="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" bodystart="94" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="type__nlpi_8h_1acccd938a64b239e3fbd993c2cc74e588" prot="public" static="no">
        <name>SCIP_DECL_NLPIFREE</name>
        <param><defname>x</defname></param>
        <initializer><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref> x (<ref refid="type__nlpi_8h_1a62acbad3cf059a2fc3604b8cb23061e1" kindref="member">SCIP_NLPI</ref>* nlpi)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>destructor of NLP interface to free nlpi data</para><para>input:<itemizedlist>
<listitem><para>nlpi datastructure for solver interface </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" line="101" column="9" bodyfile="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="type__nlpi_8h_1abe0e15e23ef029f00b9a6c891aca90ac" prot="public" static="no">
        <name>SCIP_DECL_NLPIGETSOLVERPOINTER</name>
        <param><defname>x</defname></param>
        <initializer>void* x (<ref refid="type__nlpi_8h_1a62acbad3cf059a2fc3604b8cb23061e1" kindref="member">SCIP_NLPI</ref>* nlpi)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>gets pointer to solver-internal NLP solver</para><para>to do dirty stuff</para><para>input:<itemizedlist>
<listitem><para>nlpi datastructure for solver interface</para></listitem></itemizedlist>
</para><para>return: void pointer to solver </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" line="112" column="9" bodyfile="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" bodystart="112" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="type__nlpi_8h_1a336b7559c9d9977edd0413ff289a73ad" prot="public" static="no">
        <name>SCIP_DECL_NLPICREATEPROBLEM</name>
        <param><defname>x</defname></param>
        <initializer><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref> x (<ref refid="type__nlpi_8h_1a62acbad3cf059a2fc3604b8cb23061e1" kindref="member">SCIP_NLPI</ref>* nlpi, <ref refid="type__nlpi_8h_1a014fc2228c3a9d9f119ce8112dd166a7" kindref="member">SCIP_NLPIPROBLEM</ref>** problem, const char* name)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>creates a problem instance</para><para>input:<itemizedlist>
<listitem><para>nlpi datastructure for solver interface</para></listitem><listitem><para>problem pointer to store the problem data</para></listitem><listitem><para>name name of problem, can be NULL </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" line="121" column="9" bodyfile="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="type__nlpi_8h_1a8fc7b7a4a1ec09aef5784a0a8c928f0e" prot="public" static="no">
        <name>SCIP_DECL_NLPIFREEPROBLEM</name>
        <param><defname>x</defname></param>
        <initializer><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref> x (<ref refid="type__nlpi_8h_1a62acbad3cf059a2fc3604b8cb23061e1" kindref="member">SCIP_NLPI</ref>* nlpi, <ref refid="type__nlpi_8h_1a014fc2228c3a9d9f119ce8112dd166a7" kindref="member">SCIP_NLPIPROBLEM</ref>** problem)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>free a problem instance</para><para>input:<itemizedlist>
<listitem><para>nlpi datastructure for solver interface</para></listitem><listitem><para>problem pointer where problem data is stored </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" line="129" column="9" bodyfile="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" bodystart="129" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="type__nlpi_8h_1acae8b601c436b73d56f75631db121780" prot="public" static="no">
        <name>SCIP_DECL_NLPIGETPROBLEMPOINTER</name>
        <param><defname>x</defname></param>
        <initializer>void* x (<ref refid="type__nlpi_8h_1a62acbad3cf059a2fc3604b8cb23061e1" kindref="member">SCIP_NLPI</ref>* nlpi, <ref refid="type__nlpi_8h_1a014fc2228c3a9d9f119ce8112dd166a7" kindref="member">SCIP_NLPIPROBLEM</ref>* problem)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>gets pointer to solver-internal problem instance</para><para>to do dirty stuff</para><para>input:<itemizedlist>
<listitem><para>nlpi datastructure for solver interface</para></listitem><listitem><para>problem datastructure for problem instance</para></listitem></itemizedlist>
</para><para>return: void pointer to problem instance </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" line="141" column="9" bodyfile="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" bodystart="141" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="type__nlpi_8h_1a78227183b94f8ec708e3991e63f66159" prot="public" static="no">
        <name>SCIP_DECL_NLPIADDVARS</name>
        <param><defname>x</defname></param>
        <initializer><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref> x (<ref refid="type__nlpi_8h_1a62acbad3cf059a2fc3604b8cb23061e1" kindref="member">SCIP_NLPI</ref>* nlpi, <ref refid="type__nlpi_8h_1a014fc2228c3a9d9f119ce8112dd166a7" kindref="member">SCIP_NLPIPROBLEM</ref>* problem, int nvars, const <ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>* lbs, \
      const <ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>* ubs, const char** varnames)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>add variables</para><para>input:<itemizedlist>
<listitem><para>nlpi datastructure for solver interface</para></listitem><listitem><para>problem datastructure for problem instance</para></listitem><listitem><para>nvars number of variables</para></listitem><listitem><para>lbs lower bounds of variables, can be NULL if -infinity</para></listitem><listitem><para>ubs upper bounds of variables, can be NULL if +infinity</para></listitem><listitem><para>varnames names of variables, can be NULL </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" line="153" column="9" bodyfile="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" bodystart="153" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="type__nlpi_8h_1ad02fe9c84e6f31958ffa424cf6f439b1" prot="public" static="no">
        <name>SCIP_DECL_NLPIADDCONSTRAINTS</name>
        <param><defname>x</defname></param>
        <initializer><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref> x (<ref refid="type__nlpi_8h_1a62acbad3cf059a2fc3604b8cb23061e1" kindref="member">SCIP_NLPI</ref>* nlpi, <ref refid="type__nlpi_8h_1a014fc2228c3a9d9f119ce8112dd166a7" kindref="member">SCIP_NLPIPROBLEM</ref>* problem, int ncons, const <ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>* lhss, \
      const <ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>* rhss, const int* nlininds, int* const* lininds, <ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>* const* linvals, const int* nquadelems, \
      <ref refid="type__expr_8h_1abaf258f420336359952d83563ed641f8" kindref="member">SCIP_QUADELEM</ref>* const* quadelems, int* const* exprvaridxs, <ref refid="type__expr_8h_1a4ae8525548d76cb766394131bb405cf2" kindref="member">SCIP_EXPRTREE</ref>* const* exprtrees, const char** names)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>add constraints quadratic coefficiens: row oriented matrix for each constraint</para><para>input:<itemizedlist>
<listitem><para>nlpi datastructure for solver interface</para></listitem><listitem><para>problem datastructure for problem instance</para></listitem><listitem><para>ncons number of added constraints</para></listitem><listitem><para>lhss left hand sides of constraints, can be NULL if -infinity</para></listitem><listitem><para>rhss right hand sides of constraints, can be NULL if +infinity</para></listitem><listitem><para>nlininds number of linear coefficients for each constraint may be NULL in case of no linear part</para></listitem><listitem><para>lininds indices of variables for linear coefficients for each constraint may be NULL in case of no linear part</para></listitem><listitem><para>linvals values of linear coefficient for each constraint may be NULL in case of no linear part</para></listitem><listitem><para>nquadelems number of quadratic elements for each constraint may be NULL in case of no quadratic part</para></listitem><listitem><para>quadelems quadratic elements for each constraint may be NULL in case of no quadratic part</para></listitem><listitem><para>exprvaridxs indices of variables in expression tree, maps variable indices in expression tree to indices in nlp entry of array may be NULL in case of no expression tree may be NULL in case of no expression tree in any constraint</para></listitem><listitem><para>exprtrees expression tree for nonquadratic part of constraints entry of array may be NULL in case of no nonquadratic part may be NULL in case of no nonquadratic part in any constraint</para></listitem><listitem><para>names of constraints, may be NULL or entries may be NULL </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" line="183" column="9" bodyfile="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" bodystart="183" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="type__nlpi_8h_1a30e029f525e23c0a4d0b6f7b411db9d3" prot="public" static="no">
        <name>SCIP_DECL_NLPISETOBJECTIVE</name>
        <param><defname>x</defname></param>
        <initializer><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref> x (<ref refid="type__nlpi_8h_1a62acbad3cf059a2fc3604b8cb23061e1" kindref="member">SCIP_NLPI</ref>* nlpi, <ref refid="type__nlpi_8h_1a014fc2228c3a9d9f119ce8112dd166a7" kindref="member">SCIP_NLPIPROBLEM</ref>* problem, int nlins, const int* lininds, \
      const <ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>* linvals, int nquadelems, const <ref refid="type__expr_8h_1abaf258f420336359952d83563ed641f8" kindref="member">SCIP_QUADELEM</ref>* quadelems, const int* exprvaridxs, const <ref refid="type__expr_8h_1a4ae8525548d76cb766394131bb405cf2" kindref="member">SCIP_EXPRTREE</ref>* exprtree, \
      const <ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> constant)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sets or overwrites objective, a minimization problem is expected May change sparsity pattern.</para><para>input:<itemizedlist>
<listitem><para>nlpi datastructure for solver interface</para></listitem><listitem><para>problem datastructure for problem instance</para></listitem><listitem><para>nlins number of linear variables</para></listitem><listitem><para>lininds variable indices may be NULL in case of no linear part</para></listitem><listitem><para>linvals coefficient values may be NULL in case of no linear part</para></listitem><listitem><para>nquadelems number of elements in matrix of quadratic part</para></listitem><listitem><para>quadelems elements of quadratic part may be NULL in case of no quadratic part</para></listitem><listitem><para>exprvaridxs indices of variables in expression tree, maps variable indices in expression tree to indices in nlp may be NULL in case of no expression tree</para></listitem><listitem><para>exprtree expression tree for nonquadratic part of objective function may be NULL in case of no nonquadratic part</para></listitem><listitem><para>constant objective value offset </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" line="207" column="9" bodyfile="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" bodystart="207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="type__nlpi_8h_1ac3de57676028b74c51fc75dc4217bbbd" prot="public" static="no">
        <name>SCIP_DECL_NLPICHGVARBOUNDS</name>
        <param><defname>x</defname></param>
        <initializer><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref> x (<ref refid="type__nlpi_8h_1a62acbad3cf059a2fc3604b8cb23061e1" kindref="member">SCIP_NLPI</ref>* nlpi, <ref refid="type__nlpi_8h_1a014fc2228c3a9d9f119ce8112dd166a7" kindref="member">SCIP_NLPIPROBLEM</ref>* problem, const int nvars, const int* indices, \
      const <ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>* lbs, const <ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>* ubs)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>change variable bounds</para><para>input:<itemizedlist>
<listitem><para>nlpi datastructure for solver interface</para></listitem><listitem><para>problem datastructure for problem instance</para></listitem><listitem><para>nvars number of variables to change bounds</para></listitem><listitem><para>indices indices of variables to change bounds</para></listitem><listitem><para>lbs new lower bounds</para></listitem><listitem><para>ubs new upper bounds </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" line="221" column="9" bodyfile="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" bodystart="221" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="type__nlpi_8h_1a609abd12374695cbda8c4658e452c3a8" prot="public" static="no">
        <name>SCIP_DECL_NLPICHGCONSSIDES</name>
        <param><defname>x</defname></param>
        <initializer><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref> x (<ref refid="type__nlpi_8h_1a62acbad3cf059a2fc3604b8cb23061e1" kindref="member">SCIP_NLPI</ref>* nlpi, <ref refid="type__nlpi_8h_1a014fc2228c3a9d9f119ce8112dd166a7" kindref="member">SCIP_NLPIPROBLEM</ref>* problem, int nconss, const int* indices, \
      const <ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>* lhss, const <ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>* rhss)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>change constraint sides</para><para>input:<itemizedlist>
<listitem><para>nlpi datastructure for solver interface</para></listitem><listitem><para>problem datastructure for problem instance</para></listitem><listitem><para>nconss number of constraints to change sides</para></listitem><listitem><para>indices indices of constraints to change sides</para></listitem><listitem><para>lhss new left hand sides</para></listitem><listitem><para>rhss new right hand sides </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" line="234" column="9" bodyfile="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" bodystart="234" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="type__nlpi_8h_1a737163d103b96368ab436bbee201ebd8" prot="public" static="no">
        <name>SCIP_DECL_NLPIDELVARSET</name>
        <param><defname>x</defname></param>
        <initializer><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref> x (<ref refid="type__nlpi_8h_1a62acbad3cf059a2fc3604b8cb23061e1" kindref="member">SCIP_NLPI</ref>* nlpi, <ref refid="type__nlpi_8h_1a014fc2228c3a9d9f119ce8112dd166a7" kindref="member">SCIP_NLPIPROBLEM</ref>* problem, int* dstats)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete a set of variables</para><para>input:<itemizedlist>
<listitem><para>nlpi datastructure for solver interface</para></listitem><listitem><para>problem datastructure for problem instance</para></listitem><listitem><para>dstats deletion status of vars; 1 if var should be deleted, 0 if not</para></listitem></itemizedlist>
</para><para>output:<itemizedlist>
<listitem><para>dstats new position of var, -1 if var was deleted </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" line="247" column="9" bodyfile="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" bodystart="247" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="type__nlpi_8h_1a5c8527d8d25011697d1dbbcc3d0eb09c" prot="public" static="no">
        <name>SCIP_DECL_NLPIDELCONSSET</name>
        <param><defname>x</defname></param>
        <initializer><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref> x (<ref refid="type__nlpi_8h_1a62acbad3cf059a2fc3604b8cb23061e1" kindref="member">SCIP_NLPI</ref>* nlpi, <ref refid="type__nlpi_8h_1a014fc2228c3a9d9f119ce8112dd166a7" kindref="member">SCIP_NLPIPROBLEM</ref>* problem, int* dstats)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>delete a set of constraints</para><para>input:<itemizedlist>
<listitem><para>nlpi datastructure for solver interface</para></listitem><listitem><para>problem datastructure for problem instance</para></listitem><listitem><para>dstats deletion status of rows; 1 if row should be deleted, 0 if not</para></listitem></itemizedlist>
</para><para>output:<itemizedlist>
<listitem><para>dstats new position of row, -1 if row was deleted </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" line="259" column="9" bodyfile="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" bodystart="259" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="type__nlpi_8h_1a1186fc25efe361083a8a8d3ec9c9c9c8" prot="public" static="no">
        <name>SCIP_DECL_NLPICHGLINEARCOEFS</name>
        <param><defname>x</defname></param>
        <initializer><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref> x (<ref refid="type__nlpi_8h_1a62acbad3cf059a2fc3604b8cb23061e1" kindref="member">SCIP_NLPI</ref>* nlpi, <ref refid="type__nlpi_8h_1a014fc2228c3a9d9f119ce8112dd166a7" kindref="member">SCIP_NLPIPROBLEM</ref>* problem, int idx, int nvals, \
      const int* varidxs, const <ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>* vals)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>changes (or adds) linear coefficients in a constraint or objective</para><para>input:<itemizedlist>
<listitem><para>nlpi datastructure for solver interface</para></listitem><listitem><para>problem datastructure for problem instance</para></listitem><listitem><para>idx index of constraint or -1 for objective</para></listitem><listitem><para>nvals number of values in linear constraint to change</para></listitem><listitem><para>varidxs indices of variables which coefficient to change</para></listitem><listitem><para>vals new values for coefficients </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" line="271" column="9" bodyfile="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" bodystart="271" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="type__nlpi_8h_1a653a9d506252ecc8fae93cabee26df31" prot="public" static="no">
        <name>SCIP_DECL_NLPICHGQUADCOEFS</name>
        <param><defname>x</defname></param>
        <initializer><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref> x (<ref refid="type__nlpi_8h_1a62acbad3cf059a2fc3604b8cb23061e1" kindref="member">SCIP_NLPI</ref>* nlpi, <ref refid="type__nlpi_8h_1a014fc2228c3a9d9f119ce8112dd166a7" kindref="member">SCIP_NLPIPROBLEM</ref>* problem, int idx, int nquadelems, \
      const <ref refid="type__expr_8h_1abaf258f420336359952d83563ed641f8" kindref="member">SCIP_QUADELEM</ref>* quadelems)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>changes (or adds) coefficients in the quadratic part of a constraint or objective</para><para>input:<itemizedlist>
<listitem><para>nlpi datastructure for solver interface</para></listitem><listitem><para>problem datastructure for problem instance</para></listitem><listitem><para>idx index of constraint or -1 for objective</para></listitem><listitem><para>nquadelems number of entries in quadratic matrix to change</para></listitem><listitem><para>quadelems new elements in quadratic matrix (replacing already existing ones or adding new ones) </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" line="283" column="9" bodyfile="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" bodystart="283" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="type__nlpi_8h_1a0bbae978e0a862c67405f9801adfb119" prot="public" static="no">
        <name>SCIP_DECL_NLPICHGEXPRTREE</name>
        <param><defname>x</defname></param>
        <initializer><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref> x (<ref refid="type__nlpi_8h_1a62acbad3cf059a2fc3604b8cb23061e1" kindref="member">SCIP_NLPI</ref>* nlpi, <ref refid="type__nlpi_8h_1a014fc2228c3a9d9f119ce8112dd166a7" kindref="member">SCIP_NLPIPROBLEM</ref>* problem, int idxcons, \
      const int* exprvaridxs, const <ref refid="type__expr_8h_1a4ae8525548d76cb766394131bb405cf2" kindref="member">SCIP_EXPRTREE</ref>* exprtree)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>replaces the expression tree of a constraint or objective</para><para>input:<itemizedlist>
<listitem><para>nlpi datastructure for solver interface</para></listitem><listitem><para>problem datastructure for problem instance</para></listitem><listitem><para>idxcons index of constraint or -1 for objective</para></listitem><listitem><para>exprvaridxs indices of variables in expression tree, maps variable indices in expression tree to indices in nlp, or NULL</para></listitem><listitem><para>exprtree new expression tree for constraint or objective, or NULL to only remove previous tree </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" line="295" column="9" bodyfile="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" bodystart="295" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="type__nlpi_8h_1a39da8a9d0fc7b25c12cc05c7b70e9567" prot="public" static="no">
        <name>SCIP_DECL_NLPICHGNONLINCOEF</name>
        <param><defname>x</defname></param>
        <initializer><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref> x (<ref refid="type__nlpi_8h_1a62acbad3cf059a2fc3604b8cb23061e1" kindref="member">SCIP_NLPI</ref>* nlpi, <ref refid="type__nlpi_8h_1a014fc2228c3a9d9f119ce8112dd166a7" kindref="member">SCIP_NLPIPROBLEM</ref>* problem, int idxcons, int idxparam, \
      <ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> value)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>change the value of one parameter in the nonlinear part</para><para>input:<itemizedlist>
<listitem><para>nlpi datastructure for solver interface</para></listitem><listitem><para>problem datastructure for problem instance</para></listitem><listitem><para>idxcons index of constraint or -1 for objective</para></listitem><listitem><para>idxparam index of parameter</para></listitem><listitem><para>value new value for nonlinear parameter</para></listitem></itemizedlist>
</para><para>return: Error if parameter does not exist </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" line="309" column="9" bodyfile="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" bodystart="309" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="type__nlpi_8h_1a13c0835097e180bd1eb86313c7776516" prot="public" static="no">
        <name>SCIP_DECL_NLPICHGOBJCONSTANT</name>
        <param><defname>x</defname></param>
        <initializer><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref> x (<ref refid="type__nlpi_8h_1a62acbad3cf059a2fc3604b8cb23061e1" kindref="member">SCIP_NLPI</ref>* nlpi, <ref refid="type__nlpi_8h_1a014fc2228c3a9d9f119ce8112dd166a7" kindref="member">SCIP_NLPIPROBLEM</ref>* problem, <ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> objconstant)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>change the constant offset in the objective</para><para>input:<itemizedlist>
<listitem><para>nlpi datastructure for solver interface</para></listitem><listitem><para>problem datastructure for problem instance</para></listitem><listitem><para>objconstant new value for objective constant </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" line="319" column="9" bodyfile="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" bodystart="319" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="type__nlpi_8h_1a8c1743257c03269de9ad9aa3dd208b5d" prot="public" static="no">
        <name>SCIP_DECL_NLPISETINITIALGUESS</name>
        <param><defname>x</defname></param>
        <initializer><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref> x (<ref refid="type__nlpi_8h_1a62acbad3cf059a2fc3604b8cb23061e1" kindref="member">SCIP_NLPI</ref>* nlpi, <ref refid="type__nlpi_8h_1a014fc2228c3a9d9f119ce8112dd166a7" kindref="member">SCIP_NLPIPROBLEM</ref>* problem, <ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>* primalvalues, \
      <ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>* consdualvalues, <ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>* varlbdualvalues, <ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>* varubdualvalues)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sets initial guess for primal variables</para><para>input:<itemizedlist>
<listitem><para>nlpi datastructure for solver interface</para></listitem><listitem><para>problem datastructure for problem instance</para></listitem><listitem><para>primalvalues initial primal values for variables, or NULL to clear previous values</para></listitem><listitem><para>consdualvalues initial dual values for constraints, or NULL to clear previous values</para></listitem><listitem><para>varlbdualvalues initial dual values for variable lower bounds, or NULL to clear previous values</para></listitem><listitem><para>varubdualvalues initial dual values for variable upper bounds, or NULL to clear previous values </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" line="331" column="9" bodyfile="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" bodystart="331" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="type__nlpi_8h_1a001a76a9a2d02288d0752756a4f48dae" prot="public" static="no">
        <name>SCIP_DECL_NLPISOLVE</name>
        <param><defname>x</defname></param>
        <initializer><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref> x (<ref refid="type__nlpi_8h_1a62acbad3cf059a2fc3604b8cb23061e1" kindref="member">SCIP_NLPI</ref>* nlpi, <ref refid="type__nlpi_8h_1a014fc2228c3a9d9f119ce8112dd166a7" kindref="member">SCIP_NLPIPROBLEM</ref>* problem)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>tries to solve NLP</para><para>input:<itemizedlist>
<listitem><para>nlpi datastructure for solver interface</para></listitem><listitem><para>problem datastructure for problem instance </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" line="340" column="9" bodyfile="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" bodystart="340" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="type__nlpi_8h_1abf83ff0c4673648045fcfd5255d7b654" prot="public" static="no">
        <name>SCIP_DECL_NLPIGETSOLSTAT</name>
        <param><defname>x</defname></param>
        <initializer><ref refid="type__nlpi_8h_1a87ce65676e9e36efbbb735b4125725d9" kindref="member">SCIP_NLPSOLSTAT</ref> x (<ref refid="type__nlpi_8h_1a62acbad3cf059a2fc3604b8cb23061e1" kindref="member">SCIP_NLPI</ref>* nlpi, <ref refid="type__nlpi_8h_1a014fc2228c3a9d9f119ce8112dd166a7" kindref="member">SCIP_NLPIPROBLEM</ref>* problem)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>gives solution status</para><para>input:<itemizedlist>
<listitem><para>nlpi datastructure for solver interface</para></listitem><listitem><para>problem datastructure for problem instance</para></listitem></itemizedlist>
</para><para>return: Solution Status </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" line="350" column="9" bodyfile="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" bodystart="350" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="type__nlpi_8h_1ad09a369b899ddda83be8ee39a9f3d900" prot="public" static="no">
        <name>SCIP_DECL_NLPIGETTERMSTAT</name>
        <param><defname>x</defname></param>
        <initializer><ref refid="type__nlpi_8h_1ae2a3cc5d63fd0c0183ef8348c52ab9a8" kindref="member">SCIP_NLPTERMSTAT</ref> x (<ref refid="type__nlpi_8h_1a62acbad3cf059a2fc3604b8cb23061e1" kindref="member">SCIP_NLPI</ref>* nlpi, <ref refid="type__nlpi_8h_1a014fc2228c3a9d9f119ce8112dd166a7" kindref="member">SCIP_NLPIPROBLEM</ref>* problem)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>gives termination reason</para><para>input:<itemizedlist>
<listitem><para>nlpi datastructure for solver interface</para></listitem><listitem><para>problem datastructure for problem instance</para></listitem></itemizedlist>
</para><para>return: Termination Status </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" line="360" column="9" bodyfile="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" bodystart="360" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="type__nlpi_8h_1a18a5e246c1f5b0d7c2e4f59017a5a9cb" prot="public" static="no">
        <name>SCIP_DECL_NLPIGETSOLUTION</name>
        <param><defname>x</defname></param>
        <initializer><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref> x (<ref refid="type__nlpi_8h_1a62acbad3cf059a2fc3604b8cb23061e1" kindref="member">SCIP_NLPI</ref>* nlpi, <ref refid="type__nlpi_8h_1a014fc2228c3a9d9f119ce8112dd166a7" kindref="member">SCIP_NLPIPROBLEM</ref>* problem, <ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>** primalvalues, \
      <ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>** consdualvalues, <ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>** varlbdualvalues, <ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>** varubdualvalues)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>gives primal and dual solution values</para><para>solver can return NULL in dual values if not available but if solver provides dual values for one side of variable bounds, then it must also provide those for the other side</para><para>for a ranged constraint, the dual variable is positive if the right hand side is active and negative if the left hand side is active</para><para>input:<itemizedlist>
<listitem><para>nlpi datastructure for solver interface</para></listitem><listitem><para>problem datastructure for problem instance</para></listitem><listitem><para>primalvalues buffer to store pointer to array to primal values, or NULL if not needed</para></listitem><listitem><para>consdualvalues buffer to store pointer to array to dual values of constraints, or NULL if not needed</para></listitem><listitem><para>varlbdualvalues buffer to store pointer to array to dual values of variable lower bounds, or NULL if not needed</para></listitem><listitem><para>varubdualvalues buffer to store pointer to array to dual values of variable lower bounds, or NULL if not needed </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" line="377" column="9" bodyfile="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" bodystart="377" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="type__nlpi_8h_1a481900debb130ac4db90afb60f55789c" prot="public" static="no">
        <name>SCIP_DECL_NLPIGETSTATISTICS</name>
        <param><defname>x</defname></param>
        <initializer><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref> x (<ref refid="type__nlpi_8h_1a62acbad3cf059a2fc3604b8cb23061e1" kindref="member">SCIP_NLPI</ref>* nlpi, <ref refid="type__nlpi_8h_1a014fc2228c3a9d9f119ce8112dd166a7" kindref="member">SCIP_NLPIPROBLEM</ref>* problem, <ref refid="type__nlpi_8h_1a07d53bca357f7024447ceed41eb70e03" kindref="member">SCIP_NLPSTATISTICS</ref>* statistics)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>gives solve statistics</para><para>input:<itemizedlist>
<listitem><para>nlpi datastructure for solver interface</para></listitem><listitem><para>problem datastructure for problem instance</para></listitem><listitem><para>statistics pointer to store statistics</para></listitem></itemizedlist>
</para><para>output:<itemizedlist>
<listitem><para>statistics solve statistics </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" line="390" column="9" bodyfile="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" bodystart="390" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="type__nlpi_8h_1a9c99b338019ec1a7db1ad184eb43d39b" prot="public" static="no">
        <name>SCIP_DECL_NLPIGETWARMSTARTSIZE</name>
        <param><defname>x</defname></param>
        <initializer><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref> x (<ref refid="type__nlpi_8h_1a62acbad3cf059a2fc3604b8cb23061e1" kindref="member">SCIP_NLPI</ref>* nlpi, <ref refid="type__nlpi_8h_1a014fc2228c3a9d9f119ce8112dd166a7" kindref="member">SCIP_NLPIPROBLEM</ref>* problem, size_t* size)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>gives required size of a buffer to store a warmstart object</para><para>input:<itemizedlist>
<listitem><para>nlpi datastructure for solver interface</para></listitem><listitem><para>problem datastructure for problem instance</para></listitem><listitem><para>size pointer to store required size for warmstart buffer</para></listitem></itemizedlist>
</para><para>output:<itemizedlist>
<listitem><para>size required size for warmstart buffer </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" line="402" column="9" bodyfile="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" bodystart="402" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="type__nlpi_8h_1af4bc4cb6eae4656c973aebbede655771" prot="public" static="no">
        <name>SCIP_DECL_NLPIGETWARMSTARTMEMO</name>
        <param><defname>x</defname></param>
        <initializer><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref> x (<ref refid="type__nlpi_8h_1a62acbad3cf059a2fc3604b8cb23061e1" kindref="member">SCIP_NLPI</ref>* nlpi, <ref refid="type__nlpi_8h_1a014fc2228c3a9d9f119ce8112dd166a7" kindref="member">SCIP_NLPIPROBLEM</ref>* problem, void* buffer)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>stores warmstart information in buffer</para><para>required size of buffer should have been obtained by SCIPnlpiGetWarmstartSize before</para><para>input:<itemizedlist>
<listitem><para>nlpi datastructure for solver interface</para></listitem><listitem><para>problem datastructure for problem instance</para></listitem><listitem><para>buffer memory to store warmstart information</para></listitem></itemizedlist>
</para><para>output:<itemizedlist>
<listitem><para>buffer warmstart information in solver specific data structure </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" line="416" column="9" bodyfile="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" bodystart="416" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="type__nlpi_8h_1ae65157d1703b0cce3968e2f0c3fc098a" prot="public" static="no">
        <name>SCIP_DECL_NLPISETWARMSTARTMEMO</name>
        <param><defname>x</defname></param>
        <initializer><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref> x (<ref refid="type__nlpi_8h_1a62acbad3cf059a2fc3604b8cb23061e1" kindref="member">SCIP_NLPI</ref>* nlpi, <ref refid="type__nlpi_8h_1a014fc2228c3a9d9f119ce8112dd166a7" kindref="member">SCIP_NLPIPROBLEM</ref>* problem, void* buffer)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sets warmstart information in solver</para><para>write warmstart to buffer</para><para>input:<itemizedlist>
<listitem><para>nlpi datastructure for solver interface</para></listitem><listitem><para>problem datastructure for problem instance</para></listitem><listitem><para>buffer warmstart information </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" line="427" column="9" bodyfile="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" bodystart="427" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="type__nlpi_8h_1a73a8578c0f6614daedd32c9e1c1e06f7" prot="public" static="no">
        <name>SCIP_NlpParam</name>
        <enumvalue id="type__nlpi_8h_1a73a8578c0f6614daedd32c9e1c1e06f7a4a44043e9012d0de764983200c22a0eb" prot="public">
          <name>SCIP_NLPPAR_FROMSCRATCH</name>
          <initializer>=  0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>solver should start from scratch at next call?: 0 no, 1 yes (int) </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="type__nlpi_8h_1a73a8578c0f6614daedd32c9e1c1e06f7acdc236298e6a7e2f3b4055206f6222d5" prot="public">
          <name>SCIP_NLPPAR_VERBLEVEL</name>
          <initializer>=  1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>verbosity level of output of NLP solver to the screen: 0 off, 1 normal, 2 debug, &gt; 2 more debug (int) </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="type__nlpi_8h_1a73a8578c0f6614daedd32c9e1c1e06f7af3a6cf82a24d3247e2e067fafbfb4522" prot="public">
          <name>SCIP_NLPPAR_FEASTOL</name>
          <initializer>=  2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>feasibility tolerance for primal variables and slacks (real) </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="type__nlpi_8h_1a73a8578c0f6614daedd32c9e1c1e06f7a8d1a47ac1538683456f940e7f9ec0182" prot="public">
          <name>SCIP_NLPPAR_RELOBJTOL</name>
          <initializer>=  3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>relative objective tolerance (real) </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="type__nlpi_8h_1a73a8578c0f6614daedd32c9e1c1e06f7a15894d311fb5ee4a563a3ebc81cfbffb" prot="public">
          <name>SCIP_NLPPAR_LOBJLIM</name>
          <initializer>=  4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>lower objective limit (cutoff) (real) </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="type__nlpi_8h_1a73a8578c0f6614daedd32c9e1c1e06f7adc812858b4ab385e59195c8e39c09446" prot="public">
          <name>SCIP_NLPPAR_INFINITY</name>
          <initializer>=  5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>value for infinity used to decide unbounded sides, unbounded variable and constraint bounds, and upper objective limit (real) </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="type__nlpi_8h_1a73a8578c0f6614daedd32c9e1c1e06f7a917408d081fcf150d4cb64449be5ffba" prot="public">
          <name>SCIP_NLPPAR_ITLIM</name>
          <initializer>=  6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>NLP iteration limit (int) </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="type__nlpi_8h_1a73a8578c0f6614daedd32c9e1c1e06f7a249f12812974579bf1fd1540fe99db34" prot="public">
          <name>SCIP_NLPPAR_TILIM</name>
          <initializer>=  7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>NLP time limit (real) </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="type__nlpi_8h_1a73a8578c0f6614daedd32c9e1c1e06f7abf41bd32fe3109555cebed28303dbc19" prot="public">
          <name>SCIP_NLPPAR_OPTFILE</name>
          <initializer>=  8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>name of a solver specific option file (string) </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="type__nlpi_8h_1a73a8578c0f6614daedd32c9e1c1e06f7a53017eef5577edb40eaaea9ebca69239" prot="public">
          <name>SCIP_NLPPAR_FASTFAIL</name>
          <initializer>=  9</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>should the NLP solver stop early if convergence is slow?: 0 no, 1 yes (int) </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>NLP solver parameter </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" line="44" column="1" bodyfile="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" bodystart="43" bodyend="55"/>
      </memberdef>
      <memberdef kind="enum" id="type__nlpi_8h_1ad06ac0a1ef6b4bf7580950bbda718a64" prot="public" static="no">
        <name>SCIP_NlpSolStat</name>
        <enumvalue id="type__nlpi_8h_1ad06ac0a1ef6b4bf7580950bbda718a64ad2969ef7d17a042f1d9b3bca431757d0" prot="public">
          <name>SCIP_NLPSOLSTAT_GLOBOPT</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>solved to global optimality </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="type__nlpi_8h_1ad06ac0a1ef6b4bf7580950bbda718a64acaffdcb7751655db0aa55230e79d1746" prot="public">
          <name>SCIP_NLPSOLSTAT_LOCOPT</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>solved to local optimality </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="type__nlpi_8h_1ad06ac0a1ef6b4bf7580950bbda718a64a9bdf6677ef92308b486bdacc63e336d5" prot="public">
          <name>SCIP_NLPSOLSTAT_FEASIBLE</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>feasible solution found </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="type__nlpi_8h_1ad06ac0a1ef6b4bf7580950bbda718a64a98ce44722a8e0587c9c7851ee2544337" prot="public">
          <name>SCIP_NLPSOLSTAT_LOCINFEASIBLE</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>solution found is local infeasible </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="type__nlpi_8h_1ad06ac0a1ef6b4bf7580950bbda718a64a4395a524bb641e8ca35b85d7dbd287e6" prot="public">
          <name>SCIP_NLPSOLSTAT_GLOBINFEASIBLE</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>problem is proven infeasible </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="type__nlpi_8h_1ad06ac0a1ef6b4bf7580950bbda718a64a1815ac282227b3ef2363c9eb693caae6" prot="public">
          <name>SCIP_NLPSOLSTAT_UNBOUNDED</name>
          <initializer>= 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>problem is unbounded </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="type__nlpi_8h_1ad06ac0a1ef6b4bf7580950bbda718a64aea9f6d2605590c2524c9a826cb9de31a" prot="public">
          <name>SCIP_NLPSOLSTAT_UNKNOWN</name>
          <initializer>= 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>unknown solution status (e.g., problem not solved yet) </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>NLP solution status </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" line="60" column="1" bodyfile="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" bodystart="59" bodyend="68"/>
      </memberdef>
      <memberdef kind="enum" id="type__nlpi_8h_1a9157ba83c5cc7a3d24a87eb52cf8be38" prot="public" static="no">
        <name>SCIP_NlpTermStat</name>
        <enumvalue id="type__nlpi_8h_1a9157ba83c5cc7a3d24a87eb52cf8be38a0355cb35803739f7519617ab97789411" prot="public">
          <name>SCIP_NLPTERMSTAT_OKAY</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>terminated successfully </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="type__nlpi_8h_1a9157ba83c5cc7a3d24a87eb52cf8be38a645648d2d0ae715389378550491624ea" prot="public">
          <name>SCIP_NLPTERMSTAT_TILIM</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>time limit exceeded </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="type__nlpi_8h_1a9157ba83c5cc7a3d24a87eb52cf8be38a5e0d28b320457f1cc896ea2e5089440d" prot="public">
          <name>SCIP_NLPTERMSTAT_ITLIM</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>iteration limit exceeded </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="type__nlpi_8h_1a9157ba83c5cc7a3d24a87eb52cf8be38af53d62880b3959c8c4912052ebc05ecf" prot="public">
          <name>SCIP_NLPTERMSTAT_LOBJLIM</name>
          <initializer>= 3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>lower objective limit reached </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="type__nlpi_8h_1a9157ba83c5cc7a3d24a87eb52cf8be38ac44b3a38e881a87c3490cfb28acc435e" prot="public">
          <name>SCIP_NLPTERMSTAT_UOBJLIM</name>
          <initializer>= 4</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>upper objective limit (= infinity) reached </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="type__nlpi_8h_1a9157ba83c5cc7a3d24a87eb52cf8be38a5e729efed1805416068c93723ed72029" prot="public">
          <name>SCIP_NLPTERMSTAT_NUMERR</name>
          <initializer>= 5</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>stopped on numerical error </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="type__nlpi_8h_1a9157ba83c5cc7a3d24a87eb52cf8be38aa49f377045498c689585738c08b27995" prot="public">
          <name>SCIP_NLPTERMSTAT_EVALERR</name>
          <initializer>= 6</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>stopped on function evaluation error </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="type__nlpi_8h_1a9157ba83c5cc7a3d24a87eb52cf8be38a6bec0f5a045e0848324d9ccb670a3957" prot="public">
          <name>SCIP_NLPTERMSTAT_MEMERR</name>
          <initializer>= 7</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>memory exceeded </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="type__nlpi_8h_1a9157ba83c5cc7a3d24a87eb52cf8be38af328a9ee852d0b69e9e56dca40207b90" prot="public">
          <name>SCIP_NLPTERMSTAT_LICERR</name>
          <initializer>= 8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>licence error </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="type__nlpi_8h_1a9157ba83c5cc7a3d24a87eb52cf8be38a3019ba8a920480e7ff2319fad7c384f9" prot="public">
          <name>SCIP_NLPTERMSTAT_OTHER</name>
          <initializer>= 9</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>other error (= this should never happen) </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>NLP solution status NLP solver termination status </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" line="73" column="1" bodyfile="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" bodystart="72" bodyend="84"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="type__nlpi_8h_1a62acbad3cf059a2fc3604b8cb23061e1" prot="public" static="no">
        <type>struct SCIP_Nlpi</type>
        <definition>typedef struct SCIP_Nlpi SCIP_NLPI</definition>
        <argsstring></argsstring>
        <name>SCIP_NLPI</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>NLP solver interface </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" line="33" column="1" bodyfile="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" bodystart="37" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="type__nlpi_8h_1aeb2a407f0470441df6fd6870de8687ae" prot="public" static="no">
        <type>struct SCIP_NlpiData</type>
        <definition>typedef struct SCIP_NlpiData SCIP_NLPIDATA</definition>
        <argsstring></argsstring>
        <name>SCIP_NLPIDATA</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>locally defined NLP solver interface data </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" line="33" column="1" bodyfile="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" bodystart="38" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="type__nlpi_8h_1a014fc2228c3a9d9f119ce8112dd166a7" prot="public" static="no">
        <type>struct SCIP_NlpiProblem</type>
        <definition>typedef struct SCIP_NlpiProblem SCIP_NLPIPROBLEM</definition>
        <argsstring></argsstring>
        <name>SCIP_NLPIPROBLEM</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>locally defined NLP solver interface data for a specific problem instance </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" line="33" column="1" bodyfile="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" bodystart="39" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="type__nlpi_8h_1a07d53bca357f7024447ceed41eb70e03" prot="public" static="no">
        <type>struct SCIP_NlpStatistics</type>
        <definition>typedef struct SCIP_NlpStatistics SCIP_NLPSTATISTICS</definition>
        <argsstring></argsstring>
        <name>SCIP_NLPSTATISTICS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>NLP solve statistics </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" line="33" column="1" bodyfile="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" bodystart="40" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="type__nlpi_8h_1a3eeb8b06ecf7465c7be298fc84a404c1" prot="public" static="no">
        <type>enum <ref refid="type__nlpi_8h_1a73a8578c0f6614daedd32c9e1c1e06f7" kindref="member">SCIP_NlpParam</ref></type>
        <definition>typedef enum SCIP_NlpParam SCIP_NLPPARAM</definition>
        <argsstring></argsstring>
        <name>SCIP_NLPPARAM</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>NLP solver parameter </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" line="33" column="1" bodyfile="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" bodystart="56" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="type__nlpi_8h_1a87ce65676e9e36efbbb735b4125725d9" prot="public" static="no">
        <type>enum <ref refid="type__nlpi_8h_1ad06ac0a1ef6b4bf7580950bbda718a64" kindref="member">SCIP_NlpSolStat</ref></type>
        <definition>typedef enum SCIP_NlpSolStat SCIP_NLPSOLSTAT</definition>
        <argsstring></argsstring>
        <name>SCIP_NLPSOLSTAT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" line="33" column="1" bodyfile="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" bodystart="69" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="type__nlpi_8h_1ae2a3cc5d63fd0c0183ef8348c52ab9a8" prot="public" static="no">
        <type>enum <ref refid="type__nlpi_8h_1a9157ba83c5cc7a3d24a87eb52cf8be38" kindref="member">SCIP_NlpTermStat</ref></type>
        <definition>typedef enum SCIP_NlpTermStat SCIP_NLPTERMSTAT</definition>
        <argsstring></argsstring>
        <name>SCIP_NLPTERMSTAT</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" line="33" column="1" bodyfile="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h" bodystart="85" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>type definitions for specific NLP solver interfaces </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Stefan Vigerske </para></simplesect>
<simplesect kind="author"><para>Thorsten Gellermann </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>program<sp/>and<sp/>library<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SCIP<sp/>---<sp/>Solving<sp/>Constraint<sp/>Integer<sp/>Programs<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>Copyright<sp/>(C)<sp/>2002-2014<sp/>Konrad-Zuse-Zentrum<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fuer<sp/>Informationstechnik<sp/>Berlin<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>SCIP<sp/>is<sp/>distributed<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>ZIB<sp/>Academic<sp/>License.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>ZIB<sp/>Academic<sp/>License<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>along<sp/>with<sp/>SCIP;<sp/>see<sp/>the<sp/>file<sp/>COPYING.<sp/>If<sp/>not<sp/>email<sp/>to<sp/>scip@zib.de.<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="16"><highlight class="comment">/**@file<sp/><sp/><sp/>type_nlpi.h</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>@ingroup<sp/>TYPEDEFINITIONS</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>type<sp/>definitions<sp/>for<sp/>specific<sp/>NLP<sp/>solver<sp/>interfaces</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>@author<sp/>Stefan<sp/>Vigerske</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>@author<sp/>Thorsten<sp/>Gellermann</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">/*---+----1----+----2----+----3----+----4----+----5----+----6----+----7----+----8----+----9----+----0----+----1----+----2*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__SCIP_TYPE_NLPI_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__SCIP_TYPE_NLPI_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="def_8h" kindref="compound">scip/def.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="type__message_8h" kindref="compound">scip/type_message.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;blockmemshell/memory.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="type__expr_8h" kindref="compound">nlpi/type_expr.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="type__nlpi_8h_1a62acbad3cf059a2fc3604b8cb23061e1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">SCIP_Nlpi<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="type__nlpi_8h_1a62acbad3cf059a2fc3604b8cb23061e1" kindref="member">SCIP_NLPI</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>NLP<sp/>solver<sp/>interface<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="type__nlpi_8h_1aeb2a407f0470441df6fd6870de8687ae" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">SCIP_NlpiData<sp/><sp/><sp/><sp/><sp/><sp/><ref refid="type__nlpi_8h_1aeb2a407f0470441df6fd6870de8687ae" kindref="member">SCIP_NLPIDATA</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>locally<sp/>defined<sp/>NLP<sp/>solver<sp/>interface<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="type__nlpi_8h_1a014fc2228c3a9d9f119ce8112dd166a7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">SCIP_NlpiProblem<sp/><sp/><sp/><ref refid="type__nlpi_8h_1a014fc2228c3a9d9f119ce8112dd166a7" kindref="member">SCIP_NLPIPROBLEM</ref>;<sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>locally<sp/>defined<sp/>NLP<sp/>solver<sp/>interface<sp/>data<sp/>for<sp/>a<sp/>specific<sp/>problem<sp/>instance<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="40" refid="type__nlpi_8h_1a07d53bca357f7024447ceed41eb70e03" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">SCIP_NlpStatistics<sp/><ref refid="type__nlpi_8h_1a07d53bca357f7024447ceed41eb70e03" kindref="member">SCIP_NLPSTATISTICS</ref>;<sp/></highlight><highlight class="comment">/**&lt;<sp/>NLP<sp/>solve<sp/>statistics<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="42"><highlight class="comment">/**<sp/>NLP<sp/>solver<sp/>parameter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="43" refid="type__nlpi_8h_1a73a8578c0f6614daedd32c9e1c1e06f7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="type__nlpi_8h_1a73a8578c0f6614daedd32c9e1c1e06f7" kindref="member">SCIP_NlpParam</ref></highlight></codeline>
<codeline lineno="44"><highlight class="normal">{</highlight></codeline>
<codeline lineno="45" refid="type__nlpi_8h_1a73a8578c0f6614daedd32c9e1c1e06f7a4a44043e9012d0de764983200c22a0eb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__nlpi_8h_1a73a8578c0f6614daedd32c9e1c1e06f7a4a44043e9012d0de764983200c22a0eb" kindref="member">SCIP_NLPPAR_FROMSCRATCH</ref><sp/><sp/><sp/><sp/>=<sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>solver<sp/>should<sp/>start<sp/>from<sp/>scratch<sp/>at<sp/>next<sp/>call?:<sp/>0<sp/>no,<sp/>1<sp/>yes<sp/>(int)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="type__nlpi_8h_1a73a8578c0f6614daedd32c9e1c1e06f7acdc236298e6a7e2f3b4055206f6222d5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__nlpi_8h_1a73a8578c0f6614daedd32c9e1c1e06f7acdc236298e6a7e2f3b4055206f6222d5" kindref="member">SCIP_NLPPAR_VERBLEVEL</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>verbosity<sp/>level<sp/>of<sp/>output<sp/>of<sp/>NLP<sp/>solver<sp/>to<sp/>the<sp/>screen:<sp/>0<sp/>off,<sp/>1<sp/>normal,<sp/>2<sp/>debug,<sp/>&gt;<sp/>2<sp/>more<sp/>debug<sp/>(int)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="type__nlpi_8h_1a73a8578c0f6614daedd32c9e1c1e06f7af3a6cf82a24d3247e2e067fafbfb4522" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__nlpi_8h_1a73a8578c0f6614daedd32c9e1c1e06f7af3a6cf82a24d3247e2e067fafbfb4522" kindref="member">SCIP_NLPPAR_FEASTOL</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/>2,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>feasibility<sp/>tolerance<sp/>for<sp/>primal<sp/>variables<sp/>and<sp/>slacks<sp/>(real)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="type__nlpi_8h_1a73a8578c0f6614daedd32c9e1c1e06f7a8d1a47ac1538683456f940e7f9ec0182" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__nlpi_8h_1a73a8578c0f6614daedd32c9e1c1e06f7a8d1a47ac1538683456f940e7f9ec0182" kindref="member">SCIP_NLPPAR_RELOBJTOL</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/>3,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>relative<sp/>objective<sp/>tolerance<sp/>(real)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="type__nlpi_8h_1a73a8578c0f6614daedd32c9e1c1e06f7a15894d311fb5ee4a563a3ebc81cfbffb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__nlpi_8h_1a73a8578c0f6614daedd32c9e1c1e06f7a15894d311fb5ee4a563a3ebc81cfbffb" kindref="member">SCIP_NLPPAR_LOBJLIM</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/>4,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>lower<sp/>objective<sp/>limit<sp/>(cutoff)<sp/>(real)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="type__nlpi_8h_1a73a8578c0f6614daedd32c9e1c1e06f7adc812858b4ab385e59195c8e39c09446" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__nlpi_8h_1a73a8578c0f6614daedd32c9e1c1e06f7adc812858b4ab385e59195c8e39c09446" kindref="member">SCIP_NLPPAR_INFINITY</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/>5,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>value<sp/>for<sp/>infinity<sp/>used<sp/>to<sp/>decide<sp/>unbounded<sp/>sides,<sp/>unbounded<sp/>variable<sp/>and<sp/>constraint<sp/>bounds,<sp/>and<sp/>upper<sp/>objective<sp/>limit<sp/>(real)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="type__nlpi_8h_1a73a8578c0f6614daedd32c9e1c1e06f7a917408d081fcf150d4cb64449be5ffba" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__nlpi_8h_1a73a8578c0f6614daedd32c9e1c1e06f7a917408d081fcf150d4cb64449be5ffba" kindref="member">SCIP_NLPPAR_ITLIM</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/>6,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>NLP<sp/>iteration<sp/>limit<sp/>(int)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="type__nlpi_8h_1a73a8578c0f6614daedd32c9e1c1e06f7a249f12812974579bf1fd1540fe99db34" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__nlpi_8h_1a73a8578c0f6614daedd32c9e1c1e06f7a249f12812974579bf1fd1540fe99db34" kindref="member">SCIP_NLPPAR_TILIM</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/>7,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>NLP<sp/>time<sp/>limit<sp/>(real)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="type__nlpi_8h_1a73a8578c0f6614daedd32c9e1c1e06f7abf41bd32fe3109555cebed28303dbc19" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__nlpi_8h_1a73a8578c0f6614daedd32c9e1c1e06f7abf41bd32fe3109555cebed28303dbc19" kindref="member">SCIP_NLPPAR_OPTFILE</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/>8,<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>name<sp/>of<sp/>a<sp/>solver<sp/>specific<sp/>option<sp/>file<sp/>(string)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="type__nlpi_8h_1a73a8578c0f6614daedd32c9e1c1e06f7a53017eef5577edb40eaaea9ebca69239" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__nlpi_8h_1a73a8578c0f6614daedd32c9e1c1e06f7a53017eef5577edb40eaaea9ebca69239" kindref="member">SCIP_NLPPAR_FASTFAIL</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/>9<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>should<sp/>the<sp/>NLP<sp/>solver<sp/>stop<sp/>early<sp/>if<sp/>convergence<sp/>is<sp/>slow?:<sp/>0<sp/>no,<sp/>1<sp/>yes<sp/>(int)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55"><highlight class="normal">};</highlight></codeline>
<codeline lineno="56" refid="type__nlpi_8h_1a3eeb8b06ecf7465c7be298fc84a404c1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="type__nlpi_8h_1a73a8578c0f6614daedd32c9e1c1e06f7" kindref="member">SCIP_NlpParam</ref><sp/><ref refid="type__nlpi_8h_1a3eeb8b06ecf7465c7be298fc84a404c1" kindref="member">SCIP_NLPPARAM</ref>;<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>NLP<sp/>solver<sp/>parameter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="58"><highlight class="comment">/**<sp/>NLP<sp/>solution<sp/>status<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59" refid="type__nlpi_8h_1ad06ac0a1ef6b4bf7580950bbda718a64" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="type__nlpi_8h_1ad06ac0a1ef6b4bf7580950bbda718a64" kindref="member">SCIP_NlpSolStat</ref></highlight></codeline>
<codeline lineno="60"><highlight class="normal">{</highlight></codeline>
<codeline lineno="61" refid="type__nlpi_8h_1ad06ac0a1ef6b4bf7580950bbda718a64ad2969ef7d17a042f1d9b3bca431757d0" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__nlpi_8h_1ad06ac0a1ef6b4bf7580950bbda718a64ad2969ef7d17a042f1d9b3bca431757d0" kindref="member">SCIP_NLPSOLSTAT_GLOBOPT</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>solved<sp/>to<sp/>global<sp/>optimality<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="type__nlpi_8h_1ad06ac0a1ef6b4bf7580950bbda718a64acaffdcb7751655db0aa55230e79d1746" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__nlpi_8h_1ad06ac0a1ef6b4bf7580950bbda718a64acaffdcb7751655db0aa55230e79d1746" kindref="member">SCIP_NLPSOLSTAT_LOCOPT</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>solved<sp/>to<sp/>local<sp/>optimality<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="type__nlpi_8h_1ad06ac0a1ef6b4bf7580950bbda718a64a9bdf6677ef92308b486bdacc63e336d5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__nlpi_8h_1ad06ac0a1ef6b4bf7580950bbda718a64a9bdf6677ef92308b486bdacc63e336d5" kindref="member">SCIP_NLPSOLSTAT_FEASIBLE</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>2,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>feasible<sp/>solution<sp/>found<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64" refid="type__nlpi_8h_1ad06ac0a1ef6b4bf7580950bbda718a64a98ce44722a8e0587c9c7851ee2544337" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__nlpi_8h_1ad06ac0a1ef6b4bf7580950bbda718a64a98ce44722a8e0587c9c7851ee2544337" kindref="member">SCIP_NLPSOLSTAT_LOCINFEASIBLE</ref><sp/><sp/>=<sp/>3,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>solution<sp/>found<sp/>is<sp/>local<sp/>infeasible<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65" refid="type__nlpi_8h_1ad06ac0a1ef6b4bf7580950bbda718a64a4395a524bb641e8ca35b85d7dbd287e6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__nlpi_8h_1ad06ac0a1ef6b4bf7580950bbda718a64a4395a524bb641e8ca35b85d7dbd287e6" kindref="member">SCIP_NLPSOLSTAT_GLOBINFEASIBLE</ref><sp/>=<sp/>4,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>problem<sp/>is<sp/>proven<sp/>infeasible<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="66" refid="type__nlpi_8h_1ad06ac0a1ef6b4bf7580950bbda718a64a1815ac282227b3ef2363c9eb693caae6" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__nlpi_8h_1ad06ac0a1ef6b4bf7580950bbda718a64a1815ac282227b3ef2363c9eb693caae6" kindref="member">SCIP_NLPSOLSTAT_UNBOUNDED</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>5,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>problem<sp/>is<sp/>unbounded<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67" refid="type__nlpi_8h_1ad06ac0a1ef6b4bf7580950bbda718a64aea9f6d2605590c2524c9a826cb9de31a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__nlpi_8h_1ad06ac0a1ef6b4bf7580950bbda718a64aea9f6d2605590c2524c9a826cb9de31a" kindref="member">SCIP_NLPSOLSTAT_UNKNOWN</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>6<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>unknown<sp/>solution<sp/>status<sp/>(e.g.,<sp/>problem<sp/>not<sp/>solved<sp/>yet)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="68"><highlight class="normal">};</highlight></codeline>
<codeline lineno="69" refid="type__nlpi_8h_1a87ce65676e9e36efbbb735b4125725d9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="type__nlpi_8h_1ad06ac0a1ef6b4bf7580950bbda718a64" kindref="member">SCIP_NlpSolStat</ref><sp/><ref refid="type__nlpi_8h_1a87ce65676e9e36efbbb735b4125725d9" kindref="member">SCIP_NLPSOLSTAT</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**<sp/>NLP<sp/>solution<sp/>status<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="71"><highlight class="comment">/**<sp/>NLP<sp/>solver<sp/>termination<sp/>status<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="type__nlpi_8h_1a9157ba83c5cc7a3d24a87eb52cf8be38" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="type__nlpi_8h_1a9157ba83c5cc7a3d24a87eb52cf8be38" kindref="member">SCIP_NlpTermStat</ref></highlight></codeline>
<codeline lineno="73"><highlight class="normal">{</highlight></codeline>
<codeline lineno="74" refid="type__nlpi_8h_1a9157ba83c5cc7a3d24a87eb52cf8be38a0355cb35803739f7519617ab97789411" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__nlpi_8h_1a9157ba83c5cc7a3d24a87eb52cf8be38a0355cb35803739f7519617ab97789411" kindref="member">SCIP_NLPTERMSTAT_OKAY</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>0,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>terminated<sp/>successfully<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75" refid="type__nlpi_8h_1a9157ba83c5cc7a3d24a87eb52cf8be38a645648d2d0ae715389378550491624ea" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__nlpi_8h_1a9157ba83c5cc7a3d24a87eb52cf8be38a645648d2d0ae715389378550491624ea" kindref="member">SCIP_NLPTERMSTAT_TILIM</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>1,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>time<sp/>limit<sp/>exceeded<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="type__nlpi_8h_1a9157ba83c5cc7a3d24a87eb52cf8be38a5e0d28b320457f1cc896ea2e5089440d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__nlpi_8h_1a9157ba83c5cc7a3d24a87eb52cf8be38a5e0d28b320457f1cc896ea2e5089440d" kindref="member">SCIP_NLPTERMSTAT_ITLIM</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>2,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>iteration<sp/>limit<sp/>exceeded<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="type__nlpi_8h_1a9157ba83c5cc7a3d24a87eb52cf8be38af53d62880b3959c8c4912052ebc05ecf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__nlpi_8h_1a9157ba83c5cc7a3d24a87eb52cf8be38af53d62880b3959c8c4912052ebc05ecf" kindref="member">SCIP_NLPTERMSTAT_LOBJLIM</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>3,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>lower<sp/>objective<sp/>limit<sp/>reached<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="type__nlpi_8h_1a9157ba83c5cc7a3d24a87eb52cf8be38ac44b3a38e881a87c3490cfb28acc435e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__nlpi_8h_1a9157ba83c5cc7a3d24a87eb52cf8be38ac44b3a38e881a87c3490cfb28acc435e" kindref="member">SCIP_NLPTERMSTAT_UOBJLIM</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>4,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>upper<sp/>objective<sp/>limit<sp/>(=<sp/>infinity)<sp/>reached<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79" refid="type__nlpi_8h_1a9157ba83c5cc7a3d24a87eb52cf8be38a5e729efed1805416068c93723ed72029" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__nlpi_8h_1a9157ba83c5cc7a3d24a87eb52cf8be38a5e729efed1805416068c93723ed72029" kindref="member">SCIP_NLPTERMSTAT_NUMERR</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>5,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>stopped<sp/>on<sp/>numerical<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="type__nlpi_8h_1a9157ba83c5cc7a3d24a87eb52cf8be38aa49f377045498c689585738c08b27995" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__nlpi_8h_1a9157ba83c5cc7a3d24a87eb52cf8be38aa49f377045498c689585738c08b27995" kindref="member">SCIP_NLPTERMSTAT_EVALERR</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>6,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>stopped<sp/>on<sp/>function<sp/>evaluation<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="type__nlpi_8h_1a9157ba83c5cc7a3d24a87eb52cf8be38a6bec0f5a045e0848324d9ccb670a3957" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__nlpi_8h_1a9157ba83c5cc7a3d24a87eb52cf8be38a6bec0f5a045e0848324d9ccb670a3957" kindref="member">SCIP_NLPTERMSTAT_MEMERR</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>7,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>memory<sp/>exceeded<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="type__nlpi_8h_1a9157ba83c5cc7a3d24a87eb52cf8be38af328a9ee852d0b69e9e56dca40207b90" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__nlpi_8h_1a9157ba83c5cc7a3d24a87eb52cf8be38af328a9ee852d0b69e9e56dca40207b90" kindref="member">SCIP_NLPTERMSTAT_LICERR</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>8,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>licence<sp/>error<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="type__nlpi_8h_1a9157ba83c5cc7a3d24a87eb52cf8be38a3019ba8a920480e7ff2319fad7c384f9" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__nlpi_8h_1a9157ba83c5cc7a3d24a87eb52cf8be38a3019ba8a920480e7ff2319fad7c384f9" kindref="member">SCIP_NLPTERMSTAT_OTHER</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>9<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>other<sp/>error<sp/>(=<sp/>this<sp/>should<sp/>never<sp/>happen)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84"><highlight class="normal">};</highlight></codeline>
<codeline lineno="85" refid="type__nlpi_8h_1ae2a3cc5d63fd0c0183ef8348c52ab9a8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="type__nlpi_8h_1a9157ba83c5cc7a3d24a87eb52cf8be38" kindref="member">SCIP_NlpTermStat</ref><sp/><ref refid="type__nlpi_8h_1ae2a3cc5d63fd0c0183ef8348c52ab9a8" kindref="member">SCIP_NLPTERMSTAT</ref>;<sp/><sp/></highlight><highlight class="comment">/**<sp/>NLP<sp/>solver<sp/>termination<sp/>status<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="87"><highlight class="comment">/**<sp/>copy<sp/>method<sp/>of<sp/>NLP<sp/>interface<sp/>(called<sp/>when<sp/>SCIP<sp/>copies<sp/>plugins)</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/>*<sp/>input:</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>blkmem<sp/>block<sp/>memory<sp/>of<sp/>target<sp/>SCIP</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>sourcenlpi<sp/>the<sp/>NLP<sp/>interface<sp/>to<sp/>copy</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>targetnlpi<sp/>buffer<sp/>to<sp/>store<sp/>pointer<sp/>to<sp/>copy<sp/>of<sp/>NLP<sp/>interface</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="94" refid="type__nlpi_8h_1ab444b70f0450a62fbe8b6678183083ec" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCIP_DECL_NLPICOPY(x)<sp/>SCIP_RETCODE<sp/>x<sp/>(BMS_BLKMEM*<sp/>blkmem,<sp/>SCIP_NLPI*<sp/>sourcenlpi,<sp/>SCIP_NLPI**<sp/>targetnlpi)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="96"><highlight class="comment">/**<sp/>destructor<sp/>of<sp/>NLP<sp/>interface<sp/>to<sp/>free<sp/>nlpi<sp/>data</highlight></codeline>
<codeline lineno="97"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="98"><highlight class="comment"><sp/>*<sp/>input:</highlight></codeline>
<codeline lineno="99"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>nlpi<sp/>datastructure<sp/>for<sp/>solver<sp/>interface</highlight></codeline>
<codeline lineno="100"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101" refid="type__nlpi_8h_1acccd938a64b239e3fbd993c2cc74e588" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCIP_DECL_NLPIFREE(x)<sp/>SCIP_RETCODE<sp/>x<sp/>(SCIP_NLPI*<sp/>nlpi)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="103"><highlight class="comment">/**<sp/>gets<sp/>pointer<sp/>to<sp/>solver-internal<sp/>NLP<sp/>solver</highlight></codeline>
<codeline lineno="104"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="105"><highlight class="comment"><sp/>*<sp/><sp/>to<sp/>do<sp/>dirty<sp/>stuff</highlight></codeline>
<codeline lineno="106"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="107"><highlight class="comment"><sp/>*<sp/>input:</highlight></codeline>
<codeline lineno="108"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>nlpi<sp/>datastructure<sp/>for<sp/>solver<sp/>interface</highlight></codeline>
<codeline lineno="109"><highlight class="comment"><sp/>*<sp/><sp/></highlight></codeline>
<codeline lineno="110"><highlight class="comment"><sp/>*<sp/>return:<sp/>void<sp/>pointer<sp/>to<sp/>solver</highlight></codeline>
<codeline lineno="111"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112" refid="type__nlpi_8h_1abe0e15e23ef029f00b9a6c891aca90ac" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCIP_DECL_NLPIGETSOLVERPOINTER(x)<sp/>void*<sp/>x<sp/>(SCIP_NLPI*<sp/>nlpi)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="113"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="114"><highlight class="comment">/**<sp/>creates<sp/>a<sp/>problem<sp/>instance</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/>*<sp/>input:</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>nlpi<sp/>datastructure<sp/>for<sp/>solver<sp/>interface</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>problem<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>problem<sp/>data</highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>name<sp/>name<sp/>of<sp/>problem,<sp/>can<sp/>be<sp/>NULL</highlight></codeline>
<codeline lineno="120"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121" refid="type__nlpi_8h_1a336b7559c9d9977edd0413ff289a73ad" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCIP_DECL_NLPICREATEPROBLEM(x)<sp/>SCIP_RETCODE<sp/>x<sp/>(SCIP_NLPI*<sp/>nlpi,<sp/>SCIP_NLPIPROBLEM**<sp/>problem,<sp/>const<sp/>char*<sp/>name)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="122"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="123"><highlight class="comment">/**<sp/>free<sp/>a<sp/>problem<sp/>instance</highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="125"><highlight class="comment"><sp/>*<sp/>input:</highlight></codeline>
<codeline lineno="126"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>nlpi<sp/>datastructure<sp/>for<sp/>solver<sp/>interface</highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>problem<sp/>pointer<sp/>where<sp/>problem<sp/>data<sp/>is<sp/>stored<sp/></highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129" refid="type__nlpi_8h_1a8fc7b7a4a1ec09aef5784a0a8c928f0e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCIP_DECL_NLPIFREEPROBLEM(x)<sp/>SCIP_RETCODE<sp/>x<sp/>(SCIP_NLPI*<sp/>nlpi,<sp/>SCIP_NLPIPROBLEM**<sp/>problem)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="131"><highlight class="comment">/**<sp/>gets<sp/>pointer<sp/>to<sp/>solver-internal<sp/>problem<sp/>instance</highlight></codeline>
<codeline lineno="132"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/>*<sp/><sp/>to<sp/>do<sp/>dirty<sp/>stuff</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/>*<sp/>input:</highlight></codeline>
<codeline lineno="136"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>nlpi<sp/>datastructure<sp/>for<sp/>solver<sp/>interface</highlight></codeline>
<codeline lineno="137"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>problem<sp/>datastructure<sp/>for<sp/>problem<sp/>instance</highlight></codeline>
<codeline lineno="138"><highlight class="comment"><sp/>*<sp/><sp/></highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/>*<sp/>return:<sp/>void<sp/>pointer<sp/>to<sp/>problem<sp/>instance</highlight></codeline>
<codeline lineno="140"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141" refid="type__nlpi_8h_1acae8b601c436b73d56f75631db121780" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCIP_DECL_NLPIGETPROBLEMPOINTER(x)<sp/>void*<sp/>x<sp/>(SCIP_NLPI*<sp/>nlpi,<sp/>SCIP_NLPIPROBLEM*<sp/>problem)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="143"><highlight class="comment">/**<sp/>add<sp/>variables</highlight></codeline>
<codeline lineno="144"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="145"><highlight class="comment"><sp/>*<sp/>input:</highlight></codeline>
<codeline lineno="146"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>nlpi<sp/>datastructure<sp/>for<sp/>solver<sp/>interface</highlight></codeline>
<codeline lineno="147"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>problem<sp/>datastructure<sp/>for<sp/>problem<sp/>instance</highlight></codeline>
<codeline lineno="148"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>nvars<sp/>number<sp/>of<sp/>variables<sp/></highlight></codeline>
<codeline lineno="149"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>lbs<sp/>lower<sp/>bounds<sp/>of<sp/>variables,<sp/>can<sp/>be<sp/>NULL<sp/>if<sp/>-infinity</highlight></codeline>
<codeline lineno="150"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>ubs<sp/>upper<sp/>bounds<sp/>of<sp/>variables,<sp/>can<sp/>be<sp/>NULL<sp/>if<sp/>+infinity</highlight></codeline>
<codeline lineno="151"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>varnames<sp/>names<sp/>of<sp/>variables,<sp/>can<sp/>be<sp/>NULL</highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153" refid="type__nlpi_8h_1a78227183b94f8ec708e3991e63f66159" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCIP_DECL_NLPIADDVARS(x)<sp/>SCIP_RETCODE<sp/>x<sp/>(SCIP_NLPI*<sp/>nlpi,<sp/>SCIP_NLPIPROBLEM*<sp/>problem,<sp/>int<sp/>nvars,<sp/>const<sp/>SCIP_Real*<sp/>lbs,<sp/>\</highlight></codeline>
<codeline lineno="154"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>SCIP_Real*<sp/>ubs,<sp/>const<sp/>char**<sp/>varnames)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="156"><highlight class="comment">/**<sp/>add<sp/>constraints</highlight></codeline>
<codeline lineno="157"><highlight class="comment"><sp/>*<sp/>quadratic<sp/>coefficiens:<sp/>row<sp/>oriented<sp/>matrix<sp/>for<sp/>each<sp/>constraint</highlight></codeline>
<codeline lineno="158"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="159"><highlight class="comment"><sp/>*<sp/>input:</highlight></codeline>
<codeline lineno="160"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>nlpi<sp/>datastructure<sp/>for<sp/>solver<sp/>interface</highlight></codeline>
<codeline lineno="161"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>problem<sp/>datastructure<sp/>for<sp/>problem<sp/>instance</highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>ncons<sp/>number<sp/>of<sp/>added<sp/>constraints</highlight></codeline>
<codeline lineno="163"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>lhss<sp/>left<sp/>hand<sp/>sides<sp/>of<sp/>constraints,<sp/>can<sp/>be<sp/>NULL<sp/>if<sp/>-infinity</highlight></codeline>
<codeline lineno="164"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>rhss<sp/>right<sp/>hand<sp/>sides<sp/>of<sp/>constraints,<sp/>can<sp/>be<sp/>NULL<sp/>if<sp/>+infinity</highlight></codeline>
<codeline lineno="165"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>nlininds<sp/>number<sp/>of<sp/>linear<sp/>coefficients<sp/>for<sp/>each<sp/>constraint</highlight></codeline>
<codeline lineno="166"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>may<sp/>be<sp/>NULL<sp/>in<sp/>case<sp/>of<sp/>no<sp/>linear<sp/>part</highlight></codeline>
<codeline lineno="167"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>lininds<sp/>indices<sp/>of<sp/>variables<sp/>for<sp/>linear<sp/>coefficients<sp/>for<sp/>each<sp/>constraint</highlight></codeline>
<codeline lineno="168"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>may<sp/>be<sp/>NULL<sp/>in<sp/>case<sp/>of<sp/>no<sp/>linear<sp/>part</highlight></codeline>
<codeline lineno="169"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>linvals<sp/>values<sp/>of<sp/>linear<sp/>coefficient<sp/>for<sp/>each<sp/>constraint</highlight></codeline>
<codeline lineno="170"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>may<sp/>be<sp/>NULL<sp/>in<sp/>case<sp/>of<sp/>no<sp/>linear<sp/>part</highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>nquadelems<sp/>number<sp/>of<sp/>quadratic<sp/>elements<sp/>for<sp/>each<sp/>constraint</highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>may<sp/>be<sp/>NULL<sp/>in<sp/>case<sp/>of<sp/>no<sp/>quadratic<sp/>part</highlight></codeline>
<codeline lineno="173"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>quadelems<sp/>quadratic<sp/>elements<sp/>for<sp/>each<sp/>constraint</highlight></codeline>
<codeline lineno="174"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>may<sp/>be<sp/>NULL<sp/>in<sp/>case<sp/>of<sp/>no<sp/>quadratic<sp/>part</highlight></codeline>
<codeline lineno="175"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>exprvaridxs<sp/>indices<sp/>of<sp/>variables<sp/>in<sp/>expression<sp/>tree,<sp/>maps<sp/>variable<sp/>indices<sp/>in<sp/>expression<sp/>tree<sp/>to<sp/>indices<sp/>in<sp/>nlp</highlight></codeline>
<codeline lineno="176"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>entry<sp/>of<sp/>array<sp/>may<sp/>be<sp/>NULL<sp/>in<sp/>case<sp/>of<sp/>no<sp/>expression<sp/>tree</highlight></codeline>
<codeline lineno="177"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>may<sp/>be<sp/>NULL<sp/>in<sp/>case<sp/>of<sp/>no<sp/>expression<sp/>tree<sp/>in<sp/>any<sp/>constraint</highlight></codeline>
<codeline lineno="178"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>exprtrees<sp/>expression<sp/>tree<sp/>for<sp/>nonquadratic<sp/>part<sp/>of<sp/>constraints</highlight></codeline>
<codeline lineno="179"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>entry<sp/>of<sp/>array<sp/>may<sp/>be<sp/>NULL<sp/>in<sp/>case<sp/>of<sp/>no<sp/>nonquadratic<sp/>part</highlight></codeline>
<codeline lineno="180"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>may<sp/>be<sp/>NULL<sp/>in<sp/>case<sp/>of<sp/>no<sp/>nonquadratic<sp/>part<sp/>in<sp/>any<sp/>constraint</highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>names<sp/>of<sp/>constraints,<sp/>may<sp/>be<sp/>NULL<sp/>or<sp/>entries<sp/>may<sp/>be<sp/>NULL</highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="183" refid="type__nlpi_8h_1ad02fe9c84e6f31958ffa424cf6f439b1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCIP_DECL_NLPIADDCONSTRAINTS(x)<sp/>SCIP_RETCODE<sp/>x<sp/>(SCIP_NLPI*<sp/>nlpi,<sp/>SCIP_NLPIPROBLEM*<sp/>problem,<sp/>int<sp/>ncons,<sp/>const<sp/>SCIP_Real*<sp/>lhss,<sp/>\</highlight></codeline>
<codeline lineno="184"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>SCIP_Real*<sp/>rhss,<sp/>const<sp/>int*<sp/>nlininds,<sp/>int*<sp/>const*<sp/>lininds,<sp/>SCIP_Real*<sp/>const*<sp/>linvals,<sp/>const<sp/>int*<sp/>nquadelems,<sp/>\</highlight></codeline>
<codeline lineno="185"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>SCIP_QUADELEM*<sp/>const*<sp/>quadelems,<sp/>int*<sp/>const*<sp/>exprvaridxs,<sp/>SCIP_EXPRTREE*<sp/>const*<sp/>exprtrees,<sp/>const<sp/>char**<sp/>names)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="187"><highlight class="comment">/**<sp/>sets<sp/>or<sp/>overwrites<sp/>objective,<sp/>a<sp/>minimization<sp/>problem<sp/>is<sp/>expected</highlight></codeline>
<codeline lineno="188"><highlight class="comment"><sp/>*<sp/><sp/>May<sp/>change<sp/>sparsity<sp/>pattern.</highlight></codeline>
<codeline lineno="189"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="190"><highlight class="comment"><sp/>*<sp/>input:</highlight></codeline>
<codeline lineno="191"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>nlpi<sp/>datastructure<sp/>for<sp/>solver<sp/>interface</highlight></codeline>
<codeline lineno="192"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>problem<sp/>datastructure<sp/>for<sp/>problem<sp/>instance</highlight></codeline>
<codeline lineno="193"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>nlins<sp/>number<sp/>of<sp/>linear<sp/>variables</highlight></codeline>
<codeline lineno="194"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>lininds<sp/>variable<sp/>indices</highlight></codeline>
<codeline lineno="195"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>may<sp/>be<sp/>NULL<sp/>in<sp/>case<sp/>of<sp/>no<sp/>linear<sp/>part</highlight></codeline>
<codeline lineno="196"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>linvals<sp/>coefficient<sp/>values</highlight></codeline>
<codeline lineno="197"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>may<sp/>be<sp/>NULL<sp/>in<sp/>case<sp/>of<sp/>no<sp/>linear<sp/>part</highlight></codeline>
<codeline lineno="198"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>nquadelems<sp/>number<sp/>of<sp/>elements<sp/>in<sp/>matrix<sp/>of<sp/>quadratic<sp/>part</highlight></codeline>
<codeline lineno="199"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>quadelems<sp/>elements<sp/>of<sp/>quadratic<sp/>part</highlight></codeline>
<codeline lineno="200"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>may<sp/>be<sp/>NULL<sp/>in<sp/>case<sp/>of<sp/>no<sp/>quadratic<sp/>part</highlight></codeline>
<codeline lineno="201"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>exprvaridxs<sp/>indices<sp/>of<sp/>variables<sp/>in<sp/>expression<sp/>tree,<sp/>maps<sp/>variable<sp/>indices<sp/>in<sp/>expression<sp/>tree<sp/>to<sp/>indices<sp/>in<sp/>nlp</highlight></codeline>
<codeline lineno="202"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>may<sp/>be<sp/>NULL<sp/>in<sp/>case<sp/>of<sp/>no<sp/>expression<sp/>tree</highlight></codeline>
<codeline lineno="203"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>exprtree<sp/>expression<sp/>tree<sp/>for<sp/>nonquadratic<sp/>part<sp/>of<sp/>objective<sp/>function</highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>may<sp/>be<sp/>NULL<sp/>in<sp/>case<sp/>of<sp/>no<sp/>nonquadratic<sp/>part</highlight></codeline>
<codeline lineno="205"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>constant<sp/>objective<sp/>value<sp/>offset</highlight></codeline>
<codeline lineno="206"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207" refid="type__nlpi_8h_1a30e029f525e23c0a4d0b6f7b411db9d3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCIP_DECL_NLPISETOBJECTIVE(x)<sp/>SCIP_RETCODE<sp/>x<sp/>(SCIP_NLPI*<sp/>nlpi,<sp/>SCIP_NLPIPROBLEM*<sp/>problem,<sp/>int<sp/>nlins,<sp/>const<sp/>int*<sp/>lininds,<sp/>\</highlight></codeline>
<codeline lineno="208"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>SCIP_Real*<sp/>linvals,<sp/>int<sp/>nquadelems,<sp/>const<sp/>SCIP_QUADELEM*<sp/>quadelems,<sp/>const<sp/>int*<sp/>exprvaridxs,<sp/>const<sp/>SCIP_EXPRTREE*<sp/>exprtree,<sp/>\</highlight></codeline>
<codeline lineno="209"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>SCIP_Real<sp/>constant)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="211"><highlight class="comment">/**<sp/>change<sp/>variable<sp/>bounds</highlight></codeline>
<codeline lineno="212"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="213"><highlight class="comment"><sp/>*<sp/>input:</highlight></codeline>
<codeline lineno="214"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>nlpi<sp/>datastructure<sp/>for<sp/>solver<sp/>interface</highlight></codeline>
<codeline lineno="215"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>problem<sp/>datastructure<sp/>for<sp/>problem<sp/>instance</highlight></codeline>
<codeline lineno="216"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>nvars<sp/>number<sp/>of<sp/>variables<sp/>to<sp/>change<sp/>bounds</highlight></codeline>
<codeline lineno="217"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>indices<sp/>indices<sp/>of<sp/>variables<sp/>to<sp/>change<sp/>bounds</highlight></codeline>
<codeline lineno="218"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>lbs<sp/>new<sp/>lower<sp/>bounds</highlight></codeline>
<codeline lineno="219"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>ubs<sp/>new<sp/>upper<sp/>bounds</highlight></codeline>
<codeline lineno="220"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="221" refid="type__nlpi_8h_1ac3de57676028b74c51fc75dc4217bbbd" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCIP_DECL_NLPICHGVARBOUNDS(x)<sp/>SCIP_RETCODE<sp/>x<sp/>(SCIP_NLPI*<sp/>nlpi,<sp/>SCIP_NLPIPROBLEM*<sp/>problem,<sp/>const<sp/>int<sp/>nvars,<sp/>const<sp/>int*<sp/>indices,<sp/>\</highlight></codeline>
<codeline lineno="222"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>SCIP_Real*<sp/>lbs,<sp/>const<sp/>SCIP_Real*<sp/>ubs)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="223"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="224"><highlight class="comment">/**<sp/>change<sp/>constraint<sp/>sides</highlight></codeline>
<codeline lineno="225"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="226"><highlight class="comment"><sp/>*<sp/>input:</highlight></codeline>
<codeline lineno="227"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>nlpi<sp/>datastructure<sp/>for<sp/>solver<sp/>interface</highlight></codeline>
<codeline lineno="228"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>problem<sp/>datastructure<sp/>for<sp/>problem<sp/>instance</highlight></codeline>
<codeline lineno="229"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>nconss<sp/>number<sp/>of<sp/>constraints<sp/>to<sp/>change<sp/>sides</highlight></codeline>
<codeline lineno="230"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>indices<sp/>indices<sp/>of<sp/>constraints<sp/>to<sp/>change<sp/>sides</highlight></codeline>
<codeline lineno="231"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>lhss<sp/>new<sp/>left<sp/>hand<sp/>sides</highlight></codeline>
<codeline lineno="232"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>rhss<sp/>new<sp/>right<sp/>hand<sp/>sides</highlight></codeline>
<codeline lineno="233"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="234" refid="type__nlpi_8h_1a609abd12374695cbda8c4658e452c3a8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCIP_DECL_NLPICHGCONSSIDES(x)<sp/>SCIP_RETCODE<sp/>x<sp/>(SCIP_NLPI*<sp/>nlpi,<sp/>SCIP_NLPIPROBLEM*<sp/>problem,<sp/>int<sp/>nconss,<sp/>const<sp/>int*<sp/>indices,<sp/>\</highlight></codeline>
<codeline lineno="235"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>SCIP_Real*<sp/>lhss,<sp/>const<sp/>SCIP_Real*<sp/>rhss)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="237"><highlight class="comment">/**<sp/>delete<sp/>a<sp/>set<sp/>of<sp/>variables</highlight></codeline>
<codeline lineno="238"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="239"><highlight class="comment"><sp/>*<sp/>input:</highlight></codeline>
<codeline lineno="240"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>nlpi<sp/>datastructure<sp/>for<sp/>solver<sp/>interface</highlight></codeline>
<codeline lineno="241"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>problem<sp/>datastructure<sp/>for<sp/>problem<sp/>instance</highlight></codeline>
<codeline lineno="242"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>dstats<sp/>deletion<sp/>status<sp/>of<sp/>vars;<sp/>1<sp/>if<sp/>var<sp/>should<sp/>be<sp/>deleted,<sp/>0<sp/>if<sp/>not</highlight></codeline>
<codeline lineno="243"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="244"><highlight class="comment"><sp/>*<sp/>output:</highlight></codeline>
<codeline lineno="245"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>dstats<sp/>new<sp/>position<sp/>of<sp/>var,<sp/>-1<sp/>if<sp/>var<sp/>was<sp/>deleted</highlight></codeline>
<codeline lineno="246"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="247" refid="type__nlpi_8h_1a737163d103b96368ab436bbee201ebd8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCIP_DECL_NLPIDELVARSET(x)<sp/>SCIP_RETCODE<sp/>x<sp/>(SCIP_NLPI*<sp/>nlpi,<sp/>SCIP_NLPIPROBLEM*<sp/>problem,<sp/>int*<sp/>dstats)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="248"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="249"><highlight class="comment">/**<sp/>delete<sp/>a<sp/>set<sp/>of<sp/>constraints</highlight></codeline>
<codeline lineno="250"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="251"><highlight class="comment"><sp/>*<sp/>input:</highlight></codeline>
<codeline lineno="252"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>nlpi<sp/>datastructure<sp/>for<sp/>solver<sp/>interface</highlight></codeline>
<codeline lineno="253"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>problem<sp/>datastructure<sp/>for<sp/>problem<sp/>instance</highlight></codeline>
<codeline lineno="254"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>dstats<sp/>deletion<sp/>status<sp/>of<sp/>rows;<sp/>1<sp/>if<sp/>row<sp/>should<sp/>be<sp/>deleted,<sp/>0<sp/>if<sp/>not</highlight></codeline>
<codeline lineno="255"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="256"><highlight class="comment"><sp/>*<sp/>output:</highlight></codeline>
<codeline lineno="257"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>dstats<sp/>new<sp/>position<sp/>of<sp/>row,<sp/>-1<sp/>if<sp/>row<sp/>was<sp/>deleted</highlight></codeline>
<codeline lineno="258"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="259" refid="type__nlpi_8h_1a5c8527d8d25011697d1dbbcc3d0eb09c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCIP_DECL_NLPIDELCONSSET(x)<sp/>SCIP_RETCODE<sp/>x<sp/>(SCIP_NLPI*<sp/>nlpi,<sp/>SCIP_NLPIPROBLEM*<sp/>problem,<sp/>int*<sp/>dstats)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="260"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="261"><highlight class="comment">/**<sp/>changes<sp/>(or<sp/>adds)<sp/>linear<sp/>coefficients<sp/>in<sp/>a<sp/>constraint<sp/>or<sp/>objective</highlight></codeline>
<codeline lineno="262"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="263"><highlight class="comment"><sp/>*<sp/>input:</highlight></codeline>
<codeline lineno="264"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>nlpi<sp/>datastructure<sp/>for<sp/>solver<sp/>interface</highlight></codeline>
<codeline lineno="265"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>problem<sp/>datastructure<sp/>for<sp/>problem<sp/>instance</highlight></codeline>
<codeline lineno="266"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>idx<sp/>index<sp/>of<sp/>constraint<sp/>or<sp/>-1<sp/>for<sp/>objective</highlight></codeline>
<codeline lineno="267"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>nvals<sp/>number<sp/>of<sp/>values<sp/>in<sp/>linear<sp/>constraint<sp/>to<sp/>change</highlight></codeline>
<codeline lineno="268"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>varidxs<sp/>indices<sp/>of<sp/>variables<sp/>which<sp/>coefficient<sp/>to<sp/>change</highlight></codeline>
<codeline lineno="269"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>vals<sp/>new<sp/>values<sp/>for<sp/>coefficients</highlight></codeline>
<codeline lineno="270"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="271" refid="type__nlpi_8h_1a1186fc25efe361083a8a8d3ec9c9c9c8" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCIP_DECL_NLPICHGLINEARCOEFS(x)<sp/>SCIP_RETCODE<sp/>x<sp/>(SCIP_NLPI*<sp/>nlpi,<sp/>SCIP_NLPIPROBLEM*<sp/>problem,<sp/>int<sp/>idx,<sp/>int<sp/>nvals,<sp/>\</highlight></codeline>
<codeline lineno="272"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>int*<sp/>varidxs,<sp/>const<sp/>SCIP_Real*<sp/>vals)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="273"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="274"><highlight class="comment">/**<sp/>changes<sp/>(or<sp/>adds)<sp/>coefficients<sp/>in<sp/>the<sp/>quadratic<sp/>part<sp/>of<sp/>a<sp/>constraint<sp/>or<sp/>objective</highlight></codeline>
<codeline lineno="275"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="276"><highlight class="comment"><sp/>*<sp/>input:</highlight></codeline>
<codeline lineno="277"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>nlpi<sp/>datastructure<sp/>for<sp/>solver<sp/>interface</highlight></codeline>
<codeline lineno="278"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>problem<sp/>datastructure<sp/>for<sp/>problem<sp/>instance</highlight></codeline>
<codeline lineno="279"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>idx<sp/>index<sp/>of<sp/>constraint<sp/>or<sp/>-1<sp/>for<sp/>objective</highlight></codeline>
<codeline lineno="280"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>nquadelems<sp/>number<sp/>of<sp/>entries<sp/>in<sp/>quadratic<sp/>matrix<sp/>to<sp/>change</highlight></codeline>
<codeline lineno="281"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>quadelems<sp/>new<sp/>elements<sp/>in<sp/>quadratic<sp/>matrix<sp/>(replacing<sp/>already<sp/>existing<sp/>ones<sp/>or<sp/>adding<sp/>new<sp/>ones)</highlight></codeline>
<codeline lineno="282"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="283" refid="type__nlpi_8h_1a653a9d506252ecc8fae93cabee26df31" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCIP_DECL_NLPICHGQUADCOEFS(x)<sp/>SCIP_RETCODE<sp/>x<sp/>(SCIP_NLPI*<sp/>nlpi,<sp/>SCIP_NLPIPROBLEM*<sp/>problem,<sp/>int<sp/>idx,<sp/>int<sp/>nquadelems,<sp/>\</highlight></codeline>
<codeline lineno="284"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>SCIP_QUADELEM*<sp/>quadelems)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="286"><highlight class="comment">/**<sp/>replaces<sp/>the<sp/>expression<sp/>tree<sp/>of<sp/>a<sp/>constraint<sp/>or<sp/>objective</highlight></codeline>
<codeline lineno="287"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="288"><highlight class="comment"><sp/>*<sp/>input:</highlight></codeline>
<codeline lineno="289"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>nlpi<sp/>datastructure<sp/>for<sp/>solver<sp/>interface</highlight></codeline>
<codeline lineno="290"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>problem<sp/>datastructure<sp/>for<sp/>problem<sp/>instance</highlight></codeline>
<codeline lineno="291"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>idxcons<sp/>index<sp/>of<sp/>constraint<sp/>or<sp/>-1<sp/>for<sp/>objective</highlight></codeline>
<codeline lineno="292"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>exprvaridxs<sp/>indices<sp/>of<sp/>variables<sp/>in<sp/>expression<sp/>tree,<sp/>maps<sp/>variable<sp/>indices<sp/>in<sp/>expression<sp/>tree<sp/>to<sp/>indices<sp/>in<sp/>nlp,<sp/>or<sp/>NULL</highlight></codeline>
<codeline lineno="293"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>exprtree<sp/>new<sp/>expression<sp/>tree<sp/>for<sp/>constraint<sp/>or<sp/>objective,<sp/>or<sp/>NULL<sp/>to<sp/>only<sp/>remove<sp/>previous<sp/>tree</highlight></codeline>
<codeline lineno="294"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="295" refid="type__nlpi_8h_1a0bbae978e0a862c67405f9801adfb119" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCIP_DECL_NLPICHGEXPRTREE(x)<sp/>SCIP_RETCODE<sp/>x<sp/>(SCIP_NLPI*<sp/>nlpi,<sp/>SCIP_NLPIPROBLEM*<sp/>problem,<sp/>int<sp/>idxcons,<sp/>\</highlight></codeline>
<codeline lineno="296"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>const<sp/>int*<sp/>exprvaridxs,<sp/>const<sp/>SCIP_EXPRTREE*<sp/>exprtree)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="298"><highlight class="comment">/**<sp/>change<sp/>the<sp/>value<sp/>of<sp/>one<sp/>parameter<sp/>in<sp/>the<sp/>nonlinear<sp/>part</highlight></codeline>
<codeline lineno="299"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="300"><highlight class="comment"><sp/>*<sp/>input:</highlight></codeline>
<codeline lineno="301"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>nlpi<sp/>datastructure<sp/>for<sp/>solver<sp/>interface</highlight></codeline>
<codeline lineno="302"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>problem<sp/>datastructure<sp/>for<sp/>problem<sp/>instance</highlight></codeline>
<codeline lineno="303"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>idxcons<sp/>index<sp/>of<sp/>constraint<sp/>or<sp/>-1<sp/>for<sp/>objective</highlight></codeline>
<codeline lineno="304"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>idxparam<sp/>index<sp/>of<sp/>parameter</highlight></codeline>
<codeline lineno="305"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>value<sp/>new<sp/>value<sp/>for<sp/>nonlinear<sp/>parameter</highlight></codeline>
<codeline lineno="306"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="307"><highlight class="comment"><sp/>*<sp/>return:<sp/>Error<sp/>if<sp/>parameter<sp/>does<sp/>not<sp/>exist</highlight></codeline>
<codeline lineno="308"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="309" refid="type__nlpi_8h_1a39da8a9d0fc7b25c12cc05c7b70e9567" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCIP_DECL_NLPICHGNONLINCOEF(x)<sp/>SCIP_RETCODE<sp/>x<sp/>(SCIP_NLPI*<sp/>nlpi,<sp/>SCIP_NLPIPROBLEM*<sp/>problem,<sp/>int<sp/>idxcons,<sp/>int<sp/>idxparam,<sp/>\</highlight></codeline>
<codeline lineno="310"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>SCIP_Real<sp/>value)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="311"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="312"><highlight class="comment">/**<sp/>change<sp/>the<sp/>constant<sp/>offset<sp/>in<sp/>the<sp/>objective</highlight></codeline>
<codeline lineno="313"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="314"><highlight class="comment"><sp/>*<sp/>input:</highlight></codeline>
<codeline lineno="315"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>nlpi<sp/>datastructure<sp/>for<sp/>solver<sp/>interface</highlight></codeline>
<codeline lineno="316"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>problem<sp/>datastructure<sp/>for<sp/>problem<sp/>instance</highlight></codeline>
<codeline lineno="317"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>objconstant<sp/>new<sp/>value<sp/>for<sp/>objective<sp/>constant</highlight></codeline>
<codeline lineno="318"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="319" refid="type__nlpi_8h_1a13c0835097e180bd1eb86313c7776516" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCIP_DECL_NLPICHGOBJCONSTANT(x)<sp/>SCIP_RETCODE<sp/>x<sp/>(SCIP_NLPI*<sp/>nlpi,<sp/>SCIP_NLPIPROBLEM*<sp/>problem,<sp/>SCIP_Real<sp/>objconstant)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="321"><highlight class="comment">/**<sp/>sets<sp/>initial<sp/>guess<sp/>for<sp/>primal<sp/>variables</highlight></codeline>
<codeline lineno="322"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="323"><highlight class="comment"><sp/>*<sp/>input:</highlight></codeline>
<codeline lineno="324"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>nlpi<sp/>datastructure<sp/>for<sp/>solver<sp/>interface</highlight></codeline>
<codeline lineno="325"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>problem<sp/>datastructure<sp/>for<sp/>problem<sp/>instance</highlight></codeline>
<codeline lineno="326"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>primalvalues<sp/>initial<sp/>primal<sp/>values<sp/>for<sp/>variables,<sp/>or<sp/>NULL<sp/>to<sp/>clear<sp/>previous<sp/>values</highlight></codeline>
<codeline lineno="327"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>consdualvalues<sp/>initial<sp/>dual<sp/>values<sp/>for<sp/>constraints,<sp/>or<sp/>NULL<sp/>to<sp/>clear<sp/>previous<sp/>values</highlight></codeline>
<codeline lineno="328"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>varlbdualvalues<sp/><sp/>initial<sp/>dual<sp/>values<sp/>for<sp/>variable<sp/>lower<sp/>bounds,<sp/>or<sp/>NULL<sp/>to<sp/>clear<sp/>previous<sp/>values</highlight></codeline>
<codeline lineno="329"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>varubdualvalues<sp/><sp/>initial<sp/>dual<sp/>values<sp/>for<sp/>variable<sp/>upper<sp/>bounds,<sp/>or<sp/>NULL<sp/>to<sp/>clear<sp/>previous<sp/>values</highlight></codeline>
<codeline lineno="330"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="331" refid="type__nlpi_8h_1a8c1743257c03269de9ad9aa3dd208b5d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCIP_DECL_NLPISETINITIALGUESS(x)<sp/>SCIP_RETCODE<sp/>x<sp/>(SCIP_NLPI*<sp/>nlpi,<sp/>SCIP_NLPIPROBLEM*<sp/>problem,<sp/>SCIP_Real*<sp/>primalvalues,<sp/>\</highlight></codeline>
<codeline lineno="332"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>SCIP_Real*<sp/>consdualvalues,<sp/>SCIP_Real*<sp/>varlbdualvalues,<sp/>SCIP_Real*<sp/>varubdualvalues)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="333"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="334"><highlight class="comment">/**<sp/>tries<sp/>to<sp/>solve<sp/>NLP</highlight></codeline>
<codeline lineno="335"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="336"><highlight class="comment"><sp/>*<sp/>input:</highlight></codeline>
<codeline lineno="337"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>nlpi<sp/>datastructure<sp/>for<sp/>solver<sp/>interface</highlight></codeline>
<codeline lineno="338"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>problem<sp/>datastructure<sp/>for<sp/>problem<sp/>instance</highlight></codeline>
<codeline lineno="339"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="340" refid="type__nlpi_8h_1a001a76a9a2d02288d0752756a4f48dae" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCIP_DECL_NLPISOLVE(x)<sp/>SCIP_RETCODE<sp/>x<sp/>(SCIP_NLPI*<sp/>nlpi,<sp/>SCIP_NLPIPROBLEM*<sp/>problem)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="342"><highlight class="comment">/**<sp/>gives<sp/>solution<sp/>status</highlight></codeline>
<codeline lineno="343"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="344"><highlight class="comment"><sp/>*<sp/>input:</highlight></codeline>
<codeline lineno="345"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>nlpi<sp/>datastructure<sp/>for<sp/>solver<sp/>interface</highlight></codeline>
<codeline lineno="346"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>problem<sp/>datastructure<sp/>for<sp/>problem<sp/>instance</highlight></codeline>
<codeline lineno="347"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="348"><highlight class="comment"><sp/>*<sp/>return:<sp/>Solution<sp/>Status</highlight></codeline>
<codeline lineno="349"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="350" refid="type__nlpi_8h_1abf83ff0c4673648045fcfd5255d7b654" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCIP_DECL_NLPIGETSOLSTAT(x)<sp/>SCIP_NLPSOLSTAT<sp/>x<sp/>(SCIP_NLPI*<sp/>nlpi,<sp/>SCIP_NLPIPROBLEM*<sp/>problem)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="352"><highlight class="comment">/**<sp/>gives<sp/>termination<sp/>reason</highlight></codeline>
<codeline lineno="353"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="354"><highlight class="comment"><sp/>*<sp/>input:</highlight></codeline>
<codeline lineno="355"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>nlpi<sp/>datastructure<sp/>for<sp/>solver<sp/>interface</highlight></codeline>
<codeline lineno="356"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>problem<sp/>datastructure<sp/>for<sp/>problem<sp/>instance</highlight></codeline>
<codeline lineno="357"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="358"><highlight class="comment"><sp/>*<sp/>return:<sp/>Termination<sp/>Status</highlight></codeline>
<codeline lineno="359"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="360" refid="type__nlpi_8h_1ad09a369b899ddda83be8ee39a9f3d900" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCIP_DECL_NLPIGETTERMSTAT(x)<sp/>SCIP_NLPTERMSTAT<sp/>x<sp/>(SCIP_NLPI*<sp/>nlpi,<sp/>SCIP_NLPIPROBLEM*<sp/>problem)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="362"><highlight class="comment">/**<sp/>gives<sp/>primal<sp/>and<sp/>dual<sp/>solution<sp/>values</highlight></codeline>
<codeline lineno="363"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="364"><highlight class="comment"><sp/>*<sp/>solver<sp/>can<sp/>return<sp/>NULL<sp/>in<sp/>dual<sp/>values<sp/>if<sp/>not<sp/>available</highlight></codeline>
<codeline lineno="365"><highlight class="comment"><sp/>*<sp/>but<sp/>if<sp/>solver<sp/>provides<sp/>dual<sp/>values<sp/>for<sp/>one<sp/>side<sp/>of<sp/>variable<sp/>bounds,<sp/>then<sp/>it<sp/>must<sp/>also<sp/>provide<sp/>those<sp/>for<sp/>the<sp/>other<sp/>side</highlight></codeline>
<codeline lineno="366"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="367"><highlight class="comment"><sp/>*<sp/>for<sp/>a<sp/>ranged<sp/>constraint,<sp/>the<sp/>dual<sp/>variable<sp/>is<sp/>positive<sp/>if<sp/>the<sp/>right<sp/>hand<sp/>side<sp/>is<sp/>active<sp/>and<sp/>negative<sp/>if<sp/>the<sp/>left<sp/>hand<sp/>side<sp/>is<sp/>active</highlight></codeline>
<codeline lineno="368"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="369"><highlight class="comment"><sp/>*<sp/>input:</highlight></codeline>
<codeline lineno="370"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>nlpi<sp/>datastructure<sp/>for<sp/>solver<sp/>interface</highlight></codeline>
<codeline lineno="371"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>problem<sp/>datastructure<sp/>for<sp/>problem<sp/>instance</highlight></codeline>
<codeline lineno="372"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>primalvalues<sp/>buffer<sp/>to<sp/>store<sp/>pointer<sp/>to<sp/>array<sp/>to<sp/>primal<sp/>values,<sp/>or<sp/>NULL<sp/>if<sp/>not<sp/>needed</highlight></codeline>
<codeline lineno="373"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>consdualvalues<sp/>buffer<sp/>to<sp/>store<sp/>pointer<sp/>to<sp/>array<sp/>to<sp/>dual<sp/>values<sp/>of<sp/>constraints,<sp/>or<sp/>NULL<sp/>if<sp/>not<sp/>needed</highlight></codeline>
<codeline lineno="374"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>varlbdualvalues<sp/>buffer<sp/>to<sp/>store<sp/>pointer<sp/>to<sp/>array<sp/>to<sp/>dual<sp/>values<sp/>of<sp/>variable<sp/>lower<sp/>bounds,<sp/>or<sp/>NULL<sp/>if<sp/>not<sp/>needed</highlight></codeline>
<codeline lineno="375"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>varubdualvalues<sp/>buffer<sp/>to<sp/>store<sp/>pointer<sp/>to<sp/>array<sp/>to<sp/>dual<sp/>values<sp/>of<sp/>variable<sp/>lower<sp/>bounds,<sp/>or<sp/>NULL<sp/>if<sp/>not<sp/>needed</highlight></codeline>
<codeline lineno="376"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377" refid="type__nlpi_8h_1a18a5e246c1f5b0d7c2e4f59017a5a9cb" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCIP_DECL_NLPIGETSOLUTION(x)<sp/>SCIP_RETCODE<sp/>x<sp/>(SCIP_NLPI*<sp/>nlpi,<sp/>SCIP_NLPIPROBLEM*<sp/>problem,<sp/>SCIP_Real**<sp/>primalvalues,<sp/>\</highlight></codeline>
<codeline lineno="378"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>SCIP_Real**<sp/>consdualvalues,<sp/>SCIP_Real**<sp/>varlbdualvalues,<sp/>SCIP_Real**<sp/>varubdualvalues)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="380"><highlight class="comment">/**<sp/>gives<sp/>solve<sp/>statistics</highlight></codeline>
<codeline lineno="381"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="382"><highlight class="comment"><sp/>*<sp/>input:</highlight></codeline>
<codeline lineno="383"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>nlpi<sp/>datastructure<sp/>for<sp/>solver<sp/>interface</highlight></codeline>
<codeline lineno="384"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>problem<sp/>datastructure<sp/>for<sp/>problem<sp/>instance</highlight></codeline>
<codeline lineno="385"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>statistics<sp/>pointer<sp/>to<sp/>store<sp/>statistics</highlight></codeline>
<codeline lineno="386"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="387"><highlight class="comment"><sp/>*<sp/>output:</highlight></codeline>
<codeline lineno="388"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>statistics<sp/>solve<sp/>statistics</highlight></codeline>
<codeline lineno="389"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="390" refid="type__nlpi_8h_1a481900debb130ac4db90afb60f55789c" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCIP_DECL_NLPIGETSTATISTICS(x)<sp/>SCIP_RETCODE<sp/>x<sp/>(SCIP_NLPI*<sp/>nlpi,<sp/>SCIP_NLPIPROBLEM*<sp/>problem,<sp/>SCIP_NLPSTATISTICS*<sp/>statistics)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="392"><highlight class="comment">/**<sp/>gives<sp/>required<sp/>size<sp/>of<sp/>a<sp/>buffer<sp/>to<sp/>store<sp/>a<sp/>warmstart<sp/>object</highlight></codeline>
<codeline lineno="393"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="394"><highlight class="comment"><sp/>*<sp/><sp/>input:</highlight></codeline>
<codeline lineno="395"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>nlpi<sp/>datastructure<sp/>for<sp/>solver<sp/>interface</highlight></codeline>
<codeline lineno="396"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>problem<sp/>datastructure<sp/>for<sp/>problem<sp/>instance</highlight></codeline>
<codeline lineno="397"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>size<sp/>pointer<sp/>to<sp/>store<sp/>required<sp/>size<sp/>for<sp/>warmstart<sp/>buffer</highlight></codeline>
<codeline lineno="398"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="399"><highlight class="comment"><sp/>*<sp/>output:</highlight></codeline>
<codeline lineno="400"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>size<sp/>required<sp/>size<sp/>for<sp/>warmstart<sp/>buffer</highlight></codeline>
<codeline lineno="401"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="402" refid="type__nlpi_8h_1a9c99b338019ec1a7db1ad184eb43d39b" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCIP_DECL_NLPIGETWARMSTARTSIZE(x)<sp/>SCIP_RETCODE<sp/>x<sp/>(SCIP_NLPI*<sp/>nlpi,<sp/>SCIP_NLPIPROBLEM*<sp/>problem,<sp/>size_t*<sp/>size)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="403"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="404"><highlight class="comment">/**<sp/>stores<sp/>warmstart<sp/>information<sp/>in<sp/>buffer</highlight></codeline>
<codeline lineno="405"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="406"><highlight class="comment"><sp/>*<sp/>required<sp/>size<sp/>of<sp/>buffer<sp/>should<sp/>have<sp/>been<sp/>obtained<sp/>by<sp/>SCIPnlpiGetWarmstartSize<sp/>before</highlight></codeline>
<codeline lineno="407"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="408"><highlight class="comment"><sp/>*<sp/>input:</highlight></codeline>
<codeline lineno="409"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>nlpi<sp/>datastructure<sp/>for<sp/>solver<sp/>interface</highlight></codeline>
<codeline lineno="410"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>problem<sp/>datastructure<sp/>for<sp/>problem<sp/>instance</highlight></codeline>
<codeline lineno="411"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>buffer<sp/>memory<sp/>to<sp/>store<sp/>warmstart<sp/>information</highlight></codeline>
<codeline lineno="412"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="413"><highlight class="comment"><sp/>*<sp/>output:</highlight></codeline>
<codeline lineno="414"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>buffer<sp/>warmstart<sp/>information<sp/>in<sp/>solver<sp/>specific<sp/>data<sp/>structure</highlight></codeline>
<codeline lineno="415"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="416" refid="type__nlpi_8h_1af4bc4cb6eae4656c973aebbede655771" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCIP_DECL_NLPIGETWARMSTARTMEMO(x)<sp/>SCIP_RETCODE<sp/>x<sp/>(SCIP_NLPI*<sp/>nlpi,<sp/>SCIP_NLPIPROBLEM*<sp/>problem,<sp/>void*<sp/>buffer)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="418"><highlight class="comment">/**<sp/>sets<sp/>warmstart<sp/>information<sp/>in<sp/>solver</highlight></codeline>
<codeline lineno="419"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="420"><highlight class="comment"><sp/>*<sp/>write<sp/>warmstart<sp/>to<sp/>buffer</highlight></codeline>
<codeline lineno="421"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="422"><highlight class="comment"><sp/>*<sp/>input:</highlight></codeline>
<codeline lineno="423"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>nlpi<sp/>datastructure<sp/>for<sp/>solver<sp/>interface</highlight></codeline>
<codeline lineno="424"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>problem<sp/>datastructure<sp/>for<sp/>problem<sp/>instance</highlight></codeline>
<codeline lineno="425"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>buffer<sp/>warmstart<sp/>information</highlight></codeline>
<codeline lineno="426"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="427" refid="type__nlpi_8h_1ae65157d1703b0cce3968e2f0c3fc098a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCIP_DECL_NLPISETWARMSTARTMEMO(x)<sp/>SCIP_RETCODE<sp/>x<sp/>(SCIP_NLPI*<sp/>nlpi,<sp/>SCIP_NLPIPROBLEM*<sp/>problem,<sp/>void*<sp/>buffer)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="428"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="429"><highlight class="comment">/**@name<sp/>Parameter<sp/>Methods<sp/>*/</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="430"><highlight class="comment">/**@{<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="432"><highlight class="comment">/**<sp/>gets<sp/>integer<sp/>parameter<sp/>of<sp/>NLP</highlight></codeline>
<codeline lineno="433"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="434"><highlight class="comment"><sp/>*<sp/>input:</highlight></codeline>
<codeline lineno="435"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>nlpi<sp/>NLP<sp/>interface<sp/>structure</highlight></codeline>
<codeline lineno="436"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>problem<sp/>datastructure<sp/>for<sp/>problem<sp/>instance</highlight></codeline>
<codeline lineno="437"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>type<sp/>parameter<sp/>number</highlight></codeline>
<codeline lineno="438"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>ival<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>parameter<sp/>value</highlight></codeline>
<codeline lineno="439"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="440"><highlight class="comment"><sp/>*<sp/>output:</highlight></codeline>
<codeline lineno="441"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>ival<sp/>parameter<sp/>value</highlight></codeline>
<codeline lineno="442"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="443" refid="type__nlpi_8h_1a2aee1fdd81c62a25faf1c63f6fae89aa" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCIP_DECL_NLPIGETINTPAR(x)<sp/>SCIP_RETCODE<sp/>x<sp/>(SCIP_NLPI*<sp/>nlpi,<sp/>SCIP_NLPIPROBLEM*<sp/>problem,<sp/>SCIP_NLPPARAM<sp/>type,<sp/>int*<sp/>ival)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="445"><highlight class="comment">/**<sp/>sets<sp/>integer<sp/>parameter<sp/>of<sp/>NLP</highlight></codeline>
<codeline lineno="446"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="447"><highlight class="comment"><sp/>*<sp/>input:</highlight></codeline>
<codeline lineno="448"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>nlpi<sp/>NLP<sp/>interface<sp/>structure</highlight></codeline>
<codeline lineno="449"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>problem<sp/>datastructure<sp/>for<sp/>problem<sp/>instance</highlight></codeline>
<codeline lineno="450"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>type<sp/>parameter<sp/>number</highlight></codeline>
<codeline lineno="451"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>ival<sp/>parameter<sp/>value</highlight></codeline>
<codeline lineno="452"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="453" refid="type__nlpi_8h_1aaaacc6ace66183cff40073fa122e166e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCIP_DECL_NLPISETINTPAR(x)<sp/>SCIP_RETCODE<sp/>x<sp/>(SCIP_NLPI*<sp/>nlpi,<sp/>SCIP_NLPIPROBLEM*<sp/>problem,<sp/>SCIP_NLPPARAM<sp/>type,<sp/>int<sp/>ival)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="454"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="455"><highlight class="comment">/**<sp/>gets<sp/>floating<sp/>point<sp/>parameter<sp/>of<sp/>NLP</highlight></codeline>
<codeline lineno="456"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="457"><highlight class="comment"><sp/>*<sp/>input:</highlight></codeline>
<codeline lineno="458"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>nlpi<sp/>NLP<sp/>interface<sp/>structure</highlight></codeline>
<codeline lineno="459"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>problem<sp/>datastructure<sp/>for<sp/>problem<sp/>instance,<sp/>can<sp/>be<sp/>NULL<sp/>only<sp/>if<sp/>type<sp/>==<sp/>SCIP_NLPPAR_INFINITY</highlight></codeline>
<codeline lineno="460"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>type<sp/>parameter<sp/>number</highlight></codeline>
<codeline lineno="461"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>dval<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>parameter<sp/>value</highlight></codeline>
<codeline lineno="462"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="463"><highlight class="comment"><sp/>*<sp/>output:</highlight></codeline>
<codeline lineno="464"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>dval<sp/>parameter<sp/>value</highlight></codeline>
<codeline lineno="465"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="466" refid="type__nlpi_8h_1ae4ca7b5fadc5d5eeb4448a4f233c4adb" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCIP_DECL_NLPIGETREALPAR(x)<sp/>SCIP_RETCODE<sp/>x<sp/>(SCIP_NLPI*<sp/>nlpi,<sp/>SCIP_NLPIPROBLEM*<sp/>problem,<sp/>SCIP_NLPPARAM<sp/>type,<sp/>SCIP_Real*<sp/>dval)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="467"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="468"><highlight class="comment">/**<sp/>sets<sp/>floating<sp/>point<sp/>parameter<sp/>of<sp/>NLP</highlight></codeline>
<codeline lineno="469"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="470"><highlight class="comment"><sp/>*<sp/>input:</highlight></codeline>
<codeline lineno="471"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>nlpi<sp/>NLP<sp/>interface<sp/>structure</highlight></codeline>
<codeline lineno="472"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>problem<sp/>datastructure<sp/>for<sp/>problem<sp/>instance,<sp/>can<sp/>be<sp/>NULL<sp/>only<sp/>if<sp/>type<sp/>==<sp/>SCIP_NLPPAR_INFINITY</highlight></codeline>
<codeline lineno="473"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>type<sp/>parameter<sp/>number</highlight></codeline>
<codeline lineno="474"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>dval<sp/>parameter<sp/>value</highlight></codeline>
<codeline lineno="475"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="476" refid="type__nlpi_8h_1a173c8b4c47d84d50dc892f530e6310f1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCIP_DECL_NLPISETREALPAR(x)<sp/>SCIP_RETCODE<sp/>x<sp/>(SCIP_NLPI*<sp/>nlpi,<sp/>SCIP_NLPIPROBLEM*<sp/>problem,<sp/>SCIP_NLPPARAM<sp/>type,<sp/>SCIP_Real<sp/>dval)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="477"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="478"><highlight class="comment">/**<sp/>gets<sp/>string<sp/>parameter<sp/>of<sp/>NLP</highlight></codeline>
<codeline lineno="479"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="480"><highlight class="comment"><sp/>*<sp/>input:</highlight></codeline>
<codeline lineno="481"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>nlpi<sp/>NLP<sp/>interface<sp/>structure</highlight></codeline>
<codeline lineno="482"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>problem<sp/>datastructure<sp/>for<sp/>problem<sp/>instance</highlight></codeline>
<codeline lineno="483"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>type<sp/>parameter<sp/>number</highlight></codeline>
<codeline lineno="484"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>sval<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>string<sp/>value,<sp/>the<sp/>user<sp/>must<sp/>not<sp/>modify<sp/>the<sp/>string</highlight></codeline>
<codeline lineno="485"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="486"><highlight class="comment"><sp/>*<sp/>output:</highlight></codeline>
<codeline lineno="487"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>sval<sp/>parameter<sp/>value</highlight></codeline>
<codeline lineno="488"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="489" refid="type__nlpi_8h_1ae1855ccd523640954479cd237f15eb31" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCIP_DECL_NLPIGETSTRINGPAR(x)<sp/>SCIP_RETCODE<sp/>x<sp/>(SCIP_NLPI*<sp/>nlpi,<sp/>SCIP_NLPIPROBLEM*<sp/>problem,<sp/>SCIP_NLPPARAM<sp/>type,<sp/>const<sp/>char**<sp/>sval)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="490"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="491"><highlight class="comment">/**<sp/>sets<sp/>string<sp/>parameter<sp/>of<sp/>NLP</highlight></codeline>
<codeline lineno="492"><highlight class="comment"><sp/>*<sp/></highlight></codeline>
<codeline lineno="493"><highlight class="comment"><sp/>*<sp/>input:</highlight></codeline>
<codeline lineno="494"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>nlpi<sp/>NLP<sp/>interface<sp/>structure</highlight></codeline>
<codeline lineno="495"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>problem<sp/>datastructure<sp/>for<sp/>problem<sp/>instance</highlight></codeline>
<codeline lineno="496"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>type<sp/>parameter<sp/>number</highlight></codeline>
<codeline lineno="497"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>sval<sp/>parameter<sp/>value</highlight></codeline>
<codeline lineno="498"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="499" refid="type__nlpi_8h_1a592b7226617ec182a6da6e13840620a3" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCIP_DECL_NLPISETSTRINGPAR(x)<sp/>SCIP_RETCODE<sp/>x<sp/>(SCIP_NLPI*<sp/>nlpi,<sp/>SCIP_NLPIPROBLEM*<sp/>problem,<sp/>SCIP_NLPPARAM<sp/>type,<sp/>const<sp/>char*<sp/>sval)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="500"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="501"><highlight class="comment">/**<sp/>sets<sp/>message<sp/>handler<sp/>for<sp/>message<sp/>output</highlight></codeline>
<codeline lineno="502"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="503"><highlight class="comment"><sp/>*<sp/>input:</highlight></codeline>
<codeline lineno="504"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>nlpi<sp/>NLP<sp/>interface<sp/>structure</highlight></codeline>
<codeline lineno="505"><highlight class="comment"><sp/>*<sp/><sp/>-<sp/>messagehdlr<sp/>SCIP<sp/>message<sp/>handler,<sp/>or<sp/>NULL<sp/>to<sp/>suppress<sp/>all<sp/>output</highlight></codeline>
<codeline lineno="506"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="507" refid="type__nlpi_8h_1ab7e8000232c4625a6c7075ce6414517d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCIP_DECL_NLPISETMESSAGEHDLR(x)<sp/>SCIP_RETCODE<sp/>x<sp/>(SCIP_NLPI*<sp/>nlpi,<sp/>SCIP_MESSAGEHDLR*<sp/>messagehdlr)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="508"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="509"><highlight class="comment">/**@}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="510"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="511"><highlight class="normal">}</highlight></codeline>
<codeline lineno="512"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="513"><highlight class="normal"></highlight></codeline>
<codeline lineno="514"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*__SCIP_TYPE_NLPI_H__<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_nlpi.h"/>
  </compounddef>
</doxygen>
