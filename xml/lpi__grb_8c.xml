<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.9.1">
  <compounddef id="lpi__grb_8c" kind="file" language="C++">
    <compoundname>lpi_grb.c</compoundname>
    <includes local="no">assert.h</includes>
    <includes local="no">string.h</includes>
    <includes local="yes">gurobi_c.h</includes>
    <includes refid="lpi_8h" local="yes">lpi/lpi.h</includes>
    <includes refid="pub__message_8h" local="yes">scip/pub_message.h</includes>
    <incdepgraph>
      <node id="7837">
        <label>stdarg.h</label>
      </node>
      <node id="7824">
        <label>lpi_grb.c</label>
        <link refid="lpi_grb.c"/>
        <childnode refid="7825" relation="include">
        </childnode>
        <childnode refid="7826" relation="include">
        </childnode>
        <childnode refid="7827" relation="include">
        </childnode>
        <childnode refid="7828" relation="include">
        </childnode>
        <childnode refid="7836" relation="include">
        </childnode>
      </node>
      <node id="7825">
        <label>assert.h</label>
      </node>
      <node id="7834">
        <label>float.h</label>
      </node>
      <node id="7831">
        <label>stdint.h</label>
      </node>
      <node id="7829">
        <label>scip/def.h</label>
        <link refid="def_8h"/>
        <childnode refid="7830" relation="include">
        </childnode>
        <childnode refid="7831" relation="include">
        </childnode>
        <childnode refid="7832" relation="include">
        </childnode>
        <childnode refid="7833" relation="include">
        </childnode>
        <childnode refid="7834" relation="include">
        </childnode>
        <childnode refid="7825" relation="include">
        </childnode>
        <childnode refid="7835" relation="include">
        </childnode>
        <childnode refid="7836" relation="include">
        </childnode>
      </node>
      <node id="7833">
        <label>limits.h</label>
      </node>
      <node id="7826">
        <label>string.h</label>
      </node>
      <node id="7827">
        <label>gurobi_c.h</label>
      </node>
      <node id="7832">
        <label>math.h</label>
      </node>
      <node id="7839">
        <label>blockmemshell/memory.h</label>
      </node>
      <node id="7835">
        <label>scip/type_retcode.h</label>
        <link refid="type__retcode_8h"/>
      </node>
      <node id="7840">
        <label>lpi/type_lpi.h</label>
        <link refid="type__lpi_8h"/>
      </node>
      <node id="7836">
        <label>scip/pub_message.h</label>
        <link refid="pub__message_8h"/>
        <childnode refid="7837" relation="include">
        </childnode>
        <childnode refid="7829" relation="include">
        </childnode>
        <childnode refid="7838" relation="include">
        </childnode>
      </node>
      <node id="7838">
        <label>scip/type_message.h</label>
        <link refid="type__message_8h"/>
        <childnode refid="7830" relation="include">
        </childnode>
      </node>
      <node id="7830">
        <label>stdio.h</label>
      </node>
      <node id="7828">
        <label>lpi/lpi.h</label>
        <link refid="lpi_8h"/>
        <childnode refid="7829" relation="include">
        </childnode>
        <childnode refid="7839" relation="include">
        </childnode>
        <childnode refid="7835" relation="include">
        </childnode>
        <childnode refid="7840" relation="include">
        </childnode>
      </node>
    </incdepgraph>
      <sectiondef kind="user-defined">
      <header>Miscellaneous Methods</header>
      <memberdef kind="function" id="lpi__grb_8c_1aed7c57c93675aae2562abab53b487ce7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* SCIPlpiGetSolverName</definition>
        <argsstring>(void)</argsstring>
        <name>SCIPlpiGetSolverName</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>gets name and version of LP solver </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="1066" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="1066" bodyend="1077"/>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1a6cfc10a9902214c1ac825998bebdea19" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>const char *</type>
        <definition>const char* SCIPlpiGetSolverDesc</definition>
        <argsstring>(void)</argsstring>
        <name>SCIPlpiGetSolverDesc</name>
        <param>
          <type>void</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>gets description of LP solver (developer, webpage, ...) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="1080" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="1080" bodyend="1085"/>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1ac8b0874105d4a69fd4e35455d488edb3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void *</type>
        <definition>void* SCIPlpiGetSolverPointer</definition>
        <argsstring>(SCIP_LPI *lpi)</argsstring>
        <name>SCIPlpiGetSolverPointer</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>pointer to an LP interface structure </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>gets pointer for LP solver - use only with great care</para><para>Here we return the pointer to the model. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="1091" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="1091" bodyend="1096"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>LPI Creation and Destruction Methods</header>
      <memberdef kind="function" id="lpi__grb_8c_1ae522c0e79b2f2c7d185e6b6cafec1a3d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPlpiCreate</definition>
        <argsstring>(SCIP_LPI **lpi, SCIP_MESSAGEHDLR *messagehdlr, const char *name, SCIP_OBJSEN objsen)</argsstring>
        <name>SCIPlpiCreate</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> **</type>
          <declname>lpi</declname>
          <briefdescription><para>pointer to an LP interface structure </para></briefdescription>
        </param>
        <param>
          <type><ref refid="type__message_8h_1a7d71113339d14873806c1399442fae8d" kindref="member">SCIP_MESSAGEHDLR</ref> *</type>
          <declname>messagehdlr</declname>
          <briefdescription><para>message handler to use for printing messages, or NULL </para></briefdescription>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
          <briefdescription><para>problem name </para></briefdescription>
        </param>
        <param>
          <type><ref refid="type__lpi_8h_1afa3d076f8e5d2a8a31bf662ab24797cf" kindref="member">SCIP_OBJSEN</ref></type>
          <declname>objsen</declname>
          <briefdescription><para>objective sense </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>creates an LP problem object </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="1110" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="1110" bodyend="1182"/>
        <references refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" compoundref="lpi__grb_8c" startline="54">CHECK_ZERO</references>
        <references refid="def_8h_1aa93f0eb578d23995850d61f7d61c55c1" compoundref="def_8h" startline="53">FALSE</references>
        <references refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="190">NULL</references>
        <references refid="def_8h_1a7695e892dc456d85a3654eb158976921" compoundref="def_8h" startline="274">SCIP_ALLOC</references>
        <references refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" compoundref="def_8h" startline="50">SCIP_Bool</references>
        <references refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" compoundref="def_8h" startline="263">SCIP_CALL</references>
        <references refid="type__lpi_8h_1ac333f54119f676d19d81bed186b0038ba0114e2317d0236d43fb3b297ee9aea8d" compoundref="type__lpi_8h" startline="45">SCIP_LPPAR_PRICING</references>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" compoundref="type__retcode_8h" startline="33">SCIP_OKAY</references>
        <references refid="type__lpi_8h_1a0483a21478d8f9c8d7c1ba9e3473d775a840117e919783bcc69646f544c2db051" compoundref="type__lpi_8h" startline="66">SCIP_PRICING_LPIDEFAULT</references>
        <references refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" compoundref="def_8h" startline="124">SCIP_Real</references>
        <references refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" compoundref="pub__message_8h" startline="77">SCIPdebugMessage</references>
        <references refid="lpi__grb_8c_1a0d794ce162ec1c45eb776baa2ffdc79c" compoundref="lpi__grb_8c" startline="1634" endline="1653">SCIPlpiChgObjsen</references>
        <references refid="lpi__grb_8c_1a8dac6dec76901acef9c18397582c5e9a" compoundref="lpi__grb_8c" startline="4267" endline="4345">SCIPlpiSetIntpar</references>
        <references refid="pub__message_8h_1ab73695868f29c4bc1ab097afca40de3f">SCIPmessagePrintWarning</references>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1a6dfadd74b4f72eea58d0946ec9ea6f60" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPlpiFree</definition>
        <argsstring>(SCIP_LPI **lpi)</argsstring>
        <name>SCIPlpiFree</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> **</type>
          <declname>lpi</declname>
          <briefdescription><para>pointer to an LP interface structure </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>deletes an LP problem object </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="1185" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="1185" bodyend="1214"/>
        <references refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" compoundref="lpi__grb_8c" startline="54">CHECK_ZERO</references>
        <references refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="190">NULL</references>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" compoundref="type__retcode_8h" startline="33">SCIP_OKAY</references>
        <references refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" compoundref="pub__message_8h" startline="77">SCIPdebugMessage</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Modification Methods</header>
      <memberdef kind="function" id="lpi__grb_8c_1ae23bc1c98c8547a0ba03682d100365dd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPlpiLoadColLP</definition>
        <argsstring>(SCIP_LPI *lpi, SCIP_OBJSEN objsen, int ncols, const SCIP_Real *obj, const SCIP_Real *lb, const SCIP_Real *ub, char **colnames, int nrows, const SCIP_Real *lhs, const SCIP_Real *rhs, char **rownames, int nnonz, const int *beg, const int *ind, const SCIP_Real *val)</argsstring>
        <name>SCIPlpiLoadColLP</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <param>
          <type><ref refid="type__lpi_8h_1afa3d076f8e5d2a8a31bf662ab24797cf" kindref="member">SCIP_OBJSEN</ref></type>
          <declname>objsen</declname>
          <briefdescription><para>objective sense </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>ncols</declname>
          <briefdescription><para>number of columns </para></briefdescription>
        </param>
        <param>
          <type>const <ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>obj</declname>
          <briefdescription><para>objective function values of columns </para></briefdescription>
        </param>
        <param>
          <type>const <ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>lb</declname>
          <briefdescription><para>lower bounds of columns </para></briefdescription>
        </param>
        <param>
          <type>const <ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>ub</declname>
          <briefdescription><para>upper bounds of columns </para></briefdescription>
        </param>
        <param>
          <type>char **</type>
          <declname>colnames</declname>
          <briefdescription><para>column names, or NULL </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>nrows</declname>
          <briefdescription><para>number of rows </para></briefdescription>
        </param>
        <param>
          <type>const <ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>lhs</declname>
          <briefdescription><para>left hand sides of rows </para></briefdescription>
        </param>
        <param>
          <type>const <ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>rhs</declname>
          <briefdescription><para>right hand sides of rows </para></briefdescription>
        </param>
        <param>
          <type>char **</type>
          <declname>rownames</declname>
          <briefdescription><para>row names, or NULL </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>nnonz</declname>
          <briefdescription><para>number of nonzero elements in the constraint matrix </para></briefdescription>
        </param>
        <param>
          <type>const int *</type>
          <declname>beg</declname>
          <briefdescription><para>start index of each column in ind- and val-array </para></briefdescription>
        </param>
        <param>
          <type>const int *</type>
          <declname>ind</declname>
          <briefdescription><para>row indices of constraint matrix entries </para></briefdescription>
        </param>
        <param>
          <type>const <ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>val</declname>
          <briefdescription><para>values of constraint matrix entries </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>copies LP data with column matrix into LP solver </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="1229" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="1229" bodyend="1304"/>
        <references refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" compoundref="lpi__grb_8c" startline="54">CHECK_ZERO</references>
        <references refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="190">NULL</references>
        <references refid="def_8h_1a7695e892dc456d85a3654eb158976921" compoundref="def_8h" startline="274">SCIP_ALLOC</references>
        <references refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" compoundref="def_8h" startline="263">SCIP_CALL</references>
        <references refid="type__lpi_8h_1af1bc7f4fad28ccf4753250fa0558373ba32ae01999ecd89f94f4a0bd0b6be60c6" compoundref="type__lpi_8h" startline="33">SCIP_OBJSEN_MAXIMIZE</references>
        <references refid="type__lpi_8h_1af1bc7f4fad28ccf4753250fa0558373bab25a52cd6604d9c8c5fd02c5e03180a7" compoundref="type__lpi_8h" startline="34">SCIP_OBJSEN_MINIMIZE</references>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" compoundref="type__retcode_8h" startline="33">SCIP_OKAY</references>
        <references refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" compoundref="def_8h" startline="124">SCIP_Real</references>
        <references refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" compoundref="pub__message_8h" startline="77">SCIPdebugMessage</references>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1add77293153dc03295e1782af22921906" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPlpiAddCols</definition>
        <argsstring>(SCIP_LPI *lpi, int ncols, const SCIP_Real *obj, const SCIP_Real *lb, const SCIP_Real *ub, char **colnames, int nnonz, const int *beg, const int *ind, const SCIP_Real *val)</argsstring>
        <name>SCIPlpiAddCols</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>ncols</declname>
          <briefdescription><para>number of columns to be added </para></briefdescription>
        </param>
        <param>
          <type>const <ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>obj</declname>
          <briefdescription><para>objective function values of new columns </para></briefdescription>
        </param>
        <param>
          <type>const <ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>lb</declname>
          <briefdescription><para>lower bounds of new columns </para></briefdescription>
        </param>
        <param>
          <type>const <ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>ub</declname>
          <briefdescription><para>upper bounds of new columns </para></briefdescription>
        </param>
        <param>
          <type>char **</type>
          <declname>colnames</declname>
          <briefdescription><para>column names, or NULL </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>nnonz</declname>
          <briefdescription><para>number of nonzero elements to be added to the constraint matrix </para></briefdescription>
        </param>
        <param>
          <type>const int *</type>
          <declname>beg</declname>
          <briefdescription><para>start index of each column in ind- and val-array, or NULL if nnonz == 0 </para></briefdescription>
        </param>
        <param>
          <type>const int *</type>
          <declname>ind</declname>
          <briefdescription><para>row indices of constraint matrix entries, or NULL if nnonz == 0 </para></briefdescription>
        </param>
        <param>
          <type>const <ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>val</declname>
          <briefdescription><para>values of constraint matrix entries, or NULL if nnonz == 0 </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>adds columns to the LP </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="1307" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="1307" bodyend="1332"/>
        <references refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" compoundref="lpi__grb_8c" startline="54">CHECK_ZERO</references>
        <references refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="190">NULL</references>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" compoundref="type__retcode_8h" startline="33">SCIP_OKAY</references>
        <references refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" compoundref="def_8h" startline="124">SCIP_Real</references>
        <references refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" compoundref="pub__message_8h" startline="77">SCIPdebugMessage</references>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1af651ff93b2be704cacb27c13b24ab311" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPlpiDelCols</definition>
        <argsstring>(SCIP_LPI *lpi, int firstcol, int lastcol)</argsstring>
        <name>SCIPlpiDelCols</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>firstcol</declname>
          <briefdescription><para>first column to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>lastcol</declname>
          <briefdescription><para>last column to be deleted </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>deletes all columns in the given range from LP </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="1335" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="1335" bodyend="1370"/>
        <references refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" compoundref="lpi__grb_8c" startline="54">CHECK_ZERO</references>
        <references refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="190">NULL</references>
        <references refid="def_8h_1a7695e892dc456d85a3654eb158976921" compoundref="def_8h" startline="274">SCIP_ALLOC</references>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" compoundref="type__retcode_8h" startline="33">SCIP_OKAY</references>
        <references refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" compoundref="pub__message_8h" startline="77">SCIPdebugMessage</references>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1ac93976edb5a40906de3c2163b2fafec0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPlpiDelColset</definition>
        <argsstring>(SCIP_LPI *lpi, int *dstat)</argsstring>
        <name>SCIPlpiDelColset</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>dstat</declname>
          <briefdescription><para>deletion status of columns input: 1 if column should be deleted, 0 if not output: new position of column, -1 if column was deleted </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>deletes columns from SCIP_LP; the new position of a column must not be greater that its old position </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="1373" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="1373" bodyend="1406"/>
        <references refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" compoundref="lpi__grb_8c" startline="54">CHECK_ZERO</references>
        <references refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="190">NULL</references>
        <references refid="def_8h_1a7695e892dc456d85a3654eb158976921" compoundref="def_8h" startline="274">SCIP_ALLOC</references>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" compoundref="type__retcode_8h" startline="33">SCIP_OKAY</references>
        <references refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" compoundref="pub__message_8h" startline="77">SCIPdebugMessage</references>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1a2bad82670d46254daf3e923898c404d5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPlpiAddRows</definition>
        <argsstring>(SCIP_LPI *lpi, int nrows, const SCIP_Real *lhs, const SCIP_Real *rhs, char **rownames, int nnonz, const int *beg, const int *ind, const SCIP_Real *val)</argsstring>
        <name>SCIPlpiAddRows</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>nrows</declname>
          <briefdescription><para>number of rows to be added </para></briefdescription>
        </param>
        <param>
          <type>const <ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>lhs</declname>
          <briefdescription><para>left hand sides of new rows </para></briefdescription>
        </param>
        <param>
          <type>const <ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>rhs</declname>
          <briefdescription><para>right hand sides of new rows </para></briefdescription>
        </param>
        <param>
          <type>char **</type>
          <declname>rownames</declname>
          <briefdescription><para>row names, or NULL </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>nnonz</declname>
          <briefdescription><para>number of nonzero elements to be added to the constraint matrix </para></briefdescription>
        </param>
        <param>
          <type>const int *</type>
          <declname>beg</declname>
          <briefdescription><para>start index of each row in ind- and val-array, or NULL if nnonz == 0 </para></briefdescription>
        </param>
        <param>
          <type>const int *</type>
          <declname>ind</declname>
          <briefdescription><para>column indices of constraint matrix entries, or NULL if nnonz == 0 </para></briefdescription>
        </param>
        <param>
          <type>const <ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>val</declname>
          <briefdescription><para>values of constraint matrix entries, or NULL if nnonz == 0 </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>adds rows to the LP </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="1409" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="1409" bodyend="1441"/>
        <references refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" compoundref="lpi__grb_8c" startline="54">CHECK_ZERO</references>
        <references refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="190">NULL</references>
        <references refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" compoundref="def_8h" startline="263">SCIP_CALL</references>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" compoundref="type__retcode_8h" startline="33">SCIP_OKAY</references>
        <references refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" compoundref="def_8h" startline="124">SCIP_Real</references>
        <references refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" compoundref="pub__message_8h" startline="77">SCIPdebugMessage</references>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1a95a88cc92b9c3061762849aeb2edc9ff" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPlpiDelRows</definition>
        <argsstring>(SCIP_LPI *lpi, int firstrow, int lastrow)</argsstring>
        <name>SCIPlpiDelRows</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>firstrow</declname>
          <briefdescription><para>first row to be deleted </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>lastrow</declname>
          <briefdescription><para>last row to be deleted </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>deletes all rows in the given range from LP </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="1444" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="1444" bodyend="1478"/>
        <references refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" compoundref="lpi__grb_8c" startline="54">CHECK_ZERO</references>
        <references refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="190">NULL</references>
        <references refid="def_8h_1a7695e892dc456d85a3654eb158976921" compoundref="def_8h" startline="274">SCIP_ALLOC</references>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" compoundref="type__retcode_8h" startline="33">SCIP_OKAY</references>
        <references refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" compoundref="pub__message_8h" startline="77">SCIPdebugMessage</references>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1af7385b74de163f5ae25b77e99c7bdc1a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPlpiDelRowset</definition>
        <argsstring>(SCIP_LPI *lpi, int *dstat)</argsstring>
        <name>SCIPlpiDelRowset</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>dstat</declname>
          <briefdescription><para>deletion status of rows input: 1 if row should be deleted, 0 if not output: new position of row, -1 if row was deleted </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>deletes rows from SCIP_LP; the new position of a row must not be greater that its old position </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="1481" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="1481" bodyend="1527"/>
        <references refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" compoundref="lpi__grb_8c" startline="54">CHECK_ZERO</references>
        <references refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="190">NULL</references>
        <references refid="def_8h_1a7695e892dc456d85a3654eb158976921" compoundref="def_8h" startline="274">SCIP_ALLOC</references>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" compoundref="type__retcode_8h" startline="33">SCIP_OKAY</references>
        <references refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" compoundref="pub__message_8h" startline="77">SCIPdebugMessage</references>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1a18664e9f784a12522aa9ec6e775e5a15" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPlpiClear</definition>
        <argsstring>(SCIP_LPI *lpi)</argsstring>
        <name>SCIPlpiClear</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>clears the whole LP </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="1530" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="1530" bodyend="1547"/>
        <references refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" compoundref="lpi__grb_8c" startline="54">CHECK_ZERO</references>
        <references refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="190">NULL</references>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" compoundref="type__retcode_8h" startline="33">SCIP_OKAY</references>
        <references refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" compoundref="pub__message_8h" startline="77">SCIPdebugMessage</references>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1a69472179ed0e902cb865b8bd3941c461" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPlpiChgBounds</definition>
        <argsstring>(SCIP_LPI *lpi, int ncols, const int *ind, const SCIP_Real *lb, const SCIP_Real *ub)</argsstring>
        <name>SCIPlpiChgBounds</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>ncols</declname>
          <briefdescription><para>number of columns to change bounds for </para></briefdescription>
        </param>
        <param>
          <type>const int *</type>
          <declname>ind</declname>
          <briefdescription><para>column indices </para></briefdescription>
        </param>
        <param>
          <type>const <ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>lb</declname>
          <briefdescription><para>values for the new lower bounds </para></briefdescription>
        </param>
        <param>
          <type>const <ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>ub</declname>
          <briefdescription><para>values for the new upper bounds </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>changes lower and upper bounds of columns </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="1550" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="1550" bodyend="1578"/>
        <references refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" compoundref="lpi__grb_8c" startline="54">CHECK_ZERO</references>
        <references refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="190">NULL</references>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" compoundref="type__retcode_8h" startline="33">SCIP_OKAY</references>
        <references refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" compoundref="def_8h" startline="124">SCIP_Real</references>
        <references refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" compoundref="pub__message_8h" startline="77">SCIPdebugMessage</references>
        <references refid="pub__message_8h_1abcfed97d6962c490af7c0a9a53c2f2b7" compoundref="pub__message_8h" startline="80">SCIPdebugPrintf</references>
        <referencedby refid="lpi__grb_8c_1a598ccc37a344e88c584b37691f162432" compoundref="lpi__grb_8c" startline="1733" endline="1793">SCIPlpiScaleCol</referencedby>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1a00fa12a201791dbba7d4b17a75fe7ae2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPlpiChgSides</definition>
        <argsstring>(SCIP_LPI *lpi, int nrows, const int *ind, const SCIP_Real *lhs, const SCIP_Real *rhs)</argsstring>
        <name>SCIPlpiChgSides</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>nrows</declname>
          <briefdescription><para>number of rows to change sides for </para></briefdescription>
        </param>
        <param>
          <type>const int *</type>
          <declname>ind</declname>
          <briefdescription><para>row indices </para></briefdescription>
        </param>
        <param>
          <type>const <ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>lhs</declname>
          <briefdescription><para>new values for left hand sides </para></briefdescription>
        </param>
        <param>
          <type>const <ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>rhs</declname>
          <briefdescription><para>new values for right hand sides </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>changes left and right hand sides of rows </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="1581" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="1581" bodyend="1610"/>
        <references refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" compoundref="lpi__grb_8c" startline="54">CHECK_ZERO</references>
        <references refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="190">NULL</references>
        <references refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" compoundref="def_8h" startline="263">SCIP_CALL</references>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" compoundref="type__retcode_8h" startline="33">SCIP_OKAY</references>
        <references refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" compoundref="pub__message_8h" startline="77">SCIPdebugMessage</references>
        <referencedby refid="lpi__grb_8c_1af94ca6a608b8e0be96158d78270b2715" compoundref="lpi__grb_8c" startline="1676" endline="1728">SCIPlpiScaleRow</referencedby>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1aff2b648673b8baac9903c236a97c267b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPlpiChgCoef</definition>
        <argsstring>(SCIP_LPI *lpi, int row, int col, SCIP_Real newval)</argsstring>
        <name>SCIPlpiChgCoef</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>row</declname>
          <briefdescription><para>row number of coefficient to change </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>col</declname>
          <briefdescription><para>column number of coefficient to change </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>newval</declname>
          <briefdescription><para>new value of coefficient </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>changes a single coefficient </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="1613" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="1613" bodyend="1631"/>
        <references refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" compoundref="lpi__grb_8c" startline="54">CHECK_ZERO</references>
        <references refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="190">NULL</references>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" compoundref="type__retcode_8h" startline="33">SCIP_OKAY</references>
        <references refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" compoundref="pub__message_8h" startline="77">SCIPdebugMessage</references>
        <referencedby refid="lpi__grb_8c_1a598ccc37a344e88c584b37691f162432" compoundref="lpi__grb_8c" startline="1733" endline="1793">SCIPlpiScaleCol</referencedby>
        <referencedby refid="lpi__grb_8c_1af94ca6a608b8e0be96158d78270b2715" compoundref="lpi__grb_8c" startline="1676" endline="1728">SCIPlpiScaleRow</referencedby>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1a0d794ce162ec1c45eb776baa2ffdc79c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPlpiChgObjsen</definition>
        <argsstring>(SCIP_LPI *lpi, SCIP_OBJSEN objsen)</argsstring>
        <name>SCIPlpiChgObjsen</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <param>
          <type><ref refid="type__lpi_8h_1afa3d076f8e5d2a8a31bf662ab24797cf" kindref="member">SCIP_OBJSEN</ref></type>
          <declname>objsen</declname>
          <briefdescription><para>new objective sense </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>changes the objective sense </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="1634" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="1634" bodyend="1653"/>
        <references refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" compoundref="lpi__grb_8c" startline="54">CHECK_ZERO</references>
        <references refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="190">NULL</references>
        <references refid="type__lpi_8h_1af1bc7f4fad28ccf4753250fa0558373ba32ae01999ecd89f94f4a0bd0b6be60c6" compoundref="type__lpi_8h" startline="33">SCIP_OBJSEN_MAXIMIZE</references>
        <references refid="type__lpi_8h_1af1bc7f4fad28ccf4753250fa0558373bab25a52cd6604d9c8c5fd02c5e03180a7" compoundref="type__lpi_8h" startline="34">SCIP_OBJSEN_MINIMIZE</references>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" compoundref="type__retcode_8h" startline="33">SCIP_OKAY</references>
        <references refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" compoundref="pub__message_8h" startline="77">SCIPdebugMessage</references>
        <referencedby refid="lpi__grb_8c_1ae522c0e79b2f2c7d185e6b6cafec1a3d" compoundref="lpi__grb_8c" startline="1110" endline="1182">SCIPlpiCreate</referencedby>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1a8f18465d14a5d1116c1dc8ea6cf90ddb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPlpiChgObj</definition>
        <argsstring>(SCIP_LPI *lpi, int ncols, int *ind, SCIP_Real *obj)</argsstring>
        <name>SCIPlpiChgObj</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>ncols</declname>
          <briefdescription><para>number of columns to change objective value for </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>ind</declname>
          <briefdescription><para>column indices to change objective value for </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>obj</declname>
          <briefdescription><para>new objective values for columns </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>changes objective values of columns in the LP </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="1656" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="1656" bodyend="1673"/>
        <references refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" compoundref="lpi__grb_8c" startline="54">CHECK_ZERO</references>
        <references refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="190">NULL</references>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" compoundref="type__retcode_8h" startline="33">SCIP_OKAY</references>
        <references refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" compoundref="pub__message_8h" startline="77">SCIPdebugMessage</references>
        <referencedby refid="lpi__grb_8c_1a598ccc37a344e88c584b37691f162432" compoundref="lpi__grb_8c" startline="1733" endline="1793">SCIPlpiScaleCol</referencedby>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1af94ca6a608b8e0be96158d78270b2715" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPlpiScaleRow</definition>
        <argsstring>(SCIP_LPI *lpi, int row, SCIP_Real scaleval)</argsstring>
        <name>SCIPlpiScaleRow</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>row</declname>
          <briefdescription><para>row number to scale </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>scaleval</declname>
          <briefdescription><para>scaling multiplier </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>multiplies a row with a non-zero scalar; for negative scalars, the row&apos;s sense is switched accordingly </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="1676" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="1676" bodyend="1728"/>
        <references refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" compoundref="lpi__grb_8c" startline="54">CHECK_ZERO</references>
        <references refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="190">NULL</references>
        <references refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" compoundref="def_8h" startline="263">SCIP_CALL</references>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" compoundref="type__retcode_8h" startline="33">SCIP_OKAY</references>
        <references refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" compoundref="def_8h" startline="124">SCIP_Real</references>
        <references refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" compoundref="pub__message_8h" startline="77">SCIPdebugMessage</references>
        <references refid="lpi__grb_8c_1aff2b648673b8baac9903c236a97c267b" compoundref="lpi__grb_8c" startline="1613" endline="1631">SCIPlpiChgCoef</references>
        <references refid="lpi__grb_8c_1a00fa12a201791dbba7d4b17a75fe7ae2" compoundref="lpi__grb_8c" startline="1581" endline="1610">SCIPlpiChgSides</references>
        <references refid="lpi__grb_8c_1aa925f44c4f2e5640b79ff87f8166d92e" compoundref="lpi__grb_8c" startline="1916" endline="1968">SCIPlpiGetRows</references>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1a598ccc37a344e88c584b37691f162432" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPlpiScaleCol</definition>
        <argsstring>(SCIP_LPI *lpi, int col, SCIP_Real scaleval)</argsstring>
        <name>SCIPlpiScaleCol</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>col</declname>
          <briefdescription><para>column number to scale </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>scaleval</declname>
          <briefdescription><para>scaling multiplier </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>multiplies a column with a non-zero scalar; the objective value is multiplied with the scalar, and the bounds are divided by the scalar; for negative scalars, the column&apos;s bounds are switched </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="1733" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="1733" bodyend="1793"/>
        <references refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" compoundref="lpi__grb_8c" startline="54">CHECK_ZERO</references>
        <references refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="190">NULL</references>
        <references refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" compoundref="def_8h" startline="263">SCIP_CALL</references>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" compoundref="type__retcode_8h" startline="33">SCIP_OKAY</references>
        <references refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" compoundref="def_8h" startline="124">SCIP_Real</references>
        <references refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" compoundref="pub__message_8h" startline="77">SCIPdebugMessage</references>
        <references refid="lpi__grb_8c_1a69472179ed0e902cb865b8bd3941c461" compoundref="lpi__grb_8c" startline="1550" endline="1578">SCIPlpiChgBounds</references>
        <references refid="lpi__grb_8c_1aff2b648673b8baac9903c236a97c267b" compoundref="lpi__grb_8c" startline="1613" endline="1631">SCIPlpiChgCoef</references>
        <references refid="lpi__grb_8c_1a8f18465d14a5d1116c1dc8ea6cf90ddb" compoundref="lpi__grb_8c" startline="1656" endline="1673">SCIPlpiChgObj</references>
        <references refid="lpi__grb_8c_1a9b718ef73cb5d6544472fb05f2193d37" compoundref="lpi__grb_8c" startline="1859" endline="1910">SCIPlpiGetCols</references>
        <references refid="lpi__grb_8c_1accf7c7a0ba8f375dbfa9bce872586951" compoundref="lpi__grb_8c" startline="2023" endline="2040">SCIPlpiGetObj</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Data Accessing Methods</header>
      <memberdef kind="function" id="lpi__grb_8c_1afc4ba497c8fef592df0c5bf7745bf9d8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPlpiGetNRows</definition>
        <argsstring>(SCIP_LPI *lpi, int *nrows)</argsstring>
        <name>SCIPlpiGetNRows</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>nrows</declname>
          <briefdescription><para>pointer to store the number of rows </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>gets the number of rows in the LP </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="1808" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="1808" bodyend="1821"/>
        <references refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" compoundref="lpi__grb_8c" startline="54">CHECK_ZERO</references>
        <references refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="190">NULL</references>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" compoundref="type__retcode_8h" startline="33">SCIP_OKAY</references>
        <references refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" compoundref="pub__message_8h" startline="77">SCIPdebugMessage</references>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1af0f0eab6882439ab9e263d6754c102f3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPlpiGetNCols</definition>
        <argsstring>(SCIP_LPI *lpi, int *ncols)</argsstring>
        <name>SCIPlpiGetNCols</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>ncols</declname>
          <briefdescription><para>pointer to store the number of cols </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>gets the number of columns in the LP </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="1824" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="1824" bodyend="1837"/>
        <references refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" compoundref="lpi__grb_8c" startline="54">CHECK_ZERO</references>
        <references refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="190">NULL</references>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" compoundref="type__retcode_8h" startline="33">SCIP_OKAY</references>
        <references refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" compoundref="pub__message_8h" startline="77">SCIPdebugMessage</references>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1a4e84473a9742d228d1112cf94e0337e7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPlpiGetNNonz</definition>
        <argsstring>(SCIP_LPI *lpi, int *nnonz)</argsstring>
        <name>SCIPlpiGetNNonz</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>nnonz</declname>
          <briefdescription><para>pointer to store the number of nonzeros </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>gets the number of nonzero elements in the LP constraint matrix </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="1840" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="1840" bodyend="1853"/>
        <references refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" compoundref="lpi__grb_8c" startline="54">CHECK_ZERO</references>
        <references refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="190">NULL</references>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" compoundref="type__retcode_8h" startline="33">SCIP_OKAY</references>
        <references refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" compoundref="pub__message_8h" startline="77">SCIPdebugMessage</references>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1a9b718ef73cb5d6544472fb05f2193d37" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPlpiGetCols</definition>
        <argsstring>(SCIP_LPI *lpi, int firstcol, int lastcol, SCIP_Real *lb, SCIP_Real *ub, int *nnonz, int *beg, int *ind, SCIP_Real *val)</argsstring>
        <name>SCIPlpiGetCols</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>firstcol</declname>
          <briefdescription><para>first column to get from LP </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>lastcol</declname>
          <briefdescription><para>last column to get from LP </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>lb</declname>
          <briefdescription><para>buffer to store the lower bound vector, or NULL </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>ub</declname>
          <briefdescription><para>buffer to store the upper bound vector, or NULL </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>nnonz</declname>
          <briefdescription><para>pointer to store the number of nonzero elements returned, or NULL </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>beg</declname>
          <briefdescription><para>buffer to store start index of each column in ind- and val-array, or NULL </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>ind</declname>
          <briefdescription><para>buffer to store column indices of constraint matrix entries, or NULL </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>val</declname>
          <briefdescription><para>buffer to store values of constraint matrix entries, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>gets columns from LP problem object; the arrays have to be large enough to store all values Either both, lb and ub, have to be NULL, or both have to be non-NULL, either nnonz, beg, ind, and val have to be NULL, or all of them have to be non-NULL. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="1859" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="1859" bodyend="1910"/>
        <references refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" compoundref="lpi__grb_8c" startline="54">CHECK_ZERO</references>
        <references refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="190">NULL</references>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" compoundref="type__retcode_8h" startline="33">SCIP_OKAY</references>
        <references refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" compoundref="pub__message_8h" startline="77">SCIPdebugMessage</references>
        <referencedby refid="lpi__grb_8c_1a598ccc37a344e88c584b37691f162432" compoundref="lpi__grb_8c" startline="1733" endline="1793">SCIPlpiScaleCol</referencedby>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1aa925f44c4f2e5640b79ff87f8166d92e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPlpiGetRows</definition>
        <argsstring>(SCIP_LPI *lpi, int firstrow, int lastrow, SCIP_Real *lhs, SCIP_Real *rhs, int *nnonz, int *beg, int *ind, SCIP_Real *val)</argsstring>
        <name>SCIPlpiGetRows</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>firstrow</declname>
          <briefdescription><para>first row to get from LP </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>lastrow</declname>
          <briefdescription><para>last row to get from LP </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>lhs</declname>
          <briefdescription><para>buffer to store left hand side vector, or NULL </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>rhs</declname>
          <briefdescription><para>buffer to store right hand side vector, or NULL </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>nnonz</declname>
          <briefdescription><para>pointer to store the number of nonzero elements returned, or NULL </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>beg</declname>
          <briefdescription><para>buffer to store start index of each row in ind- and val-array, or NULL </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>ind</declname>
          <briefdescription><para>buffer to store row indices of constraint matrix entries, or NULL </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>val</declname>
          <briefdescription><para>buffer to store values of constraint matrix entries, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>gets rows from LP problem object; the arrays have to be large enough to store all values. Either both, lhs and rhs, have to be NULL, or both have to be non-NULL, either nnonz, beg, ind, and val have to be NULL, or all of them have to be non-NULL. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="1916" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="1916" bodyend="1968"/>
        <references refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" compoundref="lpi__grb_8c" startline="54">CHECK_ZERO</references>
        <references refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="190">NULL</references>
        <references refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" compoundref="def_8h" startline="263">SCIP_CALL</references>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" compoundref="type__retcode_8h" startline="33">SCIP_OKAY</references>
        <references refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" compoundref="pub__message_8h" startline="77">SCIPdebugMessage</references>
        <referencedby refid="lpi__grb_8c_1af94ca6a608b8e0be96158d78270b2715" compoundref="lpi__grb_8c" startline="1676" endline="1728">SCIPlpiScaleRow</referencedby>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1aa01800088106fccc11758d86646a1933" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPlpiGetColNames</definition>
        <argsstring>(SCIP_LPI *lpi, int firstcol, int lastcol, char **colnames, char *namestorage, int namestoragesize, int *storageleft)</argsstring>
        <name>SCIPlpiGetColNames</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>firstcol</declname>
          <briefdescription><para>first column to get name from LP </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>lastcol</declname>
          <briefdescription><para>last column to get name from LP </para></briefdescription>
        </param>
        <param>
          <type>char **</type>
          <declname>colnames</declname>
          <briefdescription><para>pointers to column names (of size at least lastcol-firstcol+1) </para></briefdescription>
        </param>
        <param>
          <type>char *</type>
          <declname>namestorage</declname>
          <briefdescription><para>storage for col names </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>namestoragesize</declname>
          <briefdescription><para>size of namestorage (if 0, storageleft returns the storage needed) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>storageleft</declname>
          <briefdescription><para>amount of storage left (if &lt; 0 the namestorage was not big enough) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>gets column names </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="1971" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="1971" bodyend="1983"/>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5da004953b01233fe72cb41c5d218abb858" compoundref="type__retcode_8h" startline="40">SCIP_LPERROR</references>
        <references refid="pub__message_8h_1a354566c209c3a7fe5c870d4ee8c07bc5" compoundref="pub__message_8h" startline="45">SCIPerrorMessage</references>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1ab84a1811166e562112166eeddafe5f08" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPlpiGetRowNames</definition>
        <argsstring>(SCIP_LPI *lpi, int firstrow, int lastrow, char **rownames, char *namestorage, int namestoragesize, int *storageleft)</argsstring>
        <name>SCIPlpiGetRowNames</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>firstrow</declname>
          <briefdescription><para>first row to get name from LP </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>lastrow</declname>
          <briefdescription><para>last row to get name from LP </para></briefdescription>
        </param>
        <param>
          <type>char **</type>
          <declname>rownames</declname>
          <briefdescription><para>pointers to row names (of size at least lastrow-firstrow+1) </para></briefdescription>
        </param>
        <param>
          <type>char *</type>
          <declname>namestorage</declname>
          <briefdescription><para>storage for row names </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>namestoragesize</declname>
          <briefdescription><para>size of namestorage (if 0, -storageleft returns the storage needed) </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>storageleft</declname>
          <briefdescription><para>amount of storage left (if &lt; 0 the namestorage was not big enough) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>gets row names </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="1986" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="1986" bodyend="1998"/>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5da004953b01233fe72cb41c5d218abb858" compoundref="type__retcode_8h" startline="40">SCIP_LPERROR</references>
        <references refid="pub__message_8h_1a354566c209c3a7fe5c870d4ee8c07bc5" compoundref="pub__message_8h" startline="45">SCIPerrorMessage</references>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1aee46b15c0fa3d6d86be4e3bf741f34b7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPlpiGetObjsen</definition>
        <argsstring>(SCIP_LPI *lpi, SCIP_OBJSEN *objsen)</argsstring>
        <name>SCIPlpiGetObjsen</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <param>
          <type><ref refid="type__lpi_8h_1afa3d076f8e5d2a8a31bf662ab24797cf" kindref="member">SCIP_OBJSEN</ref> *</type>
          <declname>objsen</declname>
          <briefdescription><para>pointer to store objective sense </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>gets the objective sense of the LP </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="2001" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="2001" bodyend="2020"/>
        <references refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" compoundref="lpi__grb_8c" startline="54">CHECK_ZERO</references>
        <references refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="190">NULL</references>
        <references refid="type__lpi_8h_1af1bc7f4fad28ccf4753250fa0558373ba32ae01999ecd89f94f4a0bd0b6be60c6" compoundref="type__lpi_8h" startline="33">SCIP_OBJSEN_MAXIMIZE</references>
        <references refid="type__lpi_8h_1af1bc7f4fad28ccf4753250fa0558373bab25a52cd6604d9c8c5fd02c5e03180a7" compoundref="type__lpi_8h" startline="34">SCIP_OBJSEN_MINIMIZE</references>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" compoundref="type__retcode_8h" startline="33">SCIP_OKAY</references>
        <references refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" compoundref="pub__message_8h" startline="77">SCIPdebugMessage</references>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1accf7c7a0ba8f375dbfa9bce872586951" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPlpiGetObj</definition>
        <argsstring>(SCIP_LPI *lpi, int firstcol, int lastcol, SCIP_Real *vals)</argsstring>
        <name>SCIPlpiGetObj</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>firstcol</declname>
          <briefdescription><para>first column to get objective coefficient for </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>lastcol</declname>
          <briefdescription><para>last column to get objective coefficient for </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>vals</declname>
          <briefdescription><para>array to store objective coefficients </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>gets objective coefficients from LP problem object </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="2023" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="2023" bodyend="2040"/>
        <references refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" compoundref="lpi__grb_8c" startline="54">CHECK_ZERO</references>
        <references refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="190">NULL</references>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" compoundref="type__retcode_8h" startline="33">SCIP_OKAY</references>
        <references refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" compoundref="pub__message_8h" startline="77">SCIPdebugMessage</references>
        <referencedby refid="lpi__grb_8c_1a598ccc37a344e88c584b37691f162432" compoundref="lpi__grb_8c" startline="1733" endline="1793">SCIPlpiScaleCol</referencedby>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1a534fd30b49c755aea9b96a0365ee41b0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPlpiGetBounds</definition>
        <argsstring>(SCIP_LPI *lpi, int firstcol, int lastcol, SCIP_Real *lbs, SCIP_Real *ubs)</argsstring>
        <name>SCIPlpiGetBounds</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>firstcol</declname>
          <briefdescription><para>first column to get bounds for </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>lastcol</declname>
          <briefdescription><para>last column to get bounds for </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>lbs</declname>
          <briefdescription><para>array to store lower bound values, or NULL </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>ubs</declname>
          <briefdescription><para>array to store upper bound values, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>gets current bounds from LP problem object </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="2043" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="2043" bodyend="2074"/>
        <references refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" compoundref="lpi__grb_8c" startline="54">CHECK_ZERO</references>
        <references refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="190">NULL</references>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" compoundref="type__retcode_8h" startline="33">SCIP_OKAY</references>
        <references refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" compoundref="pub__message_8h" startline="77">SCIPdebugMessage</references>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1abd761e9fb6a1dd346a08c94a50192d8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPlpiGetSides</definition>
        <argsstring>(SCIP_LPI *lpi, int firstrow, int lastrow, SCIP_Real *lhss, SCIP_Real *rhss)</argsstring>
        <name>SCIPlpiGetSides</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>firstrow</declname>
          <briefdescription><para>first row to get sides for </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>lastrow</declname>
          <briefdescription><para>last row to get sides for </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>lhss</declname>
          <briefdescription><para>array to store left hand side values, or NULL </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>rhss</declname>
          <briefdescription><para>array to store right hand side values, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>gets current row sides from LP problem object </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="2077" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="2077" bodyend="2101"/>
        <references refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" compoundref="lpi__grb_8c" startline="54">CHECK_ZERO</references>
        <references refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="190">NULL</references>
        <references refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" compoundref="def_8h" startline="263">SCIP_CALL</references>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" compoundref="type__retcode_8h" startline="33">SCIP_OKAY</references>
        <references refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" compoundref="pub__message_8h" startline="77">SCIPdebugMessage</references>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1a7ae0750d24c1e5ad1c719ca4a601b511" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPlpiGetCoef</definition>
        <argsstring>(SCIP_LPI *lpi, int row, int col, SCIP_Real *val)</argsstring>
        <name>SCIPlpiGetCoef</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>row</declname>
          <briefdescription><para>row number of coefficient </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>col</declname>
          <briefdescription><para>column number of coefficient </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>val</declname>
          <briefdescription><para>pointer to store the value of the coefficient </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>gets a single coefficient </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="2104" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="2104" bodyend="2119"/>
        <references refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" compoundref="lpi__grb_8c" startline="54">CHECK_ZERO</references>
        <references refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="190">NULL</references>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" compoundref="type__retcode_8h" startline="33">SCIP_OKAY</references>
        <references refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" compoundref="pub__message_8h" startline="77">SCIPdebugMessage</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Solving Methods</header>
      <memberdef kind="function" id="lpi__grb_8c_1adff9cd01f05724d2e00808ebd09c8e93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPlpiSolvePrimal</definition>
        <argsstring>(SCIP_LPI *lpi)</argsstring>
        <name>SCIPlpiSolvePrimal</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>calls primal simplex to solve the LP</para>        </detaileddescription>
        <inbodydescription>
<para>startFinishOptions - bits 1 - do not delete work areas and factorization at end 2 - use old factorization if same number of rows 4 - skip as much initialization of work areas as possible (work in progress)</para><para>4 does not seem to work.</para><para>Primal algorithm </para>        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="2137" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="2137" bodyend="2243"/>
        <references refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" compoundref="lpi__grb_8c" startline="54">CHECK_ZERO</references>
        <references refid="def_8h_1aa93f0eb578d23995850d61f7d61c55c1" compoundref="def_8h" startline="53">FALSE</references>
        <references refid="lpi__grb_8c_1a5397bab46d83535262cfd4f82ffcaf3e" compoundref="lpi__grb_8c" startline="78">GRB_INT_PAR_METHOD</references>
        <references refid="lpi__grb_8c_1aee06842200f9ea6a52cd072655bde971" compoundref="lpi__grb_8c" startline="77">GRB_METHOD_PRIMAL</references>
        <references refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="190">NULL</references>
        <references refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" compoundref="def_8h" startline="263">SCIP_CALL</references>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5da004953b01233fe72cb41c5d218abb858" compoundref="type__retcode_8h" startline="40">SCIP_LPERROR</references>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5da9d99f2bbdf6c09830e6db15bc35d3415" compoundref="type__retcode_8h" startline="35">SCIP_NOMEMORY</references>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" compoundref="type__retcode_8h" startline="33">SCIP_OKAY</references>
        <references refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" compoundref="pub__message_8h" startline="77">SCIPdebugMessage</references>
        <references refid="pub__message_8h_1a354566c209c3a7fe5c870d4ee8c07bc5" compoundref="pub__message_8h" startline="45">SCIPerrorMessage</references>
        <references refid="def_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" compoundref="def_8h" startline="52">TRUE</references>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1ad87b0da429ef0a5ef34ccdd01cc2309d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPlpiSolveDual</definition>
        <argsstring>(SCIP_LPI *lpi)</argsstring>
        <name>SCIPlpiSolveDual</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>calls dual simplex to solve the LP</para>        </detaileddescription>
        <inbodydescription>
<para>startFinishOptions - bits 1 - do not delete work areas and factorization at end 2 - use old factorization if same number of rows 4 - skip as much initialization of work areas as possible (work in progress)</para><para>4 does not seem to work.</para><para>Dual algorithm </para>        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="2249" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="2249" bodyend="2349"/>
        <references refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" compoundref="lpi__grb_8c" startline="54">CHECK_ZERO</references>
        <references refid="lpi__grb_8c_1a5397bab46d83535262cfd4f82ffcaf3e" compoundref="lpi__grb_8c" startline="78">GRB_INT_PAR_METHOD</references>
        <references refid="lpi__grb_8c_1ac83a71f7ce20ef826c2fe19ded699f4e" compoundref="lpi__grb_8c" startline="76">GRB_METHOD_DUAL</references>
        <references refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="190">NULL</references>
        <references refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" compoundref="def_8h" startline="263">SCIP_CALL</references>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5da004953b01233fe72cb41c5d218abb858" compoundref="type__retcode_8h" startline="40">SCIP_LPERROR</references>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5da9d99f2bbdf6c09830e6db15bc35d3415" compoundref="type__retcode_8h" startline="35">SCIP_NOMEMORY</references>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" compoundref="type__retcode_8h" startline="33">SCIP_OKAY</references>
        <references refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" compoundref="pub__message_8h" startline="77">SCIPdebugMessage</references>
        <references refid="pub__message_8h_1a354566c209c3a7fe5c870d4ee8c07bc5" compoundref="pub__message_8h" startline="45">SCIPerrorMessage</references>
        <references refid="def_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" compoundref="def_8h" startline="52">TRUE</references>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1aaed3d89975ea9d3a6a79f03c1361d9b5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPlpiSolveBarrier</definition>
        <argsstring>(SCIP_LPI *lpi, SCIP_Bool crossover)</argsstring>
        <name>SCIPlpiSolveBarrier</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
          <declname>crossover</declname>
          <briefdescription><para>perform crossover </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>calls barrier or interior point algorithm to solve the LP with crossover to simplex basis </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="2352" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="2352" bodyend="2463"/>
        <references refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" compoundref="lpi__grb_8c" startline="54">CHECK_ZERO</references>
        <references refid="lpi__grb_8c_1a5397bab46d83535262cfd4f82ffcaf3e" compoundref="lpi__grb_8c" startline="78">GRB_INT_PAR_METHOD</references>
        <references refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="190">NULL</references>
        <references refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" compoundref="def_8h" startline="263">SCIP_CALL</references>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5da004953b01233fe72cb41c5d218abb858" compoundref="type__retcode_8h" startline="40">SCIP_LPERROR</references>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5da9d99f2bbdf6c09830e6db15bc35d3415" compoundref="type__retcode_8h" startline="35">SCIP_NOMEMORY</references>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" compoundref="type__retcode_8h" startline="33">SCIP_OKAY</references>
        <references refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" compoundref="pub__message_8h" startline="77">SCIPdebugMessage</references>
        <references refid="pub__message_8h_1a354566c209c3a7fe5c870d4ee8c07bc5" compoundref="pub__message_8h" startline="45">SCIPerrorMessage</references>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1a61eb2de700a5b2ca02c55a6f206af5df" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPlpiStartStrongbranch</definition>
        <argsstring>(SCIP_LPI *lpi)</argsstring>
        <name>SCIPlpiStartStrongbranch</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>start strong branching - call before any strong branching </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="2466" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="2466" bodyend="2472"/>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" compoundref="type__retcode_8h" startline="33">SCIP_OKAY</references>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1abb4fffe6db4fc82590ffb3231a4e314c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPlpiEndStrongbranch</definition>
        <argsstring>(SCIP_LPI *lpi)</argsstring>
        <name>SCIPlpiEndStrongbranch</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>end strong branching - call after any strong branching </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="2475" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="2475" bodyend="2481"/>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" compoundref="type__retcode_8h" startline="33">SCIP_OKAY</references>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1a85d660306c874b15fc0b24f3339bb3b7" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>static SCIP_RETCODE lpiStrongbranch</definition>
        <argsstring>(SCIP_LPI *lpi, int col, SCIP_Real psol, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</argsstring>
        <name>lpiStrongbranch</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>col</declname>
          <briefdescription><para>column to apply strong branching on </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>psol</declname>
          <briefdescription><para>current primal solution value of column </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>itlim</declname>
          <briefdescription><para>iteration limit for strong branchings </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>down</declname>
          <briefdescription><para>stores dual bound after branching column down </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>up</declname>
          <briefdescription><para>stores dual bound after branching column up </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>downvalid</declname>
          <briefdescription><para>stores whether the returned down value is a valid dual bound; otherwise, it can only be used as an estimate value </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>upvalid</declname>
          <briefdescription><para>stores whether the returned up value is a valid dual bound; otherwise, it can only be used as an estimate value </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>iter</declname>
          <briefdescription><para>stores total number of strong branching iterations, or -1; may be NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>performs strong branching iterations on one candidate </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="2485" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="2485" bodyend="2660"/>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1a4b3e0e444fa2cba71360126834df07b4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPlpiStrongbranchFrac</definition>
        <argsstring>(SCIP_LPI *lpi, int col, SCIP_Real psol, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</argsstring>
        <name>SCIPlpiStrongbranchFrac</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>col</declname>
          <briefdescription><para>column to apply strong branching on </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>psol</declname>
          <briefdescription><para>fractional current primal solution value of column </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>itlim</declname>
          <briefdescription><para>iteration limit for strong branchings </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>down</declname>
          <briefdescription><para>stores dual bound after branching column down </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>up</declname>
          <briefdescription><para>stores dual bound after branching column up </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>downvalid</declname>
          <briefdescription><para>stores whether the returned down value is a valid dual bound; otherwise, it can only be used as an estimate value </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>upvalid</declname>
          <briefdescription><para>stores whether the returned up value is a valid dual bound; otherwise, it can only be used as an estimate value </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>iter</declname>
          <briefdescription><para>stores total number of strong branching iterations, or -1; may be NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>performs strong branching iterations on one <bold>fractional</bold> candidate </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="2663" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="2663" bodyend="2681"/>
        <references refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" compoundref="def_8h" startline="263">SCIP_CALL</references>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" compoundref="type__retcode_8h" startline="33">SCIP_OKAY</references>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1a7aa759face9cb33420e56984df7b6557" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPlpiStrongbranchesFrac</definition>
        <argsstring>(SCIP_LPI *lpi, int *cols, int ncols, SCIP_Real *psols, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</argsstring>
        <name>SCIPlpiStrongbranchesFrac</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>cols</declname>
          <briefdescription><para>columns to apply strong branching on </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>ncols</declname>
          <briefdescription><para>number of columns </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>psols</declname>
          <briefdescription><para>fractional current primal solution values of columns </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>itlim</declname>
          <briefdescription><para>iteration limit for strong branchings </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>down</declname>
          <briefdescription><para>stores dual bounds after branching columns down </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>up</declname>
          <briefdescription><para>stores dual bounds after branching columns up </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>downvalid</declname>
          <briefdescription><para>stores whether the returned down values are valid dual bounds; otherwise, they can only be used as an estimate values </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>upvalid</declname>
          <briefdescription><para>stores whether the returned up values are a valid dual bounds; otherwise, they can only be used as an estimate values </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>iter</declname>
          <briefdescription><para>stores total number of strong branching iterations, or -1; may be NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>performs strong branching iterations on given <bold>fractional</bold> candidates </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="2684" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="2684" bodyend="2719"/>
        <references refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="190">NULL</references>
        <references refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" compoundref="def_8h" startline="263">SCIP_CALL</references>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" compoundref="type__retcode_8h" startline="33">SCIP_OKAY</references>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1a5172db5f9ebd4ad8b1da84ce8c00bff7" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPlpiStrongbranchInt</definition>
        <argsstring>(SCIP_LPI *lpi, int col, SCIP_Real psol, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</argsstring>
        <name>SCIPlpiStrongbranchInt</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>col</declname>
          <briefdescription><para>column to apply strong branching on </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>psol</declname>
          <briefdescription><para>current integral primal solution value of column </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>itlim</declname>
          <briefdescription><para>iteration limit for strong branchings </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>down</declname>
          <briefdescription><para>stores dual bound after branching column down </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>up</declname>
          <briefdescription><para>stores dual bound after branching column up </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>downvalid</declname>
          <briefdescription><para>stores whether the returned down value is a valid dual bound; otherwise, it can only be used as an estimate value </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>upvalid</declname>
          <briefdescription><para>stores whether the returned up value is a valid dual bound; otherwise, it can only be used as an estimate value </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>iter</declname>
          <briefdescription><para>stores total number of strong branching iterations, or -1; may be NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>performs strong branching iterations on one candidate with <bold>integral</bold> value </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="2722" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="2722" bodyend="2740"/>
        <references refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" compoundref="def_8h" startline="263">SCIP_CALL</references>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" compoundref="type__retcode_8h" startline="33">SCIP_OKAY</references>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1abdfa4cbbbfc871eb382b8090167f715e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPlpiStrongbranchesInt</definition>
        <argsstring>(SCIP_LPI *lpi, int *cols, int ncols, SCIP_Real *psols, int itlim, SCIP_Real *down, SCIP_Real *up, SCIP_Bool *downvalid, SCIP_Bool *upvalid, int *iter)</argsstring>
        <name>SCIPlpiStrongbranchesInt</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>cols</declname>
          <briefdescription><para>columns to apply strong branching on </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>ncols</declname>
          <briefdescription><para>number of columns </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>psols</declname>
          <briefdescription><para>current integral primal solution values of columns </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>itlim</declname>
          <briefdescription><para>iteration limit for strong branchings </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>down</declname>
          <briefdescription><para>stores dual bounds after branching columns down </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>up</declname>
          <briefdescription><para>stores dual bounds after branching columns up </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>downvalid</declname>
          <briefdescription><para>stores whether the returned down values are valid dual bounds; otherwise, they can only be used as an estimate values </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>upvalid</declname>
          <briefdescription><para>stores whether the returned up values are a valid dual bounds; otherwise, they can only be used as an estimate values </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>iter</declname>
          <briefdescription><para>stores total number of strong branching iterations, or -1; may be NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>performs strong branching iterations on given candidates with <bold>integral</bold> values </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="2743" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="2743" bodyend="2778"/>
        <references refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="190">NULL</references>
        <references refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" compoundref="def_8h" startline="263">SCIP_CALL</references>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" compoundref="type__retcode_8h" startline="33">SCIP_OKAY</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Solution Information Methods</header>
      <memberdef kind="function" id="lpi__grb_8c_1aaa0c5c0be2bd96fce205e68f7d051abe" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
        <definition>SCIP_Bool SCIPlpiWasSolved</definition>
        <argsstring>(SCIP_LPI *lpi)</argsstring>
        <name>SCIPlpiWasSolved</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns whether a solve method was called after the last modification of the LP </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="2792" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="2792" bodyend="2799"/>
        <references refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="190">NULL</references>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1a61efb09a57b1279d91619c36cad3d597" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPlpiGetSolFeasibility</definition>
        <argsstring>(SCIP_LPI *lpi, SCIP_Bool *primalfeasible, SCIP_Bool *dualfeasible)</argsstring>
        <name>SCIPlpiGetSolFeasibility</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>primalfeasible</declname>
          <briefdescription><para>stores primal feasibility status </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>dualfeasible</declname>
          <briefdescription><para>stores dual feasibility status </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>gets information about primal and dual feasibility of the current LP solution </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="2802" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="2802" bodyend="2871"/>
        <references refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" compoundref="lpi__grb_8c" startline="54">CHECK_ZERO</references>
        <references refid="def_8h_1aa93f0eb578d23995850d61f7d61c55c1" compoundref="def_8h" startline="53">FALSE</references>
        <references refid="lpi__grb_8c_1a5397bab46d83535262cfd4f82ffcaf3e" compoundref="lpi__grb_8c" startline="78">GRB_INT_PAR_METHOD</references>
        <references refid="lpi__grb_8c_1ac83a71f7ce20ef826c2fe19ded699f4e" compoundref="lpi__grb_8c" startline="76">GRB_METHOD_DUAL</references>
        <references refid="lpi__grb_8c_1aee06842200f9ea6a52cd072655bde971" compoundref="lpi__grb_8c" startline="77">GRB_METHOD_PRIMAL</references>
        <references refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="190">NULL</references>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" compoundref="type__retcode_8h" startline="33">SCIP_OKAY</references>
        <references refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" compoundref="def_8h" startline="124">SCIP_Real</references>
        <references refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" compoundref="pub__message_8h" startline="77">SCIPdebugMessage</references>
        <references refid="def_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" compoundref="def_8h" startline="52">TRUE</references>
        <referencedby refid="lpi__grb_8c_1a698fec903ce3546e8066a3988ee906ee" compoundref="lpi__grb_8c" startline="2902" endline="2922">SCIPlpiIsPrimalUnbounded</referencedby>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1a2562db03b64bf6ef2789e4edf3cc31a3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
        <definition>SCIP_Bool SCIPlpiExistsPrimalRay</definition>
        <argsstring>(SCIP_LPI *lpi)</argsstring>
        <name>SCIPlpiExistsPrimalRay</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns TRUE iff LP is proven to have a primal unbounded ray (but not necessary a primal feasible point); this does not necessarily mean, that the solver knows and can return the primal ray </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="2876" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="2876" bodyend="2885"/>
        <references refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="190">NULL</references>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1a91cb0382fe11412dfa127df4cc9f8e9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
        <definition>SCIP_Bool SCIPlpiHasPrimalRay</definition>
        <argsstring>(SCIP_LPI *lpi)</argsstring>
        <name>SCIPlpiHasPrimalRay</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns TRUE iff LP is proven to have a primal unbounded ray (but not necessary a primal feasible point), and the solver knows and can return the primal ray </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="2890" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="2890" bodyend="2899"/>
        <references refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="190">NULL</references>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1a698fec903ce3546e8066a3988ee906ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
        <definition>SCIP_Bool SCIPlpiIsPrimalUnbounded</definition>
        <argsstring>(SCIP_LPI *lpi)</argsstring>
        <name>SCIPlpiIsPrimalUnbounded</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns TRUE iff LP is proven to be primal unbounded </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="2902" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="2902" bodyend="2922"/>
        <references refid="def_8h_1aa93f0eb578d23995850d61f7d61c55c1" compoundref="def_8h" startline="53">FALSE</references>
        <references refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="190">NULL</references>
        <references refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" compoundref="def_8h" startline="50">SCIP_Bool</references>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" compoundref="type__retcode_8h" startline="33">SCIP_OKAY</references>
        <references refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" compoundref="pub__message_8h" startline="77">SCIPdebugMessage</references>
        <references refid="lpi__grb_8c_1a61efb09a57b1279d91619c36cad3d597" compoundref="lpi__grb_8c" startline="2802" endline="2871">SCIPlpiGetSolFeasibility</references>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1ad2c1ad0f846c5827b5a2050ab13eba0f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
        <definition>SCIP_Bool SCIPlpiIsPrimalInfeasible</definition>
        <argsstring>(SCIP_LPI *lpi)</argsstring>
        <name>SCIPlpiIsPrimalInfeasible</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns TRUE iff LP is proven to be primal infeasible </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="2925" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="2925" bodyend="2937"/>
        <references refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="190">NULL</references>
        <references refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" compoundref="pub__message_8h" startline="77">SCIPdebugMessage</references>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1a824080a74642700e0919806405d4dd69" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
        <definition>SCIP_Bool SCIPlpiIsPrimalFeasible</definition>
        <argsstring>(SCIP_LPI *lpi)</argsstring>
        <name>SCIPlpiIsPrimalFeasible</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns TRUE iff LP is proven to be primal feasible </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="2940" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="2940" bodyend="2956"/>
        <references refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" compoundref="lpi__grb_8c" startline="54">CHECK_ZERO</references>
        <references refid="lpi__grb_8c_1a5397bab46d83535262cfd4f82ffcaf3e" compoundref="lpi__grb_8c" startline="78">GRB_INT_PAR_METHOD</references>
        <references refid="lpi__grb_8c_1aee06842200f9ea6a52cd072655bde971" compoundref="lpi__grb_8c" startline="77">GRB_METHOD_PRIMAL</references>
        <references refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="190">NULL</references>
        <references refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" compoundref="pub__message_8h" startline="77">SCIPdebugMessage</references>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1a21939ccf03835cce5a9a449b6c43665b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
        <definition>SCIP_Bool SCIPlpiExistsDualRay</definition>
        <argsstring>(SCIP_LPI *lpi)</argsstring>
        <name>SCIPlpiExistsDualRay</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns TRUE iff LP is proven to have a dual unbounded ray (but not necessary a dual feasible point); this does not necessarily mean, that the solver knows and can return the dual ray </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="2961" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="2961" bodyend="2970"/>
        <references refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="190">NULL</references>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1ac6738fca43ff0cbb9027560f18bd764c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
        <definition>SCIP_Bool SCIPlpiHasDualRay</definition>
        <argsstring>(SCIP_LPI *lpi)</argsstring>
        <name>SCIPlpiHasDualRay</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns TRUE iff LP is proven to have a dual unbounded ray (but not necessary a dual feasible point), and the solver knows and can return the dual ray </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="2975" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="2975" bodyend="2989"/>
        <references refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" compoundref="lpi__grb_8c" startline="54">CHECK_ZERO</references>
        <references refid="lpi__grb_8c_1a5397bab46d83535262cfd4f82ffcaf3e" compoundref="lpi__grb_8c" startline="78">GRB_INT_PAR_METHOD</references>
        <references refid="lpi__grb_8c_1ac83a71f7ce20ef826c2fe19ded699f4e" compoundref="lpi__grb_8c" startline="76">GRB_METHOD_DUAL</references>
        <references refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="190">NULL</references>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1ae2cd5f0afa5f5940c9d7bab6f04b184e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
        <definition>SCIP_Bool SCIPlpiIsDualUnbounded</definition>
        <argsstring>(SCIP_LPI *lpi)</argsstring>
        <name>SCIPlpiIsDualUnbounded</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns TRUE iff LP is proven to be dual unbounded </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="2992" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="2992" bodyend="3008"/>
        <references refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" compoundref="lpi__grb_8c" startline="54">CHECK_ZERO</references>
        <references refid="lpi__grb_8c_1a5397bab46d83535262cfd4f82ffcaf3e" compoundref="lpi__grb_8c" startline="78">GRB_INT_PAR_METHOD</references>
        <references refid="lpi__grb_8c_1ac83a71f7ce20ef826c2fe19ded699f4e" compoundref="lpi__grb_8c" startline="76">GRB_METHOD_DUAL</references>
        <references refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="190">NULL</references>
        <references refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" compoundref="pub__message_8h" startline="77">SCIPdebugMessage</references>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1a348c42072a5aad88210e9d688b4d6a1c" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
        <definition>SCIP_Bool SCIPlpiIsDualInfeasible</definition>
        <argsstring>(SCIP_LPI *lpi)</argsstring>
        <name>SCIPlpiIsDualInfeasible</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns TRUE iff LP is proven to be dual infeasible </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="3011" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="3011" bodyend="3022"/>
        <references refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="190">NULL</references>
        <references refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" compoundref="pub__message_8h" startline="77">SCIPdebugMessage</references>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1a8457b3a26f7595f3390f7b34ab443fd4" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
        <definition>SCIP_Bool SCIPlpiIsDualFeasible</definition>
        <argsstring>(SCIP_LPI *lpi)</argsstring>
        <name>SCIPlpiIsDualFeasible</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns TRUE iff LP is proven to be dual feasible </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="3025" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="3025" bodyend="3041"/>
        <references refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" compoundref="lpi__grb_8c" startline="54">CHECK_ZERO</references>
        <references refid="lpi__grb_8c_1a5397bab46d83535262cfd4f82ffcaf3e" compoundref="lpi__grb_8c" startline="78">GRB_INT_PAR_METHOD</references>
        <references refid="lpi__grb_8c_1ac83a71f7ce20ef826c2fe19ded699f4e" compoundref="lpi__grb_8c" startline="76">GRB_METHOD_DUAL</references>
        <references refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="190">NULL</references>
        <references refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" compoundref="pub__message_8h" startline="77">SCIPdebugMessage</references>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1ab66f1eae0b448c155f0feaffa7bdda57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
        <definition>SCIP_Bool SCIPlpiIsOptimal</definition>
        <argsstring>(SCIP_LPI *lpi)</argsstring>
        <name>SCIPlpiIsOptimal</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns TRUE iff LP was solved to optimality </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="3044" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="3044" bodyend="3053"/>
        <references refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="190">NULL</references>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1af04aa49d1337f5007cc0d78625d2dd4d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
        <definition>SCIP_Bool SCIPlpiIsStable</definition>
        <argsstring>(SCIP_LPI *lpi)</argsstring>
        <name>SCIPlpiIsStable</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns TRUE iff current LP basis is stable </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="3056" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="3056" bodyend="3067"/>
        <references refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="190">NULL</references>
        <references refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" compoundref="pub__message_8h" startline="77">SCIPdebugMessage</references>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1a0d4fca883c08a32af088280a78ca3ef2" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
        <definition>SCIP_Bool SCIPlpiIsObjlimExc</definition>
        <argsstring>(SCIP_LPI *lpi)</argsstring>
        <name>SCIPlpiIsObjlimExc</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns TRUE iff the objective limit was reached </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="3070" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="3070" bodyend="3079"/>
        <references refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="190">NULL</references>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1a689c99183c7e0779c50f9aef63c79123" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
        <definition>SCIP_Bool SCIPlpiIsIterlimExc</definition>
        <argsstring>(SCIP_LPI *lpi)</argsstring>
        <name>SCIPlpiIsIterlimExc</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns TRUE iff the iteration limit was reached </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="3082" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="3082" bodyend="3091"/>
        <references refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="190">NULL</references>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1a8ac20384dbd857173c8dfe0dc37f7d6a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
        <definition>SCIP_Bool SCIPlpiIsTimelimExc</definition>
        <argsstring>(SCIP_LPI *lpi)</argsstring>
        <name>SCIPlpiIsTimelimExc</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns TRUE iff the time limit was reached </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="3094" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="3094" bodyend="3103"/>
        <references refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="190">NULL</references>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1a5fbb9e1f86a8425b85760f01692f85aa" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int SCIPlpiGetInternalStatus</definition>
        <argsstring>(SCIP_LPI *lpi)</argsstring>
        <name>SCIPlpiGetInternalStatus</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the internal solution status of the solver </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="3106" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="3106" bodyend="3114"/>
        <references refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="190">NULL</references>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1a6b24f7dd3dfac27d08f1cfc777e56a8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPlpiIgnoreInstability</definition>
        <argsstring>(SCIP_LPI *lpi, SCIP_Bool *success)</argsstring>
        <name>SCIPlpiIgnoreInstability</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>success</declname>
          <briefdescription><para>pointer to store, whether the instability could be ignored </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>tries to reset the internal status of the LP solver in order to ignore an instability of the last solving call </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="3117" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="3117" bodyend="3129"/>
        <references refid="def_8h_1aa93f0eb578d23995850d61f7d61c55c1" compoundref="def_8h" startline="53">FALSE</references>
        <references refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="190">NULL</references>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" compoundref="type__retcode_8h" startline="33">SCIP_OKAY</references>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1a5548fcdd7c4e4a3f6d542cd51da27c82" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPlpiGetObjval</definition>
        <argsstring>(SCIP_LPI *lpi, SCIP_Real *objval)</argsstring>
        <name>SCIPlpiGetObjval</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>objval</declname>
          <briefdescription><para>stores the objective value </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>gets objective value of solution</para><para><simplesect kind="note"><para>if the solution status is iteration limit reached (GRB_ITERATION_LIMIT), the objective value was not computed </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="3135" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="3135" bodyend="3148"/>
        <references refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" compoundref="lpi__grb_8c" startline="54">CHECK_ZERO</references>
        <references refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="190">NULL</references>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" compoundref="type__retcode_8h" startline="33">SCIP_OKAY</references>
        <references refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" compoundref="pub__message_8h" startline="77">SCIPdebugMessage</references>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1ac5a2315c14e99b919626de4170687227" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPlpiGetSol</definition>
        <argsstring>(SCIP_LPI *lpi, SCIP_Real *objval, SCIP_Real *primsol, SCIP_Real *dualsol, SCIP_Real *activity, SCIP_Real *redcost)</argsstring>
        <name>SCIPlpiGetSol</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>objval</declname>
          <briefdescription><para>stores the objective value, may be NULL if not needed </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>primsol</declname>
          <briefdescription><para>primal solution vector, may be NULL if not needed </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>dualsol</declname>
          <briefdescription><para>dual solution vector, may be NULL if not needed </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>activity</declname>
          <briefdescription><para>row activity vector, may be NULL if not needed </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>redcost</declname>
          <briefdescription><para>reduced cost vector, may be NULL if not needed </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>gets primal and dual solution vectors </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="3151" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="3151" bodyend="3225"/>
        <references refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" compoundref="lpi__grb_8c" startline="54">CHECK_ZERO</references>
        <references refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="190">NULL</references>
        <references refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" compoundref="def_8h" startline="263">SCIP_CALL</references>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5da4e90bc81f0364ff12e57c3b3e03d315c" compoundref="type__retcode_8h" startline="43">SCIP_INVALIDDATA</references>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" compoundref="type__retcode_8h" startline="33">SCIP_OKAY</references>
        <references refid="def_8h_1ad8669395a2a82ed74b9b364f4a310c56" compoundref="def_8h" startline="235">SCIPABORT</references>
        <references refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" compoundref="pub__message_8h" startline="77">SCIPdebugMessage</references>
        <references refid="pub__message_8h_1a354566c209c3a7fe5c870d4ee8c07bc5" compoundref="pub__message_8h" startline="45">SCIPerrorMessage</references>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1a2d3ab14c33312daf6f0c51e7eba4ae95" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPlpiGetPrimalRay</definition>
        <argsstring>(SCIP_LPI *lpi, SCIP_Real *ray)</argsstring>
        <name>SCIPlpiGetPrimalRay</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>ray</declname>
          <briefdescription><para>primal ray </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>gets primal ray for unbounded LPs </para>        </detaileddescription>
        <inbodydescription>
<para>Unbounded ray (NULL returned if none/wrong). Up to user to use delete [] on these arrays. </para>        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="3228" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="3228" bodyend="3247"/>
        <references refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" compoundref="lpi__grb_8c" startline="54">CHECK_ZERO</references>
        <references refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="190">NULL</references>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" compoundref="type__retcode_8h" startline="33">SCIP_OKAY</references>
        <references refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" compoundref="pub__message_8h" startline="77">SCIPdebugMessage</references>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1a54ee13d012fb992394c0828166c2fea3" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPlpiGetDualfarkas</definition>
        <argsstring>(SCIP_LPI *lpi, SCIP_Real *dualfarkas)</argsstring>
        <name>SCIPlpiGetDualfarkas</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>dualfarkas</declname>
          <briefdescription><para>dual Farkas row multipliers </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>gets dual Farkas proof for infeasibility </para>        </detaileddescription>
        <inbodydescription>
<para>Infeasibility ray (NULL returned if none/wrong). Up to user to use delete [] on these arrays. </para>        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="3250" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="3250" bodyend="3270"/>
        <references refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" compoundref="lpi__grb_8c" startline="54">CHECK_ZERO</references>
        <references refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="190">NULL</references>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5da004953b01233fe72cb41c5d218abb858" compoundref="type__retcode_8h" startline="40">SCIP_LPERROR</references>
        <references refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" compoundref="pub__message_8h" startline="77">SCIPdebugMessage</references>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1ae37bfbea024ddb8232827aeedc84afe0" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPlpiGetIterations</definition>
        <argsstring>(SCIP_LPI *lpi, int *iterations)</argsstring>
        <name>SCIPlpiGetIterations</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>iterations</declname>
          <briefdescription><para>pointer to store the number of iterations of the last solve call </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>gets the number of LP iterations of the last solve call </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="3273" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="3273" bodyend="3285"/>
        <references refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="190">NULL</references>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" compoundref="type__retcode_8h" startline="33">SCIP_OKAY</references>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1a83ddb586c09a37eea2e411f1271a32f6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPlpiGetRealSolQuality</definition>
        <argsstring>(SCIP_LPI *lpi, SCIP_LPSOLQUALITY qualityindicator, SCIP_Real *quality)</argsstring>
        <name>SCIPlpiGetRealSolQuality</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <param>
          <type><ref refid="type__lpi_8h_1ad43906673a9a8a661c5c454138207fc9" kindref="member">SCIP_LPSOLQUALITY</ref></type>
          <declname>qualityindicator</declname>
          <briefdescription><para>indicates which quality should be returned </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>quality</declname>
          <briefdescription><para>pointer to store quality number </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>gets information about the quality of an LP solution</para><para>Such information is usually only available, if also a (maybe not optimal) solution is available. The LPI should return SCIP_INVALID for <computeroutput>quality</computeroutput>, if the requested quantity is not available. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="3292" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="3292" bodyend="3304"/>
        <references refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" compoundref="lpi__grb_8c" startline="54">CHECK_ZERO</references>
        <references refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="190">NULL</references>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" compoundref="type__retcode_8h" startline="33">SCIP_OKAY</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>LP Basis Methods</header>
      <memberdef kind="function" id="lpi__grb_8c_1a258aa72f3b645b140c543f0fc7f3f37a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPlpiGetBase</definition>
        <argsstring>(SCIP_LPI *lpi, int *cstat, int *rstat)</argsstring>
        <name>SCIPlpiGetBase</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>cstat</declname>
          <briefdescription><para>array to store column basis status, or NULL </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>rstat</declname>
          <briefdescription><para>array to store row basis status, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>gets current basis status for columns and rows; arrays must be large enough to store the basis status </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="3319" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="3319" bodyend="3406"/>
        <references refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" compoundref="lpi__grb_8c" startline="54">CHECK_ZERO</references>
        <references refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="190">NULL</references>
        <references refid="type__lpi_8h_1ac34513c7d1cc6c3eb46bc9f373d03648a166f9b557960da4bec4a0dbd00c0d7f2" compoundref="type__lpi_8h" startline="80">SCIP_BASESTAT_BASIC</references>
        <references refid="type__lpi_8h_1ac34513c7d1cc6c3eb46bc9f373d03648aaf2c277e576d024183ed7949ba947da6" compoundref="type__lpi_8h" startline="79">SCIP_BASESTAT_LOWER</references>
        <references refid="type__lpi_8h_1ac34513c7d1cc6c3eb46bc9f373d03648a2b5d851810f72ad984abc6b47b852868" compoundref="type__lpi_8h" startline="81">SCIP_BASESTAT_UPPER</references>
        <references refid="type__lpi_8h_1ac34513c7d1cc6c3eb46bc9f373d03648ac9fd196bcf1e32bef1f5a2a71b3421bc" compoundref="type__lpi_8h" startline="82">SCIP_BASESTAT_ZERO</references>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5da4e90bc81f0364ff12e57c3b3e03d315c" compoundref="type__retcode_8h" startline="43">SCIP_INVALIDDATA</references>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" compoundref="type__retcode_8h" startline="33">SCIP_OKAY</references>
        <references refid="def_8h_1ad8669395a2a82ed74b9b364f4a310c56" compoundref="def_8h" startline="235">SCIPABORT</references>
        <references refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" compoundref="pub__message_8h" startline="77">SCIPdebugMessage</references>
        <references refid="pub__message_8h_1a354566c209c3a7fe5c870d4ee8c07bc5" compoundref="pub__message_8h" startline="45">SCIPerrorMessage</references>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1a7d9cb745987d79fb87f60739a423c833" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPlpiSetBase</definition>
        <argsstring>(SCIP_LPI *lpi, int *cstat, int *rstat)</argsstring>
        <name>SCIPlpiSetBase</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>cstat</declname>
          <briefdescription><para>array with column basis status </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>rstat</declname>
          <briefdescription><para>array with row basis status </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sets current basis status for columns and rows </para>        </detaileddescription>
        <inbodydescription>
<para>Whats changed since last solve. Is only used when startFinishOptions used in dual or primal. Bit 1 - number of rows/columns has not changed (so work arrays valid) 2 - matrix has not changed 4 - if matrix has changed only by adding rows 8 - if matrix has changed only by adding columns 16 - row lbs not changed 32 - row ubs not changed 64 - column objective not changed 128 - column lbs not changed 256 - column ubs not changed 512 - basis not changed (up to user to set this to 0) top bits may be used internally</para>        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="3409" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="3409" bodyend="3484"/>
        <references refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" compoundref="lpi__grb_8c" startline="54">CHECK_ZERO</references>
        <references refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="190">NULL</references>
        <references refid="type__lpi_8h_1ac34513c7d1cc6c3eb46bc9f373d03648a166f9b557960da4bec4a0dbd00c0d7f2" compoundref="type__lpi_8h" startline="80">SCIP_BASESTAT_BASIC</references>
        <references refid="type__lpi_8h_1ac34513c7d1cc6c3eb46bc9f373d03648aaf2c277e576d024183ed7949ba947da6" compoundref="type__lpi_8h" startline="79">SCIP_BASESTAT_LOWER</references>
        <references refid="type__lpi_8h_1ac34513c7d1cc6c3eb46bc9f373d03648a2b5d851810f72ad984abc6b47b852868" compoundref="type__lpi_8h" startline="81">SCIP_BASESTAT_UPPER</references>
        <references refid="type__lpi_8h_1ac34513c7d1cc6c3eb46bc9f373d03648ac9fd196bcf1e32bef1f5a2a71b3421bc" compoundref="type__lpi_8h" startline="82">SCIP_BASESTAT_ZERO</references>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5da4e90bc81f0364ff12e57c3b3e03d315c" compoundref="type__retcode_8h" startline="43">SCIP_INVALIDDATA</references>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" compoundref="type__retcode_8h" startline="33">SCIP_OKAY</references>
        <references refid="def_8h_1ad8669395a2a82ed74b9b364f4a310c56" compoundref="def_8h" startline="235">SCIPABORT</references>
        <references refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" compoundref="pub__message_8h" startline="77">SCIPdebugMessage</references>
        <references refid="pub__message_8h_1a354566c209c3a7fe5c870d4ee8c07bc5" compoundref="pub__message_8h" startline="45">SCIPerrorMessage</references>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1ae40a43f062d28623d57653ddb4719fca" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPlpiGetBasisInd</definition>
        <argsstring>(SCIP_LPI *lpi, int *bind)</argsstring>
        <name>SCIPlpiGetBasisInd</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>bind</declname>
          <briefdescription><para>pointer to store basis indices ready to keep number of rows entries </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the indices of the basic columns and rows; basic column n gives value n, basic row m gives value -1-m </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="3488" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="3488" bodyend="3555"/>
        <references refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" compoundref="lpi__grb_8c" startline="54">CHECK_ZERO</references>
        <references refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="190">NULL</references>
        <references refid="def_8h_1a7695e892dc456d85a3654eb158976921" compoundref="def_8h" startline="274">SCIP_ALLOC</references>
        <references refid="def_8h_1a6cef30a52627ce05a0999879c0aabf5f" compoundref="def_8h" startline="238">SCIP_CALL_QUIET</references>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" compoundref="type__retcode_8h" startline="33">SCIP_OKAY</references>
        <references refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" compoundref="pub__message_8h" startline="77">SCIPdebugMessage</references>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1a9315c551e92d2caa54d42750f1f048cb" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPlpiGetBInvRow</definition>
        <argsstring>(SCIP_LPI *lpi, int r, SCIP_Real *coef, int *inds, int *ninds)</argsstring>
        <name>SCIPlpiGetBInvRow</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>r</declname>
          <briefdescription><para>row number </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>coef</declname>
          <briefdescription><para>pointer to store the coefficients of the row </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>inds</declname>
          <briefdescription><para>array to store the non-zero indices </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>ninds</declname>
          <briefdescription><para>pointer to store the number of non-zero indices (-1: if we do not store sparsity informations) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get dense row of inverse basis matrix B^-1</para><para><simplesect kind="note"><para>The LP interface defines slack variables to have coefficient +1. This means that if, internally, the LP solver uses a -1 coefficient, then rows associated with slacks variables whose coefficient is -1, should be negated; see also the explanation in <ref refid="lpi_8h" kindref="compound">lpi.h</ref>.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="3565" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="3565" bodyend="3648"/>
        <references refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" compoundref="lpi__grb_8c" startline="54">CHECK_ZERO</references>
        <references refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="190">NULL</references>
        <references refid="def_8h_1a7695e892dc456d85a3654eb158976921" compoundref="def_8h" startline="274">SCIP_ALLOC</references>
        <references refid="def_8h_1a6cef30a52627ce05a0999879c0aabf5f" compoundref="def_8h" startline="238">SCIP_CALL_QUIET</references>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" compoundref="type__retcode_8h" startline="33">SCIP_OKAY</references>
        <references refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" compoundref="pub__message_8h" startline="77">SCIPdebugMessage</references>
        <references refid="lpi__grb_8c_1af2e7d05d2ba0870e8419b9ce11a70456" compoundref="lpi__grb_8c" startline="72">SVECTOR</references>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1a9dda3c2147cbb647cfb0b5d198407525" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPlpiGetBInvCol</definition>
        <argsstring>(SCIP_LPI *lpi, int c, SCIP_Real *coef, int *inds, int *ninds)</argsstring>
        <name>SCIPlpiGetBInvCol</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>c</declname>
          <briefdescription><para>column number of B^-1; this is NOT the number of the column in the LP; you have to call <ref refid="lpi__grb_8c_1ae40a43f062d28623d57653ddb4719fca" kindref="member">SCIPlpiGetBasisInd()</ref> to get the array which links the B^-1 column numbers to the row and column numbers of the LP! c must be between 0 and nrows-1, since the basis has the size nrows * nrows </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>coef</declname>
          <briefdescription><para>pointer to store the coefficients of the column </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>inds</declname>
          <briefdescription><para>array to store the non-zero indices </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>ninds</declname>
          <briefdescription><para>pointer to store the number of non-zero indices (-1: if we do not store sparsity informations) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get dense column of inverse basis matrix B^-1</para><para><simplesect kind="note"><para>The LP interface defines slack variables to have coefficient +1. This means that if, internally, the LP solver uses a -1 coefficient, then rows associated with slacks variables whose coefficient is -1, should be negated; see also the explanation in <ref refid="lpi_8h" kindref="compound">lpi.h</ref>.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="3658" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="3658" bodyend="3745"/>
        <references refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" compoundref="lpi__grb_8c" startline="54">CHECK_ZERO</references>
        <references refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="190">NULL</references>
        <references refid="def_8h_1a7695e892dc456d85a3654eb158976921" compoundref="def_8h" startline="274">SCIP_ALLOC</references>
        <references refid="def_8h_1a6cef30a52627ce05a0999879c0aabf5f" compoundref="def_8h" startline="238">SCIP_CALL_QUIET</references>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" compoundref="type__retcode_8h" startline="33">SCIP_OKAY</references>
        <references refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" compoundref="pub__message_8h" startline="77">SCIPdebugMessage</references>
        <references refid="lpi__grb_8c_1af2e7d05d2ba0870e8419b9ce11a70456" compoundref="lpi__grb_8c" startline="72">SVECTOR</references>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1aa516aed02ad9b303b0d51eb0c7a66f5e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPlpiGetBInvARow</definition>
        <argsstring>(SCIP_LPI *lpi, int r, const SCIP_Real *binvrow, SCIP_Real *coef, int *inds, int *ninds)</argsstring>
        <name>SCIPlpiGetBInvARow</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>r</declname>
          <briefdescription><para>row number </para></briefdescription>
        </param>
        <param>
          <type>const <ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>binvrow</declname>
          <briefdescription><para>row in (A_B)^-1 from prior call to <ref refid="lpi__grb_8c_1a9315c551e92d2caa54d42750f1f048cb" kindref="member">SCIPlpiGetBInvRow()</ref>, or NULL </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>coef</declname>
          <briefdescription><para>vector to return coefficients </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>inds</declname>
          <briefdescription><para>array to store the non-zero indices </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>ninds</declname>
          <briefdescription><para>pointer to store the number of non-zero indices (-1: if we do not store sparsity informations) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get dense row of inverse basis matrix times constraint matrix B^-1 * A</para><para><simplesect kind="note"><para>The LP interface defines slack variables to have coefficient +1. This means that if, internally, the LP solver uses a -1 coefficient, then rows associated with slacks variables whose coefficient is -1, should be negated; see also the explanation in <ref refid="lpi_8h" kindref="compound">lpi.h</ref>.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="3755" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="3755" bodyend="3828"/>
        <references refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" compoundref="lpi__grb_8c" startline="54">CHECK_ZERO</references>
        <references refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="190">NULL</references>
        <references refid="def_8h_1a7695e892dc456d85a3654eb158976921" compoundref="def_8h" startline="274">SCIP_ALLOC</references>
        <references refid="def_8h_1a6cef30a52627ce05a0999879c0aabf5f" compoundref="def_8h" startline="238">SCIP_CALL_QUIET</references>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" compoundref="type__retcode_8h" startline="33">SCIP_OKAY</references>
        <references refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" compoundref="pub__message_8h" startline="77">SCIPdebugMessage</references>
        <references refid="lpi__grb_8c_1af2e7d05d2ba0870e8419b9ce11a70456" compoundref="lpi__grb_8c" startline="72">SVECTOR</references>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1a015f424e442e74e4526ca62bdab54de1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPlpiGetBInvACol</definition>
        <argsstring>(SCIP_LPI *lpi, int c, SCIP_Real *coef, int *inds, int *ninds)</argsstring>
        <name>SCIPlpiGetBInvACol</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>c</declname>
          <briefdescription><para>column number </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>coef</declname>
          <briefdescription><para>vector to return coefficients </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>inds</declname>
          <briefdescription><para>array to store the non-zero indices </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>ninds</declname>
          <briefdescription><para>pointer to store the number of non-zero indices (-1: if we do not store sparsity informations) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>get dense column of inverse basis matrix times constraint matrix B^-1 * A</para><para><simplesect kind="note"><para>The LP interface defines slack variables to have coefficient +1. This means that if, internally, the LP solver uses a -1 coefficient, then rows associated with slacks variables whose coefficient is -1, should be negated; see also the explanation in <ref refid="lpi_8h" kindref="compound">lpi.h</ref>.</para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="3838" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="3838" bodyend="3908"/>
        <references refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" compoundref="lpi__grb_8c" startline="54">CHECK_ZERO</references>
        <references refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="190">NULL</references>
        <references refid="def_8h_1a7695e892dc456d85a3654eb158976921" compoundref="def_8h" startline="274">SCIP_ALLOC</references>
        <references refid="def_8h_1a6cef30a52627ce05a0999879c0aabf5f" compoundref="def_8h" startline="238">SCIP_CALL_QUIET</references>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" compoundref="type__retcode_8h" startline="33">SCIP_OKAY</references>
        <references refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" compoundref="pub__message_8h" startline="77">SCIPdebugMessage</references>
        <references refid="lpi__grb_8c_1af2e7d05d2ba0870e8419b9ce11a70456" compoundref="lpi__grb_8c" startline="72">SVECTOR</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>LP State Methods</header>
      <memberdef kind="function" id="lpi__grb_8c_1afe1bc961d0f91cad7222870724175e21" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPlpiGetState</definition>
        <argsstring>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPISTATE **lpistate)</argsstring>
        <name>SCIPlpiGetState</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <param>
          <type>BMS_BLKMEM *</type>
          <declname>blkmem</declname>
          <briefdescription><para>block memory </para></briefdescription>
        </param>
        <param>
          <type><ref refid="type__lpi_8h_1a90d877c948164ab5e3beb0f3e1070693" kindref="member">SCIP_LPISTATE</ref> **</type>
          <declname>lpistate</declname>
          <briefdescription><para>pointer to LPi state information (like basis information) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>stores LPi state (like basis information) into lpistate object </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="3923" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="3923" bodyend="3979"/>
        <references refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" compoundref="lpi__grb_8c" startline="54">CHECK_ZERO</references>
        <references refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="190">NULL</references>
        <references refid="def_8h_1a7695e892dc456d85a3654eb158976921" compoundref="def_8h" startline="274">SCIP_ALLOC</references>
        <references refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" compoundref="def_8h" startline="50">SCIP_Bool</references>
        <references refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" compoundref="def_8h" startline="263">SCIP_CALL</references>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" compoundref="type__retcode_8h" startline="33">SCIP_OKAY</references>
        <references refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" compoundref="pub__message_8h" startline="77">SCIPdebugMessage</references>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1a74e8e33e89ab5d8d4b490fe3c4a88c98" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPlpiSetState</definition>
        <argsstring>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPISTATE *lpistate)</argsstring>
        <name>SCIPlpiSetState</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <param>
          <type>BMS_BLKMEM *</type>
          <declname>blkmem</declname>
          <briefdescription><para>block memory </para></briefdescription>
        </param>
        <param>
          <type><ref refid="type__lpi_8h_1a90d877c948164ab5e3beb0f3e1070693" kindref="member">SCIP_LPISTATE</ref> *</type>
          <declname>lpistate</declname>
          <briefdescription><para>LPi state information (like basis information) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>loads LPi state (like basis information) into solver; note that the LP might have been extended with additional columns and rows since the state was stored with <ref refid="lpi__grb_8c_1afe1bc961d0f91cad7222870724175e21" kindref="member">SCIPlpiGetState()</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="3984" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="3984" bodyend="4044"/>
        <references refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" compoundref="lpi__grb_8c" startline="54">CHECK_ZERO</references>
        <references refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="190">NULL</references>
        <references refid="def_8h_1add08ff5d5df711242962dc12240f968e" compoundref="def_8h" startline="148">REALABS</references>
        <references refid="type__lpi_8h_1ac34513c7d1cc6c3eb46bc9f373d03648a166f9b557960da4bec4a0dbd00c0d7f2" compoundref="type__lpi_8h" startline="80">SCIP_BASESTAT_BASIC</references>
        <references refid="type__lpi_8h_1ac34513c7d1cc6c3eb46bc9f373d03648aaf2c277e576d024183ed7949ba947da6" compoundref="type__lpi_8h" startline="79">SCIP_BASESTAT_LOWER</references>
        <references refid="type__lpi_8h_1ac34513c7d1cc6c3eb46bc9f373d03648a2b5d851810f72ad984abc6b47b852868" compoundref="type__lpi_8h" startline="81">SCIP_BASESTAT_UPPER</references>
        <references refid="type__lpi_8h_1ac34513c7d1cc6c3eb46bc9f373d03648ac9fd196bcf1e32bef1f5a2a71b3421bc" compoundref="type__lpi_8h" startline="82">SCIP_BASESTAT_ZERO</references>
        <references refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" compoundref="def_8h" startline="263">SCIP_CALL</references>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" compoundref="type__retcode_8h" startline="33">SCIP_OKAY</references>
        <references refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" compoundref="def_8h" startline="124">SCIP_Real</references>
        <references refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" compoundref="pub__message_8h" startline="77">SCIPdebugMessage</references>
        <references refid="lpi__grb_8c_1a1773cc8c068cde1f8bb0b8ba99277878" compoundref="lpi__grb_8c" startline="4469" endline="4475">SCIPlpiIsInfinity</references>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1a1d56087500813e24687787cb90da5d93" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPlpiClearState</definition>
        <argsstring>(SCIP_LPI *lpi)</argsstring>
        <name>SCIPlpiClearState</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>clears current LPi state (like basis information) of the solver </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="4047" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="4047" bodyend="4056"/>
        <references refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" compoundref="lpi__grb_8c" startline="54">CHECK_ZERO</references>
        <references refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="190">NULL</references>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" compoundref="type__retcode_8h" startline="33">SCIP_OKAY</references>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1acfee2d2ea719f54192a11c1e80f5e61e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPlpiFreeState</definition>
        <argsstring>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPISTATE **lpistate)</argsstring>
        <name>SCIPlpiFreeState</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <param>
          <type>BMS_BLKMEM *</type>
          <declname>blkmem</declname>
          <briefdescription><para>block memory </para></briefdescription>
        </param>
        <param>
          <type><ref refid="type__lpi_8h_1a90d877c948164ab5e3beb0f3e1070693" kindref="member">SCIP_LPISTATE</ref> **</type>
          <declname>lpistate</declname>
          <briefdescription><para>pointer to LPi state information (like basis information) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>frees LPi state information </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="4059" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="4059" bodyend="4072"/>
        <references refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="190">NULL</references>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" compoundref="type__retcode_8h" startline="33">SCIP_OKAY</references>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1a8cf134c068da15fe85dfad3d3d0aae2b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
        <definition>SCIP_Bool SCIPlpiHasStateBasis</definition>
        <argsstring>(SCIP_LPI *lpi, SCIP_LPISTATE *lpistate)</argsstring>
        <name>SCIPlpiHasStateBasis</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <param>
          <type><ref refid="type__lpi_8h_1a90d877c948164ab5e3beb0f3e1070693" kindref="member">SCIP_LPISTATE</ref> *</type>
          <declname>lpistate</declname>
          <briefdescription><para>LP state information (like basis information) </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>checks, whether the given LP state contains simplex basis information </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="4075" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="4075" bodyend="4081"/>
        <references refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="190">NULL</references>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1a29c773d7e7763517c0952b9eee9ed7ec" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPlpiReadState</definition>
        <argsstring>(SCIP_LPI *lpi, const char *fname)</argsstring>
        <name>SCIPlpiReadState</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <param>
          <type>const char *</type>
          <declname>fname</declname>
          <briefdescription><para>file name </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>reads LP state (like basis information from a file </para>        </detaileddescription>
        <inbodydescription>
<para>Read a basis from the given filename, returns -1 on file error, 0 if no values, 1 if values</para>        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="4084" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="4084" bodyend="4108"/>
        <references refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" compoundref="lpi__grb_8c" startline="54">CHECK_ZERO</references>
        <references refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="190">NULL</references>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5da004953b01233fe72cb41c5d218abb858" compoundref="type__retcode_8h" startline="40">SCIP_LPERROR</references>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" compoundref="type__retcode_8h" startline="33">SCIP_OKAY</references>
        <references refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" compoundref="pub__message_8h" startline="77">SCIPdebugMessage</references>
        <references refid="pub__message_8h_1a354566c209c3a7fe5c870d4ee8c07bc5" compoundref="pub__message_8h" startline="45">SCIPerrorMessage</references>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1a6b360b8eb706948179cc3b46fa4df372" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPlpiWriteState</definition>
        <argsstring>(SCIP_LPI *lpi, const char *fname)</argsstring>
        <name>SCIPlpiWriteState</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <param>
          <type>const char *</type>
          <declname>fname</declname>
          <briefdescription><para>file name </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>writes LP state (like basis information) to a file </para>        </detaileddescription>
        <inbodydescription>
<para>Write the basis in MPS format to the specified file. If writeValues true, writes values of structurals (and adds VALUES to end of NAME card)</para><para>parameters:<itemizedlist>
<listitem><para>filename</para></listitem><listitem><para>bool writeValues</para></listitem><listitem><para>int formatType (0 - normal, 1 - extra accuracy, 2 - IEEE hex)</para></listitem></itemizedlist>
</para>        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="4111" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="4111" bodyend="4139"/>
        <references refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" compoundref="lpi__grb_8c" startline="54">CHECK_ZERO</references>
        <references refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="190">NULL</references>
        <references refid="def_8h_1a092c962ca167cd52b4be9c0a29b8da6b" compoundref="def_8h" startline="198">SCIP_MAXSTRLEN</references>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" compoundref="type__retcode_8h" startline="33">SCIP_OKAY</references>
        <references refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" compoundref="pub__message_8h" startline="77">SCIPdebugMessage</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>LP Pricing Norms Methods</header>
      <memberdef kind="function" id="lpi__grb_8c_1a868706bb40dc3fdeb76e81c56c1c4d31" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPlpiGetNorms</definition>
        <argsstring>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPINORMS **lpinorms)</argsstring>
        <name>SCIPlpiGetNorms</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <param>
          <type>BMS_BLKMEM *</type>
          <declname>blkmem</declname>
          <briefdescription><para>block memory </para></briefdescription>
        </param>
        <param>
          <type><ref refid="type__lpi_8h_1abb3fe4ccfb87fa50adfa0631ff0d5531" kindref="member">SCIP_LPINORMS</ref> **</type>
          <declname>lpinorms</declname>
          <briefdescription><para>pointer to LPi pricing norms information </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>stores LPi pricing norms information  </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="4156" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="4156" bodyend="4167"/>
        <references refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="190">NULL</references>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" compoundref="type__retcode_8h" startline="33">SCIP_OKAY</references>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1ad619ad2a4e65223449f5ab635985b70b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPlpiSetNorms</definition>
        <argsstring>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPINORMS *lpinorms)</argsstring>
        <name>SCIPlpiSetNorms</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <param>
          <type>BMS_BLKMEM *</type>
          <declname>blkmem</declname>
          <briefdescription><para>block memory </para></briefdescription>
        </param>
        <param>
          <type><ref refid="type__lpi_8h_1abb3fe4ccfb87fa50adfa0631ff0d5531" kindref="member">SCIP_LPINORMS</ref> *</type>
          <declname>lpinorms</declname>
          <briefdescription><para>LPi pricing norms information </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>loads LPi pricing norms into solver; note that the LP might have been extended with additional columns and rows since the state was stored with <ref refid="lpi__grb_8c_1a868706bb40dc3fdeb76e81c56c1c4d31" kindref="member">SCIPlpiGetNorms()</ref> </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="4172" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="4172" bodyend="4182"/>
        <references refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="190">NULL</references>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" compoundref="type__retcode_8h" startline="33">SCIP_OKAY</references>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1a640477b756ddb94827c1a4e5e3721d38" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPlpiFreeNorms</definition>
        <argsstring>(SCIP_LPI *lpi, BMS_BLKMEM *blkmem, SCIP_LPINORMS **lpinorms)</argsstring>
        <name>SCIPlpiFreeNorms</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <param>
          <type>BMS_BLKMEM *</type>
          <declname>blkmem</declname>
          <briefdescription><para>block memory </para></briefdescription>
        </param>
        <param>
          <type><ref refid="type__lpi_8h_1abb3fe4ccfb87fa50adfa0631ff0d5531" kindref="member">SCIP_LPINORMS</ref> **</type>
          <declname>lpinorms</declname>
          <briefdescription><para>pointer to LPi pricing norms information </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>frees pricing norms information </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="4185" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="4185" bodyend="4195"/>
        <references refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="190">NULL</references>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" compoundref="type__retcode_8h" startline="33">SCIP_OKAY</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Parameter Methods</header>
      <memberdef kind="function" id="lpi__grb_8c_1a2d82a67789be908b161295f41d02ba8b" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPlpiGetIntpar</definition>
        <argsstring>(SCIP_LPI *lpi, SCIP_LPPARAM type, int *ival)</argsstring>
        <name>SCIPlpiGetIntpar</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <param>
          <type><ref refid="type__lpi_8h_1a845842b094eba8ce0cf0821e82b4d67a" kindref="member">SCIP_LPPARAM</ref></type>
          <declname>type</declname>
          <briefdescription><para>parameter number </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>ival</declname>
          <briefdescription><para>buffer to store the parameter value </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>gets integer parameter of LP </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="4210" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="4210" bodyend="4264"/>
        <references refid="def_8h_1aa93f0eb578d23995850d61f7d61c55c1" compoundref="def_8h" startline="53">FALSE</references>
        <references refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="190">NULL</references>
        <references refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" compoundref="def_8h" startline="263">SCIP_CALL</references>
        <references refid="type__lpi_8h_1ac333f54119f676d19d81bed186b0038ba9cf2cefbf43816ba1c1e454b50c732fd" compoundref="type__lpi_8h" startline="42">SCIP_LPPAR_FASTMIP</references>
        <references refid="type__lpi_8h_1ac333f54119f676d19d81bed186b0038baabf8addc3b5db9eb7280711323285333" compoundref="type__lpi_8h" startline="41">SCIP_LPPAR_FROMSCRATCH</references>
        <references refid="type__lpi_8h_1ac333f54119f676d19d81bed186b0038ba3a6b49761689f0768535d9edcb26a013" compoundref="type__lpi_8h" startline="46">SCIP_LPPAR_LPINFO</references>
        <references refid="type__lpi_8h_1ac333f54119f676d19d81bed186b0038bad3a9947367aa599495456cd35502683b" compoundref="type__lpi_8h" startline="52">SCIP_LPPAR_LPITLIM</references>
        <references refid="type__lpi_8h_1ac333f54119f676d19d81bed186b0038ba8229b5ef8f7105825a6d7245d1915258" compoundref="type__lpi_8h" startline="44">SCIP_LPPAR_PRESOLVING</references>
        <references refid="type__lpi_8h_1ac333f54119f676d19d81bed186b0038ba0114e2317d0236d43fb3b297ee9aea8d" compoundref="type__lpi_8h" startline="45">SCIP_LPPAR_PRICING</references>
        <references refid="type__lpi_8h_1ac333f54119f676d19d81bed186b0038ba58e15a0d2bb9e631213db974ec701b18" compoundref="type__lpi_8h" startline="43">SCIP_LPPAR_SCALING</references>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" compoundref="type__retcode_8h" startline="33">SCIP_OKAY</references>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5da60ca3960305c3dc0d3c141448cbed401" compoundref="type__retcode_8h" startline="46">SCIP_PARAMETERUNKNOWN</references>
        <references refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" compoundref="def_8h" startline="124">SCIP_Real</references>
        <references refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" compoundref="pub__message_8h" startline="77">SCIPdebugMessage</references>
        <references refid="def_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" compoundref="def_8h" startline="52">TRUE</references>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1a8dac6dec76901acef9c18397582c5e9a" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPlpiSetIntpar</definition>
        <argsstring>(SCIP_LPI *lpi, SCIP_LPPARAM type, int ival)</argsstring>
        <name>SCIPlpiSetIntpar</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <param>
          <type><ref refid="type__lpi_8h_1a845842b094eba8ce0cf0821e82b4d67a" kindref="member">SCIP_LPPARAM</ref></type>
          <declname>type</declname>
          <briefdescription><para>parameter number </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>ival</declname>
          <briefdescription><para>parameter value </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sets integer parameter of LP </para>        </detaileddescription>
        <inbodydescription>
<para>Amount of print out: 0 - none 1 - just final 2 - just factorizations 3 - as 2 plus a bit more 4 - verbose above that 8,16,32 etc just for selective SCIPdebug</para>        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="4267" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="4267" bodyend="4345"/>
        <references refid="def_8h_1aa93f0eb578d23995850d61f7d61c55c1" compoundref="def_8h" startline="53">FALSE</references>
        <references refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="190">NULL</references>
        <references refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" compoundref="def_8h" startline="50">SCIP_Bool</references>
        <references refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" compoundref="def_8h" startline="263">SCIP_CALL</references>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5da004953b01233fe72cb41c5d218abb858" compoundref="type__retcode_8h" startline="40">SCIP_LPERROR</references>
        <references refid="type__lpi_8h_1ac333f54119f676d19d81bed186b0038ba9cf2cefbf43816ba1c1e454b50c732fd" compoundref="type__lpi_8h" startline="42">SCIP_LPPAR_FASTMIP</references>
        <references refid="type__lpi_8h_1ac333f54119f676d19d81bed186b0038baabf8addc3b5db9eb7280711323285333" compoundref="type__lpi_8h" startline="41">SCIP_LPPAR_FROMSCRATCH</references>
        <references refid="type__lpi_8h_1ac333f54119f676d19d81bed186b0038ba3a6b49761689f0768535d9edcb26a013" compoundref="type__lpi_8h" startline="46">SCIP_LPPAR_LPINFO</references>
        <references refid="type__lpi_8h_1ac333f54119f676d19d81bed186b0038bad3a9947367aa599495456cd35502683b" compoundref="type__lpi_8h" startline="52">SCIP_LPPAR_LPITLIM</references>
        <references refid="type__lpi_8h_1ac333f54119f676d19d81bed186b0038ba8229b5ef8f7105825a6d7245d1915258" compoundref="type__lpi_8h" startline="44">SCIP_LPPAR_PRESOLVING</references>
        <references refid="type__lpi_8h_1ac333f54119f676d19d81bed186b0038ba0114e2317d0236d43fb3b297ee9aea8d" compoundref="type__lpi_8h" startline="45">SCIP_LPPAR_PRICING</references>
        <references refid="type__lpi_8h_1ac333f54119f676d19d81bed186b0038ba58e15a0d2bb9e631213db974ec701b18" compoundref="type__lpi_8h" startline="43">SCIP_LPPAR_SCALING</references>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" compoundref="type__retcode_8h" startline="33">SCIP_OKAY</references>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5da60ca3960305c3dc0d3c141448cbed401" compoundref="type__retcode_8h" startline="46">SCIP_PARAMETERUNKNOWN</references>
        <references refid="type__lpi_8h_1a0483a21478d8f9c8d7c1ba9e3473d775a1579f0b28462ca3030c2ea711509cf11" compoundref="type__lpi_8h" startline="67">SCIP_PRICING_AUTO</references>
        <references refid="type__lpi_8h_1a0483a21478d8f9c8d7c1ba9e3473d775a1e601f75db40f3b48665aa04f5103987" compoundref="type__lpi_8h" startline="72">SCIP_PRICING_DEVEX</references>
        <references refid="type__lpi_8h_1a0483a21478d8f9c8d7c1ba9e3473d775a42f5306421531962d1b113eab03e6cf0" compoundref="type__lpi_8h" startline="68">SCIP_PRICING_FULL</references>
        <references refid="type__lpi_8h_1a0483a21478d8f9c8d7c1ba9e3473d775a840117e919783bcc69646f544c2db051" compoundref="type__lpi_8h" startline="66">SCIP_PRICING_LPIDEFAULT</references>
        <references refid="type__lpi_8h_1a0483a21478d8f9c8d7c1ba9e3473d775afb363bc9727994c89ff3da4273164335" compoundref="type__lpi_8h" startline="69">SCIP_PRICING_PARTIAL</references>
        <references refid="type__lpi_8h_1a0483a21478d8f9c8d7c1ba9e3473d775a270fee7478b8951e2cc4fbefc7b7b477" compoundref="type__lpi_8h" startline="70">SCIP_PRICING_STEEP</references>
        <references refid="type__lpi_8h_1a0483a21478d8f9c8d7c1ba9e3473d775a0b1034a38e607455f39eb74ad242bab6" compoundref="type__lpi_8h" startline="71">SCIP_PRICING_STEEPQSTART</references>
        <references refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" compoundref="pub__message_8h" startline="77">SCIPdebugMessage</references>
        <references refid="def_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" compoundref="def_8h" startline="52">TRUE</references>
        <referencedby refid="lpi__grb_8c_1ae522c0e79b2f2c7d185e6b6cafec1a3d" compoundref="lpi__grb_8c" startline="1110" endline="1182">SCIPlpiCreate</referencedby>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1a07259db5fb0599d063fa4973dc3d5d8e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPlpiGetRealpar</definition>
        <argsstring>(SCIP_LPI *lpi, SCIP_LPPARAM type, SCIP_Real *dval)</argsstring>
        <name>SCIPlpiGetRealpar</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <param>
          <type><ref refid="type__lpi_8h_1a845842b094eba8ce0cf0821e82b4d67a" kindref="member">SCIP_LPPARAM</ref></type>
          <declname>type</declname>
          <briefdescription><para>parameter number </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>dval</declname>
          <briefdescription><para>buffer to store the parameter value </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>gets floating point parameter of LP </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="4348" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="4348" bodyend="4398"/>
        <references refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" compoundref="lpi__grb_8c" startline="54">CHECK_ZERO</references>
        <references refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="190">NULL</references>
        <references refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" compoundref="def_8h" startline="263">SCIP_CALL</references>
        <references refid="type__lpi_8h_1ac333f54119f676d19d81bed186b0038ba7a541158135537aa60d3649574621538" compoundref="type__lpi_8h" startline="49">SCIP_LPPAR_BARRIERCONVTOL</references>
        <references refid="type__lpi_8h_1ac333f54119f676d19d81bed186b0038baa9801355e17b1d3f1c5ed41616285dc5" compoundref="type__lpi_8h" startline="48">SCIP_LPPAR_DUALFEASTOL</references>
        <references refid="type__lpi_8h_1ac333f54119f676d19d81bed186b0038bac3189a09fce4d5f22435928771524285" compoundref="type__lpi_8h" startline="47">SCIP_LPPAR_FEASTOL</references>
        <references refid="type__lpi_8h_1ac333f54119f676d19d81bed186b0038ba3d88cde8e4c624e49c106d4c98955f10" compoundref="type__lpi_8h" startline="50">SCIP_LPPAR_LOBJLIM</references>
        <references refid="type__lpi_8h_1ac333f54119f676d19d81bed186b0038ba733f4fa15222572d687c1bb753782cf0" compoundref="type__lpi_8h" startline="53">SCIP_LPPAR_LPTILIM</references>
        <references refid="type__lpi_8h_1ac333f54119f676d19d81bed186b0038bab1d6268a86eb10df9e8140ed626e38f8" compoundref="type__lpi_8h" startline="54">SCIP_LPPAR_MARKOWITZ</references>
        <references refid="type__lpi_8h_1ac333f54119f676d19d81bed186b0038baa9974a8818f5f48d32a5f5912bf085b2" compoundref="type__lpi_8h" startline="51">SCIP_LPPAR_UOBJLIM</references>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" compoundref="type__retcode_8h" startline="33">SCIP_OKAY</references>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5da60ca3960305c3dc0d3c141448cbed401" compoundref="type__retcode_8h" startline="46">SCIP_PARAMETERUNKNOWN</references>
        <references refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" compoundref="pub__message_8h" startline="77">SCIPdebugMessage</references>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1a468d983f0e77aa23e9563d4c1c1e3db8" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPlpiSetRealpar</definition>
        <argsstring>(SCIP_LPI *lpi, SCIP_LPPARAM type, SCIP_Real dval)</argsstring>
        <name>SCIPlpiSetRealpar</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <param>
          <type><ref refid="type__lpi_8h_1a845842b094eba8ce0cf0821e82b4d67a" kindref="member">SCIP_LPPARAM</ref></type>
          <declname>type</declname>
          <briefdescription><para>parameter number </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>dval</declname>
          <briefdescription><para>parameter value </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sets floating point parameter of LP </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="4401" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="4401" bodyend="4446"/>
        <references refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" compoundref="lpi__grb_8c" startline="54">CHECK_ZERO</references>
        <references refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="190">NULL</references>
        <references refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" compoundref="def_8h" startline="263">SCIP_CALL</references>
        <references refid="type__lpi_8h_1ac333f54119f676d19d81bed186b0038ba7a541158135537aa60d3649574621538" compoundref="type__lpi_8h" startline="49">SCIP_LPPAR_BARRIERCONVTOL</references>
        <references refid="type__lpi_8h_1ac333f54119f676d19d81bed186b0038baa9801355e17b1d3f1c5ed41616285dc5" compoundref="type__lpi_8h" startline="48">SCIP_LPPAR_DUALFEASTOL</references>
        <references refid="type__lpi_8h_1ac333f54119f676d19d81bed186b0038bac3189a09fce4d5f22435928771524285" compoundref="type__lpi_8h" startline="47">SCIP_LPPAR_FEASTOL</references>
        <references refid="type__lpi_8h_1ac333f54119f676d19d81bed186b0038ba3d88cde8e4c624e49c106d4c98955f10" compoundref="type__lpi_8h" startline="50">SCIP_LPPAR_LOBJLIM</references>
        <references refid="type__lpi_8h_1ac333f54119f676d19d81bed186b0038ba733f4fa15222572d687c1bb753782cf0" compoundref="type__lpi_8h" startline="53">SCIP_LPPAR_LPTILIM</references>
        <references refid="type__lpi_8h_1ac333f54119f676d19d81bed186b0038bab1d6268a86eb10df9e8140ed626e38f8" compoundref="type__lpi_8h" startline="54">SCIP_LPPAR_MARKOWITZ</references>
        <references refid="type__lpi_8h_1ac333f54119f676d19d81bed186b0038baa9974a8818f5f48d32a5f5912bf085b2" compoundref="type__lpi_8h" startline="51">SCIP_LPPAR_UOBJLIM</references>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" compoundref="type__retcode_8h" startline="33">SCIP_OKAY</references>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5da60ca3960305c3dc0d3c141448cbed401" compoundref="type__retcode_8h" startline="46">SCIP_PARAMETERUNKNOWN</references>
        <references refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" compoundref="pub__message_8h" startline="77">SCIPdebugMessage</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Numerical Methods</header>
      <memberdef kind="function" id="lpi__grb_8c_1a0b732c1d334aa020a4745e550adad4a5" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
        <definition>SCIP_Real SCIPlpiInfinity</definition>
        <argsstring>(SCIP_LPI *lpi)</argsstring>
        <name>SCIPlpiInfinity</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns value treated as infinity in the LP solver </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="4461" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="4461" bodyend="4466"/>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1a1773cc8c068cde1f8bb0b8ba99277878" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
        <definition>SCIP_Bool SCIPlpiIsInfinity</definition>
        <argsstring>(SCIP_LPI *lpi, SCIP_Real val)</argsstring>
        <name>SCIPlpiIsInfinity</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref></type>
          <declname>val</declname>
          <briefdescription><para>value to be checked for infinity </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>checks if given value is treated as infinity in the LP solver </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="4469" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="4469" bodyend="4475"/>
        <referencedby refid="lpi__grb_8c_1a74e8e33e89ab5d8d4b490fe3c4a88c98" compoundref="lpi__grb_8c" startline="3984" endline="4044">SCIPlpiSetState</referencedby>
      </memberdef>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>File Interface Methods</header>
      <memberdef kind="function" id="lpi__grb_8c_1a83b58a451300ba484bb9314b35edc63f" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPlpiReadLP</definition>
        <argsstring>(SCIP_LPI *lpi, const char *fname)</argsstring>
        <name>SCIPlpiReadLP</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <param>
          <type>const char *</type>
          <declname>fname</declname>
          <briefdescription><para>file name </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>reads LP from a file </para>        </detaileddescription>
        <inbodydescription>
<para>read file in MPS format parameters: filename bool keepNames bool ignoreErrors</para>        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="4490" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="4490" bodyend="4503"/>
        <references refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" compoundref="lpi__grb_8c" startline="54">CHECK_ZERO</references>
        <references refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="190">NULL</references>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" compoundref="type__retcode_8h" startline="33">SCIP_OKAY</references>
        <references refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" compoundref="pub__message_8h" startline="77">SCIPdebugMessage</references>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1a311a14142841041e24d522b281124f57" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPlpiWriteLP</definition>
        <argsstring>(SCIP_LPI *lpi, const char *fname)</argsstring>
        <name>SCIPlpiWriteLP</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <param>
          <type>const char *</type>
          <declname>fname</declname>
          <briefdescription><para>file name </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>writes LP to a file </para>        </detaileddescription>
        <inbodydescription>
<para>write file in MPS format parameters: filename int formatType (0 - normal, 1 - extra accuracy, 2 - IEEE hex) int numberAcross (1 or 2 values should be specified on every data line in the MPS file) double objSense</para>        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="4506" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="4506" bodyend="4519"/>
        <references refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" compoundref="lpi__grb_8c" startline="54">CHECK_ZERO</references>
        <references refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" compoundref="def_8h" startline="190">NULL</references>
        <references refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" compoundref="type__retcode_8h" startline="33">SCIP_OKAY</references>
        <references refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" compoundref="pub__message_8h" startline="77">SCIPdebugMessage</references>
      </memberdef>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" prot="public" static="no">
        <name>CHECK_ZERO</name>
        <param><defname>messagehdlr</defname></param>
        <param><defname>x</defname></param>
        <initializer>{ int _restat_;                      \
      if( (_restat_ = (x)) != 0 )                                       \
      {                                                                 \
         <ref refid="pub__message_8h_1ab73695868f29c4bc1ab097afca40de3f" kindref="member">SCIPmessagePrintWarning</ref>((messagehdlr), &quot;Gurobi error %d: %s\n&quot;, _restat_, GRBgeterrormsg(grbenv)); \
         return <ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5da004953b01233fe72cb41c5d218abb858" kindref="member">SCIP_LPERROR</ref>;                                           \
      }                                                                 \
   }</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="54" column="9" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="54" bodyend="-1"/>
        <referencedby refid="lpi__grb_8c_1add77293153dc03295e1782af22921906" compoundref="lpi__grb_8c" startline="1307" endline="1332">SCIPlpiAddCols</referencedby>
        <referencedby refid="lpi__grb_8c_1a2bad82670d46254daf3e923898c404d5" compoundref="lpi__grb_8c" startline="1409" endline="1441">SCIPlpiAddRows</referencedby>
        <referencedby refid="lpi__grb_8c_1a69472179ed0e902cb865b8bd3941c461" compoundref="lpi__grb_8c" startline="1550" endline="1578">SCIPlpiChgBounds</referencedby>
        <referencedby refid="lpi__grb_8c_1aff2b648673b8baac9903c236a97c267b" compoundref="lpi__grb_8c" startline="1613" endline="1631">SCIPlpiChgCoef</referencedby>
        <referencedby refid="lpi__grb_8c_1a8f18465d14a5d1116c1dc8ea6cf90ddb" compoundref="lpi__grb_8c" startline="1656" endline="1673">SCIPlpiChgObj</referencedby>
        <referencedby refid="lpi__grb_8c_1a0d794ce162ec1c45eb776baa2ffdc79c" compoundref="lpi__grb_8c" startline="1634" endline="1653">SCIPlpiChgObjsen</referencedby>
        <referencedby refid="lpi__grb_8c_1a00fa12a201791dbba7d4b17a75fe7ae2" compoundref="lpi__grb_8c" startline="1581" endline="1610">SCIPlpiChgSides</referencedby>
        <referencedby refid="lpi__grb_8c_1a18664e9f784a12522aa9ec6e775e5a15" compoundref="lpi__grb_8c" startline="1530" endline="1547">SCIPlpiClear</referencedby>
        <referencedby refid="lpi__grb_8c_1a1d56087500813e24687787cb90da5d93" compoundref="lpi__grb_8c" startline="4047" endline="4056">SCIPlpiClearState</referencedby>
        <referencedby refid="lpi__grb_8c_1ae522c0e79b2f2c7d185e6b6cafec1a3d" compoundref="lpi__grb_8c" startline="1110" endline="1182">SCIPlpiCreate</referencedby>
        <referencedby refid="lpi__grb_8c_1af651ff93b2be704cacb27c13b24ab311" compoundref="lpi__grb_8c" startline="1335" endline="1370">SCIPlpiDelCols</referencedby>
        <referencedby refid="lpi__grb_8c_1ac93976edb5a40906de3c2163b2fafec0" compoundref="lpi__grb_8c" startline="1373" endline="1406">SCIPlpiDelColset</referencedby>
        <referencedby refid="lpi__grb_8c_1a95a88cc92b9c3061762849aeb2edc9ff" compoundref="lpi__grb_8c" startline="1444" endline="1478">SCIPlpiDelRows</referencedby>
        <referencedby refid="lpi__grb_8c_1af7385b74de163f5ae25b77e99c7bdc1a" compoundref="lpi__grb_8c" startline="1481" endline="1527">SCIPlpiDelRowset</referencedby>
        <referencedby refid="lpi__grb_8c_1a6dfadd74b4f72eea58d0946ec9ea6f60" compoundref="lpi__grb_8c" startline="1185" endline="1214">SCIPlpiFree</referencedby>
        <referencedby refid="lpi__grb_8c_1a258aa72f3b645b140c543f0fc7f3f37a" compoundref="lpi__grb_8c" startline="3319" endline="3406">SCIPlpiGetBase</referencedby>
        <referencedby refid="lpi__grb_8c_1ae40a43f062d28623d57653ddb4719fca" compoundref="lpi__grb_8c" startline="3488" endline="3555">SCIPlpiGetBasisInd</referencedby>
        <referencedby refid="lpi__grb_8c_1a015f424e442e74e4526ca62bdab54de1" compoundref="lpi__grb_8c" startline="3838" endline="3908">SCIPlpiGetBInvACol</referencedby>
        <referencedby refid="lpi__grb_8c_1aa516aed02ad9b303b0d51eb0c7a66f5e" compoundref="lpi__grb_8c" startline="3755" endline="3828">SCIPlpiGetBInvARow</referencedby>
        <referencedby refid="lpi__grb_8c_1a9dda3c2147cbb647cfb0b5d198407525" compoundref="lpi__grb_8c" startline="3658" endline="3745">SCIPlpiGetBInvCol</referencedby>
        <referencedby refid="lpi__grb_8c_1a9315c551e92d2caa54d42750f1f048cb" compoundref="lpi__grb_8c" startline="3565" endline="3648">SCIPlpiGetBInvRow</referencedby>
        <referencedby refid="lpi__grb_8c_1a534fd30b49c755aea9b96a0365ee41b0" compoundref="lpi__grb_8c" startline="2043" endline="2074">SCIPlpiGetBounds</referencedby>
        <referencedby refid="lpi__grb_8c_1a7ae0750d24c1e5ad1c719ca4a601b511" compoundref="lpi__grb_8c" startline="2104" endline="2119">SCIPlpiGetCoef</referencedby>
        <referencedby refid="lpi__grb_8c_1a9b718ef73cb5d6544472fb05f2193d37" compoundref="lpi__grb_8c" startline="1859" endline="1910">SCIPlpiGetCols</referencedby>
        <referencedby refid="lpi__grb_8c_1a54ee13d012fb992394c0828166c2fea3" compoundref="lpi__grb_8c" startline="3250" endline="3270">SCIPlpiGetDualfarkas</referencedby>
        <referencedby refid="lpi__grb_8c_1af0f0eab6882439ab9e263d6754c102f3" compoundref="lpi__grb_8c" startline="1824" endline="1837">SCIPlpiGetNCols</referencedby>
        <referencedby refid="lpi__grb_8c_1a4e84473a9742d228d1112cf94e0337e7" compoundref="lpi__grb_8c" startline="1840" endline="1853">SCIPlpiGetNNonz</referencedby>
        <referencedby refid="lpi__grb_8c_1afc4ba497c8fef592df0c5bf7745bf9d8" compoundref="lpi__grb_8c" startline="1808" endline="1821">SCIPlpiGetNRows</referencedby>
        <referencedby refid="lpi__grb_8c_1accf7c7a0ba8f375dbfa9bce872586951" compoundref="lpi__grb_8c" startline="2023" endline="2040">SCIPlpiGetObj</referencedby>
        <referencedby refid="lpi__grb_8c_1aee46b15c0fa3d6d86be4e3bf741f34b7" compoundref="lpi__grb_8c" startline="2001" endline="2020">SCIPlpiGetObjsen</referencedby>
        <referencedby refid="lpi__grb_8c_1a5548fcdd7c4e4a3f6d542cd51da27c82" compoundref="lpi__grb_8c" startline="3135" endline="3148">SCIPlpiGetObjval</referencedby>
        <referencedby refid="lpi__grb_8c_1a2d3ab14c33312daf6f0c51e7eba4ae95" compoundref="lpi__grb_8c" startline="3228" endline="3247">SCIPlpiGetPrimalRay</referencedby>
        <referencedby refid="lpi__grb_8c_1a07259db5fb0599d063fa4973dc3d5d8e" compoundref="lpi__grb_8c" startline="4348" endline="4398">SCIPlpiGetRealpar</referencedby>
        <referencedby refid="lpi__grb_8c_1a83ddb586c09a37eea2e411f1271a32f6" compoundref="lpi__grb_8c" startline="3292" endline="3304">SCIPlpiGetRealSolQuality</referencedby>
        <referencedby refid="lpi__grb_8c_1aa925f44c4f2e5640b79ff87f8166d92e" compoundref="lpi__grb_8c" startline="1916" endline="1968">SCIPlpiGetRows</referencedby>
        <referencedby refid="lpi__grb_8c_1abd761e9fb6a1dd346a08c94a50192d8b" compoundref="lpi__grb_8c" startline="2077" endline="2101">SCIPlpiGetSides</referencedby>
        <referencedby refid="lpi__grb_8c_1ac5a2315c14e99b919626de4170687227" compoundref="lpi__grb_8c" startline="3151" endline="3225">SCIPlpiGetSol</referencedby>
        <referencedby refid="lpi__grb_8c_1a61efb09a57b1279d91619c36cad3d597" compoundref="lpi__grb_8c" startline="2802" endline="2871">SCIPlpiGetSolFeasibility</referencedby>
        <referencedby refid="lpi__grb_8c_1afe1bc961d0f91cad7222870724175e21" compoundref="lpi__grb_8c" startline="3923" endline="3979">SCIPlpiGetState</referencedby>
        <referencedby refid="lpi__grb_8c_1ac6738fca43ff0cbb9027560f18bd764c" compoundref="lpi__grb_8c" startline="2975" endline="2989">SCIPlpiHasDualRay</referencedby>
        <referencedby refid="lpi__grb_8c_1a8457b3a26f7595f3390f7b34ab443fd4" compoundref="lpi__grb_8c" startline="3025" endline="3041">SCIPlpiIsDualFeasible</referencedby>
        <referencedby refid="lpi__grb_8c_1ae2cd5f0afa5f5940c9d7bab6f04b184e" compoundref="lpi__grb_8c" startline="2992" endline="3008">SCIPlpiIsDualUnbounded</referencedby>
        <referencedby refid="lpi__grb_8c_1a824080a74642700e0919806405d4dd69" compoundref="lpi__grb_8c" startline="2940" endline="2956">SCIPlpiIsPrimalFeasible</referencedby>
        <referencedby refid="lpi__grb_8c_1ae23bc1c98c8547a0ba03682d100365dd" compoundref="lpi__grb_8c" startline="1229" endline="1304">SCIPlpiLoadColLP</referencedby>
        <referencedby refid="lpi__grb_8c_1a83b58a451300ba484bb9314b35edc63f" compoundref="lpi__grb_8c" startline="4490" endline="4503">SCIPlpiReadLP</referencedby>
        <referencedby refid="lpi__grb_8c_1a29c773d7e7763517c0952b9eee9ed7ec" compoundref="lpi__grb_8c" startline="4084" endline="4108">SCIPlpiReadState</referencedby>
        <referencedby refid="lpi__grb_8c_1a598ccc37a344e88c584b37691f162432" compoundref="lpi__grb_8c" startline="1733" endline="1793">SCIPlpiScaleCol</referencedby>
        <referencedby refid="lpi__grb_8c_1af94ca6a608b8e0be96158d78270b2715" compoundref="lpi__grb_8c" startline="1676" endline="1728">SCIPlpiScaleRow</referencedby>
        <referencedby refid="lpi__grb_8c_1a7d9cb745987d79fb87f60739a423c833" compoundref="lpi__grb_8c" startline="3409" endline="3484">SCIPlpiSetBase</referencedby>
        <referencedby refid="lpi__grb_8c_1a468d983f0e77aa23e9563d4c1c1e3db8" compoundref="lpi__grb_8c" startline="4401" endline="4446">SCIPlpiSetRealpar</referencedby>
        <referencedby refid="lpi__grb_8c_1a74e8e33e89ab5d8d4b490fe3c4a88c98" compoundref="lpi__grb_8c" startline="3984" endline="4044">SCIPlpiSetState</referencedby>
        <referencedby refid="lpi__grb_8c_1aaed3d89975ea9d3a6a79f03c1361d9b5" compoundref="lpi__grb_8c" startline="2352" endline="2463">SCIPlpiSolveBarrier</referencedby>
        <referencedby refid="lpi__grb_8c_1ad87b0da429ef0a5ef34ccdd01cc2309d" compoundref="lpi__grb_8c" startline="2249" endline="2349">SCIPlpiSolveDual</referencedby>
        <referencedby refid="lpi__grb_8c_1adff9cd01f05724d2e00808ebd09c8e93" compoundref="lpi__grb_8c" startline="2137" endline="2243">SCIPlpiSolvePrimal</referencedby>
        <referencedby refid="lpi__grb_8c_1a311a14142841041e24d522b281124f57" compoundref="lpi__grb_8c" startline="4506" endline="4519">SCIPlpiWriteLP</referencedby>
        <referencedby refid="lpi__grb_8c_1a6b360b8eb706948179cc3b46fa4df372" compoundref="lpi__grb_8c" startline="4111" endline="4139">SCIPlpiWriteState</referencedby>
      </memberdef>
      <memberdef kind="define" id="lpi__grb_8c_1af2e7d05d2ba0870e8419b9ce11a70456" prot="public" static="no">
        <name>SVECTOR</name>
        <initializer>GRBsvec</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="72" column="9" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="72" bodyend="-1"/>
        <referencedby refid="lpi__grb_8c_1a015f424e442e74e4526ca62bdab54de1" compoundref="lpi__grb_8c" startline="3838" endline="3908">SCIPlpiGetBInvACol</referencedby>
        <referencedby refid="lpi__grb_8c_1aa516aed02ad9b303b0d51eb0c7a66f5e" compoundref="lpi__grb_8c" startline="3755" endline="3828">SCIPlpiGetBInvARow</referencedby>
        <referencedby refid="lpi__grb_8c_1a9dda3c2147cbb647cfb0b5d198407525" compoundref="lpi__grb_8c" startline="3658" endline="3745">SCIPlpiGetBInvCol</referencedby>
        <referencedby refid="lpi__grb_8c_1a9315c551e92d2caa54d42750f1f048cb" compoundref="lpi__grb_8c" startline="3565" endline="3648">SCIPlpiGetBInvRow</referencedby>
      </memberdef>
      <memberdef kind="define" id="lpi__grb_8c_1ac83a71f7ce20ef826c2fe19ded699f4e" prot="public" static="no">
        <name>GRB_METHOD_DUAL</name>
        <initializer>GRB_LPMETHOD_DUAL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="76" column="9" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="76" bodyend="-1"/>
        <referencedby refid="lpi__grb_8c_1a61efb09a57b1279d91619c36cad3d597" compoundref="lpi__grb_8c" startline="2802" endline="2871">SCIPlpiGetSolFeasibility</referencedby>
        <referencedby refid="lpi__grb_8c_1ac6738fca43ff0cbb9027560f18bd764c" compoundref="lpi__grb_8c" startline="2975" endline="2989">SCIPlpiHasDualRay</referencedby>
        <referencedby refid="lpi__grb_8c_1a8457b3a26f7595f3390f7b34ab443fd4" compoundref="lpi__grb_8c" startline="3025" endline="3041">SCIPlpiIsDualFeasible</referencedby>
        <referencedby refid="lpi__grb_8c_1ae2cd5f0afa5f5940c9d7bab6f04b184e" compoundref="lpi__grb_8c" startline="2992" endline="3008">SCIPlpiIsDualUnbounded</referencedby>
        <referencedby refid="lpi__grb_8c_1ad87b0da429ef0a5ef34ccdd01cc2309d" compoundref="lpi__grb_8c" startline="2249" endline="2349">SCIPlpiSolveDual</referencedby>
      </memberdef>
      <memberdef kind="define" id="lpi__grb_8c_1aee06842200f9ea6a52cd072655bde971" prot="public" static="no">
        <name>GRB_METHOD_PRIMAL</name>
        <initializer>GRB_LPMETHOD_PRIMAL</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="77" column="9" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="77" bodyend="-1"/>
        <referencedby refid="lpi__grb_8c_1a61efb09a57b1279d91619c36cad3d597" compoundref="lpi__grb_8c" startline="2802" endline="2871">SCIPlpiGetSolFeasibility</referencedby>
        <referencedby refid="lpi__grb_8c_1a824080a74642700e0919806405d4dd69" compoundref="lpi__grb_8c" startline="2940" endline="2956">SCIPlpiIsPrimalFeasible</referencedby>
        <referencedby refid="lpi__grb_8c_1adff9cd01f05724d2e00808ebd09c8e93" compoundref="lpi__grb_8c" startline="2137" endline="2243">SCIPlpiSolvePrimal</referencedby>
      </memberdef>
      <memberdef kind="define" id="lpi__grb_8c_1a5397bab46d83535262cfd4f82ffcaf3e" prot="public" static="no">
        <name>GRB_INT_PAR_METHOD</name>
        <initializer>GRB_INT_PAR_LPMETHOD</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="78" column="9" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="78" bodyend="-1"/>
        <referencedby refid="lpi__grb_8c_1a61efb09a57b1279d91619c36cad3d597" compoundref="lpi__grb_8c" startline="2802" endline="2871">SCIPlpiGetSolFeasibility</referencedby>
        <referencedby refid="lpi__grb_8c_1ac6738fca43ff0cbb9027560f18bd764c" compoundref="lpi__grb_8c" startline="2975" endline="2989">SCIPlpiHasDualRay</referencedby>
        <referencedby refid="lpi__grb_8c_1a8457b3a26f7595f3390f7b34ab443fd4" compoundref="lpi__grb_8c" startline="3025" endline="3041">SCIPlpiIsDualFeasible</referencedby>
        <referencedby refid="lpi__grb_8c_1ae2cd5f0afa5f5940c9d7bab6f04b184e" compoundref="lpi__grb_8c" startline="2992" endline="3008">SCIPlpiIsDualUnbounded</referencedby>
        <referencedby refid="lpi__grb_8c_1a824080a74642700e0919806405d4dd69" compoundref="lpi__grb_8c" startline="2940" endline="2956">SCIPlpiIsPrimalFeasible</referencedby>
        <referencedby refid="lpi__grb_8c_1aaed3d89975ea9d3a6a79f03c1361d9b5" compoundref="lpi__grb_8c" startline="2352" endline="2463">SCIPlpiSolveBarrier</referencedby>
        <referencedby refid="lpi__grb_8c_1ad87b0da429ef0a5ef34ccdd01cc2309d" compoundref="lpi__grb_8c" startline="2249" endline="2349">SCIPlpiSolveDual</referencedby>
        <referencedby refid="lpi__grb_8c_1adff9cd01f05724d2e00808ebd09c8e93" compoundref="lpi__grb_8c" startline="2137" endline="2243">SCIPlpiSolvePrimal</referencedby>
      </memberdef>
      <memberdef kind="define" id="lpi__grb_8c_1a61a8761942551e1cc6493516ce110ada" prot="public" static="no">
        <name>SCIP_SINGLEPACKETSIZE</name>
        <initializer>(sizeof(<ref refid="lpi__grb_8c_1ae7d2bc9e47996eea8779811dfab8c2a2" kindref="member">SCIP_SINGLEPACKET</ref>)*8)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>each entry needs one bit of information </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="82" column="9" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="82" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lpi__grb_8c_1a95bb8b60ad68b9a3682d5a20e14c63a2" prot="public" static="no">
        <name>SCIP_DUALPACKETSIZE</name>
        <initializer>(sizeof(<ref refid="lpi__grb_8c_1afd2fb34af6687b0159dfb63042899d4e" kindref="member">SCIP_DUALPACKET</ref>)*4)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>each entry needs two bits of information </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="84" column="9" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="84" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lpi__grb_8c_1a3e80b2ad8cd656992a2f9c981adc8ad5" prot="public" static="no">
        <name>COLS_PER_PACKET</name>
        <initializer><ref refid="lpi__grb_8c_1a95bb8b60ad68b9a3682d5a20e14c63a2" kindref="member">SCIP_DUALPACKETSIZE</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="87" column="9" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="87" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lpi__grb_8c_1ae3086d289ba34ee9eb88f8419a4f8e14" prot="public" static="no">
        <name>ROWS_PER_PACKET</name>
        <initializer><ref refid="lpi__grb_8c_1a95bb8b60ad68b9a3682d5a20e14c63a2" kindref="member">SCIP_DUALPACKETSIZE</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="89" column="9" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lpi__grb_8c_1af04e284c919a738abab06fecab7c74db" prot="public" static="no">
        <name>GRB_REFACTORMAXITERS</name>
        <initializer>50          /* maximal number of iterations allowed for producing a refactorization of the basis */</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="95" column="9" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="95" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lpi__grb_8c_1a91bbe58fc774297c149f7e08a974de11" prot="public" static="no">
        <name>NUMINTPARAM</name>
        <initializer>4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="99" column="9" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="99" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="lpi__grb_8c_1ac2b1b998d4ad2ba90b97c858783f1afc" prot="public" static="no">
        <name>NUMDBLPARAM</name>
        <initializer>6</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="109" column="9" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="109" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="lpi__grb_8c_1ae7d2bc9e47996eea8779811dfab8c2a2" prot="public" static="no">
        <type>unsigned int</type>
        <definition>typedef unsigned int SCIP_SINGLEPACKET</definition>
        <argsstring></argsstring>
        <name>SCIP_SINGLEPACKET</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>storing single bits in packed format </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="81" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="81" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="lpi__grb_8c_1afd2fb34af6687b0159dfb63042899d4e" prot="public" static="no">
        <type>unsigned int</type>
        <definition>typedef unsigned int SCIP_DUALPACKET</definition>
        <argsstring></argsstring>
        <name>SCIP_DUALPACKET</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>storing bit pairs in packed format </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="83" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="83" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="lpi__grb_8c_1a70d7f598e377388ae50ff1417e34bd07" prot="public" static="no">
        <type><ref refid="lpi__grb_8c_1afd2fb34af6687b0159dfb63042899d4e" kindref="member">SCIP_DUALPACKET</ref></type>
        <definition>typedef SCIP_DUALPACKET COLPACKET</definition>
        <argsstring></argsstring>
        <name>COLPACKET</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="86" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="86" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="lpi__grb_8c_1a285e06216667783fd0bd0cbcd8b4882a" prot="public" static="no">
        <type><ref refid="lpi__grb_8c_1afd2fb34af6687b0159dfb63042899d4e" kindref="member">SCIP_DUALPACKET</ref></type>
        <definition>typedef SCIP_DUALPACKET ROWPACKET</definition>
        <argsstring></argsstring>
        <name>ROWPACKET</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="88" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="lpi__grb_8c_1a193f92b4f04228b18ef2b2614e7b3e83" prot="public" static="no">
        <type>struct GRBParam</type>
        <definition>typedef struct GRBParam GRBPARAM</definition>
        <argsstring></argsstring>
        <name>GRBPARAM</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="121" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="137" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="var">
      <memberdef kind="variable" id="lpi__grb_8c_1ae2d3db635855b4e400a00e5e4f028362" prot="public" static="yes" mutable="no">
        <type>unsigned char</type>
        <definition>unsigned char warnedbeta</definition>
        <argsstring></argsstring>
        <name>warnedbeta</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="52" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="52" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="lpi__grb_8c_1adc76c37619444bbaef7922e40babea6b" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* intparam[NUMINTPARAM]</definition>
        <argsstring>[NUMINTPARAM]</argsstring>
        <name>intparam</name>
        <initializer>=
{
   GRB_INT_PAR_SCALEFLAG,
   GRB_INT_PAR_PRESOLVE,
   GRB_INT_PAR_SIMPLEXPRICING,
   GRB_INT_PAR_OUTPUTFLAG
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="101" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="101" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="lpi__grb_8c_1ab8e05db7abedb76c491798a071c62ef4" prot="public" static="yes" mutable="no">
        <type>const char *</type>
        <definition>const char* dblparam[NUMDBLPARAM]</definition>
        <argsstring>[NUMDBLPARAM]</argsstring>
        <name>dblparam</name>
        <initializer>=
{
   GRB_DBL_PAR_FEASIBILITYTOL,
   GRB_DBL_PAR_OPTIMALITYTOL,
   GRB_DBL_PAR_CUTOFF,
   GRB_DBL_PAR_TIMELIMIT,
   GRB_DBL_PAR_ITERATIONLIMIT,
   GRB_DBL_PAR_MARKOWITZTOL
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="111" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="lpi__grb_8c_1a887e650ba01fb2986e2bc1d864bd8eb0" prot="public" static="yes" mutable="no">
        <type>const double</type>
        <definition>const double dblparammin[NUMDBLPARAM]</definition>
        <argsstring>[NUMDBLPARAM]</argsstring>
        <name>dblparammin</name>
        <initializer>=
{
   +1e-09,               
   +1e-09,               
   -GRB_INFINITY,        
   0,                    
   0,                    
   1e-04                 
}</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="121" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="121" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="lpi__grb_8c_1a2926b872cc9c4c3102a398f2f27b84ff" prot="public" static="yes" mutable="no">
        <type>GRBenv *</type>
        <definition>GRBenv* grbenv</definition>
        <argsstring></argsstring>
        <name>grbenv</name>
        <initializer>= <ref refid="lpi__spx2_8cpp_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref></initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Gurobi environment (only needed for initialization) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="176" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="176" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="lpi__grb_8c_1a494518ef9c3005634024334bcaab458f" prot="public" static="yes" mutable="no">
        <type>int</type>
        <definition>int numlp</definition>
        <argsstring></argsstring>
        <name>numlp</name>
        <initializer>= 0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>number of open LP objects </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="177" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="177" bodyend="-1"/>
      </memberdef>
      <memberdef kind="variable" id="lpi__grb_8c_1a38b1103c4c81ea1c1008237ac7041091" prot="public" static="yes" mutable="no">
        <type>char</type>
        <definition>char grbname[100]</definition>
        <argsstring>[100]</argsstring>
        <name>grbname</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="1060" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="1060" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="func">
      <memberdef kind="function" id="lpi__grb_8c_1ab252279fb34ec3e77176aa2c18e7ff0d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>static SCIP_RETCODE ensureSidechgMem</definition>
        <argsstring>(SCIP_LPI *lpi, int num)</argsstring>
        <name>ensureSidechgMem</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>num</declname>
          <briefdescription><para>minimal number of entries in array </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>resizes senarray to have at least num entries </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="187" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="187" bodyend="206"/>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1afe51312aa6bc2419637e6eabc53875ca" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>static SCIP_RETCODE ensureValMem</definition>
        <argsstring>(SCIP_LPI *lpi, int num)</argsstring>
        <name>ensureValMem</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>num</declname>
          <briefdescription><para>minimal number of entries in array </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>resizes valarray and indarray to have at least num entries </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="210" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="210" bodyend="229"/>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1a2f7f47619afade96a5a8d57d275d2021" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>static SCIP_RETCODE ensureCstatMem</definition>
        <argsstring>(SCIP_LPI *lpi, int num)</argsstring>
        <name>ensureCstatMem</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>num</declname>
          <briefdescription><para>minimal number of entries in array </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>resizes cstat array to have at least num entries </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="233" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="233" bodyend="251"/>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1a970862781c7f83bbc9b53121ab22a221" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>static SCIP_RETCODE ensureRstatMem</definition>
        <argsstring>(SCIP_LPI *lpi, int num)</argsstring>
        <name>ensureRstatMem</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>num</declname>
          <briefdescription><para>minimal number of entries in array </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>resizes rstat array to have at least num entries </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="255" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="255" bodyend="273"/>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1a09d0b4a07924d646b360dd4f2f6c9c95" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>static SCIP_RETCODE getBase</definition>
        <argsstring>(SCIP_LPI *lpi, SCIP_Bool *success)</argsstring>
        <name>getBase</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>success</declname>
          <briefdescription><para>whether basis information has successfully been obtained </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>stores current basis in internal arrays of LPI data structure </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="277" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="277" bodyend="331"/>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1a014487f25a5fe4f81b4b834eb4d05d18" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>static SCIP_RETCODE setBase</definition>
        <argsstring>(SCIP_LPI *lpi)</argsstring>
        <name>setBase</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>loads basis stored in internal arrays of LPI data structure into Gurobi </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="335" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="335" bodyend="357"/>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1a9fa4c5e7a391ec3383b136babdba11a8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int colpacketNum</definition>
        <argsstring>(int ncols)</argsstring>
        <name>colpacketNum</name>
        <param>
          <type>int</type>
          <declname>ncols</declname>
          <briefdescription><para>number of columns to store </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the number of packets needed to store column packet information </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="368" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="368" bodyend="373"/>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1a0f9024e35224ac7f278cab509e6366b8" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>static int rowpacketNum</definition>
        <argsstring>(int nrows)</argsstring>
        <name>rowpacketNum</name>
        <param>
          <type>int</type>
          <declname>nrows</declname>
          <briefdescription><para>number of rows to store </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>returns the number of packets needed to store row packet information </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="377" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="377" bodyend="382"/>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1a7980660d6c85d7ee4ebdbfa90f95f5b1" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void SCIPencodeDualBitNeg</definition>
        <argsstring>(const int *inp, SCIP_DUALPACKET *out, int count)</argsstring>
        <name>SCIPencodeDualBitNeg</name>
        <param>
          <type>const int *</type>
          <declname>inp</declname>
          <briefdescription><para>unpacked input vector </para></briefdescription>
        </param>
        <param>
          <type><ref refid="lpi__grb_8c_1afd2fb34af6687b0159dfb63042899d4e" kindref="member">SCIP_DUALPACKET</ref> *</type>
          <declname>out</declname>
          <briefdescription><para>buffer to store the packed vector </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
          <briefdescription><para>number of elements </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>encode a negated dual bit vector into packed format </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="389" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="389" bodyend="456"/>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1a000ed9e29b538dbd0da269f53c4dc097" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void SCIPdecodeDualBitNeg</definition>
        <argsstring>(const SCIP_DUALPACKET *inp, int *out, int count)</argsstring>
        <name>SCIPdecodeDualBitNeg</name>
        <param>
          <type>const <ref refid="lpi__grb_8c_1afd2fb34af6687b0159dfb63042899d4e" kindref="member">SCIP_DUALPACKET</ref> *</type>
          <declname>inp</declname>
          <briefdescription><para>packed input vector </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>out</declname>
          <briefdescription><para>buffer to store unpacked vector </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>count</declname>
          <briefdescription><para>number of elements </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>decode a packed dual bit vector into negated unpacked format </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="460" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="460" bodyend="532"/>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1a057e7e59ac1204b12a2ab2114680f4e0" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void lpistatePack</definition>
        <argsstring>(SCIP_LPISTATE *lpistate, const int *cstat, const int *rstat)</argsstring>
        <name>lpistatePack</name>
        <param>
          <type><ref refid="type__lpi_8h_1a90d877c948164ab5e3beb0f3e1070693" kindref="member">SCIP_LPISTATE</ref> *</type>
          <declname>lpistate</declname>
          <briefdescription><para>pointer to LPi state data </para></briefdescription>
        </param>
        <param>
          <type>const int *</type>
          <declname>cstat</declname>
          <briefdescription><para>basis status of columns in unpacked format </para></briefdescription>
        </param>
        <param>
          <type>const int *</type>
          <declname>rstat</declname>
          <briefdescription><para>basis status of rows in unpacked format </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>store row and column basis status in a packed LPi state object </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="536" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="536" bodyend="548"/>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1a0ba848d541b86f80823bbab7729881ea" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void lpistateUnpack</definition>
        <argsstring>(const SCIP_LPISTATE *lpistate, int *cstat, int *rstat)</argsstring>
        <name>lpistateUnpack</name>
        <param>
          <type>const <ref refid="type__lpi_8h_1a90d877c948164ab5e3beb0f3e1070693" kindref="member">SCIP_LPISTATE</ref> *</type>
          <declname>lpistate</declname>
          <briefdescription><para>pointer to LPi state data </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>cstat</declname>
          <briefdescription><para>buffer for storing basis status of columns in unpacked format </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>rstat</declname>
          <briefdescription><para>buffer for storing basis status of rows in unpacked format </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>unpacks row and column basis status from a packed LPi state object </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="552" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="552" bodyend="564"/>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1ade3a51ecce2b5631f48dbe1e7d12af0d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>static SCIP_RETCODE lpistateCreate</definition>
        <argsstring>(SCIP_LPISTATE **lpistate, BMS_BLKMEM *blkmem, int ncols, int nrows)</argsstring>
        <name>lpistateCreate</name>
        <param>
          <type><ref refid="type__lpi_8h_1a90d877c948164ab5e3beb0f3e1070693" kindref="member">SCIP_LPISTATE</ref> **</type>
          <declname>lpistate</declname>
          <briefdescription><para>pointer to LPi state </para></briefdescription>
        </param>
        <param>
          <type>BMS_BLKMEM *</type>
          <declname>blkmem</declname>
          <briefdescription><para>block memory </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>ncols</declname>
          <briefdescription><para>number of columns to store </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>nrows</declname>
          <briefdescription><para>number of rows to store </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>creates LPi state information object </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="568" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="568" bodyend="585"/>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1a616652bd99fcec918d58e220bf6f9b50" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void lpistateFree</definition>
        <argsstring>(SCIP_LPISTATE **lpistate, BMS_BLKMEM *blkmem)</argsstring>
        <name>lpistateFree</name>
        <param>
          <type><ref refid="type__lpi_8h_1a90d877c948164ab5e3beb0f3e1070693" kindref="member">SCIP_LPISTATE</ref> **</type>
          <declname>lpistate</declname>
          <briefdescription><para>pointer to LPi state information (like basis information) </para></briefdescription>
        </param>
        <param>
          <type>BMS_BLKMEM *</type>
          <declname>blkmem</declname>
          <briefdescription><para>block memory </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>frees LPi state information </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="589" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="589" bodyend="601"/>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1abecfc7ade768053ec9cc9cf2fda73014" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>static SCIP_RETCODE getParameterValues</definition>
        <argsstring>(SCIP_LPI *lpi, GRBPARAM *grbparam)</argsstring>
        <name>getParameterValues</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <param>
          <type><ref refid="lpi__grb_8c_1a193f92b4f04228b18ef2b2614e7b3e83" kindref="member">GRBPARAM</ref> *</type>
          <declname>grbparam</declname>
          <briefdescription><para>Gurobi parameters </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>gets all Gurobi parameters used in LPI </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="611" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="611" bodyend="634"/>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1ae58fb9932cc265f8a47ba7e84ae6610d" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>static SCIP_RETCODE checkParameterValues</definition>
        <argsstring>(SCIP_LPI *lpi)</argsstring>
        <name>checkParameterValues</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>in debug mode, checks validity of Gurobi parameters </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="638" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="638" bodyend="654"/>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1ab164b0a733b0fb21332d3a1fc0690857" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>static SCIP_RETCODE setParameterValues</definition>
        <argsstring>(SCIP_LPI *lpi, GRBPARAM *grbparam)</argsstring>
        <name>setParameterValues</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <param>
          <type><ref refid="lpi__grb_8c_1a193f92b4f04228b18ef2b2614e7b3e83" kindref="member">GRBPARAM</ref> *</type>
          <declname>grbparam</declname>
          <briefdescription><para>Gurobi parameters </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sets all Gurobi parameters used in LPI </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="658" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="658" bodyend="695"/>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1a2557a4b59e3e3b8c41f40d86f8c0e182" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void copyParameterValues</definition>
        <argsstring>(GRBPARAM *dest, const GRBPARAM *source)</argsstring>
        <name>copyParameterValues</name>
        <param>
          <type><ref refid="lpi__grb_8c_1a193f92b4f04228b18ef2b2614e7b3e83" kindref="member">GRBPARAM</ref> *</type>
          <declname>dest</declname>
          <briefdescription><para>destination Gurobi parameters </para></briefdescription>
        </param>
        <param>
          <type>const <ref refid="lpi__grb_8c_1a193f92b4f04228b18ef2b2614e7b3e83" kindref="member">GRBPARAM</ref> *</type>
          <declname>source</declname>
          <briefdescription><para>original Gurobi parameters </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>copies Gurobi parameters from source to dest </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="699" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="699" bodyend="710"/>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1a3b456a737a4b8d267b3293abc745db99" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>static SCIP_RETCODE getIntParam</definition>
        <argsstring>(SCIP_LPI *lpi, const char *param, int *p)</argsstring>
        <name>getIntParam</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <param>
          <type>const char *</type>
          <declname>param</declname>
          <briefdescription><para>parameter name </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>p</declname>
          <briefdescription><para>value of parameter </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>gets a single integer parameter value </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="714" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="714" bodyend="735"/>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1ade8b37e87b7cc3ca94320d5a73c7361a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>static SCIP_RETCODE setIntParam</definition>
        <argsstring>(SCIP_LPI *lpi, const char *param, int parval)</argsstring>
        <name>setIntParam</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <param>
          <type>const char *</type>
          <declname>param</declname>
          <briefdescription><para>parameter name </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>parval</declname>
          <briefdescription><para>value of parameter </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sets a single integer parameter value </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="739" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="739" bodyend="760"/>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1a09b5564290deec9e37933a2237b636db" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>static SCIP_RETCODE getDblParam</definition>
        <argsstring>(SCIP_LPI *lpi, const char *param, double *p)</argsstring>
        <name>getDblParam</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
        </param>
        <param>
          <type>const char *</type>
          <declname>param</declname>
        </param>
        <param>
          <type>double *</type>
          <declname>p</declname>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>gets a single double parameter value </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="764" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="764" bodyend="781"/>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1aea3c46360d94e44d47614f7f1dc83189" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>static SCIP_RETCODE setDblParam</definition>
        <argsstring>(SCIP_LPI *lpi, const char *param, double parval)</argsstring>
        <name>setDblParam</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <param>
          <type>const char *</type>
          <declname>param</declname>
          <briefdescription><para>parameter name </para></briefdescription>
        </param>
        <param>
          <type>double</type>
          <declname>parval</declname>
          <briefdescription><para>value of parameter </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>sets a single double parameter value </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="785" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="785" bodyend="806"/>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1aec1e720202f3965f1f7e56cb2c20e7ee" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>static void invalidateSolution</definition>
        <argsstring>(SCIP_LPI *lpi)</argsstring>
        <name>invalidateSolution</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>marks the current LP to be unsolved </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="810" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="810" bodyend="816"/>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1a5cebb0cd267849170c2c89f5324b5157" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>static SCIP_RETCODE convertSides</definition>
        <argsstring>(SCIP_LPI *lpi, int nrows, const SCIP_Real *lhs, const SCIP_Real *rhs, int *rngcount)</argsstring>
        <name>convertSides</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>nrows</declname>
          <briefdescription><para>number of rows </para></briefdescription>
        </param>
        <param>
          <type>const <ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>lhs</declname>
          <briefdescription><para>left hand side vector </para></briefdescription>
        </param>
        <param>
          <type>const <ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>rhs</declname>
          <briefdescription><para>right hand side vector </para></briefdescription>
        </param>
        <param>
          <type>int *</type>
          <declname>rngcount</declname>
          <briefdescription><para>number of ranged rows found </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>converts SCIP&apos;s lhs/rhs pairs into Gurobi&apos;s sen/rhs </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="820" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="820" bodyend="869"/>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1a0b8591fca68dcc5351bdb609984136bb" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>static SCIP_RETCODE reconvertBothSides</definition>
        <argsstring>(SCIP_LPI *lpi, int nrows, SCIP_Real *lhs, SCIP_Real *rhs)</argsstring>
        <name>reconvertBothSides</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>nrows</declname>
          <briefdescription><para>number of rows </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>lhs</declname>
          <briefdescription><para>buffer to store the left hand side vector </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>rhs</declname>
          <briefdescription><para>buffer to store the right hand side vector </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>converts Gurobi&apos;s sen/rhs pairs into SCIP&apos;s lhs/rhs pairs </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="873" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="873" bodyend="914"/>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1a4c261d94c718edf306ca8fe04cfe3f7a" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>static SCIP_RETCODE reconvertLhs</definition>
        <argsstring>(SCIP_LPI *lpi, int nrows, SCIP_Real *lhs)</argsstring>
        <name>reconvertLhs</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>nrows</declname>
          <briefdescription><para>number of rows </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>lhs</declname>
          <briefdescription><para>buffer to store the left hand side vector </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>converts Gurobi&apos;s sen/rhs pairs into SCIP&apos;s lhs/rhs pairs, only storing the left hand side </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="918" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="918" bodyend="953"/>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1aa4f3fced5376089da2a8fa7390d34a1c" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>static SCIP_RETCODE reconvertRhs</definition>
        <argsstring>(SCIP_LPI *lpi, int nrows, SCIP_Real *rhs)</argsstring>
        <name>reconvertRhs</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>nrows</declname>
          <briefdescription><para>number of rows </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>rhs</declname>
          <briefdescription><para>buffer to store the right hand side vector </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>converts Gurobi&apos;s sen/rhs pairs into SCIP&apos;s lhs/rhs pairs, only storing the right hand side </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="957" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="957" bodyend="992"/>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1a7dcaeecae94e2ed99f3b5bedefe9b907" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>static SCIP_RETCODE reconvertSides</definition>
        <argsstring>(SCIP_LPI *lpi, int nrows, SCIP_Real *lhs, SCIP_Real *rhs)</argsstring>
        <name>reconvertSides</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <param>
          <type>int</type>
          <declname>nrows</declname>
          <briefdescription><para>number of rows </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>lhs</declname>
          <briefdescription><para>buffer to store the left hand side vector, or NULL </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> *</type>
          <declname>rhs</declname>
          <briefdescription><para>buffer to store the right hand side vector, or NULL </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>converts Gurobi&apos;s sen/rhs pairs into SCIP&apos;s lhs/rhs pairs </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="996" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="996" bodyend="1016"/>
      </memberdef>
      <memberdef kind="function" id="lpi__grb_8c_1a7581b9b2b1f29745e14e3248c5e3e037" prot="public" static="yes" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>static SCIP_RETCODE restoreLPData</definition>
        <argsstring>(SCIP_LPI *lpi)</argsstring>
        <name>restoreLPData</name>
        <param>
          <type><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref> *</type>
          <declname>lpi</declname>
          <briefdescription><para>LP interface structure </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>after restoring old LP data, need to resolve the LP to be able to retrieve correct information </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" line="1020" column="1" bodyfile="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c" bodystart="1020" bodyend="1047"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>LP interface for Gurobi. </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Marc Pfetsch</para></simplesect>
This LPI is beta!</para><para>Several things are missing in the Gurobi interface that make this LPI relatively useless:</para><para><itemizedlist>
<listitem><para>Gurobi currently does not allow to access the basis inverse.</para></listitem><listitem><para>Strong branching is supported, but not documented.</para></listitem><listitem><para>The support of ranged rows is complicated for the user: one has to keep track of the additional variables, which are added to generate a ranged row. Hence, one would need to adapt the count of variables and retrieve the information of ranged rows to get the correct answers.</para></listitem></itemizedlist>
</para><para>While the first two issues only influence the performance, the third is critical for some problems, which contain ranged rows.</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>program<sp/>and<sp/>library<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SCIP<sp/>---<sp/>Solving<sp/>Constraint<sp/>Integer<sp/>Programs<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>Copyright<sp/>(C)<sp/>2002-2015<sp/>Konrad-Zuse-Zentrum<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fuer<sp/>Informationstechnik<sp/>Berlin<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>SCIP<sp/>is<sp/>distributed<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>ZIB<sp/>Academic<sp/>License.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>ZIB<sp/>Academic<sp/>License<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>along<sp/>with<sp/>SCIP;<sp/>see<sp/>the<sp/>file<sp/>COPYING.<sp/>If<sp/>not<sp/>email<sp/>to<sp/>scip@zib.de.<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="16"><highlight class="comment">/**@file<sp/><sp/><sp/>lpi_grb.c</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>@ingroup<sp/>LPIS</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>LP<sp/>interface<sp/>for<sp/>Gurobi</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>@author<sp/>Marc<sp/>Pfetsch</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*<sp/>This<sp/>LPI<sp/>is<sp/>beta!</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>Several<sp/>things<sp/>are<sp/>missing<sp/>in<sp/>the<sp/>Gurobi<sp/>interface<sp/>that<sp/>make<sp/>this<sp/>LPI<sp/>relatively<sp/>useless:</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>-<sp/>Gurobi<sp/>currently<sp/>does<sp/>not<sp/>allow<sp/>to<sp/>access<sp/>the<sp/>basis<sp/>inverse.</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>-<sp/>Strong<sp/>branching<sp/>is<sp/>supported,<sp/>but<sp/>not<sp/>documented.</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>-<sp/>The<sp/>support<sp/>of<sp/>ranged<sp/>rows<sp/>is<sp/>complicated<sp/>for<sp/>the<sp/>user:<sp/>one<sp/>has<sp/>to<sp/>keep<sp/>track<sp/>of<sp/>the<sp/>additional</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*<sp/><sp/><sp/>variables,<sp/>which<sp/>are<sp/>added<sp/>to<sp/>generate<sp/>a<sp/>ranged<sp/>row.<sp/>Hence,<sp/>one<sp/>would<sp/>need<sp/>to<sp/>adapt<sp/>the<sp/>count</highlight></codeline>
<codeline lineno="29"><highlight class="comment"><sp/>*<sp/><sp/><sp/>of<sp/>variables<sp/>and<sp/>retrieve<sp/>the<sp/>information<sp/>of<sp/>ranged<sp/>rows<sp/>to<sp/>get<sp/>the<sp/>correct<sp/>answers.</highlight></codeline>
<codeline lineno="30"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="31"><highlight class="comment"><sp/>*<sp/>While<sp/>the<sp/>first<sp/>two<sp/>issues<sp/>only<sp/>influence<sp/>the<sp/>performance,<sp/>the<sp/>third<sp/>is<sp/>critical<sp/>for<sp/>some</highlight></codeline>
<codeline lineno="32"><highlight class="comment"><sp/>*<sp/>problems,<sp/>which<sp/>contain<sp/>ranged<sp/>rows.</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="34"><highlight class="comment"><sp/>*<sp/>@todo<sp/>Check<sp/>whether<sp/>functions<sp/>for<sp/>basis<sp/>inverses<sp/>are<sp/>correct.<sp/>Which<sp/>ones<sp/>are<sp/>the<sp/>right<sp/>ones?</highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/>*<sp/>@todo<sp/>Check<sp/>whether<sp/>solisbasic<sp/>is<sp/>correctly<sp/>used.</highlight></codeline>
<codeline lineno="37"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="38"><highlight class="comment"><sp/>*<sp/>@todo<sp/>Try<sp/>quad-precision<sp/>and<sp/>concurrent<sp/>runs.</highlight></codeline>
<codeline lineno="39"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/>*<sp/>@todo<sp/>Make<sp/>this<sp/>lpi<sp/>thread<sp/>safe.</highlight></codeline>
<codeline lineno="41"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight><highlight class="comment">/*--+----1----+----2----+----3----+----4----+----5----+----6----+----7----+----8----+----9----+----0----+----1----+----2*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight></codeline>
<codeline lineno="45"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;assert.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&lt;string.h&gt;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight></codeline>
<codeline lineno="48"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;gurobi_c.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="lpi_8h" kindref="compound">lpi/lpi.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="pub__message_8h" kindref="compound">scip/pub_message.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51"><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>warnedbeta<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>CHECK_ZERO(messagehdlr,<sp/>x)<sp/>{<sp/>int<sp/>_restat_;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="55"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>if(<sp/>(_restat_<sp/>=<sp/>(x))<sp/>!=<sp/>0<sp/>)<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="56"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>{<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="57"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SCIPmessagePrintWarning((messagehdlr),<sp/>&quot;Gurobi<sp/>error<sp/>%d:<sp/>%s\n&quot;,<sp/>_restat_,<sp/>GRBgeterrormsg(grbenv));<sp/>\</highlight></codeline>
<codeline lineno="58"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>return<sp/>SCIP_LPERROR;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="59"><highlight class="preprocessor"><sp/><sp/><sp/><sp/><sp/><sp/>}<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>\</highlight></codeline>
<codeline lineno="60"><highlight class="preprocessor"><sp/><sp/><sp/>}</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"></highlight><highlight class="preprocessor">#if<sp/>GRB_VERSION_MAJOR<sp/>==<sp/>6<sp/>&amp;&amp;<sp/>GRB_VERSION_MINOR<sp/>==<sp/>0<sp/>&amp;&amp;<sp/>GRB_VERSION_TECHNICAL<sp/>&lt;<sp/>2</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">_GRBsvec</highlight></codeline>
<codeline lineno="64"><highlight class="normal">{</highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/>len;</highlight></codeline>
<codeline lineno="66"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/>*ind;</highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>*val;</highlight></codeline>
<codeline lineno="68"><highlight class="normal">};</highlight></codeline>
<codeline lineno="69"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70"><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>SVECTOR</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="lpi__grb_8c_1af2e7d05d2ba0870e8419b9ce11a70456" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SVECTOR<sp/>GRBsvec</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="74"><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight><highlight class="preprocessor">#if(<sp/>GRB_VERSION_MAJOR<sp/>&lt;<sp/>4<sp/>)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="lpi__grb_8c_1ac83a71f7ce20ef826c2fe19ded699f4e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GRB_METHOD_DUAL<sp/><sp/><sp/><sp/>GRB_LPMETHOD_DUAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77" refid="lpi__grb_8c_1aee06842200f9ea6a52cd072655bde971" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GRB_METHOD_PRIMAL<sp/><sp/>GRB_LPMETHOD_PRIMAL</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="78" refid="lpi__grb_8c_1a5397bab46d83535262cfd4f82ffcaf3e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GRB_INT_PAR_METHOD<sp/>GRB_INT_PAR_LPMETHOD</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="79"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"></highlight></codeline>
<codeline lineno="81" refid="lpi__grb_8c_1ae7d2bc9e47996eea8779811dfab8c2a2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lpi__grb_8c_1ae7d2bc9e47996eea8779811dfab8c2a2" kindref="member">SCIP_SINGLEPACKET</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>storing<sp/>single<sp/>bits<sp/>in<sp/>packed<sp/>format<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82" refid="lpi__grb_8c_1a61a8761942551e1cc6493516ce110ada" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCIP_SINGLEPACKETSIZE<sp/>(sizeof(SCIP_SINGLEPACKET)*8)<sp/></highlight><highlight class="comment">/**&lt;<sp/>each<sp/>entry<sp/>needs<sp/>one<sp/>bit<sp/>of<sp/>information<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="lpi__grb_8c_1afd2fb34af6687b0159dfb63042899d4e" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lpi__grb_8c_1afd2fb34af6687b0159dfb63042899d4e" kindref="member">SCIP_DUALPACKET</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>storing<sp/>bit<sp/>pairs<sp/>in<sp/>packed<sp/>format<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="lpi__grb_8c_1a95bb8b60ad68b9a3682d5a20e14c63a2" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCIP_DUALPACKETSIZE<sp/><sp/><sp/>(sizeof(SCIP_DUALPACKET)*4)<sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>each<sp/>entry<sp/>needs<sp/>two<sp/>bits<sp/>of<sp/>information<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"></highlight></codeline>
<codeline lineno="86" refid="lpi__grb_8c_1a70d7f598e377388ae50ff1417e34bd07" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="lpi__grb_8c_1afd2fb34af6687b0159dfb63042899d4e" kindref="member">SCIP_DUALPACKET</ref><sp/><ref refid="lpi__grb_8c_1a70d7f598e377388ae50ff1417e34bd07" kindref="member">COLPACKET</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>each<sp/>column<sp/>needs<sp/>two<sp/>bits<sp/>of<sp/>information<sp/>(basic/on_lower/on_upper)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="87" refid="lpi__grb_8c_1a3e80b2ad8cd656992a2f9c981adc8ad5" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>COLS_PER_PACKET<sp/>SCIP_DUALPACKETSIZE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="lpi__grb_8c_1a285e06216667783fd0bd0cbcd8b4882a" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/><ref refid="lpi__grb_8c_1afd2fb34af6687b0159dfb63042899d4e" kindref="member">SCIP_DUALPACKET</ref><sp/><ref refid="lpi__grb_8c_1a285e06216667783fd0bd0cbcd8b4882a" kindref="member">ROWPACKET</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>each<sp/>row<sp/>needs<sp/>two<sp/>bit<sp/>of<sp/>information<sp/>(basic/on_lower/on_upper)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="lpi__grb_8c_1ae3086d289ba34ee9eb88f8419a4f8e14" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>ROWS_PER_PACKET<sp/>SCIP_DUALPACKETSIZE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90"><highlight class="normal"></highlight></codeline>
<codeline lineno="91"><highlight class="normal"></highlight></codeline>
<codeline lineno="92"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>At<sp/>several<sp/>places<sp/>we<sp/>need<sp/>to<sp/>guarantee<sp/>to<sp/>have<sp/>a<sp/>factorization<sp/>of<sp/>an<sp/>optimal<sp/>basis<sp/>and<sp/>call<sp/>the<sp/>simplex<sp/>to<sp/>produce</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/>*<sp/>it.<sp/>In<sp/>a<sp/>numerical<sp/>perfect<sp/>world,<sp/>this<sp/>should<sp/>need<sp/>no<sp/>iterations.<sp/>However,<sp/>due<sp/>to<sp/>numerical<sp/>inaccuracies<sp/>after</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/>*<sp/>refactorization,<sp/>it<sp/>might<sp/>be<sp/>necessary<sp/>to<sp/>do<sp/>a<sp/>few<sp/>extra<sp/>pivot<sp/>steps.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95" refid="lpi__grb_8c_1af04e284c919a738abab06fecab7c74db" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>GRB_REFACTORMAXITERS<sp/><sp/><sp/><sp/><sp/>50<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>maximal<sp/>number<sp/>of<sp/>iterations<sp/>allowed<sp/>for<sp/>producing<sp/>a<sp/>refactorization<sp/>of<sp/>the<sp/>basis<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>Gurobi<sp/>parameter<sp/>lists<sp/>which<sp/>can<sp/>be<sp/>changed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99" refid="lpi__grb_8c_1a91bbe58fc774297c149f7e08a974de11" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NUMINTPARAM<sp/>4</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>intparam[<ref refid="lpi__grb_8c_1a91bbe58fc774297c149f7e08a974de11" kindref="member">NUMINTPARAM</ref>]<sp/>=</highlight></codeline>
<codeline lineno="102"><highlight class="normal">{</highlight></codeline>
<codeline lineno="103"><highlight class="normal"><sp/><sp/><sp/>GRB_INT_PAR_SCALEFLAG,</highlight></codeline>
<codeline lineno="104"><highlight class="normal"><sp/><sp/><sp/>GRB_INT_PAR_PRESOLVE,</highlight></codeline>
<codeline lineno="105"><highlight class="normal"><sp/><sp/><sp/>GRB_INT_PAR_SIMPLEXPRICING,</highlight></codeline>
<codeline lineno="106"><highlight class="normal"><sp/><sp/><sp/>GRB_INT_PAR_OUTPUTFLAG</highlight></codeline>
<codeline lineno="107"><highlight class="normal">};</highlight></codeline>
<codeline lineno="108"><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="lpi__grb_8c_1ac2b1b998d4ad2ba90b97c858783f1afc" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>NUMDBLPARAM<sp/>6</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>dblparam[<ref refid="lpi__grb_8c_1ac2b1b998d4ad2ba90b97c858783f1afc" kindref="member">NUMDBLPARAM</ref>]<sp/>=</highlight></codeline>
<codeline lineno="112"><highlight class="normal">{</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/>GRB_DBL_PAR_FEASIBILITYTOL,</highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/>GRB_DBL_PAR_OPTIMALITYTOL,</highlight></codeline>
<codeline lineno="115"><highlight class="normal"><sp/><sp/><sp/>GRB_DBL_PAR_CUTOFF,</highlight></codeline>
<codeline lineno="116"><highlight class="normal"><sp/><sp/><sp/>GRB_DBL_PAR_TIMELIMIT,</highlight></codeline>
<codeline lineno="117"><highlight class="normal"><sp/><sp/><sp/>GRB_DBL_PAR_ITERATIONLIMIT,</highlight></codeline>
<codeline lineno="118"><highlight class="normal"><sp/><sp/><sp/>GRB_DBL_PAR_MARKOWITZTOL</highlight></codeline>
<codeline lineno="119"><highlight class="normal">};</highlight></codeline>
<codeline lineno="120"><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>dblparammin[<ref refid="lpi__grb_8c_1ac2b1b998d4ad2ba90b97c858783f1afc" kindref="member">NUMDBLPARAM</ref>]<sp/>=</highlight></codeline>
<codeline lineno="122"><highlight class="normal">{</highlight></codeline>
<codeline lineno="123"><highlight class="normal"><sp/><sp/><sp/>+1e-09,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>GRB_DBL_PAR_FEASIBILITYTOL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"><sp/><sp/><sp/>+1e-09,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>GRB_DBL_PAR_OPTIMALITYTOL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"><sp/><sp/><sp/>-GRB_INFINITY,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>GRB_DBL_PAR_CUTOFF<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>GRB_DBL_PAR_TIMELIMIT<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>GRB_DBL_PAR_ITERATIONLIMIT<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/>1e-04<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>GRB_DBL_PAR_MARKOWITZTOL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal">};</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="131"><highlight class="comment">/**<sp/>Gurobi<sp/>parameter<sp/>settings<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">GRBParam</highlight></codeline>
<codeline lineno="133"><highlight class="normal">{</highlight></codeline>
<codeline lineno="134"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intparval[<ref refid="lpi__grb_8c_1a91bbe58fc774297c149f7e08a974de11" kindref="member">NUMINTPARAM</ref>];<sp/></highlight><highlight class="comment">/**&lt;<sp/>integer<sp/>parameter<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="135"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dblparval[<ref refid="lpi__grb_8c_1ac2b1b998d4ad2ba90b97c858783f1afc" kindref="member">NUMDBLPARAM</ref>];<sp/></highlight><highlight class="comment">/**&lt;<sp/>double<sp/>parameter<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal">};</highlight></codeline>
<codeline lineno="137" refid="lpi__grb_8c_1a193f92b4f04228b18ef2b2614e7b3e83" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">GRBParam<sp/><ref refid="lpi__grb_8c_1a193f92b4f04228b18ef2b2614e7b3e83" kindref="member">GRBPARAM</ref>;</highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="140"><highlight class="comment">/**<sp/>LP<sp/>interface<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">SCIP_LPi</highlight></codeline>
<codeline lineno="142"><highlight class="normal">{</highlight></codeline>
<codeline lineno="143"><highlight class="normal"><sp/><sp/><sp/>GRBmodel*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grbmodel;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Gurobi<sp/>model<sp/>pointer<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"><sp/><sp/><sp/>GRBenv*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grbenv;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>environment<sp/>corresponding<sp/>to<sp/>model<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solstat;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>solution<sp/>status<sp/>of<sp/>last<sp/>optimization<sp/>call<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="146"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a193f92b4f04228b18ef2b2614e7b3e83" kindref="member">GRBPARAM</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>defparam;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>default<sp/>parameter<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="147"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a193f92b4f04228b18ef2b2614e7b3e83" kindref="member">GRBPARAM</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>curparam;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>current<sp/>parameter<sp/>values<sp/>stored<sp/>in<sp/>Gurobi<sp/>LP<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a193f92b4f04228b18ef2b2614e7b3e83" kindref="member">GRBPARAM</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grbparam;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>current<sp/>parameter<sp/>values<sp/>for<sp/>this<sp/>LP<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>senarray;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>for<sp/>storing<sp/>row<sp/>senses<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="150"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhsarray;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>for<sp/>storing<sp/>rhs<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="151"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valarray;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>for<sp/>storing<sp/>coefficient<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="152"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cstat;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>for<sp/>storing<sp/>column<sp/>basis<sp/>status<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="153"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rstat;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>for<sp/>storing<sp/>row<sp/>basis<sp/>status<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="154"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>indarray;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>for<sp/>storing<sp/>coefficient<sp/>indices<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="155"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>sidechgsize;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>size<sp/>of<sp/>senarray<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="156"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>valsize;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>size<sp/>of<sp/>valarray<sp/>and<sp/>indarray<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cstatsize;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>size<sp/>of<sp/>cstat<sp/>array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rstatsize;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>size<sp/>of<sp/>rstat<sp/>array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="159"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iterations;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>number<sp/>of<sp/>iterations<sp/>used<sp/>in<sp/>the<sp/>last<sp/>solving<sp/>call<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="160"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>solisbasic;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>is<sp/>current<sp/>LP<sp/>solution<sp/>a<sp/>basic<sp/>solution?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="161"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fromscratch;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>should<sp/>each<sp/>solve<sp/>be<sp/>performed<sp/>without<sp/>previous<sp/>basis<sp/>state?<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="162"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a680b3359be1f3e2b0fbcdaa05d219d61" kindref="member">SCIP_PRICING</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>pricing;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP<sp/>pricing<sp/>setting<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="163"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__message_8h_1a7d71113339d14873806c1399442fae8d" kindref="member">SCIP_MESSAGEHDLR</ref>*<sp/><sp/><sp/><sp/><sp/>messagehdlr;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>messagehdlr<sp/>handler<sp/>to<sp/>printing<sp/>messages,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="164"><highlight class="normal">};</highlight></codeline>
<codeline lineno="165"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="166"><highlight class="comment">/**<sp/>LPi<sp/>state<sp/>stores<sp/>basis<sp/>information<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="167"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">SCIP_LPiState</highlight></codeline>
<codeline lineno="168"><highlight class="normal">{</highlight></codeline>
<codeline lineno="169"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ncols;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>number<sp/>of<sp/>LP<sp/>columns<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="170"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nrows;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>number<sp/>of<sp/>LP<sp/>rows<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="171"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__clp_8cpp_1a70d7f598e377388ae50ff1417e34bd07" kindref="member">COLPACKET</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>packcstat;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>column<sp/>basis<sp/>status<sp/>in<sp/>compressed<sp/>form<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="172"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__clp_8cpp_1a285e06216667783fd0bd0cbcd8b4882a" kindref="member">ROWPACKET</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>packrstat;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>row<sp/>basis<sp/>status<sp/>in<sp/>compressed<sp/>form<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="173"><highlight class="normal">};</highlight></codeline>
<codeline lineno="174"><highlight class="normal"></highlight></codeline>
<codeline lineno="175"><highlight class="normal"></highlight></codeline>
<codeline lineno="176"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/>GRBenv*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grbenv<sp/>=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Gurobi<sp/>environment<sp/>(only<sp/>needed<sp/>for<sp/>initialization)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="177"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>numlp<sp/>=<sp/>0;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>number<sp/>of<sp/>open<sp/>LP<sp/>objects<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178"><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight></codeline>
<codeline lineno="180"><highlight class="normal"></highlight></codeline>
<codeline lineno="181"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/>*<sp/>dynamic<sp/>memory<sp/>arrays</highlight></codeline>
<codeline lineno="183"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="184"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="185"><highlight class="comment">/**<sp/>resizes<sp/>senarray<sp/>to<sp/>have<sp/>at<sp/>least<sp/>num<sp/>entries<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="186"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="187"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/>ensureSidechgMem(</highlight></codeline>
<codeline lineno="188"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>minimal<sp/>number<sp/>of<sp/>entries<sp/>in<sp/>array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="190"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="191"><highlight class="normal">{</highlight></codeline>
<codeline lineno="192"><highlight class="normal"><sp/><sp/><sp/>assert(lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="193"><highlight class="normal"></highlight></codeline>
<codeline lineno="194"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>num<sp/>&gt;<sp/>lpi-&gt;sidechgsize<sp/>)</highlight></codeline>
<codeline lineno="195"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="196"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newsize;</highlight></codeline>
<codeline lineno="197"><highlight class="normal"></highlight></codeline>
<codeline lineno="198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>newsize<sp/>=<sp/><ref refid="def_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(2*lpi-&gt;sidechgsize,<sp/>num);</highlight></codeline>
<codeline lineno="199"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="def_8h_1a7695e892dc456d85a3654eb158976921" kindref="member">SCIP_ALLOC</ref>(<sp/>BMSreallocMemoryArray(&amp;lpi-&gt;senarray,<sp/>newsize)<sp/>);</highlight></codeline>
<codeline lineno="200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="def_8h_1a7695e892dc456d85a3654eb158976921" kindref="member">SCIP_ALLOC</ref>(<sp/>BMSreallocMemoryArray(&amp;lpi-&gt;rhsarray,<sp/>newsize)<sp/>);</highlight></codeline>
<codeline lineno="201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lpi-&gt;sidechgsize<sp/>=<sp/>newsize;</highlight></codeline>
<codeline lineno="202"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="203"><highlight class="normal"><sp/><sp/><sp/>assert(num<sp/>&lt;=<sp/>lpi-&gt;sidechgsize);</highlight></codeline>
<codeline lineno="204"><highlight class="normal"></highlight></codeline>
<codeline lineno="205"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="206"><highlight class="normal">}</highlight></codeline>
<codeline lineno="207"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="208"><highlight class="comment">/**<sp/>resizes<sp/>valarray<sp/>and<sp/>indarray<sp/>to<sp/>have<sp/>at<sp/>least<sp/>num<sp/>entries<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/>ensureValMem(</highlight></codeline>
<codeline lineno="211"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>minimal<sp/>number<sp/>of<sp/>entries<sp/>in<sp/>array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="213"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="214"><highlight class="normal">{</highlight></codeline>
<codeline lineno="215"><highlight class="normal"><sp/><sp/><sp/>assert(lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="216"><highlight class="normal"></highlight></codeline>
<codeline lineno="217"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>num<sp/>&gt;<sp/>lpi-&gt;valsize<sp/>)</highlight></codeline>
<codeline lineno="218"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newsize;</highlight></codeline>
<codeline lineno="220"><highlight class="normal"></highlight></codeline>
<codeline lineno="221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>newsize<sp/>=<sp/><ref refid="def_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(2*lpi-&gt;valsize,<sp/>num);</highlight></codeline>
<codeline lineno="222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="def_8h_1a7695e892dc456d85a3654eb158976921" kindref="member">SCIP_ALLOC</ref>(<sp/>BMSreallocMemoryArray(&amp;lpi-&gt;valarray,<sp/>newsize)<sp/>);</highlight></codeline>
<codeline lineno="223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="def_8h_1a7695e892dc456d85a3654eb158976921" kindref="member">SCIP_ALLOC</ref>(<sp/>BMSreallocMemoryArray(&amp;lpi-&gt;indarray,<sp/>newsize)<sp/>);</highlight></codeline>
<codeline lineno="224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lpi-&gt;valsize<sp/>=<sp/>newsize;</highlight></codeline>
<codeline lineno="225"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="226"><highlight class="normal"><sp/><sp/><sp/>assert(num<sp/>&lt;=<sp/>lpi-&gt;valsize);</highlight></codeline>
<codeline lineno="227"><highlight class="normal"></highlight></codeline>
<codeline lineno="228"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="229"><highlight class="normal">}</highlight></codeline>
<codeline lineno="230"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="231"><highlight class="comment">/**<sp/>resizes<sp/>cstat<sp/>array<sp/>to<sp/>have<sp/>at<sp/>least<sp/>num<sp/>entries<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="232"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="233"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/>ensureCstatMem(</highlight></codeline>
<codeline lineno="234"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="235"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>minimal<sp/>number<sp/>of<sp/>entries<sp/>in<sp/>array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="236"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="237"><highlight class="normal">{</highlight></codeline>
<codeline lineno="238"><highlight class="normal"><sp/><sp/><sp/>assert(lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="239"><highlight class="normal"></highlight></codeline>
<codeline lineno="240"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>num<sp/>&gt;<sp/>lpi-&gt;cstatsize<sp/>)</highlight></codeline>
<codeline lineno="241"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newsize;</highlight></codeline>
<codeline lineno="243"><highlight class="normal"></highlight></codeline>
<codeline lineno="244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>newsize<sp/>=<sp/><ref refid="def_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(2*lpi-&gt;cstatsize,<sp/>num);</highlight></codeline>
<codeline lineno="245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="def_8h_1a7695e892dc456d85a3654eb158976921" kindref="member">SCIP_ALLOC</ref>(<sp/>BMSreallocMemoryArray(&amp;lpi-&gt;cstat,<sp/>newsize)<sp/>);</highlight></codeline>
<codeline lineno="246"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lpi-&gt;cstatsize<sp/>=<sp/>newsize;</highlight></codeline>
<codeline lineno="247"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="248"><highlight class="normal"><sp/><sp/><sp/>assert(num<sp/>&lt;=<sp/>lpi-&gt;cstatsize);</highlight></codeline>
<codeline lineno="249"><highlight class="normal"></highlight></codeline>
<codeline lineno="250"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="251"><highlight class="normal">}</highlight></codeline>
<codeline lineno="252"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="253"><highlight class="comment">/**<sp/>resizes<sp/>rstat<sp/>array<sp/>to<sp/>have<sp/>at<sp/>least<sp/>num<sp/>entries<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="254"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="255"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/>ensureRstatMem(</highlight></codeline>
<codeline lineno="256"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="257"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>num<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>minimal<sp/>number<sp/>of<sp/>entries<sp/>in<sp/>array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="258"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="259"><highlight class="normal">{</highlight></codeline>
<codeline lineno="260"><highlight class="normal"><sp/><sp/><sp/>assert(lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="261"><highlight class="normal"></highlight></codeline>
<codeline lineno="262"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>num<sp/>&gt;<sp/>lpi-&gt;rstatsize<sp/>)</highlight></codeline>
<codeline lineno="263"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>newsize;</highlight></codeline>
<codeline lineno="265"><highlight class="normal"></highlight></codeline>
<codeline lineno="266"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>newsize<sp/>=<sp/><ref refid="def_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(2*lpi-&gt;rstatsize,<sp/>num);</highlight></codeline>
<codeline lineno="267"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="def_8h_1a7695e892dc456d85a3654eb158976921" kindref="member">SCIP_ALLOC</ref>(<sp/>BMSreallocMemoryArray(&amp;lpi-&gt;rstat,<sp/>newsize)<sp/>);</highlight></codeline>
<codeline lineno="268"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lpi-&gt;rstatsize<sp/>=<sp/>newsize;</highlight></codeline>
<codeline lineno="269"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="270"><highlight class="normal"><sp/><sp/><sp/>assert(num<sp/>&lt;=<sp/>lpi-&gt;rstatsize);</highlight></codeline>
<codeline lineno="271"><highlight class="normal"></highlight></codeline>
<codeline lineno="272"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="273"><highlight class="normal">}</highlight></codeline>
<codeline lineno="274"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="275"><highlight class="comment">/**<sp/>stores<sp/>current<sp/>basis<sp/>in<sp/>internal<sp/>arrays<sp/>of<sp/>LPI<sp/>data<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="276"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="277"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/>getBase(</highlight></codeline>
<codeline lineno="278"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="279"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>success<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>whether<sp/>basis<sp/>information<sp/>has<sp/>successfully<sp/>been<sp/>obtained<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="280"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="281"><highlight class="normal">{</highlight></codeline>
<codeline lineno="282"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncols;</highlight></codeline>
<codeline lineno="283"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nrows;</highlight></codeline>
<codeline lineno="284"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>res;</highlight></codeline>
<codeline lineno="285"><highlight class="normal"></highlight></codeline>
<codeline lineno="286"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="287"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>lpi-&gt;grbmodel<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="288"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>lpi-&gt;grbenv<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="289"><highlight class="normal"></highlight></codeline>
<codeline lineno="290"><highlight class="normal"><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;getBase()\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="291"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>success<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>)</highlight></codeline>
<codeline lineno="292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*success<sp/>=<sp/><ref refid="def_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="293"><highlight class="normal"></highlight></codeline>
<codeline lineno="294"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetintattr(lpi-&gt;grbmodel,<sp/>GRB_INT_ATTR_NUMVARS,<sp/>&amp;ncols)<sp/>);</highlight></codeline>
<codeline lineno="295"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetintattr(lpi-&gt;grbmodel,<sp/>GRB_INT_ATTR_NUMCONSTRS,<sp/>&amp;nrows)<sp/>);</highlight></codeline>
<codeline lineno="296"><highlight class="normal"></highlight></codeline>
<codeline lineno="297"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>allocate<sp/>enough<sp/>memory<sp/>for<sp/>storing<sp/>uncompressed<sp/>basis<sp/>information<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="298"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/>ensureCstatMem(lpi,<sp/>ncols)<sp/>);</highlight></codeline>
<codeline lineno="299"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/>ensureRstatMem(lpi,<sp/>nrows)<sp/>);</highlight></codeline>
<codeline lineno="300"><highlight class="normal"></highlight></codeline>
<codeline lineno="301"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>unpacked<sp/>basis<sp/>information<sp/>from<sp/>Gurobi<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="302"><highlight class="normal"><sp/><sp/><sp/>res<sp/>=<sp/>GRBgetintattrarray(lpi-&gt;grbmodel,<sp/>GRB_INT_ATTR_VBASIS,<sp/>0,<sp/>ncols,<sp/>lpi-&gt;cstat);</highlight></codeline>
<codeline lineno="303"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>res<sp/>==<sp/>GRB_ERROR_DATA_NOT_AVAILABLE<sp/>)</highlight></codeline>
<codeline lineno="304"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>the<sp/>model<sp/>is<sp/>infeasible<sp/>Gurobi<sp/>does<sp/>not<sp/>currently<sp/>return<sp/>basis<sp/>information<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>success<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>)</highlight></codeline>
<codeline lineno="307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*success<sp/>=<sp/><ref refid="def_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="309"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="310"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>res<sp/>!=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="311"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pub__message_8h_1a354566c209c3a7fe5c870d4ee8c07bc5" kindref="member">SCIPerrorMessage</ref>(</highlight><highlight class="stringliteral">&quot;Gurobi<sp/>error<sp/>%d:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>res,<sp/>GRBgeterrormsg(lpi-&gt;grbenv));</highlight></codeline>
<codeline lineno="313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5da004953b01233fe72cb41c5d218abb858" kindref="member">SCIP_LPERROR</ref>;</highlight></codeline>
<codeline lineno="314"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="315"><highlight class="normal"></highlight></codeline>
<codeline lineno="316"><highlight class="normal"><sp/><sp/><sp/>res<sp/>=<sp/>GRBgetintattrarray(lpi-&gt;grbmodel,<sp/>GRB_INT_ATTR_CBASIS,<sp/>0,<sp/>nrows,<sp/>lpi-&gt;rstat);</highlight></codeline>
<codeline lineno="317"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>res<sp/>==<sp/>GRB_ERROR_DATA_NOT_AVAILABLE<sp/>)</highlight></codeline>
<codeline lineno="318"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>the<sp/>model<sp/>is<sp/>infeasible<sp/>Gurobi<sp/>does<sp/>not<sp/>currently<sp/>return<sp/>basis<sp/>information<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>success<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>)</highlight></codeline>
<codeline lineno="321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*success<sp/>=<sp/><ref refid="def_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="323"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="324"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>res<sp/>!=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="325"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pub__message_8h_1a354566c209c3a7fe5c870d4ee8c07bc5" kindref="member">SCIPerrorMessage</ref>(</highlight><highlight class="stringliteral">&quot;Gurobi<sp/>error<sp/>%d:<sp/>%s\n&quot;</highlight><highlight class="normal">,<sp/>res,<sp/>GRBgeterrormsg(lpi-&gt;grbenv));</highlight></codeline>
<codeline lineno="327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5da004953b01233fe72cb41c5d218abb858" kindref="member">SCIP_LPERROR</ref>;</highlight></codeline>
<codeline lineno="328"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="329"><highlight class="normal"></highlight></codeline>
<codeline lineno="330"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="331"><highlight class="normal">}</highlight></codeline>
<codeline lineno="332"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="333"><highlight class="comment">/**<sp/>loads<sp/>basis<sp/>stored<sp/>in<sp/>internal<sp/>arrays<sp/>of<sp/>LPI<sp/>data<sp/>structure<sp/>into<sp/>Gurobi<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="334"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="335"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/>setBase(</highlight></codeline>
<codeline lineno="336"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="337"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="338"><highlight class="normal">{</highlight></codeline>
<codeline lineno="339"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncols;</highlight></codeline>
<codeline lineno="340"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nrows;</highlight></codeline>
<codeline lineno="341"><highlight class="normal"></highlight></codeline>
<codeline lineno="342"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="343"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>lpi-&gt;grbmodel<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="344"><highlight class="normal"></highlight></codeline>
<codeline lineno="345"><highlight class="normal"><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;setBase()\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="346"><highlight class="normal"></highlight></codeline>
<codeline lineno="347"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetintattr(lpi-&gt;grbmodel,<sp/>GRB_INT_ATTR_NUMVARS,<sp/>&amp;ncols)<sp/>);</highlight></codeline>
<codeline lineno="348"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetintattr(lpi-&gt;grbmodel,<sp/>GRB_INT_ATTR_NUMCONSTRS,<sp/>&amp;nrows)<sp/>);</highlight></codeline>
<codeline lineno="349"><highlight class="normal"></highlight></codeline>
<codeline lineno="350"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>load<sp/>basis<sp/>information<sp/>into<sp/>Gurobi<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="351"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBsetintattrarray(lpi-&gt;grbmodel,<sp/>GRB_INT_ATTR_VBASIS,<sp/>0,<sp/>ncols,<sp/>lpi-&gt;cstat)<sp/>);</highlight></codeline>
<codeline lineno="352"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBsetintattrarray(lpi-&gt;grbmodel,<sp/>GRB_INT_ATTR_CBASIS,<sp/>0,<sp/>nrows,<sp/>lpi-&gt;rstat)<sp/>);</highlight></codeline>
<codeline lineno="353"><highlight class="normal"></highlight></codeline>
<codeline lineno="354"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBupdatemodel(lpi-&gt;grbmodel)<sp/>);</highlight></codeline>
<codeline lineno="355"><highlight class="normal"></highlight></codeline>
<codeline lineno="356"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="357"><highlight class="normal">}</highlight></codeline>
<codeline lineno="358"><highlight class="normal"></highlight></codeline>
<codeline lineno="359"><highlight class="normal"></highlight></codeline>
<codeline lineno="360"><highlight class="normal"></highlight></codeline>
<codeline lineno="361"><highlight class="normal"></highlight></codeline>
<codeline lineno="362"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="363"><highlight class="comment"><sp/>*<sp/>LPi<sp/>state<sp/>methods</highlight></codeline>
<codeline lineno="364"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="365"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="366"><highlight class="comment">/**<sp/>returns<sp/>the<sp/>number<sp/>of<sp/>packets<sp/>needed<sp/>to<sp/>store<sp/>column<sp/>packet<sp/>information<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="367"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="368"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>colpacketNum(</highlight></codeline>
<codeline lineno="369"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ncols<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>number<sp/>of<sp/>columns<sp/>to<sp/>store<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="370"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="371"><highlight class="normal">{</highlight></codeline>
<codeline lineno="372"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(ncols+(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="lpi__grb_8c_1a3e80b2ad8cd656992a2f9c981adc8ad5" kindref="member">COLS_PER_PACKET</ref>-1)/(int)<ref refid="lpi__grb_8c_1a3e80b2ad8cd656992a2f9c981adc8ad5" kindref="member">COLS_PER_PACKET</ref>;</highlight></codeline>
<codeline lineno="373"><highlight class="normal">}</highlight></codeline>
<codeline lineno="374"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="375"><highlight class="comment">/**<sp/>returns<sp/>the<sp/>number<sp/>of<sp/>packets<sp/>needed<sp/>to<sp/>store<sp/>row<sp/>packet<sp/>information<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="376"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="377"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rowpacketNum(</highlight></codeline>
<codeline lineno="378"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nrows<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>number<sp/>of<sp/>rows<sp/>to<sp/>store<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="379"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="380"><highlight class="normal">{</highlight></codeline>
<codeline lineno="381"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(nrows+(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="lpi__grb_8c_1ae3086d289ba34ee9eb88f8419a4f8e14" kindref="member">ROWS_PER_PACKET</ref>-1)/(int)<ref refid="lpi__grb_8c_1ae3086d289ba34ee9eb88f8419a4f8e14" kindref="member">ROWS_PER_PACKET</ref>;</highlight></codeline>
<codeline lineno="382"><highlight class="normal">}</highlight></codeline>
<codeline lineno="383"><highlight class="normal"></highlight></codeline>
<codeline lineno="384"><highlight class="normal"></highlight></codeline>
<codeline lineno="385"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>The<sp/>basis<sp/>information<sp/>for<sp/>Gurobi<sp/>is<sp/>negative.<sp/>So<sp/>we<sp/>cannot<sp/>use<sp/>the<sp/>functions<sp/>in<sp/>bitencode.h/c.<sp/>The<sp/>functions<sp/>below<sp/>are<sp/>a<sp/>modified<sp/>copy.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="386"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="387"><highlight class="comment">/**<sp/>encode<sp/>a<sp/>negated<sp/>dual<sp/>bit<sp/>vector<sp/>into<sp/>packed<sp/>format<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="388"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="389"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SCIPencodeDualBitNeg(</highlight></codeline>
<codeline lineno="390"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inp,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>unpacked<sp/>input<sp/>vector<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="391"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1afd2fb34af6687b0159dfb63042899d4e" kindref="member">SCIP_DUALPACKET</ref>*<sp/><sp/><sp/><sp/><sp/><sp/>out,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>buffer<sp/>to<sp/>store<sp/>the<sp/>packed<sp/>vector<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="392"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>number<sp/>of<sp/>elements<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="393"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="394"><highlight class="normal">{</highlight></codeline>
<codeline lineno="395"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lpi__grb_8c_1afd2fb34af6687b0159dfb63042899d4e" kindref="member">SCIP_DUALPACKET</ref><sp/>mask[<ref refid="lpi__grb_8c_1a95bb8b60ad68b9a3682d5a20e14c63a2" kindref="member">SCIP_DUALPACKETSIZE</ref>][4]<sp/>=<sp/>{<sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>the<sp/>packet<sp/>size<sp/>changes,<sp/>the<sp/>mask<sp/>has<sp/>to<sp/>be<sp/>updated<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="396"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{0x00000000,<sp/>0x00000001,<sp/>0x00000002,<sp/>0x00000003},</highlight></codeline>
<codeline lineno="397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{0x00000000,<sp/>0x00000004,<sp/>0x00000008,<sp/>0x0000000C},</highlight></codeline>
<codeline lineno="398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{0x00000000,<sp/>0x00000010,<sp/>0x00000020,<sp/>0x00000030},</highlight></codeline>
<codeline lineno="399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{0x00000000,<sp/>0x00000040,<sp/>0x00000080,<sp/>0x000000C0},</highlight></codeline>
<codeline lineno="400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{0x00000000,<sp/>0x00000100,<sp/>0x00000200,<sp/>0x00000300},</highlight></codeline>
<codeline lineno="401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{0x00000000,<sp/>0x00000400,<sp/>0x00000800,<sp/>0x00000C00},</highlight></codeline>
<codeline lineno="402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{0x00000000,<sp/>0x00001000,<sp/>0x00002000,<sp/>0x00003000},</highlight></codeline>
<codeline lineno="403"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{0x00000000,<sp/>0x00004000,<sp/>0x00008000,<sp/>0x0000C000},</highlight></codeline>
<codeline lineno="404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{0x00000000,<sp/>0x00010000,<sp/>0x00020000,<sp/>0x00030000},</highlight></codeline>
<codeline lineno="405"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{0x00000000,<sp/>0x00040000,<sp/>0x00080000,<sp/>0x000C0000},</highlight></codeline>
<codeline lineno="406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{0x00000000,<sp/>0x00100000,<sp/>0x00200000,<sp/>0x00300000},</highlight></codeline>
<codeline lineno="407"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{0x00000000,<sp/>0x00400000,<sp/>0x00800000,<sp/>0x00C00000},</highlight></codeline>
<codeline lineno="408"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{0x00000000,<sp/>0x01000000,<sp/>0x02000000,<sp/>0x03000000},</highlight></codeline>
<codeline lineno="409"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{0x00000000,<sp/>0x04000000,<sp/>0x08000000,<sp/>0x0C000000},</highlight></codeline>
<codeline lineno="410"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{0x00000000,<sp/>0x10000000,<sp/>0x20000000,<sp/>0x30000000},</highlight></codeline>
<codeline lineno="411"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{0x00000000,<sp/>0x40000000,<sp/>0x80000000,<sp/>0xC0000000}</highlight></codeline>
<codeline lineno="412"><highlight class="normal"><sp/><sp/><sp/>};</highlight></codeline>
<codeline lineno="413"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="414"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rest;</highlight></codeline>
<codeline lineno="415"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nfull;</highlight></codeline>
<codeline lineno="416"><highlight class="normal"></highlight></codeline>
<codeline lineno="417"><highlight class="normal"><sp/><sp/><sp/>assert(inp<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||<sp/>count<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="418"><highlight class="normal"><sp/><sp/><sp/>assert(out<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||<sp/>count<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="419"><highlight class="normal"><sp/><sp/><sp/>assert(count<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="420"><highlight class="normal"><sp/><sp/><sp/>assert(<ref refid="lpi__grb_8c_1a95bb8b60ad68b9a3682d5a20e14c63a2" kindref="member">SCIP_DUALPACKETSIZE</ref><sp/>==<sp/>16);</highlight></codeline>
<codeline lineno="421"><highlight class="normal"></highlight></codeline>
<codeline lineno="422"><highlight class="normal"><sp/><sp/><sp/>rest<sp/>=<sp/>count<sp/>%<sp/>(int)<ref refid="lpi__grb_8c_1a95bb8b60ad68b9a3682d5a20e14c63a2" kindref="member">SCIP_DUALPACKETSIZE</ref>;</highlight></codeline>
<codeline lineno="423"><highlight class="normal"><sp/><sp/><sp/>nfull<sp/>=<sp/>count<sp/>-<sp/>rest;</highlight></codeline>
<codeline lineno="424"><highlight class="normal"></highlight></codeline>
<codeline lineno="425"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nfull;<sp/>i<sp/>+=<sp/>(int)<ref refid="lpi__grb_8c_1a95bb8b60ad68b9a3682d5a20e14c63a2" kindref="member">SCIP_DUALPACKETSIZE</ref>,<sp/>inp<sp/>+=<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<ref refid="lpi__grb_8c_1a95bb8b60ad68b9a3682d5a20e14c63a2" kindref="member">SCIP_DUALPACKETSIZE</ref><sp/>)</highlight></codeline>
<codeline lineno="426"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(inp<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(out<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="429"><highlight class="normal"></highlight></codeline>
<codeline lineno="430"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NDEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">unsigned</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j;</highlight></codeline>
<codeline lineno="433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/><ref refid="lpi__grb_8c_1a95bb8b60ad68b9a3682d5a20e14c63a2" kindref="member">SCIP_DUALPACKETSIZE</ref>;<sp/>++j<sp/>)</highlight></codeline>
<codeline lineno="434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(0<sp/>&lt;=<sp/>-inp[j]<sp/>&amp;&amp;<sp/>-inp[j]<sp/>&lt;=<sp/>3);</highlight></codeline>
<codeline lineno="435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="436"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*out++<sp/>=</highlight></codeline>
<codeline lineno="438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>mask[0][-inp[0]]<sp/>|<sp/>mask[1][-inp[1]]<sp/>|<sp/>mask[2][-inp[2]]<sp/>|<sp/>mask[3][inp[3]]</highlight></codeline>
<codeline lineno="439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>mask[4][-inp[4]]<sp/>|<sp/>mask[5][-inp[5]]<sp/>|<sp/>mask[6][-inp[6]]</highlight></codeline>
<codeline lineno="440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>mask[7][-inp[7]]<sp/>|<sp/>mask[8][-inp[8]]<sp/>|<sp/>mask[9][-inp[9]]</highlight></codeline>
<codeline lineno="441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>mask[10][-inp[10]]<sp/>|<sp/>mask[11][-inp[11]]<sp/>|<sp/>mask[12][-inp[12]]</highlight></codeline>
<codeline lineno="442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>|<sp/>mask[13][-inp[13]]<sp/>|<sp/>mask[14][-inp[14]]<sp/>|<sp/>mask[15][-inp[15]];</highlight></codeline>
<codeline lineno="443"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="444"><highlight class="normal"></highlight></codeline>
<codeline lineno="445"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>rest<sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="446"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1afd2fb34af6687b0159dfb63042899d4e" kindref="member">SCIP_DUALPACKET</ref><sp/>m<sp/>=<sp/>(<ref refid="lpi__grb_8c_1afd2fb34af6687b0159dfb63042899d4e" kindref="member">SCIP_DUALPACKET</ref>)<sp/>0u;</highlight></codeline>
<codeline lineno="448"><highlight class="normal"></highlight></codeline>
<codeline lineno="449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(inp<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(out<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="451"><highlight class="normal"></highlight></codeline>
<codeline lineno="452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>rest;<sp/>i++<sp/>)</highlight></codeline>
<codeline lineno="453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>|=<sp/>mask[i][-inp[i]];</highlight></codeline>
<codeline lineno="454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*out<sp/>=<sp/>m;</highlight></codeline>
<codeline lineno="455"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="456"><highlight class="normal">}</highlight></codeline>
<codeline lineno="457"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="458"><highlight class="comment">/**<sp/>decode<sp/>a<sp/>packed<sp/>dual<sp/>bit<sp/>vector<sp/>into<sp/>negated<sp/>unpacked<sp/>format<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="459"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="460"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>SCIPdecodeDualBitNeg(</highlight></codeline>
<codeline lineno="461"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lpi__grb_8c_1afd2fb34af6687b0159dfb63042899d4e" kindref="member">SCIP_DUALPACKET</ref>*<sp/>inp,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>packed<sp/>input<sp/>vector<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="462"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>out,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>buffer<sp/>to<sp/>store<sp/>unpacked<sp/>vector<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="463"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>count<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>number<sp/>of<sp/>elements<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="464"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="465"><highlight class="normal">{</highlight></codeline>
<codeline lineno="466"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1afd2fb34af6687b0159dfb63042899d4e" kindref="member">SCIP_DUALPACKET</ref><sp/>m;</highlight></codeline>
<codeline lineno="467"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rest;</highlight></codeline>
<codeline lineno="468"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nfull;</highlight></codeline>
<codeline lineno="469"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="470"><highlight class="normal"></highlight></codeline>
<codeline lineno="471"><highlight class="normal"><sp/><sp/><sp/>assert(inp<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||<sp/>count<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="472"><highlight class="normal"><sp/><sp/><sp/>assert(out<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||<sp/>count<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="473"><highlight class="normal"><sp/><sp/><sp/>assert(count<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="474"><highlight class="normal"><sp/><sp/><sp/>assert(<ref refid="lpi__grb_8c_1a95bb8b60ad68b9a3682d5a20e14c63a2" kindref="member">SCIP_DUALPACKETSIZE</ref><sp/>==<sp/>16);</highlight></codeline>
<codeline lineno="475"><highlight class="normal"></highlight></codeline>
<codeline lineno="476"><highlight class="normal"><sp/><sp/><sp/>rest<sp/>=<sp/>count<sp/>%<sp/>(int)<ref refid="lpi__grb_8c_1a95bb8b60ad68b9a3682d5a20e14c63a2" kindref="member">SCIP_DUALPACKETSIZE</ref>;</highlight></codeline>
<codeline lineno="477"><highlight class="normal"><sp/><sp/><sp/>nfull<sp/>=<sp/>count<sp/>-<sp/>rest;</highlight></codeline>
<codeline lineno="478"><highlight class="normal"></highlight></codeline>
<codeline lineno="479"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nfull;<sp/>i<sp/>+=<sp/>(int)<ref refid="lpi__grb_8c_1a95bb8b60ad68b9a3682d5a20e14c63a2" kindref="member">SCIP_DUALPACKETSIZE</ref><sp/>)</highlight></codeline>
<codeline lineno="480"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="481"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(inp<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="482"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(out<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="483"><highlight class="normal"></highlight></codeline>
<codeline lineno="484"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>=<sp/>*inp++;</highlight></codeline>
<codeline lineno="485"><highlight class="normal"></highlight></codeline>
<codeline lineno="486"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*out++<sp/>=<sp/>-(int)(m<sp/>&amp;<sp/>3);</highlight></codeline>
<codeline lineno="487"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>&gt;&gt;=<sp/>2;</highlight></codeline>
<codeline lineno="488"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*out++<sp/>=<sp/>-(int)(m<sp/>&amp;<sp/>3);</highlight></codeline>
<codeline lineno="489"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>&gt;&gt;=<sp/>2;</highlight></codeline>
<codeline lineno="490"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*out++<sp/>=<sp/>-(int)(m<sp/>&amp;<sp/>3);</highlight></codeline>
<codeline lineno="491"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>&gt;&gt;=<sp/>2;</highlight></codeline>
<codeline lineno="492"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*out++<sp/>=<sp/>-(int)(m<sp/>&amp;<sp/>3);</highlight></codeline>
<codeline lineno="493"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>&gt;&gt;=<sp/>2;</highlight></codeline>
<codeline lineno="494"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*out++<sp/>=<sp/>-(int)(m<sp/>&amp;<sp/>3);</highlight></codeline>
<codeline lineno="495"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>&gt;&gt;=<sp/>2;</highlight></codeline>
<codeline lineno="496"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*out++<sp/>=<sp/>-(int)(m<sp/>&amp;<sp/>3);</highlight></codeline>
<codeline lineno="497"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>&gt;&gt;=<sp/>2;</highlight></codeline>
<codeline lineno="498"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*out++<sp/>=<sp/>-(int)(m<sp/>&amp;<sp/>3);</highlight></codeline>
<codeline lineno="499"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>&gt;&gt;=<sp/>2;</highlight></codeline>
<codeline lineno="500"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*out++<sp/>=<sp/>-(int)(m<sp/>&amp;<sp/>3);</highlight></codeline>
<codeline lineno="501"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>&gt;&gt;=<sp/>2;</highlight></codeline>
<codeline lineno="502"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*out++<sp/>=<sp/>-(int)(m<sp/>&amp;<sp/>3);</highlight></codeline>
<codeline lineno="503"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>&gt;&gt;=<sp/>2;</highlight></codeline>
<codeline lineno="504"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*out++<sp/>=<sp/>-(int)(m<sp/>&amp;<sp/>3);</highlight></codeline>
<codeline lineno="505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>&gt;&gt;=<sp/>2;</highlight></codeline>
<codeline lineno="506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*out++<sp/>=<sp/>-(int)(m<sp/>&amp;<sp/>3);</highlight></codeline>
<codeline lineno="507"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>&gt;&gt;=<sp/>2;</highlight></codeline>
<codeline lineno="508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*out++<sp/>=<sp/>-(int)(m<sp/>&amp;<sp/>3);</highlight></codeline>
<codeline lineno="509"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>&gt;&gt;=<sp/>2;</highlight></codeline>
<codeline lineno="510"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*out++<sp/>=<sp/>-(int)(m<sp/>&amp;<sp/>3);</highlight></codeline>
<codeline lineno="511"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>&gt;&gt;=<sp/>2;</highlight></codeline>
<codeline lineno="512"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*out++<sp/>=<sp/>-(int)(m<sp/>&amp;<sp/>3);</highlight></codeline>
<codeline lineno="513"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>&gt;&gt;=<sp/>2;</highlight></codeline>
<codeline lineno="514"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*out++<sp/>=<sp/>-(int)(m<sp/>&amp;<sp/>3);</highlight></codeline>
<codeline lineno="515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>&gt;&gt;=<sp/>2;</highlight></codeline>
<codeline lineno="516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*out++<sp/>=<sp/>-(int)(m<sp/>&amp;<sp/>3);</highlight></codeline>
<codeline lineno="517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(m<sp/>&gt;&gt;<sp/>2<sp/>==<sp/>0);</highlight></codeline>
<codeline lineno="518"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="519"><highlight class="normal"></highlight></codeline>
<codeline lineno="520"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>rest<sp/>&gt;<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="521"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="522"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(inp<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(out<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="524"><highlight class="normal"></highlight></codeline>
<codeline lineno="525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>=<sp/>*inp;</highlight></codeline>
<codeline lineno="526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>rest;<sp/>i++<sp/>)</highlight></codeline>
<codeline lineno="527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="528"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*out++<sp/>=<sp/>-(int)(m<sp/>&amp;<sp/>3);</highlight></codeline>
<codeline lineno="529"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>m<sp/>&gt;&gt;=<sp/>2;</highlight></codeline>
<codeline lineno="530"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="531"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="532"><highlight class="normal">}</highlight></codeline>
<codeline lineno="533"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="534"><highlight class="comment">/**<sp/>store<sp/>row<sp/>and<sp/>column<sp/>basis<sp/>status<sp/>in<sp/>a<sp/>packed<sp/>LPi<sp/>state<sp/>object<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="535"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="536"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>lpistatePack(</highlight></codeline>
<codeline lineno="537"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a90d877c948164ab5e3beb0f3e1070693" kindref="member">SCIP_LPISTATE</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpistate,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>LPi<sp/>state<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="538"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cstat,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>basis<sp/>status<sp/>of<sp/>columns<sp/>in<sp/>unpacked<sp/>format<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="539"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rstat<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>basis<sp/>status<sp/>of<sp/>rows<sp/>in<sp/>unpacked<sp/>format<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="540"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="541"><highlight class="normal">{</highlight></codeline>
<codeline lineno="542"><highlight class="normal"><sp/><sp/><sp/>assert(lpistate<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="543"><highlight class="normal"><sp/><sp/><sp/>assert(lpistate-&gt;packcstat<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="544"><highlight class="normal"><sp/><sp/><sp/>assert(lpistate-&gt;packrstat<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="545"><highlight class="normal"></highlight></codeline>
<codeline lineno="546"><highlight class="normal"><sp/><sp/><sp/>SCIPencodeDualBitNeg(cstat,<sp/>lpistate-&gt;packcstat,<sp/>lpistate-&gt;ncols);</highlight></codeline>
<codeline lineno="547"><highlight class="normal"><sp/><sp/><sp/>SCIPencodeDualBitNeg(rstat,<sp/>lpistate-&gt;packrstat,<sp/>lpistate-&gt;nrows);</highlight></codeline>
<codeline lineno="548"><highlight class="normal">}</highlight></codeline>
<codeline lineno="549"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="550"><highlight class="comment">/**<sp/>unpacks<sp/>row<sp/>and<sp/>column<sp/>basis<sp/>status<sp/>from<sp/>a<sp/>packed<sp/>LPi<sp/>state<sp/>object<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="551"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="552"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>lpistateUnpack(</highlight></codeline>
<codeline lineno="553"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="type__lpi_8h_1a90d877c948164ab5e3beb0f3e1070693" kindref="member">SCIP_LPISTATE</ref>*<sp/><sp/>lpistate,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>LPi<sp/>state<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="554"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cstat,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>buffer<sp/>for<sp/>storing<sp/>basis<sp/>status<sp/>of<sp/>columns<sp/>in<sp/>unpacked<sp/>format<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="555"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rstat<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>buffer<sp/>for<sp/>storing<sp/>basis<sp/>status<sp/>of<sp/>rows<sp/>in<sp/>unpacked<sp/>format<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="556"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="557"><highlight class="normal">{</highlight></codeline>
<codeline lineno="558"><highlight class="normal"><sp/><sp/><sp/>assert(lpistate<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="559"><highlight class="normal"><sp/><sp/><sp/>assert(lpistate-&gt;packcstat<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="560"><highlight class="normal"><sp/><sp/><sp/>assert(lpistate-&gt;packrstat<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="561"><highlight class="normal"></highlight></codeline>
<codeline lineno="562"><highlight class="normal"><sp/><sp/><sp/>SCIPdecodeDualBitNeg(lpistate-&gt;packcstat,<sp/>cstat,<sp/>lpistate-&gt;ncols);</highlight></codeline>
<codeline lineno="563"><highlight class="normal"><sp/><sp/><sp/>SCIPdecodeDualBitNeg(lpistate-&gt;packrstat,<sp/>rstat,<sp/>lpistate-&gt;nrows);</highlight></codeline>
<codeline lineno="564"><highlight class="normal">}</highlight></codeline>
<codeline lineno="565"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="566"><highlight class="comment">/**<sp/>creates<sp/>LPi<sp/>state<sp/>information<sp/>object<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="567"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="568"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/>lpistateCreate(</highlight></codeline>
<codeline lineno="569"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a90d877c948164ab5e3beb0f3e1070693" kindref="member">SCIP_LPISTATE</ref>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpistate,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>LPi<sp/>state<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="570"><highlight class="normal"><sp/><sp/><sp/>BMS_BLKMEM*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blkmem,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>block<sp/>memory<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="571"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ncols,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>number<sp/>of<sp/>columns<sp/>to<sp/>store<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="572"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nrows<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>number<sp/>of<sp/>rows<sp/>to<sp/>store<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="573"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="574"><highlight class="normal">{</highlight></codeline>
<codeline lineno="575"><highlight class="normal"><sp/><sp/><sp/>assert(lpistate<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="576"><highlight class="normal"><sp/><sp/><sp/>assert(blkmem<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="577"><highlight class="normal"><sp/><sp/><sp/>assert(ncols<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="578"><highlight class="normal"><sp/><sp/><sp/>assert(nrows<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="579"><highlight class="normal"></highlight></codeline>
<codeline lineno="580"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7695e892dc456d85a3654eb158976921" kindref="member">SCIP_ALLOC</ref>(<sp/>BMSallocBlockMemory(blkmem,<sp/>lpistate)<sp/>);</highlight></codeline>
<codeline lineno="581"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7695e892dc456d85a3654eb158976921" kindref="member">SCIP_ALLOC</ref>(<sp/>BMSallocBlockMemoryArray(blkmem,<sp/>&amp;(*lpistate)-&gt;packcstat,<sp/>colpacketNum(ncols))<sp/>);</highlight></codeline>
<codeline lineno="582"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7695e892dc456d85a3654eb158976921" kindref="member">SCIP_ALLOC</ref>(<sp/>BMSallocBlockMemoryArray(blkmem,<sp/>&amp;(*lpistate)-&gt;packrstat,<sp/>rowpacketNum(nrows))<sp/>);</highlight></codeline>
<codeline lineno="583"><highlight class="normal"></highlight></codeline>
<codeline lineno="584"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="585"><highlight class="normal">}</highlight></codeline>
<codeline lineno="586"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="587"><highlight class="comment">/**<sp/>frees<sp/>LPi<sp/>state<sp/>information<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="588"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="589"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>lpistateFree(</highlight></codeline>
<codeline lineno="590"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a90d877c948164ab5e3beb0f3e1070693" kindref="member">SCIP_LPISTATE</ref>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpistate,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>LPi<sp/>state<sp/>information<sp/>(like<sp/>basis<sp/>information)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="591"><highlight class="normal"><sp/><sp/><sp/>BMS_BLKMEM*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blkmem<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>block<sp/>memory<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="592"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="593"><highlight class="normal">{</highlight></codeline>
<codeline lineno="594"><highlight class="normal"><sp/><sp/><sp/>assert(blkmem<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="595"><highlight class="normal"><sp/><sp/><sp/>assert(lpistate<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="596"><highlight class="normal"><sp/><sp/><sp/>assert(*lpistate<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="597"><highlight class="normal"></highlight></codeline>
<codeline lineno="598"><highlight class="normal"><sp/><sp/><sp/>BMSfreeBlockMemoryArrayNull(blkmem,<sp/>&amp;(*lpistate)-&gt;packcstat,<sp/>colpacketNum((*lpistate)-&gt;ncols));</highlight></codeline>
<codeline lineno="599"><highlight class="normal"><sp/><sp/><sp/>BMSfreeBlockMemoryArrayNull(blkmem,<sp/>&amp;(*lpistate)-&gt;packrstat,<sp/>rowpacketNum((*lpistate)-&gt;nrows));</highlight></codeline>
<codeline lineno="600"><highlight class="normal"><sp/><sp/><sp/>BMSfreeBlockMemory(blkmem,<sp/>lpistate);</highlight></codeline>
<codeline lineno="601"><highlight class="normal">}</highlight></codeline>
<codeline lineno="602"><highlight class="normal"></highlight></codeline>
<codeline lineno="603"><highlight class="normal"></highlight></codeline>
<codeline lineno="604"><highlight class="normal"></highlight></codeline>
<codeline lineno="605"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="606"><highlight class="comment"><sp/>*<sp/>local<sp/>methods</highlight></codeline>
<codeline lineno="607"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="608"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="609"><highlight class="comment">/**<sp/>gets<sp/>all<sp/>Gurobi<sp/>parameters<sp/>used<sp/>in<sp/>LPI<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="610"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="611"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/>getParameterValues(</highlight></codeline>
<codeline lineno="612"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="613"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a193f92b4f04228b18ef2b2614e7b3e83" kindref="member">GRBPARAM</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grbparam<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Gurobi<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="614"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="615"><highlight class="normal">{</highlight></codeline>
<codeline lineno="616"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="617"><highlight class="normal"></highlight></codeline>
<codeline lineno="618"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="619"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>lpi-&gt;grbenv<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="620"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>grbparam<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="621"><highlight class="normal"></highlight></codeline>
<codeline lineno="622"><highlight class="normal"><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;getParameterValues()\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="623"><highlight class="normal"></highlight></codeline>
<codeline lineno="624"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="lpi__grb_8c_1a91bbe58fc774297c149f7e08a974de11" kindref="member">NUMINTPARAM</ref>;<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="625"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetintparam(lpi-&gt;grbenv,<sp/>intparam[i],<sp/>&amp;(grbparam-&gt;intparval[i]))<sp/>);</highlight></codeline>
<codeline lineno="627"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="628"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="lpi__grb_8c_1ac2b1b998d4ad2ba90b97c858783f1afc" kindref="member">NUMDBLPARAM</ref>;<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="629"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetdblparam(lpi-&gt;grbenv,<sp/>dblparam[i],<sp/>&amp;(grbparam-&gt;dblparval[i]))<sp/>);</highlight></codeline>
<codeline lineno="631"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="632"><highlight class="normal"></highlight></codeline>
<codeline lineno="633"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="634"><highlight class="normal">}</highlight></codeline>
<codeline lineno="635"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="636"><highlight class="comment">/**<sp/>in<sp/>debug<sp/>mode,<sp/>checks<sp/>validity<sp/>of<sp/>Gurobi<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="637"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="638"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/>checkParameterValues(</highlight></codeline>
<codeline lineno="639"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="640"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="641"><highlight class="normal">{</highlight></codeline>
<codeline lineno="642"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NDEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="643"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a193f92b4f04228b18ef2b2614e7b3e83" kindref="member">GRBPARAM</ref><sp/>par;</highlight></codeline>
<codeline lineno="644"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="645"><highlight class="normal"></highlight></codeline>
<codeline lineno="646"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/>getParameterValues(lpi,<sp/>&amp;par)<sp/>);</highlight></codeline>
<codeline lineno="647"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="lpi__grb_8c_1a91bbe58fc774297c149f7e08a974de11" kindref="member">NUMINTPARAM</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="648"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(<sp/>lpi-&gt;curparam.intparval[i]<sp/>==<sp/>par.intparval[i]<sp/>);</highlight></codeline>
<codeline lineno="649"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="lpi__grb_8c_1ac2b1b998d4ad2ba90b97c858783f1afc" kindref="member">NUMDBLPARAM</ref>;<sp/>++i)</highlight></codeline>
<codeline lineno="650"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(<ref refid="def_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(lpi-&gt;curparam.dblparval[i],<sp/>dblparammin[i])<sp/>==<sp/>par.dblparval[i]);<sp/></highlight><highlight class="comment">/*lint<sp/>!e777*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="651"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="652"><highlight class="normal"></highlight></codeline>
<codeline lineno="653"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="654"><highlight class="normal">}</highlight></codeline>
<codeline lineno="655"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="656"><highlight class="comment">/**<sp/>sets<sp/>all<sp/>Gurobi<sp/>parameters<sp/>used<sp/>in<sp/>LPI<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="657"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="658"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/>setParameterValues(</highlight></codeline>
<codeline lineno="659"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="660"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a193f92b4f04228b18ef2b2614e7b3e83" kindref="member">GRBPARAM</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>grbparam<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>Gurobi<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="661"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="662"><highlight class="normal">{</highlight></codeline>
<codeline lineno="663"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="664"><highlight class="normal"></highlight></codeline>
<codeline lineno="665"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="666"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>lpi-&gt;grbenv<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="667"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>grbparam<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="668"><highlight class="normal"></highlight></codeline>
<codeline lineno="669"><highlight class="normal"><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;setParameterValues()\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="670"><highlight class="normal"></highlight></codeline>
<codeline lineno="671"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="lpi__grb_8c_1a91bbe58fc774297c149f7e08a974de11" kindref="member">NUMINTPARAM</ref>;<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="672"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="673"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>lpi-&gt;curparam.intparval[i]<sp/>!=<sp/>grbparam-&gt;intparval[i]<sp/>)</highlight></codeline>
<codeline lineno="674"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="675"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;setting<sp/>Gurobi<sp/>int<sp/>parameter<sp/>%s<sp/>from<sp/>%d<sp/>to<sp/>%d\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="676"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>intparam[i],<sp/>lpi-&gt;curparam.intparval[i],<sp/>grbparam-&gt;intparval[i]);</highlight></codeline>
<codeline lineno="677"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi-&gt;curparam.intparval[i]<sp/>=<sp/>grbparam-&gt;intparval[i];</highlight></codeline>
<codeline lineno="678"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBsetintparam(lpi-&gt;grbenv,<sp/>intparam[i],<sp/>lpi-&gt;curparam.intparval[i])<sp/>);</highlight></codeline>
<codeline lineno="679"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="680"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="681"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="lpi__grb_8c_1ac2b1b998d4ad2ba90b97c858783f1afc" kindref="member">NUMDBLPARAM</ref>;<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="682"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="683"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>lpi-&gt;curparam.dblparval[i]<sp/>!=<sp/>grbparam-&gt;dblparval[i]<sp/>)<sp/></highlight><highlight class="comment">/*lint<sp/>!e777*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="684"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="685"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;setting<sp/>Gurobi<sp/>dbl<sp/>parameter<sp/>%s<sp/>from<sp/>%g<sp/>to<sp/>%g\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="686"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dblparam[i],<sp/>lpi-&gt;curparam.dblparval[i],<sp/><ref refid="def_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(grbparam-&gt;dblparval[i],<sp/>dblparammin[i]));</highlight></codeline>
<codeline lineno="687"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi-&gt;curparam.dblparval[i]<sp/>=<sp/><ref refid="def_8h_1aacc3ee1a7f283f8ef65cea31f4436a95" kindref="member">MAX</ref>(grbparam-&gt;dblparval[i],<sp/>dblparammin[i]);</highlight></codeline>
<codeline lineno="688"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBsetdblparam(lpi-&gt;grbenv,<sp/>dblparam[i],<sp/>lpi-&gt;curparam.dblparval[i])<sp/>);</highlight></codeline>
<codeline lineno="689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="690"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="691"><highlight class="normal"></highlight></codeline>
<codeline lineno="692"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/>checkParameterValues(lpi)<sp/>);</highlight></codeline>
<codeline lineno="693"><highlight class="normal"></highlight></codeline>
<codeline lineno="694"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="695"><highlight class="normal">}</highlight></codeline>
<codeline lineno="696"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="697"><highlight class="comment">/**<sp/>copies<sp/>Gurobi<sp/>parameters<sp/>from<sp/>source<sp/>to<sp/>dest<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="698"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="699"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>copyParameterValues(</highlight></codeline>
<codeline lineno="700"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a193f92b4f04228b18ef2b2614e7b3e83" kindref="member">GRBPARAM</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dest,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>destination<sp/>Gurobi<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="701"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="lpi__grb_8c_1a193f92b4f04228b18ef2b2614e7b3e83" kindref="member">GRBPARAM</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/>source<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>original<sp/>Gurobi<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="702"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="703"><highlight class="normal">{</highlight></codeline>
<codeline lineno="704"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="705"><highlight class="normal"></highlight></codeline>
<codeline lineno="706"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="lpi__grb_8c_1a91bbe58fc774297c149f7e08a974de11" kindref="member">NUMINTPARAM</ref>;<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="707"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dest-&gt;intparval[i]<sp/>=<sp/>source-&gt;intparval[i];</highlight></codeline>
<codeline lineno="708"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>NUMDBLPARAM;<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="709"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>dest-&gt;dblparval[i]<sp/>=<sp/>source-&gt;dblparval[i];</highlight></codeline>
<codeline lineno="710"><highlight class="normal">}</highlight></codeline>
<codeline lineno="711"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="712"><highlight class="comment">/**<sp/>gets<sp/>a<sp/>single<sp/>integer<sp/>parameter<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="713"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="714"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/>getIntParam(</highlight></codeline>
<codeline lineno="715"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="716"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>param,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>parameter<sp/>name<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="717"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>p<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>value<sp/>of<sp/>parameter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="718"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="719"><highlight class="normal">{</highlight></codeline>
<codeline lineno="720"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="721"><highlight class="normal"></highlight></codeline>
<codeline lineno="722"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="723"><highlight class="normal"></highlight></codeline>
<codeline lineno="724"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="lpi__grb_8c_1a91bbe58fc774297c149f7e08a974de11" kindref="member">NUMINTPARAM</ref>;<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="725"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="726"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>strcmp(intparam[i],<sp/>param)<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="727"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*p<sp/>=<sp/>lpi-&gt;grbparam.intparval[i];</highlight></codeline>
<codeline lineno="729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="731"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="732"><highlight class="normal"></highlight></codeline>
<codeline lineno="733"><highlight class="normal"><sp/><sp/><sp/><ref refid="pub__message_8h_1a354566c209c3a7fe5c870d4ee8c07bc5" kindref="member">SCIPerrorMessage</ref>(</highlight><highlight class="stringliteral">&quot;unknown<sp/>Gurobi<sp/>integer<sp/>parameter<sp/>&lt;%s&gt;.\n&quot;</highlight><highlight class="normal">,<sp/>param);</highlight></codeline>
<codeline lineno="734"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5da004953b01233fe72cb41c5d218abb858" kindref="member">SCIP_LPERROR</ref>;</highlight></codeline>
<codeline lineno="735"><highlight class="normal">}</highlight></codeline>
<codeline lineno="736"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="737"><highlight class="comment">/**<sp/>sets<sp/>a<sp/>single<sp/>integer<sp/>parameter<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="738"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="739"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/>setIntParam(</highlight></codeline>
<codeline lineno="740"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="741"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>param,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>parameter<sp/>name<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="742"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parval<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>value<sp/>of<sp/>parameter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="743"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="744"><highlight class="normal">{</highlight></codeline>
<codeline lineno="745"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="746"><highlight class="normal"></highlight></codeline>
<codeline lineno="747"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="748"><highlight class="normal"></highlight></codeline>
<codeline lineno="749"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="lpi__grb_8c_1a91bbe58fc774297c149f7e08a974de11" kindref="member">NUMINTPARAM</ref>;<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="750"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="751"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>strcmp(intparam[i],<sp/>param)<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="752"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="753"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi-&gt;grbparam.intparval[i]<sp/>=<sp/>parval;</highlight></codeline>
<codeline lineno="754"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="755"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="756"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="757"><highlight class="normal"></highlight></codeline>
<codeline lineno="758"><highlight class="normal"><sp/><sp/><sp/><ref refid="pub__message_8h_1a354566c209c3a7fe5c870d4ee8c07bc5" kindref="member">SCIPerrorMessage</ref>(</highlight><highlight class="stringliteral">&quot;unknown<sp/>Gurobi<sp/>integer<sp/>parameter<sp/>&lt;%s&gt;.\n&quot;</highlight><highlight class="normal">,<sp/>param);</highlight></codeline>
<codeline lineno="759"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5da004953b01233fe72cb41c5d218abb858" kindref="member">SCIP_LPERROR</ref>;</highlight></codeline>
<codeline lineno="760"><highlight class="normal">}</highlight></codeline>
<codeline lineno="761"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="762"><highlight class="comment">/**<sp/>gets<sp/>a<sp/>single<sp/>double<sp/>parameter<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="763"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="764"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/>getDblParam(<ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/>lpi,<sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/>param,<sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal">*<sp/>p)</highlight></codeline>
<codeline lineno="765"><highlight class="normal">{</highlight></codeline>
<codeline lineno="766"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="767"><highlight class="normal"></highlight></codeline>
<codeline lineno="768"><highlight class="normal"><sp/><sp/><sp/>assert(lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="769"><highlight class="normal"></highlight></codeline>
<codeline lineno="770"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="lpi__grb_8c_1ac2b1b998d4ad2ba90b97c858783f1afc" kindref="member">NUMDBLPARAM</ref>;<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="771"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="772"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>strcmp(dblparam[i],<sp/>param)<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="773"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*p<sp/>=<sp/>lpi-&gt;grbparam.dblparval[i];</highlight></codeline>
<codeline lineno="775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="777"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="778"><highlight class="normal"></highlight></codeline>
<codeline lineno="779"><highlight class="normal"><sp/><sp/><sp/><ref refid="pub__message_8h_1a354566c209c3a7fe5c870d4ee8c07bc5" kindref="member">SCIPerrorMessage</ref>(</highlight><highlight class="stringliteral">&quot;unknown<sp/>Gurobi<sp/>double<sp/>parameter<sp/>&lt;%s&gt;.\n&quot;</highlight><highlight class="normal">,<sp/>param);</highlight></codeline>
<codeline lineno="780"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5da004953b01233fe72cb41c5d218abb858" kindref="member">SCIP_LPERROR</ref>;</highlight></codeline>
<codeline lineno="781"><highlight class="normal">}</highlight></codeline>
<codeline lineno="782"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="783"><highlight class="comment">/**<sp/>sets<sp/>a<sp/>single<sp/>double<sp/>parameter<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="784"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="785"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/>setDblParam(</highlight></codeline>
<codeline lineno="786"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="787"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>param,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>parameter<sp/>name<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="788"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>parval<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>value<sp/>of<sp/>parameter<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="789"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="790"><highlight class="normal">{</highlight></codeline>
<codeline lineno="791"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="792"><highlight class="normal"></highlight></codeline>
<codeline lineno="793"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="794"><highlight class="normal"></highlight></codeline>
<codeline lineno="795"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/><ref refid="lpi__grb_8c_1ac2b1b998d4ad2ba90b97c858783f1afc" kindref="member">NUMDBLPARAM</ref>;<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="796"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="797"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>strcmp(dblparam[i],<sp/>param)<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="798"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi-&gt;grbparam.dblparval[i]<sp/>=<sp/>parval;</highlight></codeline>
<codeline lineno="800"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="802"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="803"><highlight class="normal"></highlight></codeline>
<codeline lineno="804"><highlight class="normal"><sp/><sp/><sp/><ref refid="pub__message_8h_1a354566c209c3a7fe5c870d4ee8c07bc5" kindref="member">SCIPerrorMessage</ref>(</highlight><highlight class="stringliteral">&quot;unknown<sp/>Gurobi<sp/>double<sp/>parameter<sp/>&lt;%s&gt;.\n&quot;</highlight><highlight class="normal">,<sp/>param);</highlight></codeline>
<codeline lineno="805"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5da004953b01233fe72cb41c5d218abb858" kindref="member">SCIP_LPERROR</ref>;</highlight></codeline>
<codeline lineno="806"><highlight class="normal">}</highlight></codeline>
<codeline lineno="807"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="808"><highlight class="comment">/**<sp/>marks<sp/>the<sp/>current<sp/>LP<sp/>to<sp/>be<sp/>unsolved<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="809"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="810"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/>invalidateSolution(</highlight></codeline>
<codeline lineno="811"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="812"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="813"><highlight class="normal">{</highlight></codeline>
<codeline lineno="814"><highlight class="normal"><sp/><sp/><sp/>assert(lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="815"><highlight class="normal"><sp/><sp/><sp/>lpi-&gt;solstat<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="816"><highlight class="normal">}</highlight></codeline>
<codeline lineno="817"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="818"><highlight class="comment">/**<sp/>converts<sp/>SCIP&apos;s<sp/>lhs/rhs<sp/>pairs<sp/>into<sp/>Gurobi&apos;s<sp/>sen/rhs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="819"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="820"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/>convertSides(</highlight></codeline>
<codeline lineno="821"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="822"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nrows,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>number<sp/>of<sp/>rows<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="823"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/>lhs,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>left<sp/>hand<sp/>side<sp/>vector<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="824"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/>rhs,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>right<sp/>hand<sp/>side<sp/>vector<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="825"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rngcount<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>number<sp/>of<sp/>ranged<sp/>rows<sp/>found<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="826"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="827"><highlight class="normal">{</highlight></codeline>
<codeline lineno="828"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="829"><highlight class="normal"></highlight></codeline>
<codeline lineno="830"><highlight class="normal"><sp/><sp/><sp/>assert(lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="831"><highlight class="normal"><sp/><sp/><sp/>assert(nrows<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="832"><highlight class="normal"><sp/><sp/><sp/>assert(lhs<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="833"><highlight class="normal"><sp/><sp/><sp/>assert(rhs<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="834"><highlight class="normal"></highlight></codeline>
<codeline lineno="835"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>convert<sp/>lhs/rhs<sp/>into<sp/>sen/rhs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="836"><highlight class="normal"><sp/><sp/><sp/>*rngcount<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="837"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nrows;<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="838"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="839"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(lhs[i]<sp/>&lt;=<sp/>rhs[i]);</highlight></codeline>
<codeline lineno="840"><highlight class="normal"></highlight></codeline>
<codeline lineno="841"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>lhs[i]<sp/>==<sp/>rhs[i]<sp/>)<sp/></highlight><highlight class="comment">/*lint<sp/>!e777*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="842"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(-GRB_INFINITY<sp/>&lt;<sp/>rhs[i]<sp/>&amp;&amp;<sp/>rhs[i]<sp/>&lt;<sp/>GRB_INFINITY);</highlight></codeline>
<codeline lineno="844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi-&gt;senarray[i]<sp/>=<sp/>GRB_EQUAL;</highlight></codeline>
<codeline lineno="845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi-&gt;rhsarray[i]<sp/>=<sp/>rhs[i];</highlight></codeline>
<codeline lineno="846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>lhs[i]<sp/>&lt;=<sp/>-GRB_INFINITY<sp/>)</highlight></codeline>
<codeline lineno="848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(-GRB_INFINITY<sp/>&lt;<sp/>rhs[i]<sp/>&amp;&amp;<sp/>rhs[i]<sp/>&lt;<sp/>GRB_INFINITY);</highlight></codeline>
<codeline lineno="850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi-&gt;senarray[i]<sp/>=<sp/>GRB_LESS_EQUAL;</highlight></codeline>
<codeline lineno="851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi-&gt;rhsarray[i]<sp/>=<sp/>rhs[i];</highlight></codeline>
<codeline lineno="852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="853"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>rhs[i]<sp/>&gt;=<sp/>GRB_INFINITY<sp/>)</highlight></codeline>
<codeline lineno="854"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="855"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(-GRB_INFINITY<sp/>&lt;<sp/>lhs[i]<sp/>&amp;&amp;<sp/>lhs[i]<sp/>&lt;<sp/>GRB_INFINITY);</highlight></codeline>
<codeline lineno="856"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi-&gt;senarray[i]<sp/>=<sp/>GRB_GREATER_EQUAL;</highlight></codeline>
<codeline lineno="857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi-&gt;rhsarray[i]<sp/>=<sp/>lhs[i];</highlight></codeline>
<codeline lineno="858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Gurobi<sp/>cannot<sp/>handle<sp/>ranged<sp/>rows<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pub__message_8h_1a354566c209c3a7fe5c870d4ee8c07bc5" kindref="member">SCIPerrorMessage</ref>(</highlight><highlight class="stringliteral">&quot;Gurobi<sp/>cannot<sp/>handle<sp/>ranged<sp/>rows.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="def_8h_1ad8669395a2a82ed74b9b364f4a310c56" kindref="member">SCIPABORT</ref>();</highlight></codeline>
<codeline lineno="864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5da004953b01233fe72cb41c5d218abb858" kindref="member">SCIP_LPERROR</ref>;</highlight></codeline>
<codeline lineno="865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>(*rngcount)++;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="867"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="868"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="869"><highlight class="normal">}</highlight></codeline>
<codeline lineno="870"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="871"><highlight class="comment">/**<sp/>converts<sp/>Gurobi&apos;s<sp/>sen/rhs<sp/>pairs<sp/>into<sp/>SCIP&apos;s<sp/>lhs/rhs<sp/>pairs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="872"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="873"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/>reconvertBothSides(</highlight></codeline>
<codeline lineno="874"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="875"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nrows,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>number<sp/>of<sp/>rows<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="876"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lhs,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>buffer<sp/>to<sp/>store<sp/>the<sp/>left<sp/>hand<sp/>side<sp/>vector<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="877"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>buffer<sp/>to<sp/>store<sp/>the<sp/>right<sp/>hand<sp/>side<sp/>vector<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="878"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="879"><highlight class="normal">{</highlight></codeline>
<codeline lineno="880"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="881"><highlight class="normal"></highlight></codeline>
<codeline lineno="882"><highlight class="normal"><sp/><sp/><sp/>assert(lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="883"><highlight class="normal"><sp/><sp/><sp/>assert(nrows<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="884"><highlight class="normal"><sp/><sp/><sp/>assert(lhs<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="885"><highlight class="normal"><sp/><sp/><sp/>assert(rhs<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="886"><highlight class="normal"></highlight></codeline>
<codeline lineno="887"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nrows;<sp/>++i)</highlight></codeline>
<codeline lineno="888"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="889"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<sp/>lpi-&gt;senarray[i]<sp/>)</highlight></codeline>
<codeline lineno="890"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GRB_EQUAL:</highlight></codeline>
<codeline lineno="892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lhs[i]<sp/>=<sp/>lpi-&gt;rhsarray[i];</highlight></codeline>
<codeline lineno="893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs[i]<sp/>=<sp/>lpi-&gt;rhsarray[i];</highlight></codeline>
<codeline lineno="894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="895"><highlight class="normal"></highlight></codeline>
<codeline lineno="896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GRB_LESS_EQUAL:</highlight></codeline>
<codeline lineno="897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lhs[i]<sp/>=<sp/>-GRB_INFINITY;</highlight></codeline>
<codeline lineno="898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs[i]<sp/>=<sp/>lpi-&gt;rhsarray[i];</highlight></codeline>
<codeline lineno="899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="900"><highlight class="normal"></highlight></codeline>
<codeline lineno="901"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GRB_GREATER_EQUAL:</highlight></codeline>
<codeline lineno="902"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lhs[i]<sp/>=<sp/>lpi-&gt;rhsarray[i];</highlight></codeline>
<codeline lineno="903"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs[i]<sp/>=<sp/>GRB_INFINITY;</highlight></codeline>
<codeline lineno="904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="905"><highlight class="normal"></highlight></codeline>
<codeline lineno="906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="907"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pub__message_8h_1a354566c209c3a7fe5c870d4ee8c07bc5" kindref="member">SCIPerrorMessage</ref>(</highlight><highlight class="stringliteral">&quot;invalid<sp/>row<sp/>sense\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="908"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="def_8h_1ad8669395a2a82ed74b9b364f4a310c56" kindref="member">SCIPABORT</ref>();</highlight></codeline>
<codeline lineno="909"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5da004953b01233fe72cb41c5d218abb858" kindref="member">SCIP_LPERROR</ref>;</highlight></codeline>
<codeline lineno="910"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="911"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(lhs[i]<sp/>&lt;=<sp/>rhs[i]);</highlight></codeline>
<codeline lineno="912"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="913"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="914"><highlight class="normal">}</highlight></codeline>
<codeline lineno="915"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="916"><highlight class="comment">/**<sp/>converts<sp/>Gurobi&apos;s<sp/>sen/rhs<sp/>pairs<sp/>into<sp/>SCIP&apos;s<sp/>lhs/rhs<sp/>pairs,<sp/>only<sp/>storing<sp/>the<sp/>left<sp/>hand<sp/>side<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="917"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="918"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/>reconvertLhs(</highlight></codeline>
<codeline lineno="919"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="920"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nrows,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>number<sp/>of<sp/>rows<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="921"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lhs<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>buffer<sp/>to<sp/>store<sp/>the<sp/>left<sp/>hand<sp/>side<sp/>vector<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="922"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="923"><highlight class="normal">{</highlight></codeline>
<codeline lineno="924"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="925"><highlight class="normal"></highlight></codeline>
<codeline lineno="926"><highlight class="normal"><sp/><sp/><sp/>assert(lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="927"><highlight class="normal"><sp/><sp/><sp/>assert(nrows<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="928"><highlight class="normal"><sp/><sp/><sp/>assert(lhs<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="929"><highlight class="normal"></highlight></codeline>
<codeline lineno="930"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nrows;<sp/>++i)</highlight></codeline>
<codeline lineno="931"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<sp/>lpi-&gt;senarray[i]<sp/>)</highlight></codeline>
<codeline lineno="933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GRB_EQUAL:</highlight></codeline>
<codeline lineno="935"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lhs[i]<sp/>=<sp/>lpi-&gt;rhsarray[i];</highlight></codeline>
<codeline lineno="936"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="937"><highlight class="normal"></highlight></codeline>
<codeline lineno="938"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GRB_LESS_EQUAL:</highlight></codeline>
<codeline lineno="939"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lhs[i]<sp/>=<sp/>-GRB_INFINITY;</highlight></codeline>
<codeline lineno="940"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="941"><highlight class="normal"></highlight></codeline>
<codeline lineno="942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GRB_GREATER_EQUAL:</highlight></codeline>
<codeline lineno="943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lhs[i]<sp/>=<sp/>lpi-&gt;rhsarray[i];</highlight></codeline>
<codeline lineno="944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="945"><highlight class="normal"></highlight></codeline>
<codeline lineno="946"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pub__message_8h_1a354566c209c3a7fe5c870d4ee8c07bc5" kindref="member">SCIPerrorMessage</ref>(</highlight><highlight class="stringliteral">&quot;invalid<sp/>row<sp/>sense\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="def_8h_1ad8669395a2a82ed74b9b364f4a310c56" kindref="member">SCIPABORT</ref>();</highlight></codeline>
<codeline lineno="949"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5da004953b01233fe72cb41c5d218abb858" kindref="member">SCIP_LPERROR</ref>;</highlight></codeline>
<codeline lineno="950"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="951"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="952"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="953"><highlight class="normal">}</highlight></codeline>
<codeline lineno="954"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="955"><highlight class="comment">/**<sp/>converts<sp/>Gurobi&apos;s<sp/>sen/rhs<sp/>pairs<sp/>into<sp/>SCIP&apos;s<sp/>lhs/rhs<sp/>pairs,<sp/>only<sp/>storing<sp/>the<sp/>right<sp/>hand<sp/>side<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="956"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="957"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/>reconvertRhs(</highlight></codeline>
<codeline lineno="958"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="959"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nrows,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>number<sp/>of<sp/>rows<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="960"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>buffer<sp/>to<sp/>store<sp/>the<sp/>right<sp/>hand<sp/>side<sp/>vector<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="961"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="962"><highlight class="normal">{</highlight></codeline>
<codeline lineno="963"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="964"><highlight class="normal"></highlight></codeline>
<codeline lineno="965"><highlight class="normal"><sp/><sp/><sp/>assert(lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="966"><highlight class="normal"><sp/><sp/><sp/>assert(nrows<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="967"><highlight class="normal"><sp/><sp/><sp/>assert(rhs<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="968"><highlight class="normal"></highlight></codeline>
<codeline lineno="969"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nrows;<sp/>++i)</highlight></codeline>
<codeline lineno="970"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<sp/>lpi-&gt;senarray[i]<sp/>)</highlight></codeline>
<codeline lineno="972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GRB_EQUAL:</highlight></codeline>
<codeline lineno="974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs[i]<sp/>=<sp/>lpi-&gt;rhsarray[i];</highlight></codeline>
<codeline lineno="975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="976"><highlight class="normal"></highlight></codeline>
<codeline lineno="977"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GRB_LESS_EQUAL:</highlight></codeline>
<codeline lineno="978"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs[i]<sp/>=<sp/>lpi-&gt;rhsarray[i];</highlight></codeline>
<codeline lineno="979"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="980"><highlight class="normal"></highlight></codeline>
<codeline lineno="981"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GRB_GREATER_EQUAL:</highlight></codeline>
<codeline lineno="982"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs[i]<sp/>=<sp/>GRB_INFINITY;</highlight></codeline>
<codeline lineno="983"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="984"><highlight class="normal"></highlight></codeline>
<codeline lineno="985"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="986"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pub__message_8h_1a354566c209c3a7fe5c870d4ee8c07bc5" kindref="member">SCIPerrorMessage</ref>(</highlight><highlight class="stringliteral">&quot;invalid<sp/>row<sp/>sense\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="987"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="def_8h_1ad8669395a2a82ed74b9b364f4a310c56" kindref="member">SCIPABORT</ref>();</highlight></codeline>
<codeline lineno="988"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5da004953b01233fe72cb41c5d218abb858" kindref="member">SCIP_LPERROR</ref>;</highlight></codeline>
<codeline lineno="989"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="990"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="991"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="992"><highlight class="normal">}</highlight></codeline>
<codeline lineno="993"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="994"><highlight class="comment">/**<sp/>converts<sp/>Gurobi&apos;s<sp/>sen/rhs<sp/>pairs<sp/>into<sp/>SCIP&apos;s<sp/>lhs/rhs<sp/>pairs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="995"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="996"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/>reconvertSides(</highlight></codeline>
<codeline lineno="997"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="998"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nrows,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>number<sp/>of<sp/>rows<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="999"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lhs,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>buffer<sp/>to<sp/>store<sp/>the<sp/>left<sp/>hand<sp/>side<sp/>vector,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1000"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>buffer<sp/>to<sp/>store<sp/>the<sp/>right<sp/>hand<sp/>side<sp/>vector,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1001"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1002"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1003"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>lhs<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>rhs<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>)</highlight></codeline>
<codeline lineno="1004"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1005"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/>reconvertBothSides(lpi,<sp/>nrows,<sp/>lhs,<sp/>rhs)<sp/>);</highlight></codeline>
<codeline lineno="1006"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1007"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>lhs<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>)</highlight></codeline>
<codeline lineno="1008"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1009"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/>reconvertLhs(lpi,<sp/>nrows,<sp/>lhs)<sp/>);</highlight></codeline>
<codeline lineno="1010"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1011"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>rhs<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>)</highlight></codeline>
<codeline lineno="1012"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1013"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/>reconvertRhs(lpi,<sp/>nrows,<sp/>rhs)<sp/>);</highlight></codeline>
<codeline lineno="1014"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1015"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="1016"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1017"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1018"><highlight class="comment">/**<sp/>after<sp/>restoring<sp/>old<sp/>LP<sp/>data,<sp/>need<sp/>to<sp/>resolve<sp/>the<sp/>LP<sp/>to<sp/>be<sp/>able<sp/>to<sp/>retrieve<sp/>correct<sp/>information<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1019"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1020"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/>restoreLPData(</highlight></codeline>
<codeline lineno="1021"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1022"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1023"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1024"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="1025"><highlight class="normal"></highlight></codeline>
<codeline lineno="1026"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>dual<sp/>simplex<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1027"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBsetintparam(lpi-&gt;grbenv,<sp/><ref refid="lpi__grb_8c_1a5397bab46d83535262cfd4f82ffcaf3e" kindref="member">GRB_INT_PAR_METHOD</ref>,<sp/><ref refid="lpi__grb_8c_1ac83a71f7ce20ef826c2fe19ded699f4e" kindref="member">GRB_METHOD_DUAL</ref>)<sp/>);</highlight></codeline>
<codeline lineno="1028"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBoptimize(lpi-&gt;grbmodel)<sp/>);</highlight></codeline>
<codeline lineno="1029"><highlight class="normal"></highlight></codeline>
<codeline lineno="1030"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NDEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1031"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cnt;</highlight></codeline>
<codeline lineno="1033"><highlight class="normal"></highlight></codeline>
<codeline lineno="1034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>modifying<sp/>the<sp/>LP,<sp/>restoring<sp/>the<sp/>old<sp/>LP,<sp/>and<sp/>loading<sp/>the<sp/>old<sp/>basis<sp/>is<sp/>not<sp/>enough<sp/>for<sp/>Gurobi<sp/>to<sp/>be<sp/>able<sp/>to<sp/>return</highlight></codeline>
<codeline lineno="1035"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>the<sp/>basis<sp/>-&gt;<sp/>we<sp/>have<sp/>to<sp/>resolve<sp/>the<sp/>LP;</highlight></codeline>
<codeline lineno="1036"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="1037"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>In<sp/>a<sp/>numerical<sp/>perfect<sp/>world,<sp/>GRB_REFACTORMAXITERS<sp/>below<sp/>should<sp/>be<sp/>zero.<sp/>However,<sp/>due<sp/>to<sp/>numerical<sp/>inaccuracies</highlight></codeline>
<codeline lineno="1038"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/>after<sp/>refactorization,<sp/>it<sp/>might<sp/>be<sp/>necessary<sp/>to<sp/>do<sp/>a<sp/>few<sp/>extra<sp/>pivot<sp/>steps.</highlight></codeline>
<codeline lineno="1039"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1040"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetdblattr(lpi-&gt;grbmodel,<sp/>GRB_DBL_ATTR_ITERCOUNT,<sp/>&amp;cnt)<sp/>);</highlight></codeline>
<codeline lineno="1041"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>cnt<sp/>&gt;<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<sp/><ref refid="lpi__grb_8c_1af04e284c919a738abab06fecab7c74db" kindref="member">GRB_REFACTORMAXITERS</ref><sp/>)</highlight></codeline>
<codeline lineno="1042"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pub__message_8h_1ab73695868f29c4bc1ab097afca40de3f" kindref="member">SCIPmessagePrintWarning</ref>(lpi-&gt;messagehdlr,<sp/></highlight><highlight class="stringliteral">&quot;Gurobi<sp/>needed<sp/>%d<sp/>iterations<sp/>to<sp/>restore<sp/>optimal<sp/>basis.\n&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>cnt);</highlight></codeline>
<codeline lineno="1043"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1044"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1045"><highlight class="normal"></highlight></codeline>
<codeline lineno="1046"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="1047"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1048"><highlight class="normal"></highlight></codeline>
<codeline lineno="1049"><highlight class="normal"></highlight></codeline>
<codeline lineno="1050"><highlight class="normal"></highlight></codeline>
<codeline lineno="1051"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1052"><highlight class="comment"><sp/>*<sp/>LP<sp/>Interface<sp/>Methods</highlight></codeline>
<codeline lineno="1053"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1054"><highlight class="normal"></highlight></codeline>
<codeline lineno="1055"><highlight class="normal"></highlight></codeline>
<codeline lineno="1056"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1057"><highlight class="comment"><sp/>*<sp/>Miscellaneous<sp/>Methods</highlight></codeline>
<codeline lineno="1058"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1059"><highlight class="normal"></highlight></codeline>
<codeline lineno="1060"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>grbname[100];</highlight></codeline>
<codeline lineno="1061"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1062"><highlight class="comment">/**@name<sp/>Miscellaneous<sp/>Methods<sp/>*/</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1063"><highlight class="comment">/**@{<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1064"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1065"><highlight class="comment">/**<sp/>gets<sp/>name<sp/>and<sp/>version<sp/>of<sp/>LP<sp/>solver<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1066" refid="lpi__grb_8c_1aed7c57c93675aae2562abab53b487ce7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="lpi__grb_8c_1aed7c57c93675aae2562abab53b487ce7" kindref="member">SCIPlpiGetSolverName</ref>(</highlight></codeline>
<codeline lineno="1067"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1068"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1069"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1070"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>major;</highlight></codeline>
<codeline lineno="1071"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>minor;</highlight></codeline>
<codeline lineno="1072"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>technical;</highlight></codeline>
<codeline lineno="1073"><highlight class="normal"></highlight></codeline>
<codeline lineno="1074"><highlight class="normal"><sp/><sp/><sp/>GRBversion(&amp;major,<sp/>&amp;minor,<sp/>&amp;technical);</highlight></codeline>
<codeline lineno="1075"><highlight class="normal"><sp/><sp/><sp/>sprintf(grbname,<sp/></highlight><highlight class="stringliteral">&quot;Gurobi<sp/>%d.%d.%d&quot;</highlight><highlight class="normal">,<sp/>major,<sp/>minor,<sp/>technical);</highlight></codeline>
<codeline lineno="1076"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>grbname;</highlight></codeline>
<codeline lineno="1077"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1078"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1079"><highlight class="comment">/**<sp/>gets<sp/>description<sp/>of<sp/>LP<sp/>solver<sp/>(developer,<sp/>webpage,<sp/>...)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1080" refid="lpi__grb_8c_1a6cfc10a9902214c1ac825998bebdea19" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><ref refid="lpi__grb_8c_1a6cfc10a9902214c1ac825998bebdea19" kindref="member">SCIPlpiGetSolverDesc</ref>(</highlight></codeline>
<codeline lineno="1081"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1082"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1083"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1084"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;Linear<sp/>Programming<sp/>Solver<sp/>developed<sp/>by<sp/>Gurobi<sp/>Optimization<sp/>(www.gurobi.com)&quot;</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="1085"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1086"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1087"><highlight class="comment">/**<sp/>gets<sp/>pointer<sp/>for<sp/>LP<sp/>solver<sp/>-<sp/>use<sp/>only<sp/>with<sp/>great<sp/>care</highlight></codeline>
<codeline lineno="1088"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="1089"><highlight class="comment"><sp/>*<sp/><sp/>Here<sp/>we<sp/>return<sp/>the<sp/>pointer<sp/>to<sp/>the<sp/>model.</highlight></codeline>
<codeline lineno="1090"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1091" refid="lpi__grb_8c_1ac8b0874105d4a69fd4e35455d488edb3" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*<sp/><ref refid="lpi__grb_8c_1ac8b0874105d4a69fd4e35455d488edb3" kindref="member">SCIPlpiGetSolverPointer</ref>(</highlight></codeline>
<codeline lineno="1092"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>an<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1093"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1094"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1095"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)<sp/>lpi-&gt;grbmodel;</highlight></codeline>
<codeline lineno="1096"><highlight class="normal">}</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1097"><highlight class="comment">/**@}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1098"><highlight class="normal"></highlight></codeline>
<codeline lineno="1099"><highlight class="normal"></highlight></codeline>
<codeline lineno="1100"><highlight class="normal"></highlight></codeline>
<codeline lineno="1101"><highlight class="normal"></highlight></codeline>
<codeline lineno="1102"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1103"><highlight class="comment"><sp/>*<sp/>LPI<sp/>Creation<sp/>and<sp/>Destruction<sp/>Methods</highlight></codeline>
<codeline lineno="1104"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1105"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1106"><highlight class="comment">/**@name<sp/>LPI<sp/>Creation<sp/>and<sp/>Destruction<sp/>Methods<sp/>*/</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1107"><highlight class="comment">/**@{<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1108"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1109"><highlight class="comment">/**<sp/>creates<sp/>an<sp/>LP<sp/>problem<sp/>object<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1110" refid="lpi__grb_8c_1ae522c0e79b2f2c7d185e6b6cafec1a3d" refkind="member"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="lpi__grb_8c_1ae522c0e79b2f2c7d185e6b6cafec1a3d" kindref="member">SCIPlpiCreate</ref>(</highlight></codeline>
<codeline lineno="1111"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>an<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1112"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__message_8h_1a7d71113339d14873806c1399442fae8d" kindref="member">SCIP_MESSAGEHDLR</ref>*<sp/><sp/><sp/><sp/><sp/>messagehdlr,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>message<sp/>handler<sp/>to<sp/>use<sp/>for<sp/>printing<sp/>messages,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1113"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>problem<sp/>name<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1114"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1afa3d076f8e5d2a8a31bf662ab24797cf" kindref="member">SCIP_OBJSEN</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objsen<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>objective<sp/>sense<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1115"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1116"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1117"><highlight class="normal"><sp/><sp/><sp/>assert(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>)<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">));<sp/></highlight><highlight class="comment">/*<sp/>Gurobi<sp/>only<sp/>works<sp/>with<sp/>doubles<sp/>as<sp/>floating<sp/>points<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1118"><highlight class="normal"><sp/><sp/><sp/>assert(</highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(<ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>)<sp/>==<sp/></highlight><highlight class="keyword">sizeof</highlight><highlight class="normal">(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">));<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Gurobi<sp/>only<sp/>works<sp/>with<sp/>ints<sp/>as<sp/>bools<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1119"><highlight class="normal"><sp/><sp/><sp/>assert(lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1120"><highlight class="normal"><sp/><sp/><sp/>assert(numlp<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="1121"><highlight class="normal"></highlight></codeline>
<codeline lineno="1122"><highlight class="normal"><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;SCIPlpiCreate()\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1123"><highlight class="normal"></highlight></codeline>
<codeline lineno="1124"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>create<sp/>environment</highlight></codeline>
<codeline lineno="1125"><highlight class="comment"><sp/><sp/><sp/><sp/>*</highlight></codeline>
<codeline lineno="1126"><highlight class="comment"><sp/><sp/><sp/><sp/>*<sp/>Each<sp/>problem<sp/>will<sp/>get<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>original<sp/>environment.<sp/>Thus,<sp/>grbenv<sp/>is<sp/>only<sp/>needed<sp/>once.</highlight></codeline>
<codeline lineno="1127"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1128"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>grbenv<sp/>==<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>)</highlight></codeline>
<codeline lineno="1129"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>initialize<sp/>environment<sp/>-<sp/>no<sp/>log<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1131"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>messagehdlr,<sp/>GRBloadenv(&amp;grbenv,<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>);</highlight></codeline>
<codeline lineno="1132"><highlight class="normal"></highlight></codeline>
<codeline lineno="1133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>turn<sp/>off<sp/>output<sp/>for<sp/>all<sp/>models<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>messagehdlr,<sp/>GRBsetintparam(grbenv,<sp/>GRB_INT_PAR_OUTPUTFLAG,<sp/>0)<sp/>);</highlight></codeline>
<codeline lineno="1135"><highlight class="normal"></highlight></codeline>
<codeline lineno="1136"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>turn<sp/>on<sp/>that<sp/>basis<sp/>information<sp/>for<sp/>infeasible<sp/>and<sp/>unbounded<sp/>models<sp/>is<sp/>available<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1137"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>messagehdlr,<sp/>GRBsetintparam(grbenv,<sp/>GRB_INT_PAR_INFUNBDINFO,<sp/>1)<sp/>);</highlight></codeline>
<codeline lineno="1138"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1139"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>grbenv<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="1140"><highlight class="normal"></highlight></codeline>
<codeline lineno="1141"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>create<sp/>empty<sp/>LPI<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1142"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7695e892dc456d85a3654eb158976921" kindref="member">SCIP_ALLOC</ref>(<sp/>BMSallocMemory(lpi)<sp/>);</highlight></codeline>
<codeline lineno="1143"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>messagehdlr,<sp/>GRBnewmodel(grbenv,<sp/>&amp;(*lpi)-&gt;grbmodel,<sp/>name,<sp/>0,<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>);</highlight></codeline>
<codeline lineno="1144"><highlight class="normal"></highlight></codeline>
<codeline lineno="1145"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>local<sp/>copy<sp/>of<sp/>environment<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1146"><highlight class="normal"><sp/><sp/><sp/>(*lpi)-&gt;grbenv<sp/>=<sp/>GRBgetenv((*lpi)-&gt;grbmodel);</highlight></codeline>
<codeline lineno="1147"><highlight class="normal"><sp/><sp/><sp/>(*lpi)-&gt;senarray<sp/>=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1148"><highlight class="normal"><sp/><sp/><sp/>(*lpi)-&gt;rhsarray<sp/>=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1149"><highlight class="normal"><sp/><sp/><sp/>(*lpi)-&gt;valarray<sp/>=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1150"><highlight class="normal"><sp/><sp/><sp/>(*lpi)-&gt;cstat<sp/>=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1151"><highlight class="normal"><sp/><sp/><sp/>(*lpi)-&gt;rstat<sp/>=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1152"><highlight class="normal"><sp/><sp/><sp/>(*lpi)-&gt;indarray<sp/>=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1153"><highlight class="normal"><sp/><sp/><sp/>(*lpi)-&gt;sidechgsize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1154"><highlight class="normal"><sp/><sp/><sp/>(*lpi)-&gt;valsize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1155"><highlight class="normal"><sp/><sp/><sp/>(*lpi)-&gt;cstatsize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1156"><highlight class="normal"><sp/><sp/><sp/>(*lpi)-&gt;rstatsize<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1157"><highlight class="normal"><sp/><sp/><sp/>(*lpi)-&gt;iterations<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1158"><highlight class="normal"><sp/><sp/><sp/>(*lpi)-&gt;solisbasic<sp/>=<sp/><ref refid="def_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="1159"><highlight class="normal"><sp/><sp/><sp/>(*lpi)-&gt;fromscratch<sp/>=<sp/><ref refid="def_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="1160"><highlight class="normal"><sp/><sp/><sp/>(*lpi)-&gt;pricing<sp/>=<sp/><ref refid="type__lpi_8h_1a0483a21478d8f9c8d7c1ba9e3473d775a840117e919783bcc69646f544c2db051" kindref="member">SCIP_PRICING_LPIDEFAULT</ref>;</highlight></codeline>
<codeline lineno="1161"><highlight class="normal"><sp/><sp/><sp/>(*lpi)-&gt;messagehdlr<sp/>=<sp/>messagehdlr;</highlight></codeline>
<codeline lineno="1162"><highlight class="normal"><sp/><sp/><sp/>invalidateSolution(*lpi);</highlight></codeline>
<codeline lineno="1163"><highlight class="normal"></highlight></codeline>
<codeline lineno="1164"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>default<sp/>parameter<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1165"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/>getParameterValues((*lpi),<sp/>&amp;((*lpi)-&gt;defparam))<sp/>);</highlight></codeline>
<codeline lineno="1166"><highlight class="normal"><sp/><sp/><sp/>copyParameterValues(&amp;((*lpi)-&gt;curparam),<sp/>&amp;((*lpi)-&gt;defparam));</highlight></codeline>
<codeline lineno="1167"><highlight class="normal"><sp/><sp/><sp/>copyParameterValues(&amp;((*lpi)-&gt;grbparam),<sp/>&amp;((*lpi)-&gt;defparam));</highlight></codeline>
<codeline lineno="1168"><highlight class="normal"><sp/><sp/><sp/>++numlp;</highlight></codeline>
<codeline lineno="1169"><highlight class="normal"></highlight></codeline>
<codeline lineno="1170"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>objective<sp/>sense<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1171"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/><ref refid="lpi__grb_8c_1a0d794ce162ec1c45eb776baa2ffdc79c" kindref="member">SCIPlpiChgObjsen</ref>(*lpi,<sp/>objsen)<sp/>);</highlight></codeline>
<codeline lineno="1172"><highlight class="normal"></highlight></codeline>
<codeline lineno="1173"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>default<sp/>pricing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1174"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/><ref refid="lpi__grb_8c_1a8dac6dec76901acef9c18397582c5e9a" kindref="member">SCIPlpiSetIntpar</ref>(*lpi,<sp/><ref refid="type__lpi_8h_1ac333f54119f676d19d81bed186b0038ba0114e2317d0236d43fb3b297ee9aea8d" kindref="member">SCIP_LPPAR_PRICING</ref>,<sp/>(*lpi)-&gt;pricing)<sp/>);</highlight></codeline>
<codeline lineno="1175"><highlight class="normal"></highlight></codeline>
<codeline lineno="1176"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!warnedbeta<sp/>)<sp/>{</highlight></codeline>
<codeline lineno="1177"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>warnedbeta<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="1178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pub__message_8h_1ab73695868f29c4bc1ab097afca40de3f" kindref="member">SCIPmessagePrintWarning</ref>(messagehdlr,<sp/></highlight><highlight class="stringliteral">&quot;The<sp/>Gurobi<sp/>LPI<sp/>is<sp/>a<sp/>beta<sp/>version<sp/>only<sp/>-<sp/>use<sp/>with<sp/>care.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1179"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1180"><highlight class="normal"></highlight></codeline>
<codeline lineno="1181"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="1182"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1183"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1184"><highlight class="comment">/**<sp/>deletes<sp/>an<sp/>LP<sp/>problem<sp/>object<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1185" refid="lpi__grb_8c_1a6dfadd74b4f72eea58d0946ec9ea6f60" refkind="member"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="lpi__grb_8c_1a6dfadd74b4f72eea58d0946ec9ea6f60" kindref="member">SCIPlpiFree</ref>(</highlight></codeline>
<codeline lineno="1186"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>an<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1187"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1188"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1189"><highlight class="normal"><sp/><sp/><sp/>assert(grbenv<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1190"><highlight class="normal"><sp/><sp/><sp/>assert(lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1191"><highlight class="normal"><sp/><sp/><sp/>assert(*lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1192"><highlight class="normal"></highlight></codeline>
<codeline lineno="1193"><highlight class="normal"><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;SCIPlpiFree()\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1194"><highlight class="normal"></highlight></codeline>
<codeline lineno="1195"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>free<sp/>model<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1196"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>(*lpi)-&gt;messagehdlr,<sp/>GRBfreemodel((*lpi)-&gt;grbmodel)<sp/>);</highlight></codeline>
<codeline lineno="1197"><highlight class="normal"></highlight></codeline>
<codeline lineno="1198"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>free<sp/>memory<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1199"><highlight class="normal"><sp/><sp/><sp/>BMSfreeMemoryArrayNull(&amp;(*lpi)-&gt;senarray);</highlight></codeline>
<codeline lineno="1200"><highlight class="normal"><sp/><sp/><sp/>BMSfreeMemoryArrayNull(&amp;(*lpi)-&gt;rhsarray);</highlight></codeline>
<codeline lineno="1201"><highlight class="normal"><sp/><sp/><sp/>BMSfreeMemoryArrayNull(&amp;(*lpi)-&gt;cstat);</highlight></codeline>
<codeline lineno="1202"><highlight class="normal"><sp/><sp/><sp/>BMSfreeMemoryArrayNull(&amp;(*lpi)-&gt;rstat);</highlight></codeline>
<codeline lineno="1203"><highlight class="normal"><sp/><sp/><sp/>BMSfreeMemory(lpi);</highlight></codeline>
<codeline lineno="1204"><highlight class="normal"></highlight></codeline>
<codeline lineno="1205"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>free<sp/>environment<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1206"><highlight class="normal"><sp/><sp/><sp/>--numlp;</highlight></codeline>
<codeline lineno="1207"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>numlp<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="1208"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>GRBfreeenv(grbenv);</highlight></codeline>
<codeline lineno="1210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>grbenv<sp/>=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="1211"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1212"><highlight class="normal"></highlight></codeline>
<codeline lineno="1213"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="1214"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1215"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1216"><highlight class="comment">/**@}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1217"><highlight class="normal"></highlight></codeline>
<codeline lineno="1218"><highlight class="normal"></highlight></codeline>
<codeline lineno="1219"><highlight class="normal"></highlight></codeline>
<codeline lineno="1220"><highlight class="normal"></highlight></codeline>
<codeline lineno="1221"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1222"><highlight class="comment"><sp/>*<sp/>Modification<sp/>Methods</highlight></codeline>
<codeline lineno="1223"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1224"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1225"><highlight class="comment">/**@name<sp/>Modification<sp/>Methods<sp/>*/</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1226"><highlight class="comment">/**@{<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1227"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1228"><highlight class="comment">/**<sp/>copies<sp/>LP<sp/>data<sp/>with<sp/>column<sp/>matrix<sp/>into<sp/>LP<sp/>solver<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1229" refid="lpi__grb_8c_1ae23bc1c98c8547a0ba03682d100365dd" refkind="member"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="lpi__grb_8c_1ae23bc1c98c8547a0ba03682d100365dd" kindref="member">SCIPlpiLoadColLP</ref>(</highlight></codeline>
<codeline lineno="1230"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1231"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1afa3d076f8e5d2a8a31bf662ab24797cf" kindref="member">SCIP_OBJSEN</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objsen,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>objective<sp/>sense<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1232"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ncols,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>number<sp/>of<sp/>columns<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1233"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/>obj,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>objective<sp/>function<sp/>values<sp/>of<sp/>columns<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1234"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/>lb,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>lower<sp/>bounds<sp/>of<sp/>columns<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1235"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/>ub,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>upper<sp/>bounds<sp/>of<sp/>columns<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1236"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>colnames,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>column<sp/>names,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1237"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nrows,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>number<sp/>of<sp/>rows<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1238"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/>lhs,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>left<sp/>hand<sp/>sides<sp/>of<sp/>rows<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1239"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/>rhs,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>right<sp/>hand<sp/>sides<sp/>of<sp/>rows<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1240"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rownames,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>row<sp/>names,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1241"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nnonz,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>number<sp/>of<sp/>nonzero<sp/>elements<sp/>in<sp/>the<sp/>constraint<sp/>matrix<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1242"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>beg,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>start<sp/>index<sp/>of<sp/>each<sp/>column<sp/>in<sp/>ind-<sp/>and<sp/>val-array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1243"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ind,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>row<sp/>indices<sp/>of<sp/>constraint<sp/>matrix<sp/>entries<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1244"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/>val<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>values<sp/>of<sp/>constraint<sp/>matrix<sp/>entries<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1245"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1246"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1247"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>cnt;</highlight></codeline>
<codeline lineno="1248"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rngcount;</highlight></codeline>
<codeline lineno="1249"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>c;</highlight></codeline>
<codeline lineno="1250"><highlight class="normal"></highlight></codeline>
<codeline lineno="1251"><highlight class="normal"><sp/><sp/><sp/>assert(lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1252"><highlight class="normal"><sp/><sp/><sp/>assert(lpi-&gt;grbmodel<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1253"><highlight class="normal"><sp/><sp/><sp/>assert(lpi-&gt;grbenv<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1254"><highlight class="normal"><sp/><sp/><sp/>assert(objsen<sp/>==<sp/><ref refid="type__lpi_8h_1af1bc7f4fad28ccf4753250fa0558373ba32ae01999ecd89f94f4a0bd0b6be60c6" kindref="member">SCIP_OBJSEN_MAXIMIZE</ref><sp/>||<sp/>objsen<sp/>==<sp/><ref refid="type__lpi_8h_1af1bc7f4fad28ccf4753250fa0558373bab25a52cd6604d9c8c5fd02c5e03180a7" kindref="member">SCIP_OBJSEN_MINIMIZE</ref>);</highlight></codeline>
<codeline lineno="1255"><highlight class="normal"></highlight></codeline>
<codeline lineno="1256"><highlight class="normal"><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;loading<sp/>LP<sp/>in<sp/>column<sp/>format<sp/>into<sp/>Gurobi:<sp/>%d<sp/>cols,<sp/>%d<sp/>rows\n&quot;</highlight><highlight class="normal">,<sp/>ncols,<sp/>nrows);</highlight></codeline>
<codeline lineno="1257"><highlight class="normal"></highlight></codeline>
<codeline lineno="1258"><highlight class="normal"><sp/><sp/><sp/>invalidateSolution(lpi);</highlight></codeline>
<codeline lineno="1259"><highlight class="normal"></highlight></codeline>
<codeline lineno="1260"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/>ensureSidechgMem(lpi,<sp/>nrows)<sp/>);</highlight></codeline>
<codeline lineno="1261"><highlight class="normal"></highlight></codeline>
<codeline lineno="1262"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>convert<sp/>lhs/rhs<sp/>into<sp/>sen/rhs/range<sp/>tuples<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1263"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/>convertSides(lpi,<sp/>nrows,<sp/>lhs,<sp/>rhs,<sp/>&amp;rngcount)<sp/>);</highlight></codeline>
<codeline lineno="1264"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>rngcount<sp/>==<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="1265"><highlight class="normal"></highlight></codeline>
<codeline lineno="1266"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>calculate<sp/>column<sp/>lengths<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1267"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7695e892dc456d85a3654eb158976921" kindref="member">SCIP_ALLOC</ref>(<sp/>BMSallocMemoryArray(&amp;cnt,<sp/>ncols)<sp/>);</highlight></codeline>
<codeline lineno="1268"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>c<sp/>=<sp/>0;<sp/>c<sp/>&lt;<sp/>ncols-1;<sp/>++c<sp/>)</highlight></codeline>
<codeline lineno="1269"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1270"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>cnt[c]<sp/>=<sp/>beg[c+1]<sp/>-<sp/>beg[c];</highlight></codeline>
<codeline lineno="1271"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(cnt[c]<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="1272"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1273"><highlight class="normal"><sp/><sp/><sp/>cnt[ncols-1]<sp/>=<sp/>nnonz<sp/>-<sp/>beg[ncols-1];</highlight></codeline>
<codeline lineno="1274"><highlight class="normal"><sp/><sp/><sp/>assert(cnt[ncols-1]<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="1275"><highlight class="normal"></highlight></codeline>
<codeline lineno="1276"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>delete<sp/>model<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1277"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>lpi-&gt;grbmodel<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="1278"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBfreemodel(lpi-&gt;grbmodel)<sp/>);</highlight></codeline>
<codeline lineno="1279"><highlight class="normal"></highlight></codeline>
<codeline lineno="1280"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>load<sp/>model<sp/>-<sp/>all<sp/>variables<sp/>are<sp/>continuous<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1281"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBloadmodel(lpi-&gt;grbenv,<sp/>&amp;(lpi-&gt;grbmodel),<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>ncols,<sp/>nrows,<sp/>objsen,<sp/>0.0,<sp/>(<ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*)obj,</highlight></codeline>
<codeline lineno="1282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi-&gt;senarray,<sp/>lpi-&gt;rhsarray,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*)beg,<sp/>cnt,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*)ind,<sp/>(<ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*)val,<sp/>(<ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*)lb,<sp/>(<ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*)ub,<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>colnames,<sp/>rownames)<sp/>);</highlight></codeline>
<codeline lineno="1283"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBupdatemodel(lpi-&gt;grbmodel)<sp/>);</highlight></codeline>
<codeline lineno="1284"><highlight class="normal"></highlight></codeline>
<codeline lineno="1285"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>free<sp/>temporary<sp/>memory<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1286"><highlight class="normal"><sp/><sp/><sp/>BMSfreeMemoryArray(&amp;cnt);</highlight></codeline>
<codeline lineno="1287"><highlight class="normal"></highlight></codeline>
<codeline lineno="1288"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NDEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1289"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>temp;</highlight></codeline>
<codeline lineno="1291"><highlight class="normal"></highlight></codeline>
<codeline lineno="1292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetintattr(lpi-&gt;grbmodel,<sp/>GRB_INT_ATTR_NUMVARS,<sp/>&amp;temp)<sp/>);</highlight></codeline>
<codeline lineno="1293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(<sp/>temp<sp/>==<sp/>ncols);</highlight></codeline>
<codeline lineno="1294"><highlight class="normal"></highlight></codeline>
<codeline lineno="1295"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetintattr(lpi-&gt;grbmodel,<sp/>GRB_INT_ATTR_NUMCONSTRS,<sp/>&amp;temp)<sp/>);</highlight></codeline>
<codeline lineno="1296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(<sp/>temp<sp/>==<sp/>nrows);</highlight></codeline>
<codeline lineno="1297"><highlight class="normal"></highlight></codeline>
<codeline lineno="1298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetintattr(lpi-&gt;grbmodel,<sp/>GRB_INT_ATTR_NUMNZS,<sp/>&amp;temp)<sp/>);</highlight></codeline>
<codeline lineno="1299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(<sp/>temp<sp/>==<sp/>nnonz);</highlight></codeline>
<codeline lineno="1300"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1301"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1302"><highlight class="normal"></highlight></codeline>
<codeline lineno="1303"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="1304"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1305"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1306"><highlight class="comment">/**<sp/>adds<sp/>columns<sp/>to<sp/>the<sp/>LP<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1307" refid="lpi__grb_8c_1add77293153dc03295e1782af22921906" refkind="member"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="lpi__grb_8c_1add77293153dc03295e1782af22921906" kindref="member">SCIPlpiAddCols</ref>(</highlight></codeline>
<codeline lineno="1308"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1309"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ncols,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>number<sp/>of<sp/>columns<sp/>to<sp/>be<sp/>added<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1310"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/>obj,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>objective<sp/>function<sp/>values<sp/>of<sp/>new<sp/>columns<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1311"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/>lb,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>lower<sp/>bounds<sp/>of<sp/>new<sp/>columns<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1312"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/>ub,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>upper<sp/>bounds<sp/>of<sp/>new<sp/>columns<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1313"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>colnames,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>column<sp/>names,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1314"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nnonz,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>number<sp/>of<sp/>nonzero<sp/>elements<sp/>to<sp/>be<sp/>added<sp/>to<sp/>the<sp/>constraint<sp/>matrix<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1315"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>beg,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>start<sp/>index<sp/>of<sp/>each<sp/>column<sp/>in<sp/>ind-<sp/>and<sp/>val-array,<sp/>or<sp/>NULL<sp/>if<sp/>nnonz<sp/>==<sp/>0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1316"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ind,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>row<sp/>indices<sp/>of<sp/>constraint<sp/>matrix<sp/>entries,<sp/>or<sp/>NULL<sp/>if<sp/>nnonz<sp/>==<sp/>0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1317"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/>val<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>values<sp/>of<sp/>constraint<sp/>matrix<sp/>entries,<sp/>or<sp/>NULL<sp/>if<sp/>nnonz<sp/>==<sp/>0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1318"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1319"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1320"><highlight class="normal"><sp/><sp/><sp/>assert(lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1321"><highlight class="normal"><sp/><sp/><sp/>assert(lpi-&gt;grbmodel<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1322"><highlight class="normal"></highlight></codeline>
<codeline lineno="1323"><highlight class="normal"><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;adding<sp/>%d<sp/>columns<sp/>with<sp/>%d<sp/>nonzeros<sp/>to<sp/>Gurobi\n&quot;</highlight><highlight class="normal">,<sp/>ncols,<sp/>nnonz);</highlight></codeline>
<codeline lineno="1324"><highlight class="normal"></highlight></codeline>
<codeline lineno="1325"><highlight class="normal"><sp/><sp/><sp/>invalidateSolution(lpi);</highlight></codeline>
<codeline lineno="1326"><highlight class="normal"></highlight></codeline>
<codeline lineno="1327"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>add<sp/>columns<sp/>-<sp/>all<sp/>new<sp/>variables<sp/>are<sp/>continuous<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1328"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBaddvars(lpi-&gt;grbmodel,<sp/>ncols,<sp/>nnonz,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*)beg,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*)ind,<sp/>(<ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*)val,<sp/>(<ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*)obj,<sp/>(<ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*)lb,<sp/>(<ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*)ub,<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/>colnames)<sp/>)</highlight></codeline>
<codeline lineno="1329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBupdatemodel(lpi-&gt;grbmodel)<sp/>);</highlight></codeline>
<codeline lineno="1330"><highlight class="normal"></highlight></codeline>
<codeline lineno="1331"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="1332"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1333"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1334"><highlight class="comment">/**<sp/>deletes<sp/>all<sp/>columns<sp/>in<sp/>the<sp/>given<sp/>range<sp/>from<sp/>LP<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1335" refid="lpi__grb_8c_1af651ff93b2be704cacb27c13b24ab311" refkind="member"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="lpi__grb_8c_1af651ff93b2be704cacb27c13b24ab311" kindref="member">SCIPlpiDelCols</ref>(</highlight></codeline>
<codeline lineno="1336"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1337"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>firstcol,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>column<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1338"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastcol<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>last<sp/>column<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1339"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1340"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1341"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j;</highlight></codeline>
<codeline lineno="1342"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>which;</highlight></codeline>
<codeline lineno="1343"><highlight class="normal"></highlight></codeline>
<codeline lineno="1344"><highlight class="normal"><sp/><sp/><sp/>assert(lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1345"><highlight class="normal"><sp/><sp/><sp/>assert(lpi-&gt;grbmodel<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1346"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NDEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1347"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>temp;</highlight></codeline>
<codeline lineno="1349"><highlight class="normal"></highlight></codeline>
<codeline lineno="1350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetintattr(lpi-&gt;grbmodel,<sp/>GRB_INT_ATTR_NUMVARS,<sp/>&amp;temp)<sp/>);</highlight></codeline>
<codeline lineno="1351"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(0<sp/>&lt;=<sp/>firstcol<sp/>&amp;&amp;<sp/>firstcol<sp/>&lt;=<sp/>lastcol<sp/>&amp;&amp;<sp/>lastcol<sp/>&lt;<sp/>temp);</highlight></codeline>
<codeline lineno="1352"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1353"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1354"><highlight class="normal"></highlight></codeline>
<codeline lineno="1355"><highlight class="normal"><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;deleting<sp/>%d<sp/>columns<sp/>from<sp/>Gurobi\n&quot;</highlight><highlight class="normal">,<sp/>lastcol<sp/>-<sp/>firstcol<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="1356"><highlight class="normal"></highlight></codeline>
<codeline lineno="1357"><highlight class="normal"><sp/><sp/><sp/>invalidateSolution(lpi);</highlight></codeline>
<codeline lineno="1358"><highlight class="normal"></highlight></codeline>
<codeline lineno="1359"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Gurobi<sp/>can&apos;t<sp/>delete<sp/>a<sp/>range<sp/>of<sp/>columns,<sp/>we<sp/>have<sp/>to<sp/>set<sp/>up<sp/>an<sp/>index<sp/>array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1360"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7695e892dc456d85a3654eb158976921" kindref="member">SCIP_ALLOC</ref>(<sp/>BMSallocMemoryArray(&amp;which,<sp/>lastcol-firstcol+1)<sp/>);;</highlight></codeline>
<codeline lineno="1361"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>j<sp/>=<sp/>firstcol;<sp/>j<sp/>&lt;=<sp/>lastcol;<sp/>++j<sp/>)</highlight></codeline>
<codeline lineno="1362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>which[j<sp/>-<sp/>firstcol]<sp/>=<sp/>j;</highlight></codeline>
<codeline lineno="1363"><highlight class="normal"></highlight></codeline>
<codeline lineno="1364"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBdelvars(lpi-&gt;grbmodel,<sp/>lastcol-firstcol+1,<sp/>which)<sp/>);</highlight></codeline>
<codeline lineno="1365"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBupdatemodel(lpi-&gt;grbmodel)<sp/>);</highlight></codeline>
<codeline lineno="1366"><highlight class="normal"></highlight></codeline>
<codeline lineno="1367"><highlight class="normal"><sp/><sp/><sp/>BMSfreeMemoryArray(<sp/>&amp;which<sp/>);</highlight></codeline>
<codeline lineno="1368"><highlight class="normal"></highlight></codeline>
<codeline lineno="1369"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="1370"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1371"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1372"><highlight class="comment">/**<sp/>deletes<sp/>columns<sp/>from<sp/>SCIP_LP;<sp/>the<sp/>new<sp/>position<sp/>of<sp/>a<sp/>column<sp/>must<sp/>not<sp/>be<sp/>greater<sp/>that<sp/>its<sp/>old<sp/>position<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1373" refid="lpi__grb_8c_1ac93976edb5a40906de3c2163b2fafec0" refkind="member"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="lpi__grb_8c_1ac93976edb5a40906de3c2163b2fafec0" kindref="member">SCIPlpiDelColset</ref>(</highlight></codeline>
<codeline lineno="1374"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1375"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dstat<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>deletion<sp/>status<sp/>of<sp/>columns</highlight></codeline>
<codeline lineno="1376"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>input:<sp/><sp/>1<sp/>if<sp/>column<sp/>should<sp/>be<sp/>deleted,<sp/>0<sp/>if<sp/>not</highlight></codeline>
<codeline lineno="1377"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>output:<sp/>new<sp/>position<sp/>of<sp/>column,<sp/>-1<sp/>if<sp/>column<sp/>was<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1378"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1379"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1380"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j,<sp/>nvars,<sp/>num;</highlight></codeline>
<codeline lineno="1381"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>which;</highlight></codeline>
<codeline lineno="1382"><highlight class="normal"></highlight></codeline>
<codeline lineno="1383"><highlight class="normal"><sp/><sp/><sp/>assert(lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1384"><highlight class="normal"><sp/><sp/><sp/>assert(lpi-&gt;grbmodel<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1385"><highlight class="normal"></highlight></codeline>
<codeline lineno="1386"><highlight class="normal"><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;deleting<sp/>a<sp/>column<sp/>set<sp/>from<sp/>Gurobi\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1387"><highlight class="normal"></highlight></codeline>
<codeline lineno="1388"><highlight class="normal"><sp/><sp/><sp/>invalidateSolution(lpi);</highlight></codeline>
<codeline lineno="1389"><highlight class="normal"></highlight></codeline>
<codeline lineno="1390"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Gurobi<sp/>can&apos;t<sp/>delete<sp/>a<sp/>range<sp/>of<sp/>columns,<sp/>we<sp/>have<sp/>to<sp/>set<sp/>up<sp/>an<sp/>index<sp/>array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1391"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetintattr(lpi-&gt;grbmodel,<sp/>GRB_INT_ATTR_NUMVARS,<sp/>&amp;nvars)<sp/>);</highlight></codeline>
<codeline lineno="1392"><highlight class="normal"></highlight></codeline>
<codeline lineno="1393"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7695e892dc456d85a3654eb158976921" kindref="member">SCIP_ALLOC</ref>(<sp/>BMSallocMemoryArray(&amp;which,<sp/>nvars)<sp/>);;</highlight></codeline>
<codeline lineno="1394"><highlight class="normal"><sp/><sp/><sp/>num<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1395"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>nvars;<sp/>++j<sp/>)</highlight></codeline>
<codeline lineno="1396"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>dstat[j]<sp/>)</highlight></codeline>
<codeline lineno="1398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>which[num++]<sp/>=<sp/>j;</highlight></codeline>
<codeline lineno="1399"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1400"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBdelvars(lpi-&gt;grbmodel,<sp/>num,<sp/>which)<sp/>);</highlight></codeline>
<codeline lineno="1401"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBupdatemodel(lpi-&gt;grbmodel)<sp/>);</highlight></codeline>
<codeline lineno="1402"><highlight class="normal"></highlight></codeline>
<codeline lineno="1403"><highlight class="normal"><sp/><sp/><sp/>BMSfreeMemoryArray(<sp/>&amp;which<sp/>);</highlight></codeline>
<codeline lineno="1404"><highlight class="normal"></highlight></codeline>
<codeline lineno="1405"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="1406"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1407"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1408"><highlight class="comment">/**<sp/>adds<sp/>rows<sp/>to<sp/>the<sp/>LP<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1409" refid="lpi__grb_8c_1a2bad82670d46254daf3e923898c404d5" refkind="member"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="lpi__grb_8c_1a2bad82670d46254daf3e923898c404d5" kindref="member">SCIPlpiAddRows</ref>(</highlight></codeline>
<codeline lineno="1410"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1411"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nrows,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>number<sp/>of<sp/>rows<sp/>to<sp/>be<sp/>added<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1412"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/>lhs,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>left<sp/>hand<sp/>sides<sp/>of<sp/>new<sp/>rows<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1413"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/>rhs,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>right<sp/>hand<sp/>sides<sp/>of<sp/>new<sp/>rows<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1414"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rownames,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>row<sp/>names,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1415"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nnonz,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>number<sp/>of<sp/>nonzero<sp/>elements<sp/>to<sp/>be<sp/>added<sp/>to<sp/>the<sp/>constraint<sp/>matrix<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1416"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>beg,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>start<sp/>index<sp/>of<sp/>each<sp/>row<sp/>in<sp/>ind-<sp/>and<sp/>val-array,<sp/>or<sp/>NULL<sp/>if<sp/>nnonz<sp/>==<sp/>0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1417"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ind,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>column<sp/>indices<sp/>of<sp/>constraint<sp/>matrix<sp/>entries,<sp/>or<sp/>NULL<sp/>if<sp/>nnonz<sp/>==<sp/>0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1418"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/>val<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>values<sp/>of<sp/>constraint<sp/>matrix<sp/>entries,<sp/>or<sp/>NULL<sp/>if<sp/>nnonz<sp/>==<sp/>0<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1419"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1420"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1421"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rngcount;</highlight></codeline>
<codeline lineno="1422"><highlight class="normal"></highlight></codeline>
<codeline lineno="1423"><highlight class="normal"><sp/><sp/><sp/>assert(lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1424"><highlight class="normal"><sp/><sp/><sp/>assert(lpi-&gt;grbmodel<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1425"><highlight class="normal"></highlight></codeline>
<codeline lineno="1426"><highlight class="normal"><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;adding<sp/>%d<sp/>rows<sp/>with<sp/>%d<sp/>nonzeros<sp/>to<sp/>Gurobi\n&quot;</highlight><highlight class="normal">,<sp/>nrows,<sp/>nnonz);</highlight></codeline>
<codeline lineno="1427"><highlight class="normal"></highlight></codeline>
<codeline lineno="1428"><highlight class="normal"><sp/><sp/><sp/>invalidateSolution(lpi);</highlight></codeline>
<codeline lineno="1429"><highlight class="normal"></highlight></codeline>
<codeline lineno="1430"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/>ensureSidechgMem(lpi,<sp/>nrows)<sp/>);</highlight></codeline>
<codeline lineno="1431"><highlight class="normal"></highlight></codeline>
<codeline lineno="1432"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>convert<sp/>lhs/rhs<sp/>into<sp/>sen/rhs/range<sp/>tuples<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1433"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/>convertSides(lpi,<sp/>nrows,<sp/>lhs,<sp/>rhs,<sp/>&amp;rngcount)<sp/>);</highlight></codeline>
<codeline lineno="1434"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>rngcount<sp/>==<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="1435"><highlight class="normal"></highlight></codeline>
<codeline lineno="1436"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>add<sp/>rows<sp/>to<sp/>LP<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1437"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBaddconstrs(lpi-&gt;grbmodel,<sp/>nrows,<sp/>nnonz,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*)beg,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*)ind,<sp/>(<ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*)val,<sp/>lpi-&gt;senarray,<sp/>lpi-&gt;rhsarray,<sp/>rownames)<sp/>);</highlight></codeline>
<codeline lineno="1438"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBupdatemodel(lpi-&gt;grbmodel)<sp/>);</highlight></codeline>
<codeline lineno="1439"><highlight class="normal"></highlight></codeline>
<codeline lineno="1440"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="1441"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1442"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1443"><highlight class="comment">/**<sp/>deletes<sp/>all<sp/>rows<sp/>in<sp/>the<sp/>given<sp/>range<sp/>from<sp/>LP<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1444" refid="lpi__grb_8c_1a95a88cc92b9c3061762849aeb2edc9ff" refkind="member"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="lpi__grb_8c_1a95a88cc92b9c3061762849aeb2edc9ff" kindref="member">SCIPlpiDelRows</ref>(</highlight></codeline>
<codeline lineno="1445"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1446"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>firstrow,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>row<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1447"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastrow<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>last<sp/>row<sp/>to<sp/>be<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1448"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1449"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1450"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1451"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>which;</highlight></codeline>
<codeline lineno="1452"><highlight class="normal"></highlight></codeline>
<codeline lineno="1453"><highlight class="normal"><sp/><sp/><sp/>assert(lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1454"><highlight class="normal"><sp/><sp/><sp/>assert(lpi-&gt;grbmodel<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1455"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NDEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1456"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nrows;</highlight></codeline>
<codeline lineno="1458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetintattr(lpi-&gt;grbmodel,<sp/>GRB_INT_ATTR_NUMCONSTRS,<sp/>&amp;nrows)<sp/>);</highlight></codeline>
<codeline lineno="1459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(0<sp/>&lt;=<sp/>firstrow<sp/>&amp;&amp;<sp/>firstrow<sp/>&lt;=<sp/>lastrow<sp/>&amp;&amp;<sp/>lastrow<sp/>&lt;<sp/>nrows);</highlight></codeline>
<codeline lineno="1460"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1461"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1462"><highlight class="normal"></highlight></codeline>
<codeline lineno="1463"><highlight class="normal"><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;deleting<sp/>%d<sp/>rows<sp/>from<sp/>Gurobi\n&quot;</highlight><highlight class="normal">,<sp/>lastrow<sp/>-<sp/>firstrow<sp/>+<sp/>1);</highlight></codeline>
<codeline lineno="1464"><highlight class="normal"></highlight></codeline>
<codeline lineno="1465"><highlight class="normal"><sp/><sp/><sp/>invalidateSolution(lpi);</highlight></codeline>
<codeline lineno="1466"><highlight class="normal"></highlight></codeline>
<codeline lineno="1467"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Gurobi<sp/>can&apos;t<sp/>delete<sp/>a<sp/>range<sp/>of<sp/>rows,<sp/>we<sp/>have<sp/>to<sp/>set<sp/>up<sp/>an<sp/>index<sp/>array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1468"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7695e892dc456d85a3654eb158976921" kindref="member">SCIP_ALLOC</ref>(<sp/>BMSallocMemoryArray(&amp;which,<sp/>lastrow-firstrow+1)<sp/>);;</highlight></codeline>
<codeline lineno="1469"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>firstrow;<sp/>i<sp/>&lt;=<sp/>lastrow;<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="1470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>which[i<sp/>-<sp/>firstrow]<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="1471"><highlight class="normal"></highlight></codeline>
<codeline lineno="1472"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBdelconstrs(lpi-&gt;grbmodel,<sp/>lastrow-firstrow+1,<sp/>which)<sp/>);</highlight></codeline>
<codeline lineno="1473"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBupdatemodel(lpi-&gt;grbmodel)<sp/>);</highlight></codeline>
<codeline lineno="1474"><highlight class="normal"></highlight></codeline>
<codeline lineno="1475"><highlight class="normal"><sp/><sp/><sp/>BMSfreeMemoryArray(<sp/>&amp;which<sp/>);</highlight></codeline>
<codeline lineno="1476"><highlight class="normal"></highlight></codeline>
<codeline lineno="1477"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="1478"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1479"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1480"><highlight class="comment">/**<sp/>deletes<sp/>rows<sp/>from<sp/>SCIP_LP;<sp/>the<sp/>new<sp/>position<sp/>of<sp/>a<sp/>row<sp/>must<sp/>not<sp/>be<sp/>greater<sp/>that<sp/>its<sp/>old<sp/>position<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1481" refid="lpi__grb_8c_1af7385b74de163f5ae25b77e99c7bdc1a" refkind="member"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="lpi__grb_8c_1af7385b74de163f5ae25b77e99c7bdc1a" kindref="member">SCIPlpiDelRowset</ref>(</highlight></codeline>
<codeline lineno="1482"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1483"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dstat<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>deletion<sp/>status<sp/>of<sp/>rows</highlight></codeline>
<codeline lineno="1484"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>input:<sp/><sp/>1<sp/>if<sp/>row<sp/>should<sp/>be<sp/>deleted,<sp/>0<sp/>if<sp/>not</highlight></codeline>
<codeline lineno="1485"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>output:<sp/>new<sp/>position<sp/>of<sp/>row,<sp/>-1<sp/>if<sp/>row<sp/>was<sp/>deleted<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1486"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1487"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1488"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>num;</highlight></codeline>
<codeline lineno="1489"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nrows;</highlight></codeline>
<codeline lineno="1490"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>which;</highlight></codeline>
<codeline lineno="1491"><highlight class="normal"></highlight></codeline>
<codeline lineno="1492"><highlight class="normal"><sp/><sp/><sp/>assert(lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1493"><highlight class="normal"><sp/><sp/><sp/>assert(lpi-&gt;grbmodel<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1494"><highlight class="normal"></highlight></codeline>
<codeline lineno="1495"><highlight class="normal"><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;deleting<sp/>a<sp/>row<sp/>set<sp/>from<sp/>Gurobi\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1496"><highlight class="normal"></highlight></codeline>
<codeline lineno="1497"><highlight class="normal"><sp/><sp/><sp/>invalidateSolution(lpi);</highlight></codeline>
<codeline lineno="1498"><highlight class="normal"></highlight></codeline>
<codeline lineno="1499"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Gurobi<sp/>can&apos;t<sp/>delete<sp/>a<sp/>range<sp/>of<sp/>rows,<sp/>we<sp/>have<sp/>to<sp/>set<sp/>up<sp/>an<sp/>index<sp/>array<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1500"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetintattr(lpi-&gt;grbmodel,<sp/>GRB_INT_ATTR_NUMCONSTRS,<sp/>&amp;nrows)<sp/>);</highlight></codeline>
<codeline lineno="1501"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7695e892dc456d85a3654eb158976921" kindref="member">SCIP_ALLOC</ref>(<sp/>BMSallocMemoryArray(&amp;which,<sp/>nrows)<sp/>);;</highlight></codeline>
<codeline lineno="1502"><highlight class="normal"><sp/><sp/><sp/>num<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1503"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nrows;<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="1504"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1505"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>dstat[i]<sp/>)</highlight></codeline>
<codeline lineno="1506"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>which[num++]<sp/>=<sp/>i;</highlight></codeline>
<codeline lineno="1507"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1508"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBdelconstrs(lpi-&gt;grbmodel,<sp/>num,<sp/>which)<sp/>);</highlight></codeline>
<codeline lineno="1509"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBupdatemodel(lpi-&gt;grbmodel)<sp/>);</highlight></codeline>
<codeline lineno="1510"><highlight class="normal"></highlight></codeline>
<codeline lineno="1511"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>update<sp/>dstat<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1512"><highlight class="normal"><sp/><sp/><sp/>num<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="1513"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nrows;<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="1514"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1515"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>dstat[i]<sp/>)</highlight></codeline>
<codeline lineno="1516"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1517"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dstat[i]<sp/>=<sp/>-1;</highlight></codeline>
<codeline lineno="1518"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>++num;</highlight></codeline>
<codeline lineno="1519"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1520"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1521"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dstat[i]<sp/>=<sp/>i<sp/>-<sp/>num;</highlight></codeline>
<codeline lineno="1522"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1523"><highlight class="normal"></highlight></codeline>
<codeline lineno="1524"><highlight class="normal"><sp/><sp/><sp/>BMSfreeMemoryArray(<sp/>&amp;which<sp/>);</highlight></codeline>
<codeline lineno="1525"><highlight class="normal"></highlight></codeline>
<codeline lineno="1526"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="1527"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1528"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1529"><highlight class="comment">/**<sp/>clears<sp/>the<sp/>whole<sp/>LP<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1530" refid="lpi__grb_8c_1a18664e9f784a12522aa9ec6e775e5a15" refkind="member"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="lpi__grb_8c_1a18664e9f784a12522aa9ec6e775e5a15" kindref="member">SCIPlpiClear</ref>(</highlight></codeline>
<codeline lineno="1531"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1532"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1533"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1534"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="1535"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>lpi-&gt;grbmodel<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="1536"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>lpi-&gt;grbenv<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="1537"><highlight class="normal"></highlight></codeline>
<codeline lineno="1538"><highlight class="normal"><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;clearing<sp/>Gurobi<sp/>LP\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1539"><highlight class="normal"></highlight></codeline>
<codeline lineno="1540"><highlight class="normal"><sp/><sp/><sp/>invalidateSolution(lpi);</highlight></codeline>
<codeline lineno="1541"><highlight class="normal"></highlight></codeline>
<codeline lineno="1542"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBfreemodel(lpi-&gt;grbmodel)<sp/>);</highlight></codeline>
<codeline lineno="1543"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBnewmodel(lpi-&gt;grbenv,<sp/>&amp;(lpi-&gt;grbmodel),<sp/></highlight><highlight class="stringliteral">&quot;&quot;</highlight><highlight class="normal">,<sp/>0,<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>,<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>)<sp/>);</highlight></codeline>
<codeline lineno="1544"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBupdatemodel(lpi-&gt;grbmodel)<sp/>);</highlight></codeline>
<codeline lineno="1545"><highlight class="normal"></highlight></codeline>
<codeline lineno="1546"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="1547"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1548"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1549"><highlight class="comment">/**<sp/>changes<sp/>lower<sp/>and<sp/>upper<sp/>bounds<sp/>of<sp/>columns<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1550" refid="lpi__grb_8c_1a69472179ed0e902cb865b8bd3941c461" refkind="member"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="lpi__grb_8c_1a69472179ed0e902cb865b8bd3941c461" kindref="member">SCIPlpiChgBounds</ref>(</highlight></codeline>
<codeline lineno="1551"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1552"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ncols,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>number<sp/>of<sp/>columns<sp/>to<sp/>change<sp/>bounds<sp/>for<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1553"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ind,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>column<sp/>indices<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1554"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/>lb,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>values<sp/>for<sp/>the<sp/>new<sp/>lower<sp/>bounds<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1555"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/>ub<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>values<sp/>for<sp/>the<sp/>new<sp/>upper<sp/>bounds<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1556"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1557"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1558"><highlight class="normal"><sp/><sp/><sp/>assert(lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1559"><highlight class="normal"><sp/><sp/><sp/>assert(lpi-&gt;grbmodel<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1560"><highlight class="normal"></highlight></codeline>
<codeline lineno="1561"><highlight class="normal"><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;changing<sp/>%d<sp/>bounds<sp/>in<sp/>Gurobi\n&quot;</highlight><highlight class="normal">,<sp/>ncols);</highlight></codeline>
<codeline lineno="1562"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SCIP_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1563"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>ncols;<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="1566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pub__message_8h_1abcfed97d6962c490af7c0a9a53c2f2b7" kindref="member">SCIPdebugPrintf</ref>(</highlight><highlight class="stringliteral">&quot;<sp/><sp/>col<sp/>%d:<sp/>[%g,%g]\n&quot;</highlight><highlight class="normal">,<sp/>ind[i],<sp/>lb[i],<sp/>ub[i]);</highlight></codeline>
<codeline lineno="1567"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1568"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1569"><highlight class="normal"></highlight></codeline>
<codeline lineno="1570"><highlight class="normal"><sp/><sp/><sp/>invalidateSolution(lpi);</highlight></codeline>
<codeline lineno="1571"><highlight class="normal"></highlight></codeline>
<codeline lineno="1572"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBsetdblattrlist(lpi-&gt;grbmodel,<sp/>GRB_DBL_ATTR_LB,<sp/>ncols,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*)ind,<sp/>(<ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*)lb)<sp/>);</highlight></codeline>
<codeline lineno="1573"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBsetdblattrlist(lpi-&gt;grbmodel,<sp/>GRB_DBL_ATTR_UB,<sp/>ncols,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*)ind,<sp/>(<ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*)ub)<sp/>);</highlight></codeline>
<codeline lineno="1574"><highlight class="normal"></highlight></codeline>
<codeline lineno="1575"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBupdatemodel(lpi-&gt;grbmodel)<sp/>);</highlight></codeline>
<codeline lineno="1576"><highlight class="normal"></highlight></codeline>
<codeline lineno="1577"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="1578"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1579"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1580"><highlight class="comment">/**<sp/>changes<sp/>left<sp/>and<sp/>right<sp/>hand<sp/>sides<sp/>of<sp/>rows<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1581" refid="lpi__grb_8c_1a00fa12a201791dbba7d4b17a75fe7ae2" refkind="member"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="lpi__grb_8c_1a00fa12a201791dbba7d4b17a75fe7ae2" kindref="member">SCIPlpiChgSides</ref>(</highlight></codeline>
<codeline lineno="1582"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1583"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nrows,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>number<sp/>of<sp/>rows<sp/>to<sp/>change<sp/>sides<sp/>for<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1584"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ind,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>row<sp/>indices<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1585"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/>lhs,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>new<sp/>values<sp/>for<sp/>left<sp/>hand<sp/>sides<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1586"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/>rhs<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>new<sp/>values<sp/>for<sp/>right<sp/>hand<sp/>sides<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1587"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1588"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1589"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>rngcount;</highlight></codeline>
<codeline lineno="1590"><highlight class="normal"></highlight></codeline>
<codeline lineno="1591"><highlight class="normal"><sp/><sp/><sp/>assert(lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1592"><highlight class="normal"><sp/><sp/><sp/>assert(lpi-&gt;grbmodel<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1593"><highlight class="normal"></highlight></codeline>
<codeline lineno="1594"><highlight class="normal"><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;changing<sp/>%d<sp/>sides<sp/>in<sp/>Gurobi\n&quot;</highlight><highlight class="normal">,<sp/>nrows);</highlight></codeline>
<codeline lineno="1595"><highlight class="normal"></highlight></codeline>
<codeline lineno="1596"><highlight class="normal"><sp/><sp/><sp/>invalidateSolution(lpi);</highlight></codeline>
<codeline lineno="1597"><highlight class="normal"></highlight></codeline>
<codeline lineno="1598"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>convert<sp/>lhs/rhs<sp/>into<sp/>sen/rhs/range<sp/>tuples<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1599"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/>ensureSidechgMem(lpi,<sp/>nrows)<sp/>);</highlight></codeline>
<codeline lineno="1600"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/>convertSides(lpi,<sp/>nrows,<sp/>lhs,<sp/>rhs,<sp/>&amp;rngcount)<sp/>);</highlight></codeline>
<codeline lineno="1601"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>rngcount<sp/>==<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="1602"><highlight class="normal"></highlight></codeline>
<codeline lineno="1603"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>change<sp/>row<sp/>sides<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1604"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBsetdblattrlist(lpi-&gt;grbmodel,<sp/>GRB_DBL_ATTR_RHS,<sp/>nrows,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*)ind,<sp/>lpi-&gt;rhsarray)<sp/>);</highlight></codeline>
<codeline lineno="1605"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBsetcharattrlist(lpi-&gt;grbmodel,<sp/>GRB_CHAR_ATTR_SENSE,<sp/>nrows,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*)ind,<sp/>lpi-&gt;senarray)<sp/>);</highlight></codeline>
<codeline lineno="1606"><highlight class="normal"></highlight></codeline>
<codeline lineno="1607"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBupdatemodel(lpi-&gt;grbmodel)<sp/>);</highlight></codeline>
<codeline lineno="1608"><highlight class="normal"></highlight></codeline>
<codeline lineno="1609"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="1610"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1611"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1612"><highlight class="comment">/**<sp/>changes<sp/>a<sp/>single<sp/>coefficient<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1613" refid="lpi__grb_8c_1aff2b648673b8baac9903c236a97c267b" refkind="member"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="lpi__grb_8c_1aff2b648673b8baac9903c236a97c267b" kindref="member">SCIPlpiChgCoef</ref>(</highlight></codeline>
<codeline lineno="1614"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1615"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>row,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>row<sp/>number<sp/>of<sp/>coefficient<sp/>to<sp/>change<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1616"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>col,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>column<sp/>number<sp/>of<sp/>coefficient<sp/>to<sp/>change<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1617"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>newval<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>new<sp/>value<sp/>of<sp/>coefficient<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1618"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1619"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1620"><highlight class="normal"><sp/><sp/><sp/>assert(lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1621"><highlight class="normal"><sp/><sp/><sp/>assert(lpi-&gt;grbmodel<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1622"><highlight class="normal"></highlight></codeline>
<codeline lineno="1623"><highlight class="normal"><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;changing<sp/>coefficient<sp/>row<sp/>%d,<sp/>column<sp/>%d<sp/>in<sp/>Gurobi<sp/>to<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>row,<sp/>col,<sp/>newval);</highlight></codeline>
<codeline lineno="1624"><highlight class="normal"></highlight></codeline>
<codeline lineno="1625"><highlight class="normal"><sp/><sp/><sp/>invalidateSolution(lpi);</highlight></codeline>
<codeline lineno="1626"><highlight class="normal"></highlight></codeline>
<codeline lineno="1627"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBchgcoeffs(lpi-&gt;grbmodel,<sp/>1,<sp/>&amp;row,<sp/>&amp;col,<sp/>&amp;newval)<sp/>);</highlight></codeline>
<codeline lineno="1628"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBupdatemodel(lpi-&gt;grbmodel)<sp/>);</highlight></codeline>
<codeline lineno="1629"><highlight class="normal"></highlight></codeline>
<codeline lineno="1630"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="1631"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1632"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1633"><highlight class="comment">/**<sp/>changes<sp/>the<sp/>objective<sp/>sense<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1634" refid="lpi__grb_8c_1a0d794ce162ec1c45eb776baa2ffdc79c" refkind="member"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="lpi__grb_8c_1a0d794ce162ec1c45eb776baa2ffdc79c" kindref="member">SCIPlpiChgObjsen</ref>(</highlight></codeline>
<codeline lineno="1635"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1636"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1afa3d076f8e5d2a8a31bf662ab24797cf" kindref="member">SCIP_OBJSEN</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objsen<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>new<sp/>objective<sp/>sense<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1637"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1638"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1639"><highlight class="normal"><sp/><sp/><sp/>assert(lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1640"><highlight class="normal"><sp/><sp/><sp/>assert(lpi-&gt;grbmodel<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1641"><highlight class="normal"><sp/><sp/><sp/>assert(objsen<sp/>==<sp/><ref refid="type__lpi_8h_1af1bc7f4fad28ccf4753250fa0558373ba32ae01999ecd89f94f4a0bd0b6be60c6" kindref="member">SCIP_OBJSEN_MAXIMIZE</ref><sp/>||<sp/>objsen<sp/>==<sp/><ref refid="type__lpi_8h_1af1bc7f4fad28ccf4753250fa0558373bab25a52cd6604d9c8c5fd02c5e03180a7" kindref="member">SCIP_OBJSEN_MINIMIZE</ref>);</highlight></codeline>
<codeline lineno="1642"><highlight class="normal"></highlight></codeline>
<codeline lineno="1643"><highlight class="normal"><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;changing<sp/>objective<sp/>sense<sp/>in<sp/>Gurobi<sp/>to<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>objsen);</highlight></codeline>
<codeline lineno="1644"><highlight class="normal"></highlight></codeline>
<codeline lineno="1645"><highlight class="normal"><sp/><sp/><sp/>invalidateSolution(lpi);</highlight></codeline>
<codeline lineno="1646"><highlight class="normal"></highlight></codeline>
<codeline lineno="1647"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>The<sp/>objective<sp/>sense<sp/>of<sp/>Gurobi<sp/>and<sp/>SCIP<sp/>are<sp/>equal<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1648"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBsetintattr(lpi-&gt;grbmodel,<sp/>GRB_INT_ATTR_MODELSENSE,<sp/>objsen)<sp/>);</highlight></codeline>
<codeline lineno="1649"><highlight class="normal"></highlight></codeline>
<codeline lineno="1650"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBupdatemodel(lpi-&gt;grbmodel)<sp/>);</highlight></codeline>
<codeline lineno="1651"><highlight class="normal"></highlight></codeline>
<codeline lineno="1652"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="1653"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1654"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1655"><highlight class="comment">/**<sp/>changes<sp/>objective<sp/>values<sp/>of<sp/>columns<sp/>in<sp/>the<sp/>LP<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1656" refid="lpi__grb_8c_1a8f18465d14a5d1116c1dc8ea6cf90ddb" refkind="member"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="lpi__grb_8c_1a8f18465d14a5d1116c1dc8ea6cf90ddb" kindref="member">SCIPlpiChgObj</ref>(</highlight></codeline>
<codeline lineno="1657"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1658"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ncols,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>number<sp/>of<sp/>columns<sp/>to<sp/>change<sp/>objective<sp/>value<sp/>for<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1659"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ind,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>column<sp/>indices<sp/>to<sp/>change<sp/>objective<sp/>value<sp/>for<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1660"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>obj<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>new<sp/>objective<sp/>values<sp/>for<sp/>columns<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1661"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1662"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1663"><highlight class="normal"><sp/><sp/><sp/>assert(lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1664"><highlight class="normal"><sp/><sp/><sp/>assert(lpi-&gt;grbmodel<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1665"><highlight class="normal"></highlight></codeline>
<codeline lineno="1666"><highlight class="normal"><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;changing<sp/>%d<sp/>objective<sp/>values<sp/>in<sp/>Gurobi\n&quot;</highlight><highlight class="normal">,<sp/>ncols);</highlight></codeline>
<codeline lineno="1667"><highlight class="normal"></highlight></codeline>
<codeline lineno="1668"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBsetdblattrlist(lpi-&gt;grbmodel,<sp/>GRB_DBL_ATTR_OBJ,<sp/>ncols,<sp/>ind,<sp/>obj)<sp/>);</highlight></codeline>
<codeline lineno="1669"><highlight class="normal"></highlight></codeline>
<codeline lineno="1670"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBupdatemodel(lpi-&gt;grbmodel)<sp/>);</highlight></codeline>
<codeline lineno="1671"><highlight class="normal"></highlight></codeline>
<codeline lineno="1672"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="1673"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1674"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1675"><highlight class="comment">/**<sp/>multiplies<sp/>a<sp/>row<sp/>with<sp/>a<sp/>non-zero<sp/>scalar;<sp/>for<sp/>negative<sp/>scalars,<sp/>the<sp/>row&apos;s<sp/>sense<sp/>is<sp/>switched<sp/>accordingly<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1676" refid="lpi__grb_8c_1af94ca6a608b8e0be96158d78270b2715" refkind="member"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="lpi__grb_8c_1af94ca6a608b8e0be96158d78270b2715" kindref="member">SCIPlpiScaleRow</ref>(</highlight></codeline>
<codeline lineno="1677"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1678"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>row,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>row<sp/>number<sp/>to<sp/>scale<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1679"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scaleval<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>scaling<sp/>multiplier<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1680"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1681"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1682"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/>lhs;</highlight></codeline>
<codeline lineno="1683"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/>rhs;</highlight></codeline>
<codeline lineno="1684"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nnonz;</highlight></codeline>
<codeline lineno="1685"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncols;</highlight></codeline>
<codeline lineno="1686"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>beg;</highlight></codeline>
<codeline lineno="1687"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1688"><highlight class="normal"></highlight></codeline>
<codeline lineno="1689"><highlight class="normal"><sp/><sp/><sp/>assert(lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1690"><highlight class="normal"><sp/><sp/><sp/>assert(lpi-&gt;grbmodel<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1691"><highlight class="normal"><sp/><sp/><sp/>assert(scaleval<sp/>!=<sp/>0.0);</highlight></codeline>
<codeline lineno="1692"><highlight class="normal"></highlight></codeline>
<codeline lineno="1693"><highlight class="normal"><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;scaling<sp/>row<sp/>%d<sp/>with<sp/>factor<sp/>%g<sp/>in<sp/>Gurobi\n&quot;</highlight><highlight class="normal">,<sp/>row,<sp/>scaleval);</highlight></codeline>
<codeline lineno="1694"><highlight class="normal"></highlight></codeline>
<codeline lineno="1695"><highlight class="normal"><sp/><sp/><sp/>invalidateSolution(lpi);</highlight></codeline>
<codeline lineno="1696"><highlight class="normal"></highlight></codeline>
<codeline lineno="1697"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetintattr(lpi-&gt;grbmodel,<sp/>GRB_INT_ATTR_NUMVARS,<sp/>&amp;ncols)<sp/>);</highlight></codeline>
<codeline lineno="1698"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/>ensureValMem(lpi,<sp/>ncols)<sp/>);</highlight></codeline>
<codeline lineno="1699"><highlight class="normal"></highlight></codeline>
<codeline lineno="1700"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>row<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1701"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/><ref refid="lpi__grb_8c_1aa925f44c4f2e5640b79ff87f8166d92e" kindref="member">SCIPlpiGetRows</ref>(lpi,<sp/>row,<sp/>row,<sp/>&amp;lhs,<sp/>&amp;rhs,<sp/>&amp;nnonz,<sp/>&amp;beg,<sp/>lpi-&gt;indarray,<sp/>lpi-&gt;valarray)<sp/>);</highlight></codeline>
<codeline lineno="1702"><highlight class="normal"></highlight></codeline>
<codeline lineno="1703"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>scale<sp/>row<sp/>coefficients<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1704"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nnonz;<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="1705"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1706"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/><ref refid="lpi__grb_8c_1aff2b648673b8baac9903c236a97c267b" kindref="member">SCIPlpiChgCoef</ref>(lpi,<sp/>row,<sp/>lpi-&gt;indarray[i],<sp/>lpi-&gt;valarray[i]<sp/>*<sp/>scaleval)<sp/>);</highlight></codeline>
<codeline lineno="1707"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1708"><highlight class="normal"></highlight></codeline>
<codeline lineno="1709"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>scale<sp/>row<sp/>sides<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1710"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>lhs<sp/>&gt;<sp/>-GRB_INFINITY<sp/>)</highlight></codeline>
<codeline lineno="1711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lhs<sp/>*=<sp/>scaleval;</highlight></codeline>
<codeline lineno="1712"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>scaleval<sp/>&lt;<sp/>0.0<sp/>)</highlight></codeline>
<codeline lineno="1713"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lhs<sp/>=<sp/>GRB_INFINITY;</highlight></codeline>
<codeline lineno="1714"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>rhs<sp/>&lt;<sp/>GRB_INFINITY<sp/>)</highlight></codeline>
<codeline lineno="1715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rhs<sp/>*=<sp/>scaleval;</highlight></codeline>
<codeline lineno="1716"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>scaleval<sp/>&lt;<sp/>0.0<sp/>)</highlight></codeline>
<codeline lineno="1717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>rhs<sp/>=<sp/>-GRB_INFINITY;</highlight></codeline>
<codeline lineno="1718"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>scaleval<sp/>&gt;<sp/>0.0<sp/>)</highlight></codeline>
<codeline lineno="1719"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/><ref refid="lpi__grb_8c_1a00fa12a201791dbba7d4b17a75fe7ae2" kindref="member">SCIPlpiChgSides</ref>(lpi,<sp/>1,<sp/>&amp;row,<sp/>&amp;lhs,<sp/>&amp;rhs)<sp/>);</highlight></codeline>
<codeline lineno="1721"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1722"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1723"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/><ref refid="lpi__grb_8c_1a00fa12a201791dbba7d4b17a75fe7ae2" kindref="member">SCIPlpiChgSides</ref>(lpi,<sp/>1,<sp/>&amp;row,<sp/>&amp;rhs,<sp/>&amp;lhs)<sp/>);</highlight></codeline>
<codeline lineno="1725"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1726"><highlight class="normal"></highlight></codeline>
<codeline lineno="1727"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="1728"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1729"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1730"><highlight class="comment">/**<sp/>multiplies<sp/>a<sp/>column<sp/>with<sp/>a<sp/>non-zero<sp/>scalar;<sp/>the<sp/>objective<sp/>value<sp/>is<sp/>multiplied<sp/>with<sp/>the<sp/>scalar,<sp/>and<sp/>the<sp/>bounds</highlight></codeline>
<codeline lineno="1731"><highlight class="comment"><sp/>*<sp/><sp/>are<sp/>divided<sp/>by<sp/>the<sp/>scalar;<sp/>for<sp/>negative<sp/>scalars,<sp/>the<sp/>column&apos;s<sp/>bounds<sp/>are<sp/>switched</highlight></codeline>
<codeline lineno="1732"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1733" refid="lpi__grb_8c_1a598ccc37a344e88c584b37691f162432" refkind="member"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="lpi__grb_8c_1a598ccc37a344e88c584b37691f162432" kindref="member">SCIPlpiScaleCol</ref>(</highlight></codeline>
<codeline lineno="1734"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1735"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>col,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>column<sp/>number<sp/>to<sp/>scale<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1736"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scaleval<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>scaling<sp/>multiplier<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1737"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1738"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1739"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/>lb;</highlight></codeline>
<codeline lineno="1740"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/>ub;</highlight></codeline>
<codeline lineno="1741"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/>obj;</highlight></codeline>
<codeline lineno="1742"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nnonz;</highlight></codeline>
<codeline lineno="1743"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncols;</highlight></codeline>
<codeline lineno="1744"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>beg;</highlight></codeline>
<codeline lineno="1745"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="1746"><highlight class="normal"></highlight></codeline>
<codeline lineno="1747"><highlight class="normal"><sp/><sp/><sp/>assert(lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1748"><highlight class="normal"><sp/><sp/><sp/>assert(lpi-&gt;grbmodel<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1749"><highlight class="normal"><sp/><sp/><sp/>assert(scaleval<sp/>!=<sp/>0.0);</highlight></codeline>
<codeline lineno="1750"><highlight class="normal"></highlight></codeline>
<codeline lineno="1751"><highlight class="normal"><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;scaling<sp/>column<sp/>%d<sp/>with<sp/>factor<sp/>%g<sp/>in<sp/>Gurobi\n&quot;</highlight><highlight class="normal">,<sp/>col,<sp/>scaleval);</highlight></codeline>
<codeline lineno="1752"><highlight class="normal"></highlight></codeline>
<codeline lineno="1753"><highlight class="normal"><sp/><sp/><sp/>invalidateSolution(lpi);</highlight></codeline>
<codeline lineno="1754"><highlight class="normal"></highlight></codeline>
<codeline lineno="1755"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetintattr(lpi-&gt;grbmodel,<sp/>GRB_INT_ATTR_NUMVARS,<sp/>&amp;ncols)<sp/>);</highlight></codeline>
<codeline lineno="1756"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/>ensureValMem(lpi,<sp/>ncols)<sp/>);</highlight></codeline>
<codeline lineno="1757"><highlight class="normal"></highlight></codeline>
<codeline lineno="1758"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>the<sp/>column<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1759"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/><ref refid="lpi__grb_8c_1a9b718ef73cb5d6544472fb05f2193d37" kindref="member">SCIPlpiGetCols</ref>(lpi,<sp/>col,<sp/>col,<sp/>&amp;lb,<sp/>&amp;ub,<sp/>&amp;nnonz,<sp/>&amp;beg,<sp/>lpi-&gt;indarray,<sp/>lpi-&gt;valarray)<sp/>);</highlight></codeline>
<codeline lineno="1760"><highlight class="normal"></highlight></codeline>
<codeline lineno="1761"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>objective<sp/>coefficient<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1762"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/><ref refid="lpi__grb_8c_1accf7c7a0ba8f375dbfa9bce872586951" kindref="member">SCIPlpiGetObj</ref>(lpi,<sp/>col,<sp/>col,<sp/>&amp;obj)<sp/>);</highlight></codeline>
<codeline lineno="1763"><highlight class="normal"></highlight></codeline>
<codeline lineno="1764"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>scale<sp/>column<sp/>coefficients<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1765"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/><sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nnonz;<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="1766"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1767"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/><ref refid="lpi__grb_8c_1aff2b648673b8baac9903c236a97c267b" kindref="member">SCIPlpiChgCoef</ref>(lpi,<sp/>lpi-&gt;indarray[i],<sp/>col,<sp/>lpi-&gt;valarray[i]<sp/>*<sp/>scaleval)<sp/>);</highlight></codeline>
<codeline lineno="1768"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1769"><highlight class="normal"></highlight></codeline>
<codeline lineno="1770"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>scale<sp/>objective<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1771"><highlight class="normal"><sp/><sp/><sp/>obj<sp/>*=<sp/>scaleval;</highlight></codeline>
<codeline lineno="1772"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/><ref refid="lpi__grb_8c_1a8f18465d14a5d1116c1dc8ea6cf90ddb" kindref="member">SCIPlpiChgObj</ref>(lpi,<sp/>1,<sp/>&amp;col,<sp/>&amp;obj)<sp/>);</highlight></codeline>
<codeline lineno="1773"><highlight class="normal"></highlight></codeline>
<codeline lineno="1774"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>scale<sp/>column<sp/>bounds<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1775"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>lb<sp/>&gt;<sp/>-GRB_INFINITY<sp/>)</highlight></codeline>
<codeline lineno="1776"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lb<sp/>/=<sp/>scaleval;</highlight></codeline>
<codeline lineno="1777"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>scaleval<sp/>&lt;<sp/>0.0<sp/>)</highlight></codeline>
<codeline lineno="1778"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lb<sp/>=<sp/>GRB_INFINITY;</highlight></codeline>
<codeline lineno="1779"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>ub<sp/>&lt;<sp/>GRB_INFINITY<sp/>)</highlight></codeline>
<codeline lineno="1780"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ub<sp/>/=<sp/>scaleval;</highlight></codeline>
<codeline lineno="1781"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>scaleval<sp/>&lt;<sp/>0.0<sp/>)</highlight></codeline>
<codeline lineno="1782"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>ub<sp/>=<sp/>-GRB_INFINITY;</highlight></codeline>
<codeline lineno="1783"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>scaleval<sp/>&gt;<sp/>0.0<sp/>)</highlight></codeline>
<codeline lineno="1784"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1785"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/><ref refid="lpi__grb_8c_1a69472179ed0e902cb865b8bd3941c461" kindref="member">SCIPlpiChgBounds</ref>(lpi,<sp/>1,<sp/>&amp;col,<sp/>&amp;lb,<sp/>&amp;ub)<sp/>);</highlight></codeline>
<codeline lineno="1786"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1787"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1788"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1789"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/><ref refid="lpi__grb_8c_1a69472179ed0e902cb865b8bd3941c461" kindref="member">SCIPlpiChgBounds</ref>(lpi,<sp/>1,<sp/>&amp;col,<sp/>&amp;ub,<sp/>&amp;lb)<sp/>);</highlight></codeline>
<codeline lineno="1790"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1791"><highlight class="normal"></highlight></codeline>
<codeline lineno="1792"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="1793"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1794"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1795"><highlight class="comment">/**@}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1796"><highlight class="normal"></highlight></codeline>
<codeline lineno="1797"><highlight class="normal"></highlight></codeline>
<codeline lineno="1798"><highlight class="normal"></highlight></codeline>
<codeline lineno="1799"><highlight class="normal"></highlight></codeline>
<codeline lineno="1800"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="1801"><highlight class="comment"><sp/>*<sp/>Data<sp/>Accessing<sp/>Methods</highlight></codeline>
<codeline lineno="1802"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1803"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1804"><highlight class="comment">/**@name<sp/>Data<sp/>Accessing<sp/>Methods<sp/>*/</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1805"><highlight class="comment">/**@{<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1806"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1807"><highlight class="comment">/**<sp/>gets<sp/>the<sp/>number<sp/>of<sp/>rows<sp/>in<sp/>the<sp/>LP<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1808" refid="lpi__grb_8c_1afc4ba497c8fef592df0c5bf7745bf9d8" refkind="member"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="lpi__grb_8c_1afc4ba497c8fef592df0c5bf7745bf9d8" kindref="member">SCIPlpiGetNRows</ref>(</highlight></codeline>
<codeline lineno="1809"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1810"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nrows<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>number<sp/>of<sp/>rows<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1811"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1812"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1813"><highlight class="normal"><sp/><sp/><sp/>assert(lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1814"><highlight class="normal"><sp/><sp/><sp/>assert(nrows<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1815"><highlight class="normal"></highlight></codeline>
<codeline lineno="1816"><highlight class="normal"><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;getting<sp/>number<sp/>of<sp/>rows\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1817"><highlight class="normal"></highlight></codeline>
<codeline lineno="1818"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetintattr(lpi-&gt;grbmodel,<sp/>GRB_INT_ATTR_NUMCONSTRS,<sp/>nrows)<sp/>);</highlight></codeline>
<codeline lineno="1819"><highlight class="normal"></highlight></codeline>
<codeline lineno="1820"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="1821"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1822"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1823"><highlight class="comment">/**<sp/>gets<sp/>the<sp/>number<sp/>of<sp/>columns<sp/>in<sp/>the<sp/>LP<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1824" refid="lpi__grb_8c_1af0f0eab6882439ab9e263d6754c102f3" refkind="member"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="lpi__grb_8c_1af0f0eab6882439ab9e263d6754c102f3" kindref="member">SCIPlpiGetNCols</ref>(</highlight></codeline>
<codeline lineno="1825"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1826"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ncols<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>number<sp/>of<sp/>cols<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1827"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1828"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1829"><highlight class="normal"><sp/><sp/><sp/>assert(lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1830"><highlight class="normal"><sp/><sp/><sp/>assert(ncols<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1831"><highlight class="normal"></highlight></codeline>
<codeline lineno="1832"><highlight class="normal"><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;getting<sp/>number<sp/>of<sp/>columns\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1833"><highlight class="normal"></highlight></codeline>
<codeline lineno="1834"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetintattr(lpi-&gt;grbmodel,<sp/>GRB_INT_ATTR_NUMVARS,<sp/>ncols)<sp/>);</highlight></codeline>
<codeline lineno="1835"><highlight class="normal"></highlight></codeline>
<codeline lineno="1836"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="1837"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1838"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1839"><highlight class="comment">/**<sp/>gets<sp/>the<sp/>number<sp/>of<sp/>nonzero<sp/>elements<sp/>in<sp/>the<sp/>LP<sp/>constraint<sp/>matrix<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1840" refid="lpi__grb_8c_1a4e84473a9742d228d1112cf94e0337e7" refkind="member"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="lpi__grb_8c_1a4e84473a9742d228d1112cf94e0337e7" kindref="member">SCIPlpiGetNNonz</ref>(</highlight></codeline>
<codeline lineno="1841"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1842"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nnonz<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>number<sp/>of<sp/>nonzeros<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1843"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1844"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1845"><highlight class="normal"><sp/><sp/><sp/>assert(lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1846"><highlight class="normal"><sp/><sp/><sp/>assert(nnonz<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1847"><highlight class="normal"></highlight></codeline>
<codeline lineno="1848"><highlight class="normal"><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;getting<sp/>number<sp/>of<sp/>non-zeros\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1849"><highlight class="normal"></highlight></codeline>
<codeline lineno="1850"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetintattr(lpi-&gt;grbmodel,<sp/>GRB_INT_ATTR_NUMNZS,<sp/>nnonz)<sp/>);</highlight></codeline>
<codeline lineno="1851"><highlight class="normal"></highlight></codeline>
<codeline lineno="1852"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="1853"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1854"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1855"><highlight class="comment">/**<sp/>gets<sp/>columns<sp/>from<sp/>LP<sp/>problem<sp/>object;<sp/>the<sp/>arrays<sp/>have<sp/>to<sp/>be<sp/>large<sp/>enough<sp/>to<sp/>store<sp/>all<sp/>values</highlight></codeline>
<codeline lineno="1856"><highlight class="comment"><sp/>*<sp/><sp/>Either<sp/>both,<sp/>lb<sp/>and<sp/>ub,<sp/>have<sp/>to<sp/>be<sp/>NULL,<sp/>or<sp/>both<sp/>have<sp/>to<sp/>be<sp/>non-NULL,</highlight></codeline>
<codeline lineno="1857"><highlight class="comment"><sp/>*<sp/><sp/>either<sp/>nnonz,<sp/>beg,<sp/>ind,<sp/>and<sp/>val<sp/>have<sp/>to<sp/>be<sp/>NULL,<sp/>or<sp/>all<sp/>of<sp/>them<sp/>have<sp/>to<sp/>be<sp/>non-NULL.</highlight></codeline>
<codeline lineno="1858"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1859" refid="lpi__grb_8c_1a9b718ef73cb5d6544472fb05f2193d37" refkind="member"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="lpi__grb_8c_1a9b718ef73cb5d6544472fb05f2193d37" kindref="member">SCIPlpiGetCols</ref>(</highlight></codeline>
<codeline lineno="1860"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1861"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>firstcol,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>column<sp/>to<sp/>get<sp/>from<sp/>LP<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1862"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastcol,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>last<sp/>column<sp/>to<sp/>get<sp/>from<sp/>LP<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1863"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lb,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>buffer<sp/>to<sp/>store<sp/>the<sp/>lower<sp/>bound<sp/>vector,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1864"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ub,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>buffer<sp/>to<sp/>store<sp/>the<sp/>upper<sp/>bound<sp/>vector,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1865"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nnonz,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>number<sp/>of<sp/>nonzero<sp/>elements<sp/>returned,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1866"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>beg,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>buffer<sp/>to<sp/>store<sp/>start<sp/>index<sp/>of<sp/>each<sp/>column<sp/>in<sp/>ind-<sp/>and<sp/>val-array,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1867"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ind,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>buffer<sp/>to<sp/>store<sp/>column<sp/>indices<sp/>of<sp/>constraint<sp/>matrix<sp/>entries,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1868"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>buffer<sp/>to<sp/>store<sp/>values<sp/>of<sp/>constraint<sp/>matrix<sp/>entries,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1869"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1870"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1871"><highlight class="normal"><sp/><sp/><sp/>assert(lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1872"><highlight class="normal"><sp/><sp/><sp/>assert(lpi-&gt;grbmodel<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1873"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NDEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1874"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1875"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncols;</highlight></codeline>
<codeline lineno="1876"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetintattr(lpi-&gt;grbmodel,<sp/>GRB_INT_ATTR_NUMVARS,<sp/>&amp;ncols)<sp/>);</highlight></codeline>
<codeline lineno="1877"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(0<sp/>&lt;=<sp/>firstcol<sp/>&amp;&amp;<sp/>firstcol<sp/>&lt;=<sp/>lastcol<sp/>&amp;&amp;<sp/>lastcol<sp/>&lt;<sp/>ncols);</highlight></codeline>
<codeline lineno="1878"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1879"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1880"><highlight class="normal"></highlight></codeline>
<codeline lineno="1881"><highlight class="normal"><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;getting<sp/>columns<sp/>%d<sp/>to<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>firstcol,<sp/>lastcol);</highlight></codeline>
<codeline lineno="1882"><highlight class="normal"></highlight></codeline>
<codeline lineno="1883"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>lb<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>)</highlight></codeline>
<codeline lineno="1884"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(ub<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1886"><highlight class="normal"></highlight></codeline>
<codeline lineno="1887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetdblattrarray(lpi-&gt;grbmodel,<sp/>GRB_DBL_ATTR_LB,<sp/>firstcol,<sp/>lastcol-firstcol+1,<sp/>lb)<sp/>);</highlight></codeline>
<codeline lineno="1888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetdblattrarray(lpi-&gt;grbmodel,<sp/>GRB_DBL_ATTR_UB,<sp/>firstcol,<sp/>lastcol-firstcol+1,<sp/>ub)<sp/>);</highlight></codeline>
<codeline lineno="1889"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1890"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1891"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(ub<sp/>==<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1892"><highlight class="normal"></highlight></codeline>
<codeline lineno="1893"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>nnonz<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>)</highlight></codeline>
<codeline lineno="1894"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(beg<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(ind<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(val<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1898"><highlight class="normal"></highlight></codeline>
<codeline lineno="1899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>matrix<sp/>entries<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetvars(lpi-&gt;grbmodel,<sp/>nnonz,<sp/>beg,<sp/>ind,<sp/>val,<sp/>firstcol,<sp/>lastcol-firstcol+1)<sp/>);</highlight></codeline>
<codeline lineno="1901"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1902"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1903"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1904"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(beg<sp/>==<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1905"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(ind<sp/>==<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1906"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(val<sp/>==<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1907"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1908"><highlight class="normal"></highlight></codeline>
<codeline lineno="1909"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="1910"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1911"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1912"><highlight class="comment">/**<sp/>gets<sp/>rows<sp/>from<sp/>LP<sp/>problem<sp/>object;<sp/>the<sp/>arrays<sp/>have<sp/>to<sp/>be<sp/>large<sp/>enough<sp/>to<sp/>store<sp/>all<sp/>values.</highlight></codeline>
<codeline lineno="1913"><highlight class="comment"><sp/>*<sp/><sp/>Either<sp/>both,<sp/>lhs<sp/>and<sp/>rhs,<sp/>have<sp/>to<sp/>be<sp/>NULL,<sp/>or<sp/>both<sp/>have<sp/>to<sp/>be<sp/>non-NULL,</highlight></codeline>
<codeline lineno="1914"><highlight class="comment"><sp/>*<sp/><sp/>either<sp/>nnonz,<sp/>beg,<sp/>ind,<sp/>and<sp/>val<sp/>have<sp/>to<sp/>be<sp/>NULL,<sp/>or<sp/>all<sp/>of<sp/>them<sp/>have<sp/>to<sp/>be<sp/>non-NULL.</highlight></codeline>
<codeline lineno="1915"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1916" refid="lpi__grb_8c_1aa925f44c4f2e5640b79ff87f8166d92e" refkind="member"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="lpi__grb_8c_1aa925f44c4f2e5640b79ff87f8166d92e" kindref="member">SCIPlpiGetRows</ref>(</highlight></codeline>
<codeline lineno="1917"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1918"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>firstrow,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>row<sp/>to<sp/>get<sp/>from<sp/>LP<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1919"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastrow,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>last<sp/>row<sp/>to<sp/>get<sp/>from<sp/>LP<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1920"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lhs,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>buffer<sp/>to<sp/>store<sp/>left<sp/>hand<sp/>side<sp/>vector,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1921"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhs,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>buffer<sp/>to<sp/>store<sp/>right<sp/>hand<sp/>side<sp/>vector,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1922"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>nnonz,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>number<sp/>of<sp/>nonzero<sp/>elements<sp/>returned,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1923"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>beg,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>buffer<sp/>to<sp/>store<sp/>start<sp/>index<sp/>of<sp/>each<sp/>row<sp/>in<sp/>ind-<sp/>and<sp/>val-array,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1924"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ind,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>buffer<sp/>to<sp/>store<sp/>row<sp/>indices<sp/>of<sp/>constraint<sp/>matrix<sp/>entries,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1925"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>buffer<sp/>to<sp/>store<sp/>values<sp/>of<sp/>constraint<sp/>matrix<sp/>entries,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1926"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1927"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1928"><highlight class="normal"><sp/><sp/><sp/>assert(lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1929"><highlight class="normal"><sp/><sp/><sp/>assert(lpi-&gt;grbmodel<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1930"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NDEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1931"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1932"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nrows;</highlight></codeline>
<codeline lineno="1933"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetintattr(lpi-&gt;grbmodel,<sp/>GRB_INT_ATTR_NUMCONSTRS,<sp/>&amp;nrows)<sp/>);</highlight></codeline>
<codeline lineno="1934"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(0<sp/>&lt;=<sp/>firstrow<sp/>&amp;&amp;<sp/>firstrow<sp/>&lt;=<sp/>lastrow<sp/>&amp;&amp;<sp/>lastrow<sp/>&lt;<sp/>nrows);</highlight></codeline>
<codeline lineno="1935"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1936"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1937"><highlight class="normal"></highlight></codeline>
<codeline lineno="1938"><highlight class="normal"><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;getting<sp/>rows<sp/>%d<sp/>to<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>firstrow,<sp/>lastrow);</highlight></codeline>
<codeline lineno="1939"><highlight class="normal"></highlight></codeline>
<codeline lineno="1940"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>lhs<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||<sp/>rhs<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>)</highlight></codeline>
<codeline lineno="1941"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>row<sp/>sense<sp/>and<sp/>rhs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1943"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/>ensureSidechgMem(lpi,<sp/>lastrow<sp/>-<sp/>firstrow<sp/>+<sp/>1)<sp/>);</highlight></codeline>
<codeline lineno="1944"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetdblattrarray(lpi-&gt;grbmodel,<sp/>GRB_DBL_ATTR_RHS,<sp/>firstrow,<sp/>lastrow-firstrow+1,<sp/>lpi-&gt;rhsarray)<sp/>);</highlight></codeline>
<codeline lineno="1945"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetcharattrarray(lpi-&gt;grbmodel,<sp/>GRB_CHAR_ATTR_SENSE,<sp/>firstrow,<sp/>lastrow-firstrow+1,<sp/>lpi-&gt;senarray)<sp/>);</highlight></codeline>
<codeline lineno="1946"><highlight class="normal"></highlight></codeline>
<codeline lineno="1947"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>convert<sp/>sen<sp/>and<sp/>rhs<sp/>into<sp/>lhs/rhs<sp/>tuples<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1948"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/>reconvertSides(lpi,<sp/>lastrow<sp/>-<sp/>firstrow<sp/>+<sp/>1,<sp/>lhs,<sp/>rhs)<sp/>);</highlight></codeline>
<codeline lineno="1949"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1950"><highlight class="normal"></highlight></codeline>
<codeline lineno="1951"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>nnonz<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>)</highlight></codeline>
<codeline lineno="1952"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1953"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(beg<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1954"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(ind<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(val<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1956"><highlight class="normal"></highlight></codeline>
<codeline lineno="1957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>matrix<sp/>entries<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetconstrs(lpi-&gt;grbmodel,<sp/>nnonz,<sp/>beg,<sp/>ind,<sp/>val,<sp/>firstrow,<sp/>lastrow-firstrow+1)<sp/>);</highlight></codeline>
<codeline lineno="1959"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1960"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1961"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="1962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(beg<sp/>==<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(ind<sp/>==<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1964"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(val<sp/>==<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="1965"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="1966"><highlight class="normal"></highlight></codeline>
<codeline lineno="1967"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="1968"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1969"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1970"><highlight class="comment">/**<sp/>gets<sp/>column<sp/>names<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1971" refid="lpi__grb_8c_1aa01800088106fccc11758d86646a1933" refkind="member"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="lpi__grb_8c_1aa01800088106fccc11758d86646a1933" kindref="member">SCIPlpiGetColNames</ref>(</highlight></codeline>
<codeline lineno="1972"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1973"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>firstcol,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>column<sp/>to<sp/>get<sp/>name<sp/>from<sp/>LP<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1974"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastcol,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>last<sp/>column<sp/>to<sp/>get<sp/>name<sp/>from<sp/>LP<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1975"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>colnames,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointers<sp/>to<sp/>column<sp/>names<sp/>(of<sp/>size<sp/>at<sp/>least<sp/>lastcol-firstcol+1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1976"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>namestorage,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>storage<sp/>for<sp/>col<sp/>names<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1977"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>namestoragesize,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>size<sp/>of<sp/>namestorage<sp/>(if<sp/>0,<sp/>storageleft<sp/>returns<sp/>the<sp/>storage<sp/>needed)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1978"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>storageleft<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>amount<sp/>of<sp/>storage<sp/>left<sp/>(if<sp/>&lt;<sp/>0<sp/>the<sp/>namestorage<sp/>was<sp/>not<sp/>big<sp/>enough)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1979"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1980"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1981"><highlight class="normal"><sp/><sp/><sp/><ref refid="pub__message_8h_1a354566c209c3a7fe5c870d4ee8c07bc5" kindref="member">SCIPerrorMessage</ref>(</highlight><highlight class="stringliteral">&quot;SCIPlpiGetColNames()<sp/>has<sp/>not<sp/>been<sp/>implemented<sp/>yet.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1982"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5da004953b01233fe72cb41c5d218abb858" kindref="member">SCIP_LPERROR</ref>;</highlight></codeline>
<codeline lineno="1983"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1984"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="1985"><highlight class="comment">/**<sp/>gets<sp/>row<sp/>names<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1986" refid="lpi__grb_8c_1ab84a1811166e562112166eeddafe5f08" refkind="member"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="lpi__grb_8c_1ab84a1811166e562112166eeddafe5f08" kindref="member">SCIPlpiGetRowNames</ref>(</highlight></codeline>
<codeline lineno="1987"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1988"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>firstrow,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>row<sp/>to<sp/>get<sp/>name<sp/>from<sp/>LP<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1989"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastrow,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>last<sp/>row<sp/>to<sp/>get<sp/>name<sp/>from<sp/>LP<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1990"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rownames,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointers<sp/>to<sp/>row<sp/>names<sp/>(of<sp/>size<sp/>at<sp/>least<sp/>lastrow-firstrow+1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1991"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>namestorage,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>storage<sp/>for<sp/>row<sp/>names<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1992"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>namestoragesize,<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>size<sp/>of<sp/>namestorage<sp/>(if<sp/>0,<sp/>-storageleft<sp/>returns<sp/>the<sp/>storage<sp/>needed)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1993"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>storageleft<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>amount<sp/>of<sp/>storage<sp/>left<sp/>(if<sp/>&lt;<sp/>0<sp/>the<sp/>namestorage<sp/>was<sp/>not<sp/>big<sp/>enough)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="1994"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="1995"><highlight class="normal">{</highlight></codeline>
<codeline lineno="1996"><highlight class="normal"><sp/><sp/><sp/><ref refid="pub__message_8h_1a354566c209c3a7fe5c870d4ee8c07bc5" kindref="member">SCIPerrorMessage</ref>(</highlight><highlight class="stringliteral">&quot;SCIPlpiGetRowNames()<sp/>has<sp/>not<sp/>been<sp/>implemented<sp/>yet.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="1997"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5da004953b01233fe72cb41c5d218abb858" kindref="member">SCIP_LPERROR</ref>;</highlight></codeline>
<codeline lineno="1998"><highlight class="normal">}</highlight></codeline>
<codeline lineno="1999"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2000"><highlight class="comment">/**<sp/>gets<sp/>the<sp/>objective<sp/>sense<sp/>of<sp/>the<sp/>LP<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2001" refid="lpi__grb_8c_1aee46b15c0fa3d6d86be4e3bf741f34b7" refkind="member"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="lpi__grb_8c_1aee46b15c0fa3d6d86be4e3bf741f34b7" kindref="member">SCIPlpiGetObjsen</ref>(</highlight></codeline>
<codeline lineno="2002"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2003"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1afa3d076f8e5d2a8a31bf662ab24797cf" kindref="member">SCIP_OBJSEN</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objsen<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>objective<sp/>sense<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2004"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="2005"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2006"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>grbobjsen;</highlight></codeline>
<codeline lineno="2007"><highlight class="normal"></highlight></codeline>
<codeline lineno="2008"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="2009"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>lpi-&gt;grbmodel<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="2010"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>objsen<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="2011"><highlight class="normal"></highlight></codeline>
<codeline lineno="2012"><highlight class="normal"><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;getting<sp/>objective<sp/>sense\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2013"><highlight class="normal"></highlight></codeline>
<codeline lineno="2014"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetintattr(lpi-&gt;grbmodel,<sp/>GRB_INT_ATTR_MODELSENSE,<sp/>&amp;grbobjsen)<sp/>);</highlight></codeline>
<codeline lineno="2015"><highlight class="normal"><sp/><sp/><sp/>assert(grbobjsen<sp/>==<sp/>GRB_MINIMIZE<sp/>||<sp/>grbobjsen<sp/>==<sp/>GRB_MAXIMIZE);</highlight></codeline>
<codeline lineno="2016"><highlight class="normal"></highlight></codeline>
<codeline lineno="2017"><highlight class="normal"><sp/><sp/><sp/>*objsen<sp/>=<sp/>(grbobjsen<sp/>==<sp/>GRB_MINIMIZE)<sp/>?<sp/><ref refid="type__lpi_8h_1af1bc7f4fad28ccf4753250fa0558373bab25a52cd6604d9c8c5fd02c5e03180a7" kindref="member">SCIP_OBJSEN_MINIMIZE</ref><sp/>:<sp/><ref refid="type__lpi_8h_1af1bc7f4fad28ccf4753250fa0558373ba32ae01999ecd89f94f4a0bd0b6be60c6" kindref="member">SCIP_OBJSEN_MAXIMIZE</ref>;</highlight></codeline>
<codeline lineno="2018"><highlight class="normal"></highlight></codeline>
<codeline lineno="2019"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="2020"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2021"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2022"><highlight class="comment">/**<sp/>gets<sp/>objective<sp/>coefficients<sp/>from<sp/>LP<sp/>problem<sp/>object<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2023" refid="lpi__grb_8c_1accf7c7a0ba8f375dbfa9bce872586951" refkind="member"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="lpi__grb_8c_1accf7c7a0ba8f375dbfa9bce872586951" kindref="member">SCIPlpiGetObj</ref>(</highlight></codeline>
<codeline lineno="2024"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2025"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>firstcol,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>column<sp/>to<sp/>get<sp/>objective<sp/>coefficient<sp/>for<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2026"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastcol,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>last<sp/>column<sp/>to<sp/>get<sp/>objective<sp/>coefficient<sp/>for<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2027"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>vals<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>to<sp/>store<sp/>objective<sp/>coefficients<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2028"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="2029"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2030"><highlight class="normal"><sp/><sp/><sp/>assert(lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="2031"><highlight class="normal"><sp/><sp/><sp/>assert(lpi-&gt;grbmodel<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="2032"><highlight class="normal"><sp/><sp/><sp/>assert(firstcol<sp/>&lt;=<sp/>lastcol);</highlight></codeline>
<codeline lineno="2033"><highlight class="normal"><sp/><sp/><sp/>assert(vals<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="2034"><highlight class="normal"></highlight></codeline>
<codeline lineno="2035"><highlight class="normal"><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;getting<sp/>objective<sp/>values<sp/>%d<sp/>to<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>firstcol,<sp/>lastcol);</highlight></codeline>
<codeline lineno="2036"><highlight class="normal"></highlight></codeline>
<codeline lineno="2037"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetdblattrarray(lpi-&gt;grbmodel,<sp/>GRB_DBL_ATTR_OBJ,<sp/>firstcol,<sp/>lastcol-firstcol+1,<sp/>vals)<sp/>);</highlight></codeline>
<codeline lineno="2038"><highlight class="normal"></highlight></codeline>
<codeline lineno="2039"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="2040"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2041"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2042"><highlight class="comment">/**<sp/>gets<sp/>current<sp/>bounds<sp/>from<sp/>LP<sp/>problem<sp/>object<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2043" refid="lpi__grb_8c_1a534fd30b49c755aea9b96a0365ee41b0" refkind="member"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="lpi__grb_8c_1a534fd30b49c755aea9b96a0365ee41b0" kindref="member">SCIPlpiGetBounds</ref>(</highlight></codeline>
<codeline lineno="2044"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2045"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>firstcol,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>column<sp/>to<sp/>get<sp/>bounds<sp/>for<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2046"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastcol,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>last<sp/>column<sp/>to<sp/>get<sp/>bounds<sp/>for<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2047"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lbs,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>to<sp/>store<sp/>lower<sp/>bound<sp/>values,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2048"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ubs<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>to<sp/>store<sp/>upper<sp/>bound<sp/>values,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2049"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="2050"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2051"><highlight class="normal"><sp/><sp/><sp/>assert(lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="2052"><highlight class="normal"><sp/><sp/><sp/>assert(lpi-&gt;grbmodel<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="2053"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>NDEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2054"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2055"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncols;</highlight></codeline>
<codeline lineno="2056"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetintattr(lpi-&gt;grbmodel,<sp/>GRB_INT_ATTR_NUMVARS,<sp/>&amp;ncols)<sp/>);</highlight></codeline>
<codeline lineno="2057"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(0<sp/>&lt;=<sp/>firstcol<sp/>&amp;&amp;<sp/>firstcol<sp/>&lt;=<sp/>lastcol<sp/>&amp;&amp;<sp/>lastcol<sp/>&lt;<sp/>ncols);</highlight></codeline>
<codeline lineno="2058"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2059"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2060"><highlight class="normal"></highlight></codeline>
<codeline lineno="2061"><highlight class="normal"><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;getting<sp/>bounds<sp/>%d<sp/>to<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>firstcol,<sp/>lastcol);</highlight></codeline>
<codeline lineno="2062"><highlight class="normal"></highlight></codeline>
<codeline lineno="2063"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>lbs<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>)</highlight></codeline>
<codeline lineno="2064"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2065"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetdblattrarray(lpi-&gt;grbmodel,<sp/>GRB_DBL_ATTR_LB,<sp/>firstcol,<sp/>lastcol-firstcol+1,<sp/>lbs)<sp/>);</highlight></codeline>
<codeline lineno="2066"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2067"><highlight class="normal"></highlight></codeline>
<codeline lineno="2068"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>ubs<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>)</highlight></codeline>
<codeline lineno="2069"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2070"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetdblattrarray(lpi-&gt;grbmodel,<sp/>GRB_DBL_ATTR_UB,<sp/>firstcol,<sp/>lastcol-firstcol+1,<sp/>ubs)<sp/>);</highlight></codeline>
<codeline lineno="2071"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2072"><highlight class="normal"></highlight></codeline>
<codeline lineno="2073"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="2074"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2075"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2076"><highlight class="comment">/**<sp/>gets<sp/>current<sp/>row<sp/>sides<sp/>from<sp/>LP<sp/>problem<sp/>object<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2077" refid="lpi__grb_8c_1abd761e9fb6a1dd346a08c94a50192d8b" refkind="member"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="lpi__grb_8c_1abd761e9fb6a1dd346a08c94a50192d8b" kindref="member">SCIPlpiGetSides</ref>(</highlight></codeline>
<codeline lineno="2078"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2079"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>firstrow,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>first<sp/>row<sp/>to<sp/>get<sp/>sides<sp/>for<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2080"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lastrow,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>last<sp/>row<sp/>to<sp/>get<sp/>sides<sp/>for<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2081"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lhss,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>to<sp/>store<sp/>left<sp/>hand<sp/>side<sp/>values,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2082"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rhss<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>to<sp/>store<sp/>right<sp/>hand<sp/>side<sp/>values,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2083"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="2084"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2085"><highlight class="normal"><sp/><sp/><sp/>assert(lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="2086"><highlight class="normal"><sp/><sp/><sp/>assert(lpi-&gt;grbmodel<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="2087"><highlight class="normal"><sp/><sp/><sp/>assert(firstrow<sp/>&lt;=<sp/>lastrow);</highlight></codeline>
<codeline lineno="2088"><highlight class="normal"></highlight></codeline>
<codeline lineno="2089"><highlight class="normal"><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;getting<sp/>row<sp/>sides<sp/>%d<sp/>to<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>firstrow,<sp/>lastrow);</highlight></codeline>
<codeline lineno="2090"><highlight class="normal"></highlight></codeline>
<codeline lineno="2091"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>row<sp/>sense,<sp/>rhs,<sp/>and<sp/>ranges<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2092"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/>ensureSidechgMem(lpi,<sp/>lastrow<sp/>-<sp/>firstrow<sp/>+<sp/>1)<sp/>);</highlight></codeline>
<codeline lineno="2093"><highlight class="normal"></highlight></codeline>
<codeline lineno="2094"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetdblattrarray(lpi-&gt;grbmodel,<sp/>GRB_DBL_ATTR_RHS,<sp/>firstrow,<sp/>lastrow-firstrow+1,<sp/>lpi-&gt;rhsarray)<sp/>);</highlight></codeline>
<codeline lineno="2095"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetcharattrarray(lpi-&gt;grbmodel,<sp/>GRB_CHAR_ATTR_SENSE,<sp/>firstrow,<sp/>lastrow-firstrow+1,<sp/>lpi-&gt;senarray)<sp/>);</highlight></codeline>
<codeline lineno="2096"><highlight class="normal"></highlight></codeline>
<codeline lineno="2097"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>convert<sp/>sen<sp/>and<sp/>rhs<sp/>into<sp/>lhs/rhs<sp/>tuples<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2098"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/>reconvertSides(lpi,<sp/>lastrow<sp/>-<sp/>firstrow<sp/>+<sp/>1,<sp/>lhss,<sp/>rhss)<sp/>);</highlight></codeline>
<codeline lineno="2099"><highlight class="normal"></highlight></codeline>
<codeline lineno="2100"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="2101"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2102"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2103"><highlight class="comment">/**<sp/>gets<sp/>a<sp/>single<sp/>coefficient<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2104" refid="lpi__grb_8c_1a7ae0750d24c1e5ad1c719ca4a601b511" refkind="member"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="lpi__grb_8c_1a7ae0750d24c1e5ad1c719ca4a601b511" kindref="member">SCIPlpiGetCoef</ref>(</highlight></codeline>
<codeline lineno="2105"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2106"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>row,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>row<sp/>number<sp/>of<sp/>coefficient<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2107"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>col,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>column<sp/>number<sp/>of<sp/>coefficient<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2108"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>value<sp/>of<sp/>the<sp/>coefficient<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2109"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="2110"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2111"><highlight class="normal"><sp/><sp/><sp/>assert(lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="2112"><highlight class="normal"><sp/><sp/><sp/>assert(lpi-&gt;grbmodel<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="2113"><highlight class="normal"></highlight></codeline>
<codeline lineno="2114"><highlight class="normal"><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;getting<sp/>coefficient<sp/>of<sp/>row<sp/>%d<sp/>col<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>row,<sp/>col);</highlight></codeline>
<codeline lineno="2115"><highlight class="normal"></highlight></codeline>
<codeline lineno="2116"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetcoeff(lpi-&gt;grbmodel,<sp/>row,<sp/>col,<sp/>val)<sp/>);</highlight></codeline>
<codeline lineno="2117"><highlight class="normal"></highlight></codeline>
<codeline lineno="2118"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="2119"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2120"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2121"><highlight class="comment">/**@}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2122"><highlight class="normal"></highlight></codeline>
<codeline lineno="2123"><highlight class="normal"></highlight></codeline>
<codeline lineno="2124"><highlight class="normal"></highlight></codeline>
<codeline lineno="2125"><highlight class="normal"></highlight></codeline>
<codeline lineno="2126"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2127"><highlight class="comment"><sp/>*<sp/>Solving<sp/>Methods</highlight></codeline>
<codeline lineno="2128"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2129"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2130"><highlight class="comment">/**@name<sp/>Solving<sp/>Methods<sp/>*/</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2131"><highlight class="comment">/**@{<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2132"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2133"><highlight class="comment">/**<sp/>calls<sp/>primal<sp/>simplex<sp/>to<sp/>solve<sp/>the<sp/>LP</highlight></codeline>
<codeline lineno="2134"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2135"><highlight class="comment"><sp/>*<sp/><sp/>@todo<sp/>Check<sp/>concurrent<sp/>(GRB_METHOD_CONCURRENT<sp/>or<sp/>GRB_METHOD_DETERMINISTIC_CONCURRENT)</highlight></codeline>
<codeline lineno="2136"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2137" refid="lpi__grb_8c_1adff9cd01f05724d2e00808ebd09c8e93" refkind="member"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="lpi__grb_8c_1adff9cd01f05724d2e00808ebd09c8e93" kindref="member">SCIPlpiSolvePrimal</ref>(</highlight></codeline>
<codeline lineno="2138"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2139"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="2140"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2141"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cnt;</highlight></codeline>
<codeline lineno="2142"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="2143"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>primalfeasible;</highlight></codeline>
<codeline lineno="2144"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>dualfeasible;</highlight></codeline>
<codeline lineno="2145"><highlight class="normal"></highlight></codeline>
<codeline lineno="2146"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="2147"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>lpi-&gt;grbmodel<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="2148"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>lpi-&gt;grbenv<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="2149"><highlight class="normal"></highlight></codeline>
<codeline lineno="2150"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SCIP_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2151"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2152"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncols,<sp/>nrows;</highlight></codeline>
<codeline lineno="2153"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetintattr(lpi-&gt;grbmodel,<sp/>GRB_INT_ATTR_NUMVARS,<sp/>&amp;ncols)<sp/>);</highlight></codeline>
<codeline lineno="2154"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetintattr(lpi-&gt;grbmodel,<sp/>GRB_INT_ATTR_NUMCONSTRS,<sp/>&amp;nrows)<sp/>);</highlight></codeline>
<codeline lineno="2155"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;calling<sp/>Gurobi<sp/>primal<sp/>simplex:<sp/>%d<sp/>cols,<sp/>%d<sp/>rows\n&quot;</highlight><highlight class="normal">,<sp/>ncols,<sp/>nrows);</highlight></codeline>
<codeline lineno="2156"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2157"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2158"><highlight class="normal"></highlight></codeline>
<codeline lineno="2159"><highlight class="normal"><sp/><sp/><sp/>invalidateSolution(lpi);</highlight></codeline>
<codeline lineno="2160"><highlight class="normal"></highlight></codeline>
<codeline lineno="2161"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>lpi-&gt;fromscratch<sp/>)</highlight></codeline>
<codeline lineno="2162"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2163"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBresetmodel(lpi-&gt;grbmodel)<sp/>);</highlight></codeline>
<codeline lineno="2164"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2165"><highlight class="normal"></highlight></codeline>
<codeline lineno="2166"><highlight class="normal"><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;calling<sp/>GRBoptimize()<sp/>-<sp/>primal\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2167"><highlight class="normal"></highlight></codeline>
<codeline lineno="2168"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>primal<sp/>simplex<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2169"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/>setParameterValues(lpi,<sp/>&amp;(lpi-&gt;grbparam))<sp/>);</highlight></codeline>
<codeline lineno="2170"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBsetintparam(lpi-&gt;grbenv,<sp/><ref refid="lpi__grb_8c_1a5397bab46d83535262cfd4f82ffcaf3e" kindref="member">GRB_INT_PAR_METHOD</ref>,<sp/><ref refid="lpi__grb_8c_1aee06842200f9ea6a52cd072655bde971" kindref="member">GRB_METHOD_PRIMAL</ref>)<sp/>);</highlight></codeline>
<codeline lineno="2171"><highlight class="normal"></highlight></codeline>
<codeline lineno="2172"><highlight class="normal"><sp/><sp/><sp/>retval<sp/>=<sp/>GRBoptimize(lpi-&gt;grbmodel);</highlight></codeline>
<codeline lineno="2173"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<sp/>retval<sp/><sp/>)</highlight></codeline>
<codeline lineno="2174"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2175"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="2176"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2177"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GRB_ERROR_OUT_OF_MEMORY:</highlight></codeline>
<codeline lineno="2178"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5da9d99f2bbdf6c09830e6db15bc35d3415" kindref="member">SCIP_NOMEMORY</ref>;</highlight></codeline>
<codeline lineno="2179"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5da004953b01233fe72cb41c5d218abb858" kindref="member">SCIP_LPERROR</ref>;</highlight></codeline>
<codeline lineno="2181"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2182"><highlight class="normal"></highlight></codeline>
<codeline lineno="2183"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetdblattr(lpi-&gt;grbmodel,<sp/>GRB_DBL_ATTR_ITERCOUNT,<sp/>&amp;cnt)<sp/>);</highlight></codeline>
<codeline lineno="2184"><highlight class="normal"><sp/><sp/><sp/>lpi-&gt;iterations<sp/>=<sp/>(int)<sp/>cnt;</highlight></codeline>
<codeline lineno="2185"><highlight class="normal"></highlight></codeline>
<codeline lineno="2186"><highlight class="normal"><sp/><sp/><sp/>lpi-&gt;solisbasic<sp/>=<sp/><ref refid="def_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="2187"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetintattr(lpi-&gt;grbmodel,<sp/>GRB_INT_ATTR_STATUS,<sp/>&amp;lpi-&gt;solstat)<sp/>);</highlight></codeline>
<codeline lineno="2188"><highlight class="normal"></highlight></codeline>
<codeline lineno="2189"><highlight class="normal"><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;Gurobi<sp/>primal<sp/>simplex<sp/>needed<sp/>%d<sp/>iterations<sp/>to<sp/>gain<sp/>LP<sp/>status<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>cnt,<sp/>lpi-&gt;solstat);</highlight></codeline>
<codeline lineno="2190"><highlight class="normal"></highlight></codeline>
<codeline lineno="2191"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2192"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>CHECK_ZERO(<sp/>lpi-&gt;messagehdlr,<sp/>CPXsolninfo(lpi-&gt;grbenv,<sp/>lpi-&gt;grbmodel,<sp/>NULL,<sp/>NULL,<sp/>&amp;primalfeasible,<sp/>&amp;dualfeasible)<sp/>);</highlight></codeline>
<codeline lineno="2193"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>SCIPdebugMessage(&quot;<sp/>-&gt;<sp/>Gurobi<sp/>returned<sp/>solstat=%d,<sp/>pfeas=%d,<sp/>dfeas=%d<sp/>(%d<sp/>iterations)\n&quot;,</highlight></codeline>
<codeline lineno="2194"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>lpi-&gt;solstat,<sp/>primalfeasible,<sp/>dualfeasible,<sp/>lpi-&gt;iterations);</highlight></codeline>
<codeline lineno="2195"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2196"><highlight class="normal"><sp/><sp/><sp/>primalfeasible<sp/>=<sp/><ref refid="def_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="2197"><highlight class="normal"><sp/><sp/><sp/>dualfeasible<sp/>=<sp/><ref refid="def_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="2198"><highlight class="normal"></highlight></codeline>
<codeline lineno="2199"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>lpi-&gt;solstat<sp/>==<sp/>GRB_INF_OR_UNBD</highlight></codeline>
<codeline lineno="2200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(lpi-&gt;solstat<sp/>==<sp/>GRB_INFEASIBLE<sp/>&amp;&amp;<sp/>!dualfeasible)</highlight></codeline>
<codeline lineno="2201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>||<sp/>(lpi-&gt;solstat<sp/>==<sp/>GRB_UNBOUNDED<sp/>&amp;&amp;<sp/>!primalfeasible)<sp/>)</highlight></codeline>
<codeline lineno="2202"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>presolve;</highlight></codeline>
<codeline lineno="2204"><highlight class="normal"></highlight></codeline>
<codeline lineno="2205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetintparam(lpi-&gt;grbenv,<sp/>GRB_INT_PAR_PRESOLVE,<sp/>&amp;presolve)<sp/>);</highlight></codeline>
<codeline lineno="2206"><highlight class="normal"></highlight></codeline>
<codeline lineno="2207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>presolve<sp/>!=<sp/>GRB_PRESOLVE_OFF<sp/>)</highlight></codeline>
<codeline lineno="2208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>maybe<sp/>the<sp/>preprocessor<sp/>solved<sp/>the<sp/>problem;<sp/>but<sp/>we<sp/>need<sp/>a<sp/>solution,<sp/>so<sp/>solve<sp/>again<sp/>without<sp/>preprocessing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;presolver<sp/>may<sp/>have<sp/>solved<sp/>the<sp/>problem<sp/>-&gt;<sp/>calling<sp/>Gurobi<sp/>primal<sp/>simplex<sp/>again<sp/>without<sp/>presolve\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2211"><highlight class="normal"></highlight></codeline>
<codeline lineno="2212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>switch<sp/>off<sp/>preprocessing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBsetintparam(lpi-&gt;grbenv,<sp/>GRB_INT_PAR_PRESOLVE,<sp/>GRB_PRESOLVE_OFF)<sp/>);</highlight></codeline>
<codeline lineno="2214"><highlight class="normal"></highlight></codeline>
<codeline lineno="2215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>=<sp/>GRBoptimize(lpi-&gt;grbmodel);</highlight></codeline>
<codeline lineno="2216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<sp/>retval<sp/><sp/>)</highlight></codeline>
<codeline lineno="2217"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2218"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="2219"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2220"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GRB_ERROR_OUT_OF_MEMORY:</highlight></codeline>
<codeline lineno="2221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5da9d99f2bbdf6c09830e6db15bc35d3415" kindref="member">SCIP_NOMEMORY</ref>;</highlight></codeline>
<codeline lineno="2222"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2223"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5da004953b01233fe72cb41c5d218abb858" kindref="member">SCIP_LPERROR</ref>;</highlight></codeline>
<codeline lineno="2224"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2225"><highlight class="normal"></highlight></codeline>
<codeline lineno="2226"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetdblattr(lpi-&gt;grbmodel,<sp/>GRB_DBL_ATTR_ITERCOUNT,<sp/>&amp;cnt)<sp/>);</highlight></codeline>
<codeline lineno="2227"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi-&gt;iterations<sp/>+=<sp/>(int)<sp/>cnt;</highlight></codeline>
<codeline lineno="2228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetintattr(lpi-&gt;grbmodel,<sp/>GRB_INT_ATTR_STATUS,<sp/>&amp;lpi-&gt;solstat)<sp/>);</highlight></codeline>
<codeline lineno="2229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>-&gt;<sp/>Gurobi<sp/>returned<sp/>solstat=%d<sp/>(%d<sp/>iterations)\n&quot;</highlight><highlight class="normal">,<sp/>lpi-&gt;solstat,<sp/>lpi-&gt;iterations);</highlight></codeline>
<codeline lineno="2230"><highlight class="normal"></highlight></codeline>
<codeline lineno="2231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>reset<sp/>parameters<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBsetintparam(lpi-&gt;grbenv,<sp/>GRB_INT_PAR_PRESOLVE,<sp/>presolve)<sp/>);</highlight></codeline>
<codeline lineno="2233"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2234"><highlight class="normal"></highlight></codeline>
<codeline lineno="2235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>lpi-&gt;solstat<sp/>==<sp/>GRB_INF_OR_UNBD<sp/>)</highlight></codeline>
<codeline lineno="2236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>preprocessing<sp/>was<sp/>not<sp/>the<sp/>problem;<sp/>issue<sp/>a<sp/>warning<sp/>message<sp/>and<sp/>treat<sp/>LP<sp/>as<sp/>infeasible<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2238"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pub__message_8h_1a354566c209c3a7fe5c870d4ee8c07bc5" kindref="member">SCIPerrorMessage</ref>(</highlight><highlight class="stringliteral">&quot;Gurobi<sp/>primal<sp/>simplex<sp/>returned<sp/>GRB_INF_OR_UNBD<sp/>after<sp/>presolving<sp/>was<sp/>turned<sp/>off\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2240"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2241"><highlight class="normal"></highlight></codeline>
<codeline lineno="2242"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="2243"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2244"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2245"><highlight class="comment">/**<sp/>calls<sp/>dual<sp/>simplex<sp/>to<sp/>solve<sp/>the<sp/>LP</highlight></codeline>
<codeline lineno="2246"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="2247"><highlight class="comment"><sp/>*<sp/><sp/>@todo<sp/>Check<sp/>concurrent<sp/>(GRB_METHOD_CONCURRENT<sp/>or<sp/>GRB_METHOD_DETERMINISTIC_CONCURRENT)</highlight></codeline>
<codeline lineno="2248"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2249" refid="lpi__grb_8c_1ad87b0da429ef0a5ef34ccdd01cc2309d" refkind="member"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="lpi__grb_8c_1ad87b0da429ef0a5ef34ccdd01cc2309d" kindref="member">SCIPlpiSolveDual</ref>(</highlight></codeline>
<codeline lineno="2250"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2251"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="2252"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2253"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="2254"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cnt;</highlight></codeline>
<codeline lineno="2255"><highlight class="normal"></highlight></codeline>
<codeline lineno="2256"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="2257"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>lpi-&gt;grbmodel<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="2258"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>lpi-&gt;grbenv<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="2259"><highlight class="normal"></highlight></codeline>
<codeline lineno="2260"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SCIP_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2261"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2262"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncols,<sp/>nrows;</highlight></codeline>
<codeline lineno="2263"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetintattr(lpi-&gt;grbmodel,<sp/>GRB_INT_ATTR_NUMVARS,<sp/>&amp;ncols)<sp/>);</highlight></codeline>
<codeline lineno="2264"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetintattr(lpi-&gt;grbmodel,<sp/>GRB_INT_ATTR_NUMCONSTRS,<sp/>&amp;nrows)<sp/>);</highlight></codeline>
<codeline lineno="2265"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;calling<sp/>Gurobi<sp/>dual<sp/>simplex:<sp/>%d<sp/>cols,<sp/>%d<sp/>rows\n&quot;</highlight><highlight class="normal">,<sp/>ncols,<sp/>nrows);</highlight></codeline>
<codeline lineno="2266"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2267"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2268"><highlight class="normal"></highlight></codeline>
<codeline lineno="2269"><highlight class="normal"><sp/><sp/><sp/>invalidateSolution(lpi);</highlight></codeline>
<codeline lineno="2270"><highlight class="normal"></highlight></codeline>
<codeline lineno="2271"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>lpi-&gt;fromscratch<sp/>)</highlight></codeline>
<codeline lineno="2272"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2273"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBresetmodel(lpi-&gt;grbmodel)<sp/>);</highlight></codeline>
<codeline lineno="2274"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2275"><highlight class="normal"></highlight></codeline>
<codeline lineno="2276"><highlight class="normal"><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;calling<sp/>GRBoptimize()<sp/>-<sp/>dual\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2277"><highlight class="normal"></highlight></codeline>
<codeline lineno="2278"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/>setParameterValues(lpi,<sp/>&amp;(lpi-&gt;grbparam))<sp/>);</highlight></codeline>
<codeline lineno="2279"><highlight class="normal"></highlight></codeline>
<codeline lineno="2280"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>dual<sp/>simplex<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2281"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBsetintparam(lpi-&gt;grbenv,<sp/><ref refid="lpi__grb_8c_1a5397bab46d83535262cfd4f82ffcaf3e" kindref="member">GRB_INT_PAR_METHOD</ref>,<sp/><ref refid="lpi__grb_8c_1ac83a71f7ce20ef826c2fe19ded699f4e" kindref="member">GRB_METHOD_DUAL</ref>)<sp/>);</highlight></codeline>
<codeline lineno="2282"><highlight class="normal"></highlight></codeline>
<codeline lineno="2283"><highlight class="normal"><sp/><sp/><sp/>retval<sp/>=<sp/>GRBoptimize(lpi-&gt;grbmodel);</highlight></codeline>
<codeline lineno="2284"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<sp/>retval<sp/><sp/>)</highlight></codeline>
<codeline lineno="2285"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2286"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="2287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2288"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GRB_ERROR_OUT_OF_MEMORY:</highlight></codeline>
<codeline lineno="2289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5da9d99f2bbdf6c09830e6db15bc35d3415" kindref="member">SCIP_NOMEMORY</ref>;</highlight></codeline>
<codeline lineno="2290"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5da004953b01233fe72cb41c5d218abb858" kindref="member">SCIP_LPERROR</ref>;</highlight></codeline>
<codeline lineno="2292"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2293"><highlight class="normal"></highlight></codeline>
<codeline lineno="2294"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetdblattr(lpi-&gt;grbmodel,<sp/>GRB_DBL_ATTR_ITERCOUNT,<sp/>&amp;cnt)<sp/>);</highlight></codeline>
<codeline lineno="2295"><highlight class="normal"><sp/><sp/><sp/>lpi-&gt;iterations<sp/>=<sp/>(int)<sp/>cnt;</highlight></codeline>
<codeline lineno="2296"><highlight class="normal"></highlight></codeline>
<codeline lineno="2297"><highlight class="normal"><sp/><sp/><sp/>lpi-&gt;solisbasic<sp/>=<sp/><ref refid="def_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="2298"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetintattr(lpi-&gt;grbmodel,<sp/>GRB_INT_ATTR_STATUS,<sp/>&amp;lpi-&gt;solstat)<sp/>);</highlight></codeline>
<codeline lineno="2299"><highlight class="normal"></highlight></codeline>
<codeline lineno="2300"><highlight class="normal"><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;Gurobi<sp/>dual<sp/>simplex<sp/>needed<sp/>%d<sp/>iterations<sp/>to<sp/>gain<sp/>LP<sp/>status<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>cnt,<sp/>lpi-&gt;solstat);</highlight></codeline>
<codeline lineno="2301"><highlight class="normal"></highlight></codeline>
<codeline lineno="2302"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2303"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>SCIPdebugMessage(&quot;<sp/>-&gt;<sp/>Gurobi<sp/>returned<sp/>solstat=%d,<sp/>pfeas=%d,<sp/>dfeas=%d<sp/>(%d<sp/>iterations)\n&quot;,</highlight></codeline>
<codeline lineno="2304"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>lpi-&gt;solstat,<sp/>primalfeasible,<sp/>dualfeasible,<sp/>lpi-&gt;iterations);</highlight></codeline>
<codeline lineno="2305"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2306"><highlight class="normal"></highlight></codeline>
<codeline lineno="2307"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>lpi-&gt;solstat<sp/>==<sp/>GRB_INF_OR_UNBD<sp/>)</highlight></codeline>
<codeline lineno="2308"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>presolve;</highlight></codeline>
<codeline lineno="2310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>getIntParam(lpi,<sp/>GRB_INT_PAR_PRESOLVE,<sp/>&amp;presolve)<sp/>);</highlight></codeline>
<codeline lineno="2311"><highlight class="normal"></highlight></codeline>
<codeline lineno="2312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>presolve<sp/>!=<sp/>GRB_PRESOLVE_OFF<sp/>)</highlight></codeline>
<codeline lineno="2313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>maybe<sp/>the<sp/>preprocessor<sp/>solved<sp/>the<sp/>problem;<sp/>but<sp/>we<sp/>need<sp/>a<sp/>solution,<sp/>so<sp/>solve<sp/>again<sp/>without<sp/>preprocessing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;presolver<sp/>may<sp/>have<sp/>solved<sp/>the<sp/>problem<sp/>-&gt;<sp/>calling<sp/>Gurobi<sp/>dual<sp/>simplex<sp/>again<sp/>without<sp/>presolve\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2316"><highlight class="normal"></highlight></codeline>
<codeline lineno="2317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>switch<sp/>off<sp/>preprocessing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>setIntParam(lpi,<sp/>GRB_INT_PAR_PRESOLVE,<sp/>GRB_PRESOLVE_OFF)<sp/>);</highlight></codeline>
<codeline lineno="2319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/>setParameterValues(lpi,<sp/>&amp;(lpi-&gt;grbparam))<sp/>);</highlight></codeline>
<codeline lineno="2320"><highlight class="normal"></highlight></codeline>
<codeline lineno="2321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>=<sp/>GRBoptimize(lpi-&gt;grbmodel);</highlight></codeline>
<codeline lineno="2322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<sp/>retval<sp/><sp/>)</highlight></codeline>
<codeline lineno="2323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="2325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GRB_ERROR_OUT_OF_MEMORY:</highlight></codeline>
<codeline lineno="2327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5da9d99f2bbdf6c09830e6db15bc35d3415" kindref="member">SCIP_NOMEMORY</ref>;</highlight></codeline>
<codeline lineno="2328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5da004953b01233fe72cb41c5d218abb858" kindref="member">SCIP_LPERROR</ref>;</highlight></codeline>
<codeline lineno="2330"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2331"><highlight class="normal"></highlight></codeline>
<codeline lineno="2332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetdblattr(lpi-&gt;grbmodel,<sp/>GRB_DBL_ATTR_ITERCOUNT,<sp/>&amp;cnt)<sp/>);</highlight></codeline>
<codeline lineno="2333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi-&gt;iterations<sp/>+=<sp/>(int)<sp/>cnt;</highlight></codeline>
<codeline lineno="2334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetintattr(lpi-&gt;grbmodel,<sp/>GRB_INT_ATTR_STATUS,<sp/>&amp;lpi-&gt;solstat)<sp/>);</highlight></codeline>
<codeline lineno="2335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>-&gt;<sp/>Gurobi<sp/>returned<sp/>solstat=%d<sp/>(%d<sp/>iterations)\n&quot;</highlight><highlight class="normal">,<sp/>lpi-&gt;solstat,<sp/>lpi-&gt;iterations);</highlight></codeline>
<codeline lineno="2336"><highlight class="normal"></highlight></codeline>
<codeline lineno="2337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>switch<sp/>on<sp/>preprocessing<sp/>again<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>setIntParam(lpi,<sp/>GRB_INT_PAR_PRESOLVE,<sp/>GRB_PRESOLVE_AUTO)<sp/>);</highlight></codeline>
<codeline lineno="2339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2340"><highlight class="normal"></highlight></codeline>
<codeline lineno="2341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>lpi-&gt;solstat<sp/>==<sp/>GRB_INF_OR_UNBD<sp/>)</highlight></codeline>
<codeline lineno="2342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>preprocessing<sp/>was<sp/>not<sp/>the<sp/>problem;<sp/>issue<sp/>a<sp/>warning<sp/>message<sp/>and<sp/>treat<sp/>LP<sp/>as<sp/>infeasible<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pub__message_8h_1a354566c209c3a7fe5c870d4ee8c07bc5" kindref="member">SCIPerrorMessage</ref>(</highlight><highlight class="stringliteral">&quot;Gurobi<sp/>dual<sp/>simplex<sp/>returned<sp/>GRB_INF_OR_UNBD<sp/>after<sp/>presolving<sp/>was<sp/>turned<sp/>off\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2346"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2347"><highlight class="normal"></highlight></codeline>
<codeline lineno="2348"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="2349"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2350"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2351"><highlight class="comment">/**<sp/>calls<sp/>barrier<sp/>or<sp/>interior<sp/>point<sp/>algorithm<sp/>to<sp/>solve<sp/>the<sp/>LP<sp/>with<sp/>crossover<sp/>to<sp/>simplex<sp/>basis<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2352" refid="lpi__grb_8c_1aaed3d89975ea9d3a6a79f03c1361d9b5" refkind="member"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="lpi__grb_8c_1aaed3d89975ea9d3a6a79f03c1361d9b5" kindref="member">SCIPlpiSolveBarrier</ref>(</highlight></codeline>
<codeline lineno="2353"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2354"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>crossover<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>perform<sp/>crossover<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2355"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="2356"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2357"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>retval;</highlight></codeline>
<codeline lineno="2358"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>cnt;</highlight></codeline>
<codeline lineno="2359"><highlight class="normal"></highlight></codeline>
<codeline lineno="2360"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="2361"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>lpi-&gt;grbmodel<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="2362"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>lpi-&gt;grbenv<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="2363"><highlight class="normal"></highlight></codeline>
<codeline lineno="2364"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SCIP_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2365"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncols,<sp/>nrows;</highlight></codeline>
<codeline lineno="2367"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetintattr(lpi-&gt;grbmodel,<sp/>GRB_INT_ATTR_NUMVARS,<sp/>&amp;ncols)<sp/>);</highlight></codeline>
<codeline lineno="2368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetintattr(lpi-&gt;grbmodel,<sp/>GRB_INT_ATTR_NUMCONSTRS,<sp/>&amp;nrows)<sp/>);</highlight></codeline>
<codeline lineno="2369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;calling<sp/>Gurobi<sp/>barrier:<sp/>%d<sp/>cols,<sp/>%d<sp/>rows\n&quot;</highlight><highlight class="normal">,<sp/>ncols,<sp/>nrows);</highlight></codeline>
<codeline lineno="2370"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2371"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2372"><highlight class="normal"></highlight></codeline>
<codeline lineno="2373"><highlight class="normal"><sp/><sp/><sp/>invalidateSolution(lpi);</highlight></codeline>
<codeline lineno="2374"><highlight class="normal"></highlight></codeline>
<codeline lineno="2375"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>lpi-&gt;fromscratch<sp/>)</highlight></codeline>
<codeline lineno="2376"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBresetmodel(lpi-&gt;grbmodel)<sp/>);</highlight></codeline>
<codeline lineno="2378"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2379"><highlight class="normal"></highlight></codeline>
<codeline lineno="2380"><highlight class="normal"><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;calling<sp/>GRBoptimize()<sp/>-<sp/>barrier\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2381"><highlight class="normal"></highlight></codeline>
<codeline lineno="2382"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>barrier<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2383"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/>setParameterValues(lpi,<sp/>&amp;(lpi-&gt;grbparam))<sp/>);</highlight></codeline>
<codeline lineno="2384"><highlight class="normal"></highlight></codeline>
<codeline lineno="2385"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>crossover<sp/>)</highlight></codeline>
<codeline lineno="2386"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>turn<sp/>on<sp/>crossover<sp/>to<sp/>automatic<sp/>setting<sp/>(-1)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBsetintparam(lpi-&gt;grbenv,<sp/>GRB_INT_PAR_CROSSOVER,<sp/>-1)<sp/>);</highlight></codeline>
<codeline lineno="2389"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2390"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2391"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>turn<sp/>off<sp/>crossover<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBsetintparam(lpi-&gt;grbenv,<sp/>GRB_INT_PAR_CROSSOVER,<sp/>0)<sp/>);</highlight></codeline>
<codeline lineno="2394"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2395"><highlight class="normal"></highlight></codeline>
<codeline lineno="2396"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBsetintparam(lpi-&gt;grbenv,<sp/><ref refid="lpi__grb_8c_1a5397bab46d83535262cfd4f82ffcaf3e" kindref="member">GRB_INT_PAR_METHOD</ref>,<sp/>GRB_METHOD_BARRIER)<sp/>);</highlight></codeline>
<codeline lineno="2397"><highlight class="normal"></highlight></codeline>
<codeline lineno="2398"><highlight class="normal"><sp/><sp/><sp/>retval<sp/>=<sp/>GRBoptimize(lpi-&gt;grbmodel);</highlight></codeline>
<codeline lineno="2399"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<sp/>retval<sp/><sp/>)</highlight></codeline>
<codeline lineno="2400"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2401"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="2402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2403"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GRB_ERROR_OUT_OF_MEMORY:</highlight></codeline>
<codeline lineno="2404"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5da9d99f2bbdf6c09830e6db15bc35d3415" kindref="member">SCIP_NOMEMORY</ref>;</highlight></codeline>
<codeline lineno="2405"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2406"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5da004953b01233fe72cb41c5d218abb858" kindref="member">SCIP_LPERROR</ref>;</highlight></codeline>
<codeline lineno="2407"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2408"><highlight class="normal"></highlight></codeline>
<codeline lineno="2409"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetdblattr(lpi-&gt;grbmodel,<sp/>GRB_DBL_ATTR_ITERCOUNT,<sp/>&amp;cnt)<sp/>);</highlight></codeline>
<codeline lineno="2410"><highlight class="normal"><sp/><sp/><sp/>lpi-&gt;iterations<sp/>=<sp/>(int)<sp/>cnt;</highlight></codeline>
<codeline lineno="2411"><highlight class="normal"></highlight></codeline>
<codeline lineno="2412"><highlight class="normal"><sp/><sp/><sp/>lpi-&gt;solisbasic<sp/>=<sp/>crossover;</highlight></codeline>
<codeline lineno="2413"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetintattr(lpi-&gt;grbmodel,<sp/>GRB_INT_ATTR_STATUS,<sp/>&amp;lpi-&gt;solstat)<sp/>);</highlight></codeline>
<codeline lineno="2414"><highlight class="normal"></highlight></codeline>
<codeline lineno="2415"><highlight class="normal"><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;Gurobi<sp/>barrier<sp/>needed<sp/>%d<sp/>iterations<sp/>to<sp/>gain<sp/>LP<sp/>status<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">int</highlight><highlight class="normal">)<sp/>cnt,<sp/>lpi-&gt;solstat);</highlight></codeline>
<codeline lineno="2416"><highlight class="normal"></highlight></codeline>
<codeline lineno="2417"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2418"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>SCIPdebugMessage(&quot;<sp/>-&gt;<sp/>Gurobi<sp/>returned<sp/>solstat=%d,<sp/>pfeas=%d,<sp/>dfeas=%d<sp/>(%d<sp/>iterations)\n&quot;,</highlight></codeline>
<codeline lineno="2419"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/>lpi-&gt;solstat,<sp/>primalfeasible,<sp/>dualfeasible,<sp/>lpi-&gt;iterations);</highlight></codeline>
<codeline lineno="2420"><highlight class="comment"><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2421"><highlight class="normal"></highlight></codeline>
<codeline lineno="2422"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>lpi-&gt;solstat<sp/>==<sp/>GRB_INF_OR_UNBD<sp/>)</highlight></codeline>
<codeline lineno="2423"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>presolve;</highlight></codeline>
<codeline lineno="2425"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>getIntParam(lpi,<sp/>GRB_INT_PAR_PRESOLVE,<sp/>&amp;presolve)<sp/>);</highlight></codeline>
<codeline lineno="2426"><highlight class="normal"></highlight></codeline>
<codeline lineno="2427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>presolve<sp/>!=<sp/>GRB_PRESOLVE_OFF<sp/>)</highlight></codeline>
<codeline lineno="2428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>maybe<sp/>the<sp/>preprocessor<sp/>solved<sp/>the<sp/>problem;<sp/>but<sp/>we<sp/>need<sp/>a<sp/>solution,<sp/>so<sp/>solve<sp/>again<sp/>without<sp/>preprocessing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2430"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;presolver<sp/>may<sp/>have<sp/>solved<sp/>the<sp/>problem<sp/>-&gt;<sp/>calling<sp/>Gurobi<sp/>barrier<sp/>again<sp/>without<sp/>presolve\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2431"><highlight class="normal"></highlight></codeline>
<codeline lineno="2432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>switch<sp/>off<sp/>preprocessing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>setIntParam(lpi,<sp/>GRB_INT_PAR_PRESOLVE,<sp/>GRB_PRESOLVE_OFF)<sp/>);</highlight></codeline>
<codeline lineno="2434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/>setParameterValues(lpi,<sp/>&amp;(lpi-&gt;grbparam))<sp/>);</highlight></codeline>
<codeline lineno="2435"><highlight class="normal"></highlight></codeline>
<codeline lineno="2436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>retval<sp/>=<sp/>GRBoptimize(lpi-&gt;grbmodel);</highlight></codeline>
<codeline lineno="2437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<sp/>retval<sp/><sp/>)</highlight></codeline>
<codeline lineno="2438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>0:</highlight></codeline>
<codeline lineno="2440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="2441"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GRB_ERROR_OUT_OF_MEMORY:</highlight></codeline>
<codeline lineno="2442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5da9d99f2bbdf6c09830e6db15bc35d3415" kindref="member">SCIP_NOMEMORY</ref>;</highlight></codeline>
<codeline lineno="2443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="2444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5da004953b01233fe72cb41c5d218abb858" kindref="member">SCIP_LPERROR</ref>;</highlight></codeline>
<codeline lineno="2445"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2446"><highlight class="normal"></highlight></codeline>
<codeline lineno="2447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetdblattr(lpi-&gt;grbmodel,<sp/>GRB_DBL_ATTR_ITERCOUNT,<sp/>&amp;cnt)<sp/>);</highlight></codeline>
<codeline lineno="2448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi-&gt;iterations<sp/>+=<sp/>(int)<sp/>cnt;</highlight></codeline>
<codeline lineno="2449"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetintattr(lpi-&gt;grbmodel,<sp/>GRB_INT_ATTR_STATUS,<sp/>&amp;lpi-&gt;solstat)<sp/>);</highlight></codeline>
<codeline lineno="2450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>-&gt;<sp/>Gurobi<sp/>returned<sp/>solstat=%d<sp/>(%d<sp/>iterations)\n&quot;</highlight><highlight class="normal">,<sp/>lpi-&gt;solstat,<sp/>lpi-&gt;iterations);</highlight></codeline>
<codeline lineno="2451"><highlight class="normal"></highlight></codeline>
<codeline lineno="2452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>switch<sp/>on<sp/>preprocessing<sp/>again<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>setIntParam(lpi,<sp/>GRB_INT_PAR_PRESOLVE,<sp/>GRB_PRESOLVE_AUTO)<sp/>);</highlight></codeline>
<codeline lineno="2454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2455"><highlight class="normal"></highlight></codeline>
<codeline lineno="2456"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>lpi-&gt;solstat<sp/>==<sp/>GRB_INF_OR_UNBD<sp/>)</highlight></codeline>
<codeline lineno="2457"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2458"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>preprocessing<sp/>was<sp/>not<sp/>the<sp/>problem;<sp/>issue<sp/>a<sp/>warning<sp/>message<sp/>and<sp/>treat<sp/>LP<sp/>as<sp/>infeasible<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pub__message_8h_1a354566c209c3a7fe5c870d4ee8c07bc5" kindref="member">SCIPerrorMessage</ref>(</highlight><highlight class="stringliteral">&quot;Gurobi<sp/>dual<sp/>simplex<sp/>returned<sp/>GRB_INF_OR_UNBD<sp/>after<sp/>presolving<sp/>was<sp/>turned<sp/>off\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2461"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2462"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="2463"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2464"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2465"><highlight class="comment">/**<sp/>start<sp/>strong<sp/>branching<sp/>-<sp/>call<sp/>before<sp/>any<sp/>strong<sp/>branching<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2466" refid="lpi__grb_8c_1a61eb2de700a5b2ca02c55a6f206af5df" refkind="member"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="lpi__grb_8c_1a61eb2de700a5b2ca02c55a6f206af5df" kindref="member">SCIPlpiStartStrongbranch</ref>(</highlight></codeline>
<codeline lineno="2467"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2468"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="2469"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2470"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>currently<sp/>do<sp/>nothing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2471"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="2472"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2473"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2474"><highlight class="comment">/**<sp/>end<sp/>strong<sp/>branching<sp/>-<sp/>call<sp/>after<sp/>any<sp/>strong<sp/>branching<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2475" refid="lpi__grb_8c_1abb4fffe6db4fc82590ffb3231a4e314c" refkind="member"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="lpi__grb_8c_1abb4fffe6db4fc82590ffb3231a4e314c" kindref="member">SCIPlpiEndStrongbranch</ref>(</highlight></codeline>
<codeline lineno="2476"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2477"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="2478"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2479"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>currently<sp/>do<sp/>nothing<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2480"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="2481"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2482"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2483"><highlight class="comment">/**<sp/>performs<sp/>strong<sp/>branching<sp/>iterations<sp/>on<sp/>one<sp/>candidate<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2484"><highlight class="normal"></highlight><highlight class="keyword">static</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2485"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/>lpiStrongbranch(</highlight></codeline>
<codeline lineno="2486"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2487"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>col,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>column<sp/>to<sp/>apply<sp/>strong<sp/>branching<sp/>on<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2488"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psol,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>current<sp/>primal<sp/>solution<sp/>value<sp/>of<sp/>column<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2489"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itlim,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>iteration<sp/>limit<sp/>for<sp/>strong<sp/>branchings<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2490"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>down,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>stores<sp/>dual<sp/>bound<sp/>after<sp/>branching<sp/>column<sp/>down<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2491"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>up,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>stores<sp/>dual<sp/>bound<sp/>after<sp/>branching<sp/>column<sp/>up<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2492"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>downvalid,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>stores<sp/>whether<sp/>the<sp/>returned<sp/>down<sp/>value<sp/>is<sp/>a<sp/>valid<sp/>dual<sp/>bound;</highlight></codeline>
<codeline lineno="2493"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>otherwise,<sp/>it<sp/>can<sp/>only<sp/>be<sp/>used<sp/>as<sp/>an<sp/>estimate<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2494"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>upvalid,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>stores<sp/>whether<sp/>the<sp/>returned<sp/>up<sp/>value<sp/>is<sp/>a<sp/>valid<sp/>dual<sp/>bound;</highlight></codeline>
<codeline lineno="2495"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>otherwise,<sp/>it<sp/>can<sp/>only<sp/>be<sp/>used<sp/>as<sp/>an<sp/>estimate<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2496"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>stores<sp/>total<sp/>number<sp/>of<sp/>strong<sp/>branching<sp/>iterations,<sp/>or<sp/>-1;<sp/>may<sp/>be<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2497"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="2498"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2499"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/>oldlb;</highlight></codeline>
<codeline lineno="2500"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/>oldub;</highlight></codeline>
<codeline lineno="2501"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/>newlb;</highlight></codeline>
<codeline lineno="2502"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/>newub;</highlight></codeline>
<codeline lineno="2503"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/>olditlim;</highlight></codeline>
<codeline lineno="2504"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/>error;</highlight></codeline>
<codeline lineno="2505"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/>success;</highlight></codeline>
<codeline lineno="2506"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>objsen;</highlight></codeline>
<codeline lineno="2507"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>it;</highlight></codeline>
<codeline lineno="2508"><highlight class="normal"></highlight></codeline>
<codeline lineno="2509"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="2510"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>lpi-&gt;grbmodel<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="2511"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>lpi-&gt;grbenv<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="2512"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>down<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="2513"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>up<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="2514"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>downvalid<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="2515"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>upvalid<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="2516"><highlight class="normal"></highlight></codeline>
<codeline lineno="2517"><highlight class="normal"><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;performing<sp/>strong<sp/>branching<sp/>on<sp/>variable<sp/>%d<sp/>(%d<sp/>iterations)\n&quot;</highlight><highlight class="normal">,<sp/>col,<sp/>itlim);</highlight></codeline>
<codeline lineno="2518"><highlight class="normal"></highlight></codeline>
<codeline lineno="2519"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/>setParameterValues(lpi,<sp/>&amp;(lpi-&gt;grbparam))<sp/>);</highlight></codeline>
<codeline lineno="2520"><highlight class="normal"></highlight></codeline>
<codeline lineno="2521"><highlight class="normal"><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="def_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="2522"><highlight class="normal"><sp/><sp/><sp/>*downvalid<sp/>=<sp/><ref refid="def_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="2523"><highlight class="normal"><sp/><sp/><sp/>*upvalid<sp/>=<sp/><ref refid="def_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="2524"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>iter<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>)</highlight></codeline>
<codeline lineno="2525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*iter<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2526"><highlight class="normal"></highlight></codeline>
<codeline lineno="2527"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetintattr(lpi-&gt;grbmodel,<sp/>GRB_INT_ATTR_MODELSENSE,<sp/>&amp;objsen)<sp/>);</highlight></codeline>
<codeline lineno="2528"><highlight class="normal"></highlight></codeline>
<codeline lineno="2529"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>save<sp/>current<sp/>LP<sp/>basis<sp/>and<sp/>bounds*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2530"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/>getBase(lpi,<sp/>&amp;success)<sp/>);</highlight></codeline>
<codeline lineno="2531"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetdblattrelement(lpi-&gt;grbmodel,<sp/>GRB_DBL_ATTR_LB,<sp/>col,<sp/>&amp;oldlb)<sp/>);</highlight></codeline>
<codeline lineno="2532"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetdblattrelement(lpi-&gt;grbmodel,<sp/>GRB_DBL_ATTR_UB,<sp/>col,<sp/>&amp;oldub)<sp/>);</highlight></codeline>
<codeline lineno="2533"><highlight class="normal"></highlight></codeline>
<codeline lineno="2534"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>lpi-&gt;fromscratch<sp/>)</highlight></codeline>
<codeline lineno="2535"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBresetmodel(lpi-&gt;grbmodel)<sp/>);</highlight></codeline>
<codeline lineno="2537"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2538"><highlight class="normal"></highlight></codeline>
<codeline lineno="2539"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>save<sp/>old<sp/>iteration<sp/>limit<sp/>and<sp/>set<sp/>iteration<sp/>limit<sp/>to<sp/>strong<sp/>branching<sp/>limit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2540"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>itlim<sp/>&gt;<sp/>INT_MAX<sp/>)</highlight></codeline>
<codeline lineno="2541"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>itlim<sp/>=<sp/>INT_MAX;</highlight></codeline>
<codeline lineno="2542"><highlight class="normal"></highlight></codeline>
<codeline lineno="2543"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/>getDblParam(lpi,<sp/>GRB_DBL_PAR_ITERATIONLIMIT,<sp/>&amp;olditlim)<sp/>);</highlight></codeline>
<codeline lineno="2544"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/>setDblParam(lpi,<sp/>GRB_DBL_PAR_ITERATIONLIMIT,<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<sp/>itlim)<sp/>);</highlight></codeline>
<codeline lineno="2545"><highlight class="normal"></highlight></codeline>
<codeline lineno="2546"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>down<sp/>branch<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2547"><highlight class="normal"><sp/><sp/><sp/>newub<sp/>=<sp/><ref refid="def_8h_1ac727974c4f41af31763fe94fe4d9bd42" kindref="member">EPSCEIL</ref>(psol-1.0,<sp/>1e-06);</highlight></codeline>
<codeline lineno="2548"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>newub<sp/>&gt;=<sp/>oldlb<sp/>-<sp/>0.5<sp/>)</highlight></codeline>
<codeline lineno="2549"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2550"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;strong<sp/>branching<sp/>down<sp/>(%g)<sp/>on<sp/>x%d<sp/>(%g)<sp/>with<sp/>%d<sp/>iterations\n&quot;</highlight><highlight class="normal">,<sp/>newub,<sp/>col,<sp/>psol,<sp/>itlim);</highlight></codeline>
<codeline lineno="2551"><highlight class="normal"></highlight></codeline>
<codeline lineno="2552"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBsetdblattrelement(lpi-&gt;grbmodel,<sp/>GRB_DBL_ATTR_UB,<sp/>col,<sp/>newub)<sp/>);</highlight></codeline>
<codeline lineno="2553"><highlight class="normal"></highlight></codeline>
<codeline lineno="2554"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/><ref refid="lpi__grb_8c_1ad87b0da429ef0a5ef34ccdd01cc2309d" kindref="member">SCIPlpiSolveDual</ref>(lpi)<sp/>);</highlight></codeline>
<codeline lineno="2555"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>when<sp/>iteration<sp/>limit<sp/>was<sp/>reached<sp/>the<sp/>objective<sp/>value<sp/>is<sp/>not<sp/>computed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2556"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><ref refid="lpi__grb_8c_1ab66f1eae0b448c155f0feaffa7bdda57" kindref="member">SCIPlpiIsOptimal</ref>(lpi)<sp/>)<sp/></highlight><highlight class="comment">/*||<sp/>SCIPlpiIsIterlimExc(lpi)<sp/>)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2557"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2558"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/><ref refid="lpi__grb_8c_1a5548fcdd7c4e4a3f6d542cd51da27c82" kindref="member">SCIPlpiGetObjval</ref>(lpi,<sp/>down)<sp/>);</highlight></codeline>
<codeline lineno="2559"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*downvalid<sp/>=<sp/><ref refid="def_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="2560"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2561"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><ref refid="lpi__grb_8c_1ad2c1ad0f846c5827b5a2050ab13eba0f" kindref="member">SCIPlpiIsPrimalInfeasible</ref>(lpi)<sp/>||<sp/><ref refid="lpi__grb_8c_1a0d4fca883c08a32af088280a78ca3ef2" kindref="member">SCIPlpiIsObjlimExc</ref>(lpi)<sp/>)</highlight></codeline>
<codeline lineno="2562"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2563"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetdblparam(lpi-&gt;grbenv,<sp/>GRB_DBL_PAR_CUTOFF,<sp/>down)<sp/>);</highlight></codeline>
<codeline lineno="2564"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2565"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<ref refid="lpi__grb_8c_1a689c99183c7e0779c50f9aef63c79123" kindref="member">SCIPlpiIsIterlimExc</ref>(lpi)<sp/>)</highlight></codeline>
<codeline lineno="2566"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="def_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="2567"><highlight class="normal"></highlight></codeline>
<codeline lineno="2568"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>iter<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>)</highlight></codeline>
<codeline lineno="2569"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2570"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/><ref refid="lpi__grb_8c_1ae37bfbea024ddb8232827aeedc84afe0" kindref="member">SCIPlpiGetIterations</ref>(lpi,<sp/>&amp;it)<sp/>);</highlight></codeline>
<codeline lineno="2571"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*iter<sp/>+=<sp/>it;</highlight></codeline>
<codeline lineno="2572"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2573"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>-&gt;<sp/>down<sp/>(x%d<sp/>&lt;=<sp/>%g):<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>col,<sp/>newub,<sp/>*down);</highlight></codeline>
<codeline lineno="2574"><highlight class="normal"></highlight></codeline>
<codeline lineno="2575"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBsetdblattrelement(lpi-&gt;grbmodel,<sp/>GRB_DBL_ATTR_UB,<sp/>col,<sp/>oldub)<sp/>);</highlight></codeline>
<codeline lineno="2576"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBupdatemodel(lpi-&gt;grbmodel)<sp/>);</highlight></codeline>
<codeline lineno="2577"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SCIP_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2578"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2579"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b;</highlight></codeline>
<codeline lineno="2580"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetdblattrelement(lpi-&gt;grbmodel,<sp/>GRB_DBL_ATTR_UB,<sp/>col,<sp/>&amp;b)<sp/>);</highlight></codeline>
<codeline lineno="2581"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<sp/>b<sp/>==<sp/>oldub<sp/>);</highlight></codeline>
<codeline lineno="2582"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2583"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2584"><highlight class="normal"></highlight></codeline>
<codeline lineno="2585"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>success<sp/>)</highlight></codeline>
<codeline lineno="2586"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2587"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/>setBase(lpi)<sp/>);</highlight></codeline>
<codeline lineno="2588"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2589"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2590"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2591"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetdblparam(lpi-&gt;grbenv,<sp/>GRB_DBL_PAR_CUTOFF,<sp/>down)<sp/>);</highlight></codeline>
<codeline lineno="2593"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*downvalid<sp/>=<sp/><ref refid="def_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="2594"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2595"><highlight class="normal"></highlight></codeline>
<codeline lineno="2596"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>up<sp/>branch<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2597"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!error<sp/>)</highlight></codeline>
<codeline lineno="2598"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2599"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>newlb<sp/>=<sp/><ref refid="def_8h_1adc5197ac72e784d66e7fd2e304365011" kindref="member">EPSFLOOR</ref>(psol+1.0,<sp/>1e-06);</highlight></codeline>
<codeline lineno="2600"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>newlb<sp/>&lt;=<sp/>oldub<sp/>+<sp/>0.5<sp/>)</highlight></codeline>
<codeline lineno="2601"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2602"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;strong<sp/>branching<sp/><sp/>up<sp/>(%g)<sp/>on<sp/>x%d<sp/>(%g)<sp/>with<sp/>%d<sp/>iterations\n&quot;</highlight><highlight class="normal">,<sp/>newlb,<sp/>col,<sp/>psol,<sp/>itlim);</highlight></codeline>
<codeline lineno="2603"><highlight class="normal"></highlight></codeline>
<codeline lineno="2604"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBsetdblattrelement(lpi-&gt;grbmodel,<sp/>GRB_DBL_ATTR_LB,<sp/>col,<sp/>newlb)<sp/>);</highlight></codeline>
<codeline lineno="2605"><highlight class="normal"></highlight></codeline>
<codeline lineno="2606"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/><ref refid="lpi__grb_8c_1ad87b0da429ef0a5ef34ccdd01cc2309d" kindref="member">SCIPlpiSolveDual</ref>(lpi)<sp/>);</highlight></codeline>
<codeline lineno="2607"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>when<sp/>iteration<sp/>limit<sp/>was<sp/>reached<sp/>the<sp/>objective<sp/>value<sp/>is<sp/>not<sp/>computed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2608"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><ref refid="lpi__grb_8c_1ab66f1eae0b448c155f0feaffa7bdda57" kindref="member">SCIPlpiIsOptimal</ref>(lpi)<sp/>)<sp/></highlight><highlight class="comment">/*||<sp/>SCIPlpiIsIterlimExc(lpi)<sp/>)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2609"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2610"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/><ref refid="lpi__grb_8c_1a5548fcdd7c4e4a3f6d542cd51da27c82" kindref="member">SCIPlpiGetObjval</ref>(lpi,<sp/>up)<sp/>);</highlight></codeline>
<codeline lineno="2611"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*upvalid<sp/>=<sp/><ref refid="def_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="2612"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2613"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/><ref refid="lpi__grb_8c_1ad2c1ad0f846c5827b5a2050ab13eba0f" kindref="member">SCIPlpiIsPrimalInfeasible</ref>(lpi)<sp/>||<sp/><ref refid="lpi__grb_8c_1a0d4fca883c08a32af088280a78ca3ef2" kindref="member">SCIPlpiIsObjlimExc</ref>(lpi)<sp/>)</highlight></codeline>
<codeline lineno="2614"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2615"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetdblparam(lpi-&gt;grbenv,<sp/>GRB_DBL_PAR_CUTOFF,<sp/>up)<sp/>);</highlight></codeline>
<codeline lineno="2616"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2617"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!<ref refid="lpi__grb_8c_1a689c99183c7e0779c50f9aef63c79123" kindref="member">SCIPlpiIsIterlimExc</ref>(lpi)<sp/>)</highlight></codeline>
<codeline lineno="2618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>error<sp/>=<sp/><ref refid="def_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="2619"><highlight class="normal"></highlight></codeline>
<codeline lineno="2620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>iter<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>)</highlight></codeline>
<codeline lineno="2621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/><ref refid="lpi__grb_8c_1ae37bfbea024ddb8232827aeedc84afe0" kindref="member">SCIPlpiGetIterations</ref>(lpi,<sp/>&amp;it)<sp/>);</highlight></codeline>
<codeline lineno="2623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*iter<sp/>+=<sp/>it;</highlight></codeline>
<codeline lineno="2624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;<sp/>-&gt;<sp/>up<sp/><sp/>(x%d<sp/>&gt;=<sp/>%g):<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>col,<sp/>newlb,<sp/>*up);</highlight></codeline>
<codeline lineno="2626"><highlight class="normal"></highlight></codeline>
<codeline lineno="2627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBsetdblattrelement(lpi-&gt;grbmodel,<sp/>GRB_DBL_ATTR_LB,<sp/>col,<sp/>oldlb)<sp/>);</highlight></codeline>
<codeline lineno="2628"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBupdatemodel(lpi-&gt;grbmodel)<sp/>);</highlight></codeline>
<codeline lineno="2629"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SCIP_DEBUG</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2630"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>b;</highlight></codeline>
<codeline lineno="2632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetdblattrelement(lpi-&gt;grbmodel,<sp/>GRB_DBL_ATTR_LB,<sp/>col,<sp/>&amp;b)<sp/>);</highlight></codeline>
<codeline lineno="2633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<sp/>b<sp/>==<sp/>oldlb<sp/>);</highlight></codeline>
<codeline lineno="2634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2635"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2636"><highlight class="normal"></highlight></codeline>
<codeline lineno="2637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>success<sp/>)</highlight></codeline>
<codeline lineno="2638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/>setBase(lpi)<sp/>);</highlight></codeline>
<codeline lineno="2640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2641"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2642"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2643"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2644"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetdblparam(lpi-&gt;grbenv,<sp/>GRB_DBL_PAR_CUTOFF,<sp/>up)<sp/>);</highlight></codeline>
<codeline lineno="2645"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*upvalid<sp/>=<sp/><ref refid="def_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="2646"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2647"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2648"><highlight class="normal"></highlight></codeline>
<codeline lineno="2649"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>reset<sp/>iteration<sp/>limit<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2650"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/>setDblParam(lpi,<sp/>GRB_DBL_PAR_ITERATIONLIMIT,<sp/>olditlim)<sp/>);</highlight></codeline>
<codeline lineno="2651"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>CHECK_ZERO(<sp/>lpi-&gt;messagehdlr,<sp/>GRBupdatemodel(lpi-&gt;grbmodel)<sp/>);<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2652"><highlight class="normal"></highlight></codeline>
<codeline lineno="2653"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>error<sp/>)</highlight></codeline>
<codeline lineno="2654"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2655"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pub__message_8h_1a354566c209c3a7fe5c870d4ee8c07bc5" kindref="member">SCIPerrorMessage</ref>(</highlight><highlight class="stringliteral">&quot;LP<sp/>error<sp/>in<sp/>strong<sp/>branching.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2656"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5da004953b01233fe72cb41c5d218abb858" kindref="member">SCIP_LPERROR</ref>;</highlight></codeline>
<codeline lineno="2657"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2658"><highlight class="normal"></highlight></codeline>
<codeline lineno="2659"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="2660"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2661"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2662"><highlight class="comment">/**<sp/>performs<sp/>strong<sp/>branching<sp/>iterations<sp/>on<sp/>one<sp/>@b<sp/>fractional<sp/>candidate<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2663" refid="lpi__grb_8c_1a4b3e0e444fa2cba71360126834df07b4" refkind="member"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="lpi__grb_8c_1a4b3e0e444fa2cba71360126834df07b4" kindref="member">SCIPlpiStrongbranchFrac</ref>(</highlight></codeline>
<codeline lineno="2664"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2665"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>col,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>column<sp/>to<sp/>apply<sp/>strong<sp/>branching<sp/>on<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2666"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psol,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>fractional<sp/>current<sp/>primal<sp/>solution<sp/>value<sp/>of<sp/>column<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2667"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itlim,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>iteration<sp/>limit<sp/>for<sp/>strong<sp/>branchings<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2668"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>down,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>stores<sp/>dual<sp/>bound<sp/>after<sp/>branching<sp/>column<sp/>down<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2669"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>up,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>stores<sp/>dual<sp/>bound<sp/>after<sp/>branching<sp/>column<sp/>up<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2670"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>downvalid,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>stores<sp/>whether<sp/>the<sp/>returned<sp/>down<sp/>value<sp/>is<sp/>a<sp/>valid<sp/>dual<sp/>bound;</highlight></codeline>
<codeline lineno="2671"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>otherwise,<sp/>it<sp/>can<sp/>only<sp/>be<sp/>used<sp/>as<sp/>an<sp/>estimate<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2672"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>upvalid,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>stores<sp/>whether<sp/>the<sp/>returned<sp/>up<sp/>value<sp/>is<sp/>a<sp/>valid<sp/>dual<sp/>bound;</highlight></codeline>
<codeline lineno="2673"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>otherwise,<sp/>it<sp/>can<sp/>only<sp/>be<sp/>used<sp/>as<sp/>an<sp/>estimate<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2674"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>stores<sp/>total<sp/>number<sp/>of<sp/>strong<sp/>branching<sp/>iterations,<sp/>or<sp/>-1;<sp/>may<sp/>be<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2675"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="2676"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2677"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>pass<sp/>call<sp/>on<sp/>to<sp/>lpiStrongbranch()<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2678"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/>lpiStrongbranch(lpi,<sp/>col,<sp/>psol,<sp/>itlim,<sp/>down,<sp/>up,<sp/>downvalid,<sp/>upvalid,<sp/>iter)<sp/>);</highlight></codeline>
<codeline lineno="2679"><highlight class="normal"></highlight></codeline>
<codeline lineno="2680"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="2681"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2682"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2683"><highlight class="comment">/**<sp/>performs<sp/>strong<sp/>branching<sp/>iterations<sp/>on<sp/>given<sp/>@b<sp/>fractional<sp/>candidates<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2684" refid="lpi__grb_8c_1a7aa759face9cb33420e56984df7b6557" refkind="member"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="lpi__grb_8c_1a7aa759face9cb33420e56984df7b6557" kindref="member">SCIPlpiStrongbranchesFrac</ref>(</highlight></codeline>
<codeline lineno="2685"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2686"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cols,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>columns<sp/>to<sp/>apply<sp/>strong<sp/>branching<sp/>on<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2687"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ncols,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>number<sp/>of<sp/>columns<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2688"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psols,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>fractional<sp/>current<sp/>primal<sp/>solution<sp/>values<sp/>of<sp/>columns<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2689"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itlim,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>iteration<sp/>limit<sp/>for<sp/>strong<sp/>branchings<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2690"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>down,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>stores<sp/>dual<sp/>bounds<sp/>after<sp/>branching<sp/>columns<sp/>down<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2691"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>up,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>stores<sp/>dual<sp/>bounds<sp/>after<sp/>branching<sp/>columns<sp/>up<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2692"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>downvalid,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>stores<sp/>whether<sp/>the<sp/>returned<sp/>down<sp/>values<sp/>are<sp/>valid<sp/>dual<sp/>bounds;</highlight></codeline>
<codeline lineno="2693"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>otherwise,<sp/>they<sp/>can<sp/>only<sp/>be<sp/>used<sp/>as<sp/>an<sp/>estimate<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2694"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>upvalid,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>stores<sp/>whether<sp/>the<sp/>returned<sp/>up<sp/>values<sp/>are<sp/>a<sp/>valid<sp/>dual<sp/>bounds;</highlight></codeline>
<codeline lineno="2695"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>otherwise,<sp/>they<sp/>can<sp/>only<sp/>be<sp/>used<sp/>as<sp/>an<sp/>estimate<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2696"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>stores<sp/>total<sp/>number<sp/>of<sp/>strong<sp/>branching<sp/>iterations,<sp/>or<sp/>-1;<sp/>may<sp/>be<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2697"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="2698"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2699"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j;</highlight></codeline>
<codeline lineno="2700"><highlight class="normal"></highlight></codeline>
<codeline lineno="2701"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>iter<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="2702"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>cols<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="2703"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>psols<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="2704"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>down<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="2705"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>up<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="2706"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>downvalid<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="2707"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>upvalid<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="2708"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>down<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="2709"><highlight class="normal"></highlight></codeline>
<codeline lineno="2710"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>iter<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>)</highlight></codeline>
<codeline lineno="2711"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*iter<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2712"><highlight class="normal"></highlight></codeline>
<codeline lineno="2713"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>ncols;<sp/>++j<sp/>)</highlight></codeline>
<codeline lineno="2714"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>pass<sp/>call<sp/>on<sp/>to<sp/>lpiStrongbranch()<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2716"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/>lpiStrongbranch(lpi,<sp/>cols[j],<sp/>psols[j],<sp/>itlim,<sp/>&amp;(down[j]),<sp/>&amp;(up[j]),<sp/>&amp;(downvalid[j]),<sp/>&amp;(upvalid[j]),<sp/>iter)<sp/>);</highlight></codeline>
<codeline lineno="2717"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2718"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="2719"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2720"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2721"><highlight class="comment">/**<sp/>performs<sp/>strong<sp/>branching<sp/>iterations<sp/>on<sp/>one<sp/>candidate<sp/>with<sp/>@b<sp/>integral<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2722" refid="lpi__grb_8c_1a5172db5f9ebd4ad8b1da84ce8c00bff7" refkind="member"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="lpi__grb_8c_1a5172db5f9ebd4ad8b1da84ce8c00bff7" kindref="member">SCIPlpiStrongbranchInt</ref>(</highlight></codeline>
<codeline lineno="2723"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2724"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>col,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>column<sp/>to<sp/>apply<sp/>strong<sp/>branching<sp/>on<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2725"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psol,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>current<sp/>integral<sp/>primal<sp/>solution<sp/>value<sp/>of<sp/>column<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2726"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itlim,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>iteration<sp/>limit<sp/>for<sp/>strong<sp/>branchings<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2727"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>down,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>stores<sp/>dual<sp/>bound<sp/>after<sp/>branching<sp/>column<sp/>down<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2728"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>up,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>stores<sp/>dual<sp/>bound<sp/>after<sp/>branching<sp/>column<sp/>up<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2729"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>downvalid,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>stores<sp/>whether<sp/>the<sp/>returned<sp/>down<sp/>value<sp/>is<sp/>a<sp/>valid<sp/>dual<sp/>bound;</highlight></codeline>
<codeline lineno="2730"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>otherwise,<sp/>it<sp/>can<sp/>only<sp/>be<sp/>used<sp/>as<sp/>an<sp/>estimate<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2731"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>upvalid,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>stores<sp/>whether<sp/>the<sp/>returned<sp/>up<sp/>value<sp/>is<sp/>a<sp/>valid<sp/>dual<sp/>bound;</highlight></codeline>
<codeline lineno="2732"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>otherwise,<sp/>it<sp/>can<sp/>only<sp/>be<sp/>used<sp/>as<sp/>an<sp/>estimate<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2733"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>stores<sp/>total<sp/>number<sp/>of<sp/>strong<sp/>branching<sp/>iterations,<sp/>or<sp/>-1;<sp/>may<sp/>be<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2734"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="2735"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2736"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>pass<sp/>call<sp/>on<sp/>to<sp/>lpiStrongbranch()<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2737"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/>lpiStrongbranch(lpi,<sp/>col,<sp/>psol,<sp/>itlim,<sp/>down,<sp/>up,<sp/>downvalid,<sp/>upvalid,<sp/>iter)<sp/>);</highlight></codeline>
<codeline lineno="2738"><highlight class="normal"></highlight></codeline>
<codeline lineno="2739"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="2740"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2741"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2742"><highlight class="comment">/**<sp/>performs<sp/>strong<sp/>branching<sp/>iterations<sp/>on<sp/>given<sp/>candidates<sp/>with<sp/>@b<sp/>integral<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2743" refid="lpi__grb_8c_1abdfa4cbbbfc871eb382b8090167f715e" refkind="member"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="lpi__grb_8c_1abdfa4cbbbfc871eb382b8090167f715e" kindref="member">SCIPlpiStrongbranchesInt</ref>(</highlight></codeline>
<codeline lineno="2744"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2745"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cols,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>columns<sp/>to<sp/>apply<sp/>strong<sp/>branching<sp/>on<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2746"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ncols,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>number<sp/>of<sp/>columns<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2747"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>psols,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>current<sp/>integral<sp/>primal<sp/>solution<sp/>values<sp/>of<sp/>columns<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2748"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>itlim,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>iteration<sp/>limit<sp/>for<sp/>strong<sp/>branchings<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2749"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>down,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>stores<sp/>dual<sp/>bounds<sp/>after<sp/>branching<sp/>columns<sp/>down<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2750"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>up,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>stores<sp/>dual<sp/>bounds<sp/>after<sp/>branching<sp/>columns<sp/>up<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2751"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>downvalid,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>stores<sp/>whether<sp/>the<sp/>returned<sp/>down<sp/>values<sp/>are<sp/>valid<sp/>dual<sp/>bounds;</highlight></codeline>
<codeline lineno="2752"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>otherwise,<sp/>they<sp/>can<sp/>only<sp/>be<sp/>used<sp/>as<sp/>an<sp/>estimate<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2753"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>upvalid,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>stores<sp/>whether<sp/>the<sp/>returned<sp/>up<sp/>values<sp/>are<sp/>a<sp/>valid<sp/>dual<sp/>bounds;</highlight></codeline>
<codeline lineno="2754"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>otherwise,<sp/>they<sp/>can<sp/>only<sp/>be<sp/>used<sp/>as<sp/>an<sp/>estimate<sp/>values<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2755"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iter<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>stores<sp/>total<sp/>number<sp/>of<sp/>strong<sp/>branching<sp/>iterations,<sp/>or<sp/>-1;<sp/>may<sp/>be<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2756"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="2757"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2758"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j;</highlight></codeline>
<codeline lineno="2759"><highlight class="normal"></highlight></codeline>
<codeline lineno="2760"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>iter<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="2761"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>cols<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="2762"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>psols<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="2763"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>down<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="2764"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>up<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="2765"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>downvalid<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="2766"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>upvalid<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="2767"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>down<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="2768"><highlight class="normal"></highlight></codeline>
<codeline lineno="2769"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>iter<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>)</highlight></codeline>
<codeline lineno="2770"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*iter<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="2771"><highlight class="normal"></highlight></codeline>
<codeline lineno="2772"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>ncols;<sp/>++j<sp/>)</highlight></codeline>
<codeline lineno="2773"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2774"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>pass<sp/>call<sp/>on<sp/>to<sp/>lpiStrongbranch()<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2775"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/>lpiStrongbranch(lpi,<sp/>cols[j],<sp/>psols[j],<sp/>itlim,<sp/>&amp;(down[j]),<sp/>&amp;(up[j]),<sp/>&amp;(downvalid[j]),<sp/>&amp;(upvalid[j]),<sp/>iter)<sp/>);</highlight></codeline>
<codeline lineno="2776"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2777"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="2778"><highlight class="normal">}</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2779"><highlight class="comment">/**@}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2780"><highlight class="normal"></highlight></codeline>
<codeline lineno="2781"><highlight class="normal"></highlight></codeline>
<codeline lineno="2782"><highlight class="normal"></highlight></codeline>
<codeline lineno="2783"><highlight class="normal"></highlight></codeline>
<codeline lineno="2784"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="2785"><highlight class="comment"><sp/>*<sp/>Solution<sp/>Information<sp/>Methods</highlight></codeline>
<codeline lineno="2786"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2787"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2788"><highlight class="comment">/**@name<sp/>Solution<sp/>Information<sp/>Methods<sp/>*/</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2789"><highlight class="comment">/**@{<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2790"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2791"><highlight class="comment">/**<sp/>returns<sp/>whether<sp/>a<sp/>solve<sp/>method<sp/>was<sp/>called<sp/>after<sp/>the<sp/>last<sp/>modification<sp/>of<sp/>the<sp/>LP<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2792" refid="lpi__grb_8c_1aaa0c5c0be2bd96fce205e68f7d051abe" refkind="member"><highlight class="normal"><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><ref refid="lpi__grb_8c_1aaa0c5c0be2bd96fce205e68f7d051abe" kindref="member">SCIPlpiWasSolved</ref>(</highlight></codeline>
<codeline lineno="2793"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2794"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="2795"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2796"><highlight class="normal"><sp/><sp/><sp/>assert(lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="2797"><highlight class="normal"></highlight></codeline>
<codeline lineno="2798"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(lpi-&gt;solstat<sp/>!=<sp/>-1);</highlight></codeline>
<codeline lineno="2799"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2800"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2801"><highlight class="comment">/**<sp/>gets<sp/>information<sp/>about<sp/>primal<sp/>and<sp/>dual<sp/>feasibility<sp/>of<sp/>the<sp/>current<sp/>LP<sp/>solution<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2802" refid="lpi__grb_8c_1a61efb09a57b1279d91619c36cad3d597" refkind="member"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="lpi__grb_8c_1a61efb09a57b1279d91619c36cad3d597" kindref="member">SCIPlpiGetSolFeasibility</ref>(</highlight></codeline>
<codeline lineno="2803"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2804"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>primalfeasible,<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>stores<sp/>primal<sp/>feasibility<sp/>status<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2805"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dualfeasible<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>stores<sp/>dual<sp/>feasibility<sp/>status<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2806"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="2807"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2808"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>algo;</highlight></codeline>
<codeline lineno="2809"><highlight class="normal"></highlight></codeline>
<codeline lineno="2810"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="2811"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>lpi-&gt;grbmodel<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="2812"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>lpi-&gt;grbenv<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="2813"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>lpi-&gt;solstat<sp/>&gt;=<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="2814"><highlight class="normal"></highlight></codeline>
<codeline lineno="2815"><highlight class="normal"><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;getting<sp/>solution<sp/>feasibility\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2816"><highlight class="normal"></highlight></codeline>
<codeline lineno="2817"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetintparam(lpi-&gt;grbenv,<sp/><ref refid="lpi__grb_8c_1a5397bab46d83535262cfd4f82ffcaf3e" kindref="member">GRB_INT_PAR_METHOD</ref>,<sp/>&amp;algo)<sp/>);</highlight></codeline>
<codeline lineno="2818"><highlight class="normal"></highlight></codeline>
<codeline lineno="2819"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>primalfeasible<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>)</highlight></codeline>
<codeline lineno="2820"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2821"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*primalfeasible<sp/>=<sp/>(lpi-&gt;solstat<sp/>==<sp/>GRB_OPTIMAL<sp/>||<sp/>(lpi-&gt;solstat<sp/>==<sp/>GRB_UNBOUNDED<sp/>&amp;&amp;<sp/>algo<sp/>==<sp/><ref refid="lpi__grb_8c_1aee06842200f9ea6a52cd072655bde971" kindref="member">GRB_METHOD_PRIMAL</ref>));</highlight></codeline>
<codeline lineno="2822"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2823"><highlight class="normal"></highlight></codeline>
<codeline lineno="2824"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>dualfeasible<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>)</highlight></codeline>
<codeline lineno="2825"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2826"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*dualfeasible<sp/>=<sp/>(lpi-&gt;solstat<sp/>==<sp/>GRB_OPTIMAL<sp/>||<sp/>(lpi-&gt;solstat<sp/>==<sp/>GRB_INFEASIBLE<sp/>&amp;&amp;<sp/>algo<sp/>==<sp/><ref refid="lpi__grb_8c_1ac83a71f7ce20ef826c2fe19ded699f4e" kindref="member">GRB_METHOD_DUAL</ref>));</highlight></codeline>
<codeline lineno="2827"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2828"><highlight class="normal"></highlight></codeline>
<codeline lineno="2829"><highlight class="normal"></highlight></codeline>
<codeline lineno="2830"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SCIP_DISABLED_CODE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2831"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>@todo:<sp/>check<sp/>whether<sp/>this<sp/>code<sp/>is<sp/>needed<sp/>anymore<sp/>(this<sp/>was<sp/>the<sp/>first<sp/>version)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2832"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/>viol;</highlight></codeline>
<codeline lineno="2833"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/>tol;</highlight></codeline>
<codeline lineno="2834"><highlight class="normal"></highlight></codeline>
<codeline lineno="2835"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="2836"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>lpi-&gt;grbmodel<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="2837"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>lpi-&gt;solstat<sp/>&gt;=<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="2838"><highlight class="normal"></highlight></codeline>
<codeline lineno="2839"><highlight class="normal"><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;getting<sp/>solution<sp/>feasibility\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2840"><highlight class="normal"></highlight></codeline>
<codeline lineno="2841"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>primalfeasible<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>)</highlight></codeline>
<codeline lineno="2842"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2843"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(lpi-&gt;solstat<sp/>!=<sp/>GRB_INF_OR_UNBD<sp/>&amp;&amp;<sp/>lpi-&gt;solstat<sp/>!=<sp/>GRB_INFEASIBLE)</highlight></codeline>
<codeline lineno="2844"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2845"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>whether<sp/>maximum<sp/>scaled<sp/>violation<sp/>is<sp/>smaller<sp/>than<sp/>feasibility<sp/>tolerance<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2846"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetdblattr(lpi-&gt;grbmodel,<sp/>GRB_DBL_ATTR_CONSTR_SRESIDUAL,<sp/>&amp;viol)<sp/>);</highlight></codeline>
<codeline lineno="2847"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetdblparam(lpi-&gt;grbenv,<sp/>GRB_DBL_PAR_FEASIBILITYTOL,<sp/>&amp;tol)<sp/>);</highlight></codeline>
<codeline lineno="2848"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*primalfeasible<sp/>=<sp/>(viol<sp/>&lt;=<sp/>tol)<sp/>?<sp/><ref refid="def_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref><sp/>:<sp/><ref refid="def_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="2849"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;primal<sp/>violation:<sp/>%g<sp/><sp/>(tol:<sp/>%g)\n&quot;</highlight><highlight class="normal">,<sp/>viol,<sp/>tol);</highlight></codeline>
<codeline lineno="2850"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2851"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2852"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*primalfeasible<sp/>=<sp/><ref refid="def_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="2853"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2854"><highlight class="normal"></highlight></codeline>
<codeline lineno="2855"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>dualfeasible<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>)</highlight></codeline>
<codeline lineno="2856"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2857"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(lpi-&gt;solstat<sp/>!=<sp/>GRB_UNBOUNDED<sp/>&amp;&amp;<sp/>lpi-&gt;solstat<sp/>!=<sp/>GRB_INFEASIBLE)</highlight></codeline>
<codeline lineno="2858"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="2859"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>whether<sp/>maximum<sp/>scaled<sp/>dual<sp/>violation<sp/>is<sp/>smaller<sp/>than<sp/>optimality<sp/>tolerance<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2860"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetdblattr(lpi-&gt;grbmodel,<sp/>GRB_DBL_ATTR_DUAL_SRESIDUAL,<sp/>&amp;viol)<sp/>);</highlight></codeline>
<codeline lineno="2861"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetdblparam(lpi-&gt;grbenv,<sp/>GRB_DBL_PAR_OPTIMALITYTOL,<sp/>&amp;tol)<sp/>);</highlight></codeline>
<codeline lineno="2862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dualfeasible<sp/>=<sp/>(viol<sp/>&lt;=<sp/>tol)<sp/>?<sp/><ref refid="def_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref><sp/>:<sp/><ref refid="def_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="2863"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;dual<sp/>violation:<sp/>%g<sp/><sp/>(tol:<sp/>%g)\n&quot;</highlight><highlight class="normal">,<sp/>viol,<sp/>tol);</highlight></codeline>
<codeline lineno="2864"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2865"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2866"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*dualfeasible<sp/>=<sp/><ref refid="def_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="2867"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="2868"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2869"><highlight class="normal"></highlight></codeline>
<codeline lineno="2870"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="2871"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2872"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2873"><highlight class="comment">/**<sp/>returns<sp/>TRUE<sp/>iff<sp/>LP<sp/>is<sp/>proven<sp/>to<sp/>have<sp/>a<sp/>primal<sp/>unbounded<sp/>ray<sp/>(but<sp/>not<sp/>necessary<sp/>a<sp/>primal<sp/>feasible<sp/>point);</highlight></codeline>
<codeline lineno="2874"><highlight class="comment"><sp/>*<sp/><sp/>this<sp/>does<sp/>not<sp/>necessarily<sp/>mean,<sp/>that<sp/>the<sp/>solver<sp/>knows<sp/>and<sp/>can<sp/>return<sp/>the<sp/>primal<sp/>ray</highlight></codeline>
<codeline lineno="2875"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2876" refid="lpi__grb_8c_1a2562db03b64bf6ef2789e4edf3cc31a3" refkind="member"><highlight class="normal"><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><ref refid="lpi__grb_8c_1a2562db03b64bf6ef2789e4edf3cc31a3" kindref="member">SCIPlpiExistsPrimalRay</ref>(</highlight></codeline>
<codeline lineno="2877"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2878"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="2879"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2880"><highlight class="normal"><sp/><sp/><sp/>assert(lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="2881"><highlight class="normal"><sp/><sp/><sp/>assert(lpi-&gt;grbmodel<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="2882"><highlight class="normal"><sp/><sp/><sp/>assert(lpi-&gt;solstat<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="2883"><highlight class="normal"></highlight></codeline>
<codeline lineno="2884"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(lpi-&gt;solstat<sp/>==<sp/>GRB_UNBOUNDED);</highlight></codeline>
<codeline lineno="2885"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2886"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2887"><highlight class="comment">/**<sp/>returns<sp/>TRUE<sp/>iff<sp/>LP<sp/>is<sp/>proven<sp/>to<sp/>have<sp/>a<sp/>primal<sp/>unbounded<sp/>ray<sp/>(but<sp/>not<sp/>necessary<sp/>a<sp/>primal<sp/>feasible<sp/>point),</highlight></codeline>
<codeline lineno="2888"><highlight class="comment"><sp/>*<sp/><sp/>and<sp/>the<sp/>solver<sp/>knows<sp/>and<sp/>can<sp/>return<sp/>the<sp/>primal<sp/>ray</highlight></codeline>
<codeline lineno="2889"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2890" refid="lpi__grb_8c_1a91cb0382fe11412dfa127df4cc9f8e9a" refkind="member"><highlight class="normal"><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><ref refid="lpi__grb_8c_1a91cb0382fe11412dfa127df4cc9f8e9a" kindref="member">SCIPlpiHasPrimalRay</ref>(</highlight></codeline>
<codeline lineno="2891"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2892"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="2893"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2894"><highlight class="normal"><sp/><sp/><sp/>assert(lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="2895"><highlight class="normal"><sp/><sp/><sp/>assert(lpi-&gt;grbmodel<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="2896"><highlight class="normal"><sp/><sp/><sp/>assert(lpi-&gt;solstat<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="2897"><highlight class="normal"></highlight></codeline>
<codeline lineno="2898"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(lpi-&gt;solstat<sp/>==<sp/>GRB_UNBOUNDED);</highlight></codeline>
<codeline lineno="2899"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2900"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2901"><highlight class="comment">/**<sp/>returns<sp/>TRUE<sp/>iff<sp/>LP<sp/>is<sp/>proven<sp/>to<sp/>be<sp/>primal<sp/>unbounded<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2902" refid="lpi__grb_8c_1a698fec903ce3546e8066a3988ee906ee" refkind="member"><highlight class="normal"><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><ref refid="lpi__grb_8c_1a698fec903ce3546e8066a3988ee906ee" kindref="member">SCIPlpiIsPrimalUnbounded</ref>(</highlight></codeline>
<codeline lineno="2903"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2904"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="2905"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2906"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/>primalfeasible;</highlight></codeline>
<codeline lineno="2907"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/>retcode;</highlight></codeline>
<codeline lineno="2908"><highlight class="normal"></highlight></codeline>
<codeline lineno="2909"><highlight class="normal"><sp/><sp/><sp/>assert(lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="2910"><highlight class="normal"><sp/><sp/><sp/>assert(lpi-&gt;grbmodel<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="2911"><highlight class="normal"><sp/><sp/><sp/>assert(lpi-&gt;solstat<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="2912"><highlight class="normal"></highlight></codeline>
<codeline lineno="2913"><highlight class="normal"><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;checking<sp/>for<sp/>primal<sp/>unboundedness\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2914"><highlight class="normal"></highlight></codeline>
<codeline lineno="2915"><highlight class="normal"><sp/><sp/><sp/>primalfeasible<sp/>=<sp/><ref refid="def_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;<sp/></highlight><highlight class="comment">/*<sp/>to<sp/>fix<sp/>compiler<sp/>warning<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2916"><highlight class="normal"><sp/><sp/><sp/>retcode<sp/>=<sp/><ref refid="lpi__grb_8c_1a61efb09a57b1279d91619c36cad3d597" kindref="member">SCIPlpiGetSolFeasibility</ref>(lpi,<sp/>&amp;primalfeasible,<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="2917"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>retcode<sp/>!=<sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref><sp/>)</highlight></codeline>
<codeline lineno="2918"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="def_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="2919"><highlight class="normal"></highlight></codeline>
<codeline lineno="2920"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>Probably<sp/>GRB_UNBOUNDED<sp/>means<sp/>that<sp/>the<sp/>problem<sp/>has<sp/>an<sp/>unbounded<sp/>ray,<sp/>but<sp/>not<sp/>necessarily<sp/>that<sp/>a<sp/>feasible<sp/>primal<sp/>solution<sp/>exists.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2921"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(primalfeasible<sp/>&amp;&amp;<sp/>(lpi-&gt;solstat<sp/>==<sp/>GRB_UNBOUNDED<sp/>||<sp/>lpi-&gt;solstat<sp/>==<sp/>GRB_INF_OR_UNBD));</highlight></codeline>
<codeline lineno="2922"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2923"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2924"><highlight class="comment">/**<sp/>returns<sp/>TRUE<sp/>iff<sp/>LP<sp/>is<sp/>proven<sp/>to<sp/>be<sp/>primal<sp/>infeasible<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2925" refid="lpi__grb_8c_1ad2c1ad0f846c5827b5a2050ab13eba0f" refkind="member"><highlight class="normal"><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><ref refid="lpi__grb_8c_1ad2c1ad0f846c5827b5a2050ab13eba0f" kindref="member">SCIPlpiIsPrimalInfeasible</ref>(</highlight></codeline>
<codeline lineno="2926"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2927"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="2928"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2929"><highlight class="normal"><sp/><sp/><sp/>assert(lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="2930"><highlight class="normal"><sp/><sp/><sp/>assert(lpi-&gt;grbmodel<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="2931"><highlight class="normal"><sp/><sp/><sp/>assert(lpi-&gt;solstat<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="2932"><highlight class="normal"></highlight></codeline>
<codeline lineno="2933"><highlight class="normal"><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;checking<sp/>for<sp/>primal<sp/>infeasibility\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2934"><highlight class="normal"></highlight></codeline>
<codeline lineno="2935"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>lpi-&gt;solstat<sp/>!=<sp/>GRB_INF_OR_UNBD<sp/>);</highlight></codeline>
<codeline lineno="2936"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(lpi-&gt;solstat<sp/>==<sp/>GRB_INFEASIBLE);</highlight></codeline>
<codeline lineno="2937"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2938"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2939"><highlight class="comment">/**<sp/>returns<sp/>TRUE<sp/>iff<sp/>LP<sp/>is<sp/>proven<sp/>to<sp/>be<sp/>primal<sp/>feasible<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2940" refid="lpi__grb_8c_1a824080a74642700e0919806405d4dd69" refkind="member"><highlight class="normal"><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><ref refid="lpi__grb_8c_1a824080a74642700e0919806405d4dd69" kindref="member">SCIPlpiIsPrimalFeasible</ref>(</highlight></codeline>
<codeline lineno="2941"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2942"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="2943"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2944"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>algo;</highlight></codeline>
<codeline lineno="2945"><highlight class="normal"></highlight></codeline>
<codeline lineno="2946"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="2947"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>lpi-&gt;grbmodel<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="2948"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>lpi-&gt;grbenv<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="2949"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>lpi-&gt;solstat<sp/>&gt;=<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="2950"><highlight class="normal"></highlight></codeline>
<codeline lineno="2951"><highlight class="normal"><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;checking<sp/>for<sp/>primal<sp/>feasibility\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="2952"><highlight class="normal"></highlight></codeline>
<codeline lineno="2953"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetintparam(lpi-&gt;grbenv,<sp/><ref refid="lpi__grb_8c_1a5397bab46d83535262cfd4f82ffcaf3e" kindref="member">GRB_INT_PAR_METHOD</ref>,<sp/>&amp;algo)<sp/>);</highlight></codeline>
<codeline lineno="2954"><highlight class="normal"></highlight></codeline>
<codeline lineno="2955"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(lpi-&gt;solstat<sp/>==<sp/>GRB_OPTIMAL<sp/>||<sp/>(lpi-&gt;solstat<sp/>==<sp/>GRB_UNBOUNDED<sp/>&amp;&amp;<sp/>algo<sp/>==<sp/><ref refid="lpi__grb_8c_1aee06842200f9ea6a52cd072655bde971" kindref="member">GRB_METHOD_PRIMAL</ref>));</highlight></codeline>
<codeline lineno="2956"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2957"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2958"><highlight class="comment">/**<sp/>returns<sp/>TRUE<sp/>iff<sp/>LP<sp/>is<sp/>proven<sp/>to<sp/>have<sp/>a<sp/>dual<sp/>unbounded<sp/>ray<sp/>(but<sp/>not<sp/>necessary<sp/>a<sp/>dual<sp/>feasible<sp/>point);</highlight></codeline>
<codeline lineno="2959"><highlight class="comment"><sp/>*<sp/><sp/>this<sp/>does<sp/>not<sp/>necessarily<sp/>mean,<sp/>that<sp/>the<sp/>solver<sp/>knows<sp/>and<sp/>can<sp/>return<sp/>the<sp/>dual<sp/>ray</highlight></codeline>
<codeline lineno="2960"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2961" refid="lpi__grb_8c_1a21939ccf03835cce5a9a449b6c43665b" refkind="member"><highlight class="normal"><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><ref refid="lpi__grb_8c_1a21939ccf03835cce5a9a449b6c43665b" kindref="member">SCIPlpiExistsDualRay</ref>(</highlight></codeline>
<codeline lineno="2962"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2963"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="2964"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2965"><highlight class="normal"><sp/><sp/><sp/>assert(lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="2966"><highlight class="normal"><sp/><sp/><sp/>assert(lpi-&gt;grbmodel<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="2967"><highlight class="normal"><sp/><sp/><sp/>assert(lpi-&gt;solstat<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="2968"><highlight class="normal"></highlight></codeline>
<codeline lineno="2969"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(lpi-&gt;solstat<sp/>==<sp/>GRB_INFEASIBLE);<sp/><sp/></highlight><highlight class="comment">/*<sp/>?????????<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2970"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2971"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2972"><highlight class="comment">/**<sp/>returns<sp/>TRUE<sp/>iff<sp/>LP<sp/>is<sp/>proven<sp/>to<sp/>have<sp/>a<sp/>dual<sp/>unbounded<sp/>ray<sp/>(but<sp/>not<sp/>necessary<sp/>a<sp/>dual<sp/>feasible<sp/>point),</highlight></codeline>
<codeline lineno="2973"><highlight class="comment"><sp/>*<sp/><sp/>and<sp/>the<sp/>solver<sp/>knows<sp/>and<sp/>can<sp/>return<sp/>the<sp/>dual<sp/>ray</highlight></codeline>
<codeline lineno="2974"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2975" refid="lpi__grb_8c_1ac6738fca43ff0cbb9027560f18bd764c" refkind="member"><highlight class="normal"><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><ref refid="lpi__grb_8c_1ac6738fca43ff0cbb9027560f18bd764c" kindref="member">SCIPlpiHasDualRay</ref>(</highlight></codeline>
<codeline lineno="2976"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2977"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="2978"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2979"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>algo;</highlight></codeline>
<codeline lineno="2980"><highlight class="normal"></highlight></codeline>
<codeline lineno="2981"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="2982"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>lpi-&gt;grbmodel<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="2983"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>lpi-&gt;grbenv<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="2984"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>lpi-&gt;solstat<sp/>&gt;=<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="2985"><highlight class="normal"></highlight></codeline>
<codeline lineno="2986"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetintparam(lpi-&gt;grbenv,<sp/><ref refid="lpi__grb_8c_1a5397bab46d83535262cfd4f82ffcaf3e" kindref="member">GRB_INT_PAR_METHOD</ref>,<sp/>&amp;algo)<sp/>);</highlight></codeline>
<codeline lineno="2987"><highlight class="normal"></highlight></codeline>
<codeline lineno="2988"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(lpi-&gt;solstat<sp/>==<sp/>GRB_INFEASIBLE<sp/>&amp;&amp;<sp/>algo<sp/>==<sp/><ref refid="lpi__grb_8c_1ac83a71f7ce20ef826c2fe19ded699f4e" kindref="member">GRB_METHOD_DUAL</ref>);</highlight></codeline>
<codeline lineno="2989"><highlight class="normal">}</highlight></codeline>
<codeline lineno="2990"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="2991"><highlight class="comment">/**<sp/>returns<sp/>TRUE<sp/>iff<sp/>LP<sp/>is<sp/>proven<sp/>to<sp/>be<sp/>dual<sp/>unbounded<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2992" refid="lpi__grb_8c_1ae2cd5f0afa5f5940c9d7bab6f04b184e" refkind="member"><highlight class="normal"><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><ref refid="lpi__grb_8c_1ae2cd5f0afa5f5940c9d7bab6f04b184e" kindref="member">SCIPlpiIsDualUnbounded</ref>(</highlight></codeline>
<codeline lineno="2993"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2994"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="2995"><highlight class="normal">{</highlight></codeline>
<codeline lineno="2996"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>algo;</highlight></codeline>
<codeline lineno="2997"><highlight class="normal"></highlight></codeline>
<codeline lineno="2998"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="2999"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>lpi-&gt;grbmodel<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="3000"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>lpi-&gt;grbenv<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="3001"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>lpi-&gt;solstat<sp/>&gt;=<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="3002"><highlight class="normal"></highlight></codeline>
<codeline lineno="3003"><highlight class="normal"><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;checking<sp/>for<sp/>dual<sp/>unboundedness\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3004"><highlight class="normal"></highlight></codeline>
<codeline lineno="3005"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetintparam(lpi-&gt;grbenv,<sp/><ref refid="lpi__grb_8c_1a5397bab46d83535262cfd4f82ffcaf3e" kindref="member">GRB_INT_PAR_METHOD</ref>,<sp/>&amp;algo)<sp/>);</highlight></codeline>
<codeline lineno="3006"><highlight class="normal"></highlight></codeline>
<codeline lineno="3007"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(lpi-&gt;solstat<sp/>==<sp/>GRB_INFEASIBLE<sp/>&amp;&amp;<sp/>algo<sp/>==<sp/><ref refid="lpi__grb_8c_1ac83a71f7ce20ef826c2fe19ded699f4e" kindref="member">GRB_METHOD_DUAL</ref>);</highlight></codeline>
<codeline lineno="3008"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3009"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3010"><highlight class="comment">/**<sp/>returns<sp/>TRUE<sp/>iff<sp/>LP<sp/>is<sp/>proven<sp/>to<sp/>be<sp/>dual<sp/>infeasible<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3011" refid="lpi__grb_8c_1a348c42072a5aad88210e9d688b4d6a1c" refkind="member"><highlight class="normal"><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><ref refid="lpi__grb_8c_1a348c42072a5aad88210e9d688b4d6a1c" kindref="member">SCIPlpiIsDualInfeasible</ref>(</highlight></codeline>
<codeline lineno="3012"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3013"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="3014"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3015"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="3016"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>lpi-&gt;grbmodel<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="3017"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>lpi-&gt;solstat<sp/>&gt;=<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="3018"><highlight class="normal"></highlight></codeline>
<codeline lineno="3019"><highlight class="normal"><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;checking<sp/>for<sp/>dual<sp/>infeasibility\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3020"><highlight class="normal"></highlight></codeline>
<codeline lineno="3021"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(lpi-&gt;solstat<sp/>==<sp/>GRB_UNBOUNDED);</highlight></codeline>
<codeline lineno="3022"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3023"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3024"><highlight class="comment">/**<sp/>returns<sp/>TRUE<sp/>iff<sp/>LP<sp/>is<sp/>proven<sp/>to<sp/>be<sp/>dual<sp/>feasible<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3025" refid="lpi__grb_8c_1a8457b3a26f7595f3390f7b34ab443fd4" refkind="member"><highlight class="normal"><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><ref refid="lpi__grb_8c_1a8457b3a26f7595f3390f7b34ab443fd4" kindref="member">SCIPlpiIsDualFeasible</ref>(</highlight></codeline>
<codeline lineno="3026"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3027"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="3028"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3029"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>algo;</highlight></codeline>
<codeline lineno="3030"><highlight class="normal"></highlight></codeline>
<codeline lineno="3031"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="3032"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>lpi-&gt;grbmodel<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="3033"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>lpi-&gt;grbenv<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>);</highlight></codeline>
<codeline lineno="3034"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>lpi-&gt;solstat<sp/>&gt;=<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="3035"><highlight class="normal"></highlight></codeline>
<codeline lineno="3036"><highlight class="normal"><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;checking<sp/>for<sp/>dual<sp/>feasibility\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3037"><highlight class="normal"></highlight></codeline>
<codeline lineno="3038"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetintparam(lpi-&gt;grbenv,<sp/><ref refid="lpi__grb_8c_1a5397bab46d83535262cfd4f82ffcaf3e" kindref="member">GRB_INT_PAR_METHOD</ref>,<sp/>&amp;algo)<sp/>);</highlight></codeline>
<codeline lineno="3039"><highlight class="normal"></highlight></codeline>
<codeline lineno="3040"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(lpi-&gt;solstat<sp/>==<sp/>GRB_OPTIMAL<sp/>||<sp/>(lpi-&gt;solstat<sp/>==<sp/>GRB_INFEASIBLE<sp/>&amp;&amp;<sp/>algo<sp/>==<sp/><ref refid="lpi__grb_8c_1ac83a71f7ce20ef826c2fe19ded699f4e" kindref="member">GRB_METHOD_DUAL</ref>));</highlight></codeline>
<codeline lineno="3041"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3042"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3043"><highlight class="comment">/**<sp/>returns<sp/>TRUE<sp/>iff<sp/>LP<sp/>was<sp/>solved<sp/>to<sp/>optimality<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3044" refid="lpi__grb_8c_1ab66f1eae0b448c155f0feaffa7bdda57" refkind="member"><highlight class="normal"><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><ref refid="lpi__grb_8c_1ab66f1eae0b448c155f0feaffa7bdda57" kindref="member">SCIPlpiIsOptimal</ref>(</highlight></codeline>
<codeline lineno="3045"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3046"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="3047"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3048"><highlight class="normal"><sp/><sp/><sp/>assert(lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="3049"><highlight class="normal"><sp/><sp/><sp/>assert(lpi-&gt;grbmodel<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="3050"><highlight class="normal"><sp/><sp/><sp/>assert(lpi-&gt;solstat<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="3051"><highlight class="normal"></highlight></codeline>
<codeline lineno="3052"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(lpi-&gt;solstat<sp/>==<sp/>GRB_OPTIMAL);</highlight></codeline>
<codeline lineno="3053"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3054"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3055"><highlight class="comment">/**<sp/>returns<sp/>TRUE<sp/>iff<sp/>current<sp/>LP<sp/>basis<sp/>is<sp/>stable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3056" refid="lpi__grb_8c_1af04aa49d1337f5007cc0d78625d2dd4d" refkind="member"><highlight class="normal"><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><ref refid="lpi__grb_8c_1af04aa49d1337f5007cc0d78625d2dd4d" kindref="member">SCIPlpiIsStable</ref>(</highlight></codeline>
<codeline lineno="3057"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3058"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="3059"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3060"><highlight class="normal"><sp/><sp/><sp/>assert(lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="3061"><highlight class="normal"><sp/><sp/><sp/>assert(lpi-&gt;grbmodel<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="3062"><highlight class="normal"><sp/><sp/><sp/>assert(lpi-&gt;solstat<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="3063"><highlight class="normal"></highlight></codeline>
<codeline lineno="3064"><highlight class="normal"><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;checking<sp/>for<sp/>stability:<sp/>Gurobi<sp/>solstat<sp/>=<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>lpi-&gt;solstat);</highlight></codeline>
<codeline lineno="3065"><highlight class="normal"></highlight></codeline>
<codeline lineno="3066"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(lpi-&gt;solstat<sp/>!=<sp/>GRB_NUMERIC);</highlight></codeline>
<codeline lineno="3067"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3068"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3069"><highlight class="comment">/**<sp/>returns<sp/>TRUE<sp/>iff<sp/>the<sp/>objective<sp/>limit<sp/>was<sp/>reached<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3070" refid="lpi__grb_8c_1a0d4fca883c08a32af088280a78ca3ef2" refkind="member"><highlight class="normal"><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><ref refid="lpi__grb_8c_1a0d4fca883c08a32af088280a78ca3ef2" kindref="member">SCIPlpiIsObjlimExc</ref>(</highlight></codeline>
<codeline lineno="3071"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3072"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="3073"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3074"><highlight class="normal"><sp/><sp/><sp/>assert(lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="3075"><highlight class="normal"><sp/><sp/><sp/>assert(lpi-&gt;grbmodel<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="3076"><highlight class="normal"><sp/><sp/><sp/>assert(lpi-&gt;solstat<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="3077"><highlight class="normal"></highlight></codeline>
<codeline lineno="3078"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(lpi-&gt;solstat<sp/>==<sp/>GRB_CUTOFF);</highlight></codeline>
<codeline lineno="3079"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3080"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3081"><highlight class="comment">/**<sp/>returns<sp/>TRUE<sp/>iff<sp/>the<sp/>iteration<sp/>limit<sp/>was<sp/>reached<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3082" refid="lpi__grb_8c_1a689c99183c7e0779c50f9aef63c79123" refkind="member"><highlight class="normal"><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><ref refid="lpi__grb_8c_1a689c99183c7e0779c50f9aef63c79123" kindref="member">SCIPlpiIsIterlimExc</ref>(</highlight></codeline>
<codeline lineno="3083"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3084"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="3085"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3086"><highlight class="normal"><sp/><sp/><sp/>assert(lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="3087"><highlight class="normal"><sp/><sp/><sp/>assert(lpi-&gt;grbmodel<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="3088"><highlight class="normal"><sp/><sp/><sp/>assert(lpi-&gt;solstat<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="3089"><highlight class="normal"></highlight></codeline>
<codeline lineno="3090"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(lpi-&gt;solstat<sp/>==<sp/>GRB_ITERATION_LIMIT);</highlight></codeline>
<codeline lineno="3091"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3092"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3093"><highlight class="comment">/**<sp/>returns<sp/>TRUE<sp/>iff<sp/>the<sp/>time<sp/>limit<sp/>was<sp/>reached<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3094" refid="lpi__grb_8c_1a8ac20384dbd857173c8dfe0dc37f7d6a" refkind="member"><highlight class="normal"><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><ref refid="lpi__grb_8c_1a8ac20384dbd857173c8dfe0dc37f7d6a" kindref="member">SCIPlpiIsTimelimExc</ref>(</highlight></codeline>
<codeline lineno="3095"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3096"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="3097"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3098"><highlight class="normal"><sp/><sp/><sp/>assert(lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="3099"><highlight class="normal"><sp/><sp/><sp/>assert(lpi-&gt;grbmodel<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="3100"><highlight class="normal"><sp/><sp/><sp/>assert(lpi-&gt;solstat<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="3101"><highlight class="normal"></highlight></codeline>
<codeline lineno="3102"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(lpi-&gt;solstat<sp/>==<sp/>GRB_TIME_LIMIT);</highlight></codeline>
<codeline lineno="3103"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3104"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3105"><highlight class="comment">/**<sp/>returns<sp/>the<sp/>internal<sp/>solution<sp/>status<sp/>of<sp/>the<sp/>solver<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3106" refid="lpi__grb_8c_1a5fbb9e1f86a8425b85760f01692f85aa" refkind="member"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="lpi__grb_8c_1a5fbb9e1f86a8425b85760f01692f85aa" kindref="member">SCIPlpiGetInternalStatus</ref>(</highlight></codeline>
<codeline lineno="3107"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3108"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="3109"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3110"><highlight class="normal"><sp/><sp/><sp/>assert(lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="3111"><highlight class="normal"><sp/><sp/><sp/>assert(lpi-&gt;grbmodel<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="3112"><highlight class="normal"></highlight></codeline>
<codeline lineno="3113"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>lpi-&gt;solstat;</highlight></codeline>
<codeline lineno="3114"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3115"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3116"><highlight class="comment">/**<sp/>tries<sp/>to<sp/>reset<sp/>the<sp/>internal<sp/>status<sp/>of<sp/>the<sp/>LP<sp/>solver<sp/>in<sp/>order<sp/>to<sp/>ignore<sp/>an<sp/>instability<sp/>of<sp/>the<sp/>last<sp/>solving<sp/>call<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3117" refid="lpi__grb_8c_1a6b24f7dd3dfac27d08f1cfc777e56a8b" refkind="member"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="lpi__grb_8c_1a6b24f7dd3dfac27d08f1cfc777e56a8b" kindref="member">SCIPlpiIgnoreInstability</ref>(</highlight></codeline>
<codeline lineno="3118"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3119"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>success<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store,<sp/>whether<sp/>the<sp/>instability<sp/>could<sp/>be<sp/>ignored<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3120"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="3121"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3122"><highlight class="normal"><sp/><sp/><sp/>assert(lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="3123"><highlight class="normal"><sp/><sp/><sp/>assert(lpi-&gt;grbmodel<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="3124"><highlight class="normal"><sp/><sp/><sp/>assert(success<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="3125"><highlight class="normal"></highlight></codeline>
<codeline lineno="3126"><highlight class="normal"><sp/><sp/><sp/>*success<sp/>=<sp/><ref refid="def_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="3127"><highlight class="normal"></highlight></codeline>
<codeline lineno="3128"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="3129"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3130"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3131"><highlight class="comment">/**<sp/>gets<sp/>objective<sp/>value<sp/>of<sp/>solution</highlight></codeline>
<codeline lineno="3132"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3133"><highlight class="comment"><sp/>*<sp/><sp/>@note<sp/>if<sp/>the<sp/>solution<sp/>status<sp/>is<sp/>iteration<sp/>limit<sp/>reached<sp/>(GRB_ITERATION_LIMIT),<sp/>the<sp/>objective<sp/>value<sp/>was<sp/>not<sp/>computed</highlight></codeline>
<codeline lineno="3134"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3135" refid="lpi__grb_8c_1a5548fcdd7c4e4a3f6d542cd51da27c82" refkind="member"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="lpi__grb_8c_1a5548fcdd7c4e4a3f6d542cd51da27c82" kindref="member">SCIPlpiGetObjval</ref>(</highlight></codeline>
<codeline lineno="3136"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3137"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objval<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>stores<sp/>the<sp/>objective<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3138"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="3139"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3140"><highlight class="normal"><sp/><sp/><sp/>assert(lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="3141"><highlight class="normal"><sp/><sp/><sp/>assert(lpi-&gt;grbmodel<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="3142"><highlight class="normal"></highlight></codeline>
<codeline lineno="3143"><highlight class="normal"><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;getting<sp/>solution&apos;s<sp/>objective<sp/>value\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3144"><highlight class="normal"></highlight></codeline>
<codeline lineno="3145"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetdblattr(lpi-&gt;grbmodel,<sp/>GRB_DBL_ATTR_OBJVAL,<sp/>objval)<sp/>);</highlight></codeline>
<codeline lineno="3146"><highlight class="normal"></highlight></codeline>
<codeline lineno="3147"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="3148"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3149"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3150"><highlight class="comment">/**<sp/>gets<sp/>primal<sp/>and<sp/>dual<sp/>solution<sp/>vectors<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3151" refid="lpi__grb_8c_1ac5a2315c14e99b919626de4170687227" refkind="member"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="lpi__grb_8c_1ac5a2315c14e99b919626de4170687227" kindref="member">SCIPlpiGetSol</ref>(</highlight></codeline>
<codeline lineno="3152"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3153"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>objval,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>stores<sp/>the<sp/>objective<sp/>value,<sp/>may<sp/>be<sp/>NULL<sp/>if<sp/>not<sp/>needed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3154"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>primsol,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>primal<sp/>solution<sp/>vector,<sp/>may<sp/>be<sp/>NULL<sp/>if<sp/>not<sp/>needed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3155"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dualsol,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>dual<sp/>solution<sp/>vector,<sp/>may<sp/>be<sp/>NULL<sp/>if<sp/>not<sp/>needed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3156"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>activity,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>row<sp/>activity<sp/>vector,<sp/>may<sp/>be<sp/>NULL<sp/>if<sp/>not<sp/>needed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3157"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>redcost<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>reduced<sp/>cost<sp/>vector,<sp/>may<sp/>be<sp/>NULL<sp/>if<sp/>not<sp/>needed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3158"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="3159"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3160"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncols;</highlight></codeline>
<codeline lineno="3161"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nrows;</highlight></codeline>
<codeline lineno="3162"><highlight class="normal"></highlight></codeline>
<codeline lineno="3163"><highlight class="normal"><sp/><sp/><sp/>assert(lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="3164"><highlight class="normal"><sp/><sp/><sp/>assert(lpi-&gt;grbmodel<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="3165"><highlight class="normal"><sp/><sp/><sp/>assert(lpi-&gt;solstat<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="3166"><highlight class="normal"></highlight></codeline>
<codeline lineno="3167"><highlight class="normal"><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;getting<sp/>solution\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3168"><highlight class="normal"></highlight></codeline>
<codeline lineno="3169"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetintattr(lpi-&gt;grbmodel,<sp/>GRB_INT_ATTR_NUMVARS,<sp/>&amp;ncols)<sp/>);</highlight></codeline>
<codeline lineno="3170"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetintattr(lpi-&gt;grbmodel,<sp/>GRB_INT_ATTR_NUMCONSTRS,<sp/>&amp;nrows)<sp/>);</highlight></codeline>
<codeline lineno="3171"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>ncols<sp/>&gt;=<sp/>0<sp/>&amp;&amp;<sp/>nrows<sp/>&gt;=<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="3172"><highlight class="normal"></highlight></codeline>
<codeline lineno="3173"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>objval<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>)</highlight></codeline>
<codeline lineno="3174"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3175"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetdblattr(lpi-&gt;grbmodel,<sp/>GRB_DBL_ATTR_OBJVAL,<sp/>objval)<sp/>);</highlight></codeline>
<codeline lineno="3176"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3177"><highlight class="normal"></highlight></codeline>
<codeline lineno="3178"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>primsol<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>)</highlight></codeline>
<codeline lineno="3179"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3180"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetdblattrarray(lpi-&gt;grbmodel,<sp/>GRB_DBL_ATTR_X,<sp/>0,<sp/>ncols,<sp/>primsol)<sp/>);</highlight></codeline>
<codeline lineno="3181"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3182"><highlight class="normal"></highlight></codeline>
<codeline lineno="3183"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>dualsol<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>)</highlight></codeline>
<codeline lineno="3184"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3185"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetdblattrarray(lpi-&gt;grbmodel,<sp/>GRB_DBL_ATTR_PI,<sp/>0,<sp/>nrows,<sp/>dualsol)<sp/>);</highlight></codeline>
<codeline lineno="3186"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3187"><highlight class="normal"></highlight></codeline>
<codeline lineno="3188"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>activity<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>)</highlight></codeline>
<codeline lineno="3189"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3190"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="3191"><highlight class="normal"></highlight></codeline>
<codeline lineno="3192"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>first<sp/>get<sp/>the<sp/>values<sp/>of<sp/>the<sp/>slack<sp/>variables<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3193"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetdblattrarray(lpi-&gt;grbmodel,<sp/>GRB_DBL_ATTR_SLACK,<sp/>0,<sp/>nrows,<sp/>activity)<sp/>);</highlight></codeline>
<codeline lineno="3194"><highlight class="normal"></highlight></codeline>
<codeline lineno="3195"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/>ensureSidechgMem(lpi,<sp/>nrows)<sp/>);</highlight></codeline>
<codeline lineno="3196"><highlight class="normal"></highlight></codeline>
<codeline lineno="3197"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetdblattrarray(lpi-&gt;grbmodel,<sp/>GRB_DBL_ATTR_RHS,<sp/>0,<sp/>nrows,<sp/>lpi-&gt;rhsarray)<sp/>);</highlight></codeline>
<codeline lineno="3198"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetcharattrarray(lpi-&gt;grbmodel,<sp/>GRB_CHAR_ATTR_SENSE,<sp/>0,<sp/>nrows,<sp/>lpi-&gt;senarray)<sp/>);</highlight></codeline>
<codeline lineno="3199"><highlight class="normal"></highlight></codeline>
<codeline lineno="3200"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nrows;<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="3201"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3202"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(lpi-&gt;senarray[i])</highlight></codeline>
<codeline lineno="3203"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3204"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GRB_LESS_EQUAL:</highlight></codeline>
<codeline lineno="3205"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GRB_EQUAL:</highlight></codeline>
<codeline lineno="3206"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>activity[i]<sp/>=<sp/>lpi-&gt;rhsarray[i]<sp/>-<sp/>activity[i];</highlight></codeline>
<codeline lineno="3207"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3208"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GRB_GREATER_EQUAL:</highlight></codeline>
<codeline lineno="3209"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>activity[i]<sp/>=<sp/>lpi-&gt;rhsarray[i]<sp/>-<sp/>activity[i];</highlight></codeline>
<codeline lineno="3210"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3211"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3212"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pub__message_8h_1a354566c209c3a7fe5c870d4ee8c07bc5" kindref="member">SCIPerrorMessage</ref>(</highlight><highlight class="stringliteral">&quot;Unkown<sp/>sense<sp/>%c.\n&quot;</highlight><highlight class="normal">,<sp/>lpi-&gt;senarray[i]);</highlight></codeline>
<codeline lineno="3213"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="def_8h_1ad8669395a2a82ed74b9b364f4a310c56" kindref="member">SCIPABORT</ref>();</highlight></codeline>
<codeline lineno="3214"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5da4e90bc81f0364ff12e57c3b3e03d315c" kindref="member">SCIP_INVALIDDATA</ref>;<sp/></highlight><highlight class="comment">/*lint<sp/>!e527*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3215"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3216"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3217"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3218"><highlight class="normal"></highlight></codeline>
<codeline lineno="3219"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>redcost<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>)</highlight></codeline>
<codeline lineno="3220"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3221"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetdblattrarray(lpi-&gt;grbmodel,<sp/>GRB_DBL_ATTR_RC,<sp/>0,<sp/>ncols,<sp/>redcost)<sp/>);</highlight></codeline>
<codeline lineno="3222"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3223"><highlight class="normal"></highlight></codeline>
<codeline lineno="3224"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="3225"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3226"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3227"><highlight class="comment">/**<sp/>gets<sp/>primal<sp/>ray<sp/>for<sp/>unbounded<sp/>LPs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3228" refid="lpi__grb_8c_1a2d3ab14c33312daf6f0c51e7eba4ae95" refkind="member"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="lpi__grb_8c_1a2d3ab14c33312daf6f0c51e7eba4ae95" kindref="member">SCIPlpiGetPrimalRay</ref>(</highlight></codeline>
<codeline lineno="3229"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3230"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ray<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>primal<sp/>ray<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3231"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="3232"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3233"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncols;</highlight></codeline>
<codeline lineno="3234"><highlight class="normal"></highlight></codeline>
<codeline lineno="3235"><highlight class="normal"><sp/><sp/><sp/>assert(lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="3236"><highlight class="normal"><sp/><sp/><sp/>assert(lpi-&gt;grbmodel<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="3237"><highlight class="normal"><sp/><sp/><sp/>assert(lpi-&gt;solstat<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="3238"><highlight class="normal"></highlight></codeline>
<codeline lineno="3239"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetintattr(lpi-&gt;grbmodel,<sp/>GRB_INT_ATTR_NUMVARS,<sp/>&amp;ncols)<sp/>);</highlight></codeline>
<codeline lineno="3240"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>ncols<sp/>&gt;=<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="3241"><highlight class="normal"></highlight></codeline>
<codeline lineno="3242"><highlight class="normal"><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;calling<sp/>Gurobi<sp/>get<sp/>primal<sp/>ray:<sp/>%d<sp/>cols\n&quot;</highlight><highlight class="normal">,<sp/>ncols);</highlight></codeline>
<codeline lineno="3243"><highlight class="normal"></highlight></codeline>
<codeline lineno="3244"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetdblattrarray(lpi-&gt;grbmodel,<sp/>GRB_DBL_ATTR_UNBDRAY,<sp/>0,<sp/>ncols,<sp/>ray)<sp/>);</highlight></codeline>
<codeline lineno="3245"><highlight class="normal"></highlight></codeline>
<codeline lineno="3246"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="3247"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3248"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3249"><highlight class="comment">/**<sp/>gets<sp/>dual<sp/>Farkas<sp/>proof<sp/>for<sp/>infeasibility<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3250" refid="lpi__grb_8c_1a54ee13d012fb992394c0828166c2fea3" refkind="member"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="lpi__grb_8c_1a54ee13d012fb992394c0828166c2fea3" kindref="member">SCIPlpiGetDualfarkas</ref>(</highlight></codeline>
<codeline lineno="3251"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3252"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dualfarkas<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>dual<sp/>Farkas<sp/>row<sp/>multipliers<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3253"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="3254"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3255"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nrows;</highlight></codeline>
<codeline lineno="3256"><highlight class="normal"></highlight></codeline>
<codeline lineno="3257"><highlight class="normal"><sp/><sp/><sp/>assert(lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="3258"><highlight class="normal"><sp/><sp/><sp/>assert(lpi-&gt;grbmodel<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="3259"><highlight class="normal"><sp/><sp/><sp/>assert(lpi-&gt;solstat<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="3260"><highlight class="normal"><sp/><sp/><sp/>assert(dualfarkas<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="3261"><highlight class="normal"></highlight></codeline>
<codeline lineno="3262"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetintattr(lpi-&gt;grbmodel,<sp/>GRB_INT_ATTR_NUMCONSTRS,<sp/>&amp;nrows)<sp/>);</highlight></codeline>
<codeline lineno="3263"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>nrows<sp/>&gt;=<sp/>0<sp/>);</highlight></codeline>
<codeline lineno="3264"><highlight class="normal"></highlight></codeline>
<codeline lineno="3265"><highlight class="normal"><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;calling<sp/>Gurobi<sp/>dual<sp/>Farkas:<sp/>%d<sp/>rows\n&quot;</highlight><highlight class="normal">,<sp/>nrows);</highlight></codeline>
<codeline lineno="3266"><highlight class="normal"></highlight></codeline>
<codeline lineno="3267"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetdblattrarray(lpi-&gt;grbmodel,<sp/>GRB_DBL_ATTR_FARKASDUAL,<sp/>0,<sp/>nrows,<sp/>dualfarkas)<sp/>);</highlight></codeline>
<codeline lineno="3268"><highlight class="normal"></highlight></codeline>
<codeline lineno="3269"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5da004953b01233fe72cb41c5d218abb858" kindref="member">SCIP_LPERROR</ref>;</highlight></codeline>
<codeline lineno="3270"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3271"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3272"><highlight class="comment">/**<sp/>gets<sp/>the<sp/>number<sp/>of<sp/>LP<sp/>iterations<sp/>of<sp/>the<sp/>last<sp/>solve<sp/>call<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3273" refid="lpi__grb_8c_1ae37bfbea024ddb8232827aeedc84afe0" refkind="member"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="lpi__grb_8c_1ae37bfbea024ddb8232827aeedc84afe0" kindref="member">SCIPlpiGetIterations</ref>(</highlight></codeline>
<codeline lineno="3274"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3275"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>iterations<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>number<sp/>of<sp/>iterations<sp/>of<sp/>the<sp/>last<sp/>solve<sp/>call<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3276"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="3277"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3278"><highlight class="normal"><sp/><sp/><sp/>assert(lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="3279"><highlight class="normal"><sp/><sp/><sp/>assert(lpi-&gt;grbmodel<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="3280"><highlight class="normal"><sp/><sp/><sp/>assert(iterations<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="3281"><highlight class="normal"></highlight></codeline>
<codeline lineno="3282"><highlight class="normal"><sp/><sp/><sp/>*iterations<sp/>=<sp/>lpi-&gt;iterations;</highlight></codeline>
<codeline lineno="3283"><highlight class="normal"></highlight></codeline>
<codeline lineno="3284"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="3285"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3286"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3287"><highlight class="comment">/**<sp/>gets<sp/>information<sp/>about<sp/>the<sp/>quality<sp/>of<sp/>an<sp/>LP<sp/>solution</highlight></codeline>
<codeline lineno="3288"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3289"><highlight class="comment"><sp/>*<sp/><sp/>Such<sp/>information<sp/>is<sp/>usually<sp/>only<sp/>available,<sp/>if<sp/>also<sp/>a<sp/>(maybe<sp/>not<sp/>optimal)<sp/>solution<sp/>is<sp/>available.</highlight></codeline>
<codeline lineno="3290"><highlight class="comment"><sp/>*<sp/><sp/>The<sp/>LPI<sp/>should<sp/>return<sp/>SCIP_INVALID<sp/>for<sp/>@p<sp/>quality,<sp/>if<sp/>the<sp/>requested<sp/>quantity<sp/>is<sp/>not<sp/>available.</highlight></codeline>
<codeline lineno="3291"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3292" refid="lpi__grb_8c_1a83ddb586c09a37eea2e411f1271a32f6" refkind="member"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="lpi__grb_8c_1a83ddb586c09a37eea2e411f1271a32f6" kindref="member">SCIPlpiGetRealSolQuality</ref>(</highlight></codeline>
<codeline lineno="3293"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3294"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1ad43906673a9a8a661c5c454138207fc9" kindref="member">SCIP_LPSOLQUALITY</ref><sp/><sp/><sp/><sp/><sp/>qualityindicator,<sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>indicates<sp/>which<sp/>quality<sp/>should<sp/>be<sp/>returned<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3295"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>quality<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>quality<sp/>number<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3296"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="3297"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3298"><highlight class="normal"><sp/><sp/><sp/>assert(lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="3299"><highlight class="normal"><sp/><sp/><sp/>assert(quality<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="3300"><highlight class="normal"></highlight></codeline>
<codeline lineno="3301"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetdblattr(lpi-&gt;grbmodel,<sp/>GRB_DBL_ATTR_KAPPA,<sp/>quality)<sp/>);</highlight></codeline>
<codeline lineno="3302"><highlight class="normal"></highlight></codeline>
<codeline lineno="3303"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="3304"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3305"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3306"><highlight class="comment">/**@}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3307"><highlight class="normal"></highlight></codeline>
<codeline lineno="3308"><highlight class="normal"></highlight></codeline>
<codeline lineno="3309"><highlight class="normal"></highlight></codeline>
<codeline lineno="3310"><highlight class="normal"></highlight></codeline>
<codeline lineno="3311"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3312"><highlight class="comment"><sp/>*<sp/>LP<sp/>Basis<sp/>Methods</highlight></codeline>
<codeline lineno="3313"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3314"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3315"><highlight class="comment">/**@name<sp/>LP<sp/>Basis<sp/>Methods<sp/>*/</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3316"><highlight class="comment">/**@{<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3317"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3318"><highlight class="comment">/**<sp/>gets<sp/>current<sp/>basis<sp/>status<sp/>for<sp/>columns<sp/>and<sp/>rows;<sp/>arrays<sp/>must<sp/>be<sp/>large<sp/>enough<sp/>to<sp/>store<sp/>the<sp/>basis<sp/>status<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3319" refid="lpi__grb_8c_1a258aa72f3b645b140c543f0fc7f3f37a" refkind="member"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="lpi__grb_8c_1a258aa72f3b645b140c543f0fc7f3f37a" kindref="member">SCIPlpiGetBase</ref>(</highlight></codeline>
<codeline lineno="3320"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3321"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cstat,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>to<sp/>store<sp/>column<sp/>basis<sp/>status,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3322"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rstat<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>to<sp/>store<sp/>row<sp/>basis<sp/>status,<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3323"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="3324"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3325"><highlight class="normal"><sp/><sp/><sp/>assert(lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="3326"><highlight class="normal"><sp/><sp/><sp/>assert(lpi-&gt;grbmodel<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="3327"><highlight class="normal"></highlight></codeline>
<codeline lineno="3328"><highlight class="normal"><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;saving<sp/>Gurobi<sp/>basis<sp/>into<sp/>%p/%p\n&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)<sp/>cstat,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)<sp/>rstat);</highlight></codeline>
<codeline lineno="3329"><highlight class="normal"></highlight></codeline>
<codeline lineno="3330"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>rstat<sp/>!=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="3331"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="3333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nrows;</highlight></codeline>
<codeline lineno="3334"><highlight class="normal"></highlight></codeline>
<codeline lineno="3335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetintattr(lpi-&gt;grbmodel,<sp/>GRB_INT_ATTR_NUMCONSTRS,<sp/>&amp;nrows)<sp/>);</highlight></codeline>
<codeline lineno="3336"><highlight class="normal"></highlight></codeline>
<codeline lineno="3337"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nrows;<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="3338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stat;</highlight></codeline>
<codeline lineno="3340"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetintattrelement(lpi-&gt;grbmodel,<sp/>GRB_INT_ATTR_CBASIS,<sp/>i,<sp/>&amp;stat)<sp/>);</highlight></codeline>
<codeline lineno="3341"><highlight class="normal"></highlight></codeline>
<codeline lineno="3342"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<sp/>stat<sp/>)</highlight></codeline>
<codeline lineno="3343"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3344"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GRB_BASIC:</highlight></codeline>
<codeline lineno="3345"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rstat[i]<sp/>=<sp/><ref refid="type__lpi_8h_1ac34513c7d1cc6c3eb46bc9f373d03648a166f9b557960da4bec4a0dbd00c0d7f2" kindref="member">SCIP_BASESTAT_BASIC</ref>;</highlight></codeline>
<codeline lineno="3346"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3347"><highlight class="normal"></highlight></codeline>
<codeline lineno="3348"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GRB_NONBASIC_LOWER:</highlight></codeline>
<codeline lineno="3349"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rstat[i]<sp/>=<sp/><ref refid="type__lpi_8h_1ac34513c7d1cc6c3eb46bc9f373d03648aaf2c277e576d024183ed7949ba947da6" kindref="member">SCIP_BASESTAT_LOWER</ref>;</highlight></codeline>
<codeline lineno="3350"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3351"><highlight class="normal"></highlight></codeline>
<codeline lineno="3352"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GRB_NONBASIC_UPPER:</highlight></codeline>
<codeline lineno="3353"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rstat[i]<sp/>=<sp/><ref refid="type__lpi_8h_1ac34513c7d1cc6c3eb46bc9f373d03648a2b5d851810f72ad984abc6b47b852868" kindref="member">SCIP_BASESTAT_UPPER</ref>;</highlight></codeline>
<codeline lineno="3354"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3355"><highlight class="normal"></highlight></codeline>
<codeline lineno="3356"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GRB_SUPERBASIC:</highlight></codeline>
<codeline lineno="3357"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rstat[i]<sp/>=<sp/><ref refid="type__lpi_8h_1ac34513c7d1cc6c3eb46bc9f373d03648ac9fd196bcf1e32bef1f5a2a71b3421bc" kindref="member">SCIP_BASESTAT_ZERO</ref>;</highlight></codeline>
<codeline lineno="3358"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3359"><highlight class="normal"></highlight></codeline>
<codeline lineno="3360"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3361"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pub__message_8h_1a354566c209c3a7fe5c870d4ee8c07bc5" kindref="member">SCIPerrorMessage</ref>(</highlight><highlight class="stringliteral">&quot;invalid<sp/>basis<sp/>status<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>stat);</highlight></codeline>
<codeline lineno="3362"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="def_8h_1ad8669395a2a82ed74b9b364f4a310c56" kindref="member">SCIPABORT</ref>();</highlight></codeline>
<codeline lineno="3363"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5da4e90bc81f0364ff12e57c3b3e03d315c" kindref="member">SCIP_INVALIDDATA</ref>;<sp/></highlight><highlight class="comment">/*lint<sp/>!e527*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3364"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3366"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3367"><highlight class="normal"></highlight></codeline>
<codeline lineno="3368"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>cstat<sp/>!=<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="3369"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3370"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j;</highlight></codeline>
<codeline lineno="3371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncols;</highlight></codeline>
<codeline lineno="3372"><highlight class="normal"></highlight></codeline>
<codeline lineno="3373"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetintattr(lpi-&gt;grbmodel,<sp/>GRB_INT_ATTR_NUMVARS,<sp/>&amp;ncols)<sp/>);</highlight></codeline>
<codeline lineno="3374"><highlight class="normal"></highlight></codeline>
<codeline lineno="3375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>ncols;<sp/>++j<sp/>)</highlight></codeline>
<codeline lineno="3376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stat;</highlight></codeline>
<codeline lineno="3378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetintattrelement(lpi-&gt;grbmodel,<sp/>GRB_INT_ATTR_VBASIS,<sp/>j,<sp/>&amp;stat)<sp/>);</highlight></codeline>
<codeline lineno="3379"><highlight class="normal"></highlight></codeline>
<codeline lineno="3380"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<sp/>stat<sp/>)</highlight></codeline>
<codeline lineno="3381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GRB_BASIC:</highlight></codeline>
<codeline lineno="3383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cstat[j]<sp/>=<sp/><ref refid="type__lpi_8h_1ac34513c7d1cc6c3eb46bc9f373d03648a166f9b557960da4bec4a0dbd00c0d7f2" kindref="member">SCIP_BASESTAT_BASIC</ref>;</highlight></codeline>
<codeline lineno="3384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3385"><highlight class="normal"></highlight></codeline>
<codeline lineno="3386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GRB_NONBASIC_LOWER:</highlight></codeline>
<codeline lineno="3387"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cstat[j]<sp/>=<sp/><ref refid="type__lpi_8h_1ac34513c7d1cc6c3eb46bc9f373d03648aaf2c277e576d024183ed7949ba947da6" kindref="member">SCIP_BASESTAT_LOWER</ref>;</highlight></codeline>
<codeline lineno="3388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3389"><highlight class="normal"></highlight></codeline>
<codeline lineno="3390"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GRB_NONBASIC_UPPER:</highlight></codeline>
<codeline lineno="3391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cstat[j]<sp/>=<sp/><ref refid="type__lpi_8h_1ac34513c7d1cc6c3eb46bc9f373d03648a2b5d851810f72ad984abc6b47b852868" kindref="member">SCIP_BASESTAT_UPPER</ref>;</highlight></codeline>
<codeline lineno="3392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3393"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/>GRB_SUPERBASIC:</highlight></codeline>
<codeline lineno="3394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cstat[j]<sp/>=<sp/><ref refid="type__lpi_8h_1ac34513c7d1cc6c3eb46bc9f373d03648ac9fd196bcf1e32bef1f5a2a71b3421bc" kindref="member">SCIP_BASESTAT_ZERO</ref>;</highlight></codeline>
<codeline lineno="3395"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3396"><highlight class="normal"></highlight></codeline>
<codeline lineno="3397"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3398"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pub__message_8h_1a354566c209c3a7fe5c870d4ee8c07bc5" kindref="member">SCIPerrorMessage</ref>(</highlight><highlight class="stringliteral">&quot;invalid<sp/>basis<sp/>status<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>stat);</highlight></codeline>
<codeline lineno="3399"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="def_8h_1ad8669395a2a82ed74b9b364f4a310c56" kindref="member">SCIPABORT</ref>();</highlight></codeline>
<codeline lineno="3400"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5da4e90bc81f0364ff12e57c3b3e03d315c" kindref="member">SCIP_INVALIDDATA</ref>;<sp/></highlight><highlight class="comment">/*lint<sp/>!e527*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3401"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3402"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3403"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3404"><highlight class="normal"></highlight></codeline>
<codeline lineno="3405"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="3406"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3407"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3408"><highlight class="comment">/**<sp/>sets<sp/>current<sp/>basis<sp/>status<sp/>for<sp/>columns<sp/>and<sp/>rows<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3409" refid="lpi__grb_8c_1a7d9cb745987d79fb87f60739a423c833" refkind="member"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="lpi__grb_8c_1a7d9cb745987d79fb87f60739a423c833" kindref="member">SCIPlpiSetBase</ref>(</highlight></codeline>
<codeline lineno="3410"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3411"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cstat,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>with<sp/>column<sp/>basis<sp/>status<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3412"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>rstat<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>with<sp/>row<sp/>basis<sp/>status<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3413"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="3414"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3415"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i,<sp/>j;</highlight></codeline>
<codeline lineno="3416"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nrows,<sp/>ncols;</highlight></codeline>
<codeline lineno="3417"><highlight class="normal"></highlight></codeline>
<codeline lineno="3418"><highlight class="normal"><sp/><sp/><sp/>assert(lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="3419"><highlight class="normal"><sp/><sp/><sp/>assert(lpi-&gt;grbmodel<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="3420"><highlight class="normal"><sp/><sp/><sp/>assert(cstat<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="3421"><highlight class="normal"><sp/><sp/><sp/>assert(rstat<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="3422"><highlight class="normal"></highlight></codeline>
<codeline lineno="3423"><highlight class="normal"><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;loading<sp/>basis<sp/>%p/%p<sp/>into<sp/>Gurobi\n&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)<sp/>cstat,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)<sp/>rstat);</highlight></codeline>
<codeline lineno="3424"><highlight class="normal"></highlight></codeline>
<codeline lineno="3425"><highlight class="normal"><sp/><sp/><sp/>invalidateSolution(lpi);</highlight></codeline>
<codeline lineno="3426"><highlight class="normal"></highlight></codeline>
<codeline lineno="3427"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetintattr(lpi-&gt;grbmodel,<sp/>GRB_INT_ATTR_NUMCONSTRS,<sp/>&amp;nrows)<sp/>);</highlight></codeline>
<codeline lineno="3428"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetintattr(lpi-&gt;grbmodel,<sp/>GRB_INT_ATTR_NUMVARS,<sp/>&amp;ncols)<sp/>);</highlight></codeline>
<codeline lineno="3429"><highlight class="normal"></highlight></codeline>
<codeline lineno="3430"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nrows;<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="3431"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<sp/>rstat[i]<sp/>)</highlight></codeline>
<codeline lineno="3433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="type__lpi_8h_1ac34513c7d1cc6c3eb46bc9f373d03648a166f9b557960da4bec4a0dbd00c0d7f2" kindref="member">SCIP_BASESTAT_BASIC</ref>:</highlight></codeline>
<codeline lineno="3435"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBsetintattrelement(lpi-&gt;grbmodel,<sp/>GRB_INT_ATTR_CBASIS,<sp/>i,<sp/>GRB_BASIC)<sp/>);</highlight></codeline>
<codeline lineno="3436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3437"><highlight class="normal"></highlight></codeline>
<codeline lineno="3438"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="type__lpi_8h_1ac34513c7d1cc6c3eb46bc9f373d03648aaf2c277e576d024183ed7949ba947da6" kindref="member">SCIP_BASESTAT_LOWER</ref>:</highlight></codeline>
<codeline lineno="3439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBsetintattrelement(lpi-&gt;grbmodel,<sp/>GRB_INT_ATTR_CBASIS,<sp/>i,<sp/>GRB_NONBASIC_LOWER)<sp/>);</highlight></codeline>
<codeline lineno="3440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3441"><highlight class="normal"></highlight></codeline>
<codeline lineno="3442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="type__lpi_8h_1ac34513c7d1cc6c3eb46bc9f373d03648a2b5d851810f72ad984abc6b47b852868" kindref="member">SCIP_BASESTAT_UPPER</ref>:</highlight></codeline>
<codeline lineno="3443"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBsetintattrelement(lpi-&gt;grbmodel,<sp/>GRB_INT_ATTR_CBASIS,<sp/>i,<sp/>GRB_NONBASIC_UPPER)<sp/>);</highlight></codeline>
<codeline lineno="3444"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3445"><highlight class="normal"></highlight></codeline>
<codeline lineno="3446"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="type__lpi_8h_1ac34513c7d1cc6c3eb46bc9f373d03648ac9fd196bcf1e32bef1f5a2a71b3421bc" kindref="member">SCIP_BASESTAT_ZERO</ref>:</highlight></codeline>
<codeline lineno="3447"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBsetintattrelement(lpi-&gt;grbmodel,<sp/>GRB_INT_ATTR_CBASIS,<sp/>i,<sp/>GRB_SUPERBASIC)<sp/>);</highlight></codeline>
<codeline lineno="3448"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3449"><highlight class="normal"></highlight></codeline>
<codeline lineno="3450"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3451"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pub__message_8h_1a354566c209c3a7fe5c870d4ee8c07bc5" kindref="member">SCIPerrorMessage</ref>(</highlight><highlight class="stringliteral">&quot;invalid<sp/>basis<sp/>status<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>rstat[i]);</highlight></codeline>
<codeline lineno="3452"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="def_8h_1ad8669395a2a82ed74b9b364f4a310c56" kindref="member">SCIPABORT</ref>();</highlight></codeline>
<codeline lineno="3453"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5da4e90bc81f0364ff12e57c3b3e03d315c" kindref="member">SCIP_INVALIDDATA</ref>;<sp/></highlight><highlight class="comment">/*lint<sp/>!e527*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3454"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3455"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3456"><highlight class="normal"></highlight></codeline>
<codeline lineno="3457"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>ncols;<sp/>++j<sp/>)</highlight></codeline>
<codeline lineno="3458"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3459"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<sp/>cstat[j]<sp/>)</highlight></codeline>
<codeline lineno="3460"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3461"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="type__lpi_8h_1ac34513c7d1cc6c3eb46bc9f373d03648a166f9b557960da4bec4a0dbd00c0d7f2" kindref="member">SCIP_BASESTAT_BASIC</ref>:</highlight></codeline>
<codeline lineno="3462"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBsetintattrelement(lpi-&gt;grbmodel,<sp/>GRB_INT_ATTR_VBASIS,<sp/>j,<sp/>GRB_BASIC)<sp/>);</highlight></codeline>
<codeline lineno="3463"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3464"><highlight class="normal"></highlight></codeline>
<codeline lineno="3465"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="type__lpi_8h_1ac34513c7d1cc6c3eb46bc9f373d03648aaf2c277e576d024183ed7949ba947da6" kindref="member">SCIP_BASESTAT_LOWER</ref>:</highlight></codeline>
<codeline lineno="3466"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBsetintattrelement(lpi-&gt;grbmodel,<sp/>GRB_INT_ATTR_VBASIS,<sp/>j,<sp/>GRB_NONBASIC_LOWER)<sp/>);</highlight></codeline>
<codeline lineno="3467"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3468"><highlight class="normal"></highlight></codeline>
<codeline lineno="3469"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="type__lpi_8h_1ac34513c7d1cc6c3eb46bc9f373d03648a2b5d851810f72ad984abc6b47b852868" kindref="member">SCIP_BASESTAT_UPPER</ref>:</highlight></codeline>
<codeline lineno="3470"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBsetintattrelement(lpi-&gt;grbmodel,<sp/>GRB_INT_ATTR_VBASIS,<sp/>j,<sp/>GRB_NONBASIC_UPPER)<sp/>);</highlight></codeline>
<codeline lineno="3471"><highlight class="normal"></highlight></codeline>
<codeline lineno="3472"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="type__lpi_8h_1ac34513c7d1cc6c3eb46bc9f373d03648ac9fd196bcf1e32bef1f5a2a71b3421bc" kindref="member">SCIP_BASESTAT_ZERO</ref>:</highlight></codeline>
<codeline lineno="3473"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBsetintattrelement(lpi-&gt;grbmodel,<sp/>GRB_INT_ATTR_VBASIS,<sp/>j,<sp/>GRB_SUPERBASIC)<sp/>);</highlight></codeline>
<codeline lineno="3474"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="3475"><highlight class="normal"></highlight></codeline>
<codeline lineno="3476"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="3477"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pub__message_8h_1a354566c209c3a7fe5c870d4ee8c07bc5" kindref="member">SCIPerrorMessage</ref>(</highlight><highlight class="stringliteral">&quot;invalid<sp/>basis<sp/>status<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>cstat[j]);</highlight></codeline>
<codeline lineno="3478"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="def_8h_1ad8669395a2a82ed74b9b364f4a310c56" kindref="member">SCIPABORT</ref>();</highlight></codeline>
<codeline lineno="3479"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5da4e90bc81f0364ff12e57c3b3e03d315c" kindref="member">SCIP_INVALIDDATA</ref>;<sp/></highlight><highlight class="comment">/*lint<sp/>!e527*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3480"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3481"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3482"><highlight class="normal"></highlight></codeline>
<codeline lineno="3483"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="3484"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3485"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3486"><highlight class="comment">/**<sp/>returns<sp/>the<sp/>indices<sp/>of<sp/>the<sp/>basic<sp/>columns<sp/>and<sp/>rows;<sp/>basic<sp/>column<sp/>n<sp/>gives<sp/>value<sp/>n,<sp/>basic<sp/>row<sp/>m<sp/>gives<sp/>value<sp/>-1-m<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3487"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3488" refid="lpi__grb_8c_1ae40a43f062d28623d57653ddb4719fca" refkind="member"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="lpi__grb_8c_1ae40a43f062d28623d57653ddb4719fca" kindref="member">SCIPlpiGetBasisInd</ref>(</highlight></codeline>
<codeline lineno="3489"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3490"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bind<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>basis<sp/>indices<sp/>ready<sp/>to<sp/>keep<sp/>number<sp/>of<sp/>rows<sp/>entries<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3491"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="3492"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3493"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="3494"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nrows;</highlight></codeline>
<codeline lineno="3495"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncols;</highlight></codeline>
<codeline lineno="3496"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/>bhead;</highlight></codeline>
<codeline lineno="3497"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="3498"><highlight class="normal"></highlight></codeline>
<codeline lineno="3499"><highlight class="normal"><sp/><sp/><sp/>assert(lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="3500"><highlight class="normal"><sp/><sp/><sp/>assert(lpi-&gt;grbmodel<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="3501"><highlight class="normal"></highlight></codeline>
<codeline lineno="3502"><highlight class="normal"><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;getting<sp/>basis<sp/>information\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="3503"><highlight class="normal"></highlight></codeline>
<codeline lineno="3504"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>whether<sp/>we<sp/>have<sp/>to<sp/>reoptimize<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3505"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetintattr(lpi-&gt;grbmodel,<sp/>GRB_INT_ATTR_STATUS,<sp/>&amp;status)<sp/>);</highlight></codeline>
<codeline lineno="3506"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>status<sp/>==<sp/>GRB_LOADED<sp/>||<sp/>status<sp/>==<sp/>GRB_INTERRUPTED<sp/>||<sp/>status<sp/>==<sp/>GRB_INPROGRESS<sp/>)</highlight></codeline>
<codeline lineno="3507"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3508"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="def_8h_1a6cef30a52627ce05a0999879c0aabf5f" kindref="member">SCIP_CALL_QUIET</ref>(<sp/>restoreLPData(lpi)<sp/>);</highlight></codeline>
<codeline lineno="3509"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3510"><highlight class="normal"></highlight></codeline>
<codeline lineno="3511"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetintattr(lpi-&gt;grbmodel,<sp/>GRB_INT_ATTR_NUMCONSTRS,<sp/>&amp;nrows)<sp/>);</highlight></codeline>
<codeline lineno="3512"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetintattr(lpi-&gt;grbmodel,<sp/>GRB_INT_ATTR_NUMVARS,<sp/>&amp;ncols)<sp/>);</highlight></codeline>
<codeline lineno="3513"><highlight class="normal"></highlight></codeline>
<codeline lineno="3514"><highlight class="normal"></highlight></codeline>
<codeline lineno="3515"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>space<sp/>for<sp/>bhead<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3516"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7695e892dc456d85a3654eb158976921" kindref="member">SCIP_ALLOC</ref>(<sp/>BMSallocMemoryArray(&amp;bhead,<sp/>nrows+ncols)<sp/>);</highlight></codeline>
<codeline lineno="3517"><highlight class="normal"></highlight></codeline>
<codeline lineno="3518"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>bet<sp/>basis<sp/>indices<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3519"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetBasisHead(lpi-&gt;grbmodel,<sp/>bhead)<sp/>);</highlight></codeline>
<codeline lineno="3520"><highlight class="normal"></highlight></codeline>
<codeline lineno="3521"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nrows;<sp/>++i)</highlight></codeline>
<codeline lineno="3522"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3523"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>entries<sp/>&gt;=<sp/>ncols<sp/>refer<sp/>to<sp/>slack<sp/>variables<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3524"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>bhead[i]<sp/>&lt;<sp/>ncols<sp/>)</highlight></codeline>
<codeline lineno="3525"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bind[i]<sp/>=<sp/>bhead[i];</highlight></codeline>
<codeline lineno="3526"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3527"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bind[i]<sp/>=<sp/>-1<sp/>-<sp/>(bhead[i]<sp/>-<sp/>ncols);</highlight></codeline>
<codeline lineno="3528"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3529"><highlight class="normal"><sp/><sp/><sp/>BMSfreeMemoryArray(&amp;bhead);</highlight></codeline>
<codeline lineno="3530"><highlight class="normal"></highlight></codeline>
<codeline lineno="3531"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>SCIP_DISABLED_CODE</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3532"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>old<sp/>implementation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3533"><highlight class="normal"><sp/><sp/><sp/>cnt<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3534"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nrows;<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="3535"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3536"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stat;</highlight></codeline>
<codeline lineno="3537"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetintattrelement(lpi-&gt;grbmodel,<sp/>GRB_INT_ATTR_CBASIS,<sp/>i,<sp/>&amp;stat)<sp/>);</highlight></codeline>
<codeline lineno="3538"><highlight class="normal"></highlight></codeline>
<codeline lineno="3539"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>stat<sp/>==<sp/>GRB_BASIC<sp/>)</highlight></codeline>
<codeline lineno="3540"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bind[cnt++]<sp/>=<sp/>-1<sp/>-<sp/>i;</highlight></codeline>
<codeline lineno="3541"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3542"><highlight class="normal"></highlight></codeline>
<codeline lineno="3543"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>ncols;<sp/>++j<sp/>)</highlight></codeline>
<codeline lineno="3544"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3545"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>stat;</highlight></codeline>
<codeline lineno="3546"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetintattrelement(lpi-&gt;grbmodel,<sp/>GRB_INT_ATTR_VBASIS,<sp/>j,<sp/>&amp;stat)<sp/>);</highlight></codeline>
<codeline lineno="3547"><highlight class="normal"></highlight></codeline>
<codeline lineno="3548"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>stat<sp/>==<sp/>GRB_BASIC<sp/>)</highlight></codeline>
<codeline lineno="3549"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>bind[cnt++]<sp/>=<sp/>j;</highlight></codeline>
<codeline lineno="3550"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3551"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>cnt<sp/>==<sp/>nrows<sp/>);</highlight></codeline>
<codeline lineno="3552"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3553"><highlight class="normal"></highlight></codeline>
<codeline lineno="3554"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="3555"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3556"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3557"><highlight class="comment">/**<sp/>get<sp/>dense<sp/>row<sp/>of<sp/>inverse<sp/>basis<sp/>matrix<sp/>B^-1</highlight></codeline>
<codeline lineno="3558"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3559"><highlight class="comment"><sp/>*<sp/><sp/>@note<sp/>The<sp/>LP<sp/>interface<sp/>defines<sp/>slack<sp/>variables<sp/>to<sp/>have<sp/>coefficient<sp/>+1.<sp/>This<sp/>means<sp/>that<sp/>if,<sp/>internally,<sp/>the<sp/>LP<sp/>solver</highlight></codeline>
<codeline lineno="3560"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uses<sp/>a<sp/>-1<sp/>coefficient,<sp/>then<sp/>rows<sp/>associated<sp/>with<sp/>slacks<sp/>variables<sp/>whose<sp/>coefficient<sp/>is<sp/>-1,<sp/>should<sp/>be<sp/>negated;</highlight></codeline>
<codeline lineno="3561"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>see<sp/>also<sp/>the<sp/>explanation<sp/>in<sp/>lpi.h.</highlight></codeline>
<codeline lineno="3562"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3563"><highlight class="comment"><sp/>*<sp/><sp/>@todo<sp/>check<sp/>that<sp/>the<sp/>result<sp/>is<sp/>in<sp/>terms<sp/>of<sp/>the<sp/>LP<sp/>interface<sp/>definition</highlight></codeline>
<codeline lineno="3564"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3565" refid="lpi__grb_8c_1a9315c551e92d2caa54d42750f1f048cb" refkind="member"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="lpi__grb_8c_1a9315c551e92d2caa54d42750f1f048cb" kindref="member">SCIPlpiGetBInvRow</ref>(</highlight></codeline>
<codeline lineno="3566"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3567"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>row<sp/>number<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3568"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coef,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>coefficients<sp/>of<sp/>the<sp/>row<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3569"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inds,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>to<sp/>store<sp/>the<sp/>non-zero<sp/>indices<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3570"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ninds<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>number<sp/>of<sp/>non-zero<sp/>indices</highlight></codeline>
<codeline lineno="3571"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>(-1:<sp/>if<sp/>we<sp/>do<sp/>not<sp/>store<sp/>sparsity<sp/>informations)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3572"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="3573"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3574"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1af2e7d05d2ba0870e8419b9ce11a70456" kindref="member">SVECTOR</ref><sp/>x;</highlight></codeline>
<codeline lineno="3575"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1af2e7d05d2ba0870e8419b9ce11a70456" kindref="member">SVECTOR</ref><sp/>b;</highlight></codeline>
<codeline lineno="3576"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nrows;</highlight></codeline>
<codeline lineno="3577"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="3578"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ind;</highlight></codeline>
<codeline lineno="3579"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k;</highlight></codeline>
<codeline lineno="3580"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="3581"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="3582"><highlight class="normal"></highlight></codeline>
<codeline lineno="3583"><highlight class="normal"><sp/><sp/><sp/>assert(lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="3584"><highlight class="normal"><sp/><sp/><sp/>assert(lpi-&gt;grbmodel<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="3585"><highlight class="normal"></highlight></codeline>
<codeline lineno="3586"><highlight class="normal"><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;getting<sp/>binv-row<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>r);</highlight></codeline>
<codeline lineno="3587"><highlight class="normal"></highlight></codeline>
<codeline lineno="3588"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>whether<sp/>we<sp/>have<sp/>to<sp/>reoptimize<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3589"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetintattr(lpi-&gt;grbmodel,<sp/>GRB_INT_ATTR_STATUS,<sp/>&amp;status)<sp/>);</highlight></codeline>
<codeline lineno="3590"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>status<sp/>==<sp/>GRB_LOADED<sp/>||<sp/>status<sp/>==<sp/>GRB_INTERRUPTED<sp/>||<sp/>status<sp/>==<sp/>GRB_INPROGRESS<sp/>)</highlight></codeline>
<codeline lineno="3591"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3592"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="def_8h_1a6cef30a52627ce05a0999879c0aabf5f" kindref="member">SCIP_CALL_QUIET</ref>(<sp/>restoreLPData(lpi)<sp/>);</highlight></codeline>
<codeline lineno="3593"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3594"><highlight class="normal"></highlight></codeline>
<codeline lineno="3595"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetintattr(lpi-&gt;grbmodel,<sp/>GRB_INT_ATTR_NUMCONSTRS,<sp/>&amp;nrows)<sp/>);</highlight></codeline>
<codeline lineno="3596"><highlight class="normal"></highlight></codeline>
<codeline lineno="3597"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>up<sp/>solution<sp/>vector<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3598"><highlight class="normal"><sp/><sp/><sp/>x.len<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3599"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7695e892dc456d85a3654eb158976921" kindref="member">SCIP_ALLOC</ref>(<sp/>BMSallocMemoryArray(&amp;(x.ind),<sp/>nrows)<sp/>);</highlight></codeline>
<codeline lineno="3600"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7695e892dc456d85a3654eb158976921" kindref="member">SCIP_ALLOC</ref>(<sp/>BMSallocMemoryArray(&amp;(x.val),<sp/>nrows)<sp/>);</highlight></codeline>
<codeline lineno="3601"><highlight class="normal"></highlight></codeline>
<codeline lineno="3602"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>up<sp/>rhs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3603"><highlight class="normal"><sp/><sp/><sp/>b.len<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="3604"><highlight class="normal"><sp/><sp/><sp/>ind<sp/>=<sp/>r;</highlight></codeline>
<codeline lineno="3605"><highlight class="normal"><sp/><sp/><sp/>val<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="3606"><highlight class="normal"><sp/><sp/><sp/>b.ind<sp/>=<sp/>&amp;ind;</highlight></codeline>
<codeline lineno="3607"><highlight class="normal"><sp/><sp/><sp/>b.val<sp/>=<sp/>&amp;val;</highlight></codeline>
<codeline lineno="3608"><highlight class="normal"></highlight></codeline>
<codeline lineno="3609"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>solve<sp/>B^T<sp/>x<sp/>=<sp/>e_r,<sp/>which<sp/>results<sp/>in<sp/>the<sp/>r-th<sp/>row<sp/>of<sp/>the<sp/>basis<sp/>inverse<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3610"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBBSolve(lpi-&gt;grbmodel,<sp/>&amp;b,<sp/>&amp;x)<sp/>);</highlight></codeline>
<codeline lineno="3611"><highlight class="normal"></highlight></codeline>
<codeline lineno="3612"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>size<sp/>should<sp/>be<sp/>at<sp/>most<sp/>the<sp/>number<sp/>of<sp/>rows<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3613"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>x.len<sp/>&lt;=<sp/>nrows<sp/>);</highlight></codeline>
<codeline lineno="3614"><highlight class="normal"></highlight></codeline>
<codeline lineno="3615"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>whether<sp/>we<sp/>require<sp/>a<sp/>dense<sp/>or<sp/>sparse<sp/>result<sp/>vector<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3616"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ninds<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>inds<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>)</highlight></codeline>
<codeline lineno="3617"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3618"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx;</highlight></codeline>
<codeline lineno="3619"><highlight class="normal"></highlight></codeline>
<codeline lineno="3620"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>copy<sp/>sparse<sp/>solution<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3621"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>x.len;<sp/>++i)</highlight></codeline>
<codeline lineno="3622"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3623"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idx<sp/>=<sp/>(x.ind)[i];</highlight></codeline>
<codeline lineno="3624"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inds[i]<sp/>=<sp/>idx;</highlight></codeline>
<codeline lineno="3625"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coef[idx]<sp/>=<sp/>(x.val)[i];</highlight></codeline>
<codeline lineno="3626"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3627"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*ninds<sp/>=<sp/>x.len;</highlight></codeline>
<codeline lineno="3628"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3629"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3630"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3631"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>copy<sp/>solution<sp/>to<sp/>dense<sp/>vector<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3632"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3633"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nrows;<sp/>++i)</highlight></codeline>
<codeline lineno="3634"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3635"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<sp/>k<sp/>&lt;=<sp/>x.len<sp/>);</highlight></codeline>
<codeline lineno="3636"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>k<sp/>&lt;<sp/>x.len<sp/>&amp;&amp;<sp/>(x.ind)[k]<sp/>==<sp/>i<sp/>)</highlight></codeline>
<codeline lineno="3637"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coef[i]<sp/>=<sp/>(x.val)[k++];</highlight></codeline>
<codeline lineno="3638"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3639"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coef[i]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="3640"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3641"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3642"><highlight class="normal"></highlight></codeline>
<codeline lineno="3643"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>free<sp/>solution<sp/>space<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3644"><highlight class="normal"><sp/><sp/><sp/>BMSfreeMemoryArray(&amp;(x.val));</highlight></codeline>
<codeline lineno="3645"><highlight class="normal"><sp/><sp/><sp/>BMSfreeMemoryArray(&amp;(x.ind));</highlight></codeline>
<codeline lineno="3646"><highlight class="normal"></highlight></codeline>
<codeline lineno="3647"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="3648"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3649"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3650"><highlight class="comment">/**<sp/>get<sp/>dense<sp/>column<sp/>of<sp/>inverse<sp/>basis<sp/>matrix<sp/>B^-1</highlight></codeline>
<codeline lineno="3651"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3652"><highlight class="comment"><sp/>*<sp/><sp/>@note<sp/>The<sp/>LP<sp/>interface<sp/>defines<sp/>slack<sp/>variables<sp/>to<sp/>have<sp/>coefficient<sp/>+1.<sp/>This<sp/>means<sp/>that<sp/>if,<sp/>internally,<sp/>the<sp/>LP<sp/>solver</highlight></codeline>
<codeline lineno="3653"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uses<sp/>a<sp/>-1<sp/>coefficient,<sp/>then<sp/>rows<sp/>associated<sp/>with<sp/>slacks<sp/>variables<sp/>whose<sp/>coefficient<sp/>is<sp/>-1,<sp/>should<sp/>be<sp/>negated;</highlight></codeline>
<codeline lineno="3654"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>see<sp/>also<sp/>the<sp/>explanation<sp/>in<sp/>lpi.h.</highlight></codeline>
<codeline lineno="3655"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3656"><highlight class="comment"><sp/>*<sp/><sp/>@todo<sp/>check<sp/>that<sp/>the<sp/>result<sp/>is<sp/>in<sp/>terms<sp/>of<sp/>the<sp/>LP<sp/>interface<sp/>definition</highlight></codeline>
<codeline lineno="3657"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3658" refid="lpi__grb_8c_1a9dda3c2147cbb647cfb0b5d198407525" refkind="member"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="lpi__grb_8c_1a9dda3c2147cbb647cfb0b5d198407525" kindref="member">SCIPlpiGetBInvCol</ref>(</highlight></codeline>
<codeline lineno="3659"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3660"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>column<sp/>number<sp/>of<sp/>B^-1;<sp/>this<sp/>is<sp/>NOT<sp/>the<sp/>number<sp/>of<sp/>the<sp/>column<sp/>in<sp/>the<sp/>LP;</highlight></codeline>
<codeline lineno="3661"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>you<sp/>have<sp/>to<sp/>call<sp/>SCIPlpiGetBasisInd()<sp/>to<sp/>get<sp/>the<sp/>array<sp/>which<sp/>links<sp/>the</highlight></codeline>
<codeline lineno="3662"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>B^-1<sp/>column<sp/>numbers<sp/>to<sp/>the<sp/>row<sp/>and<sp/>column<sp/>numbers<sp/>of<sp/>the<sp/>LP!</highlight></codeline>
<codeline lineno="3663"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>c<sp/>must<sp/>be<sp/>between<sp/>0<sp/>and<sp/>nrows-1,<sp/>since<sp/>the<sp/>basis<sp/>has<sp/>the<sp/>size</highlight></codeline>
<codeline lineno="3664"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>nrows<sp/>*<sp/>nrows<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3665"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coef,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>coefficients<sp/>of<sp/>the<sp/>column<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3666"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inds,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>to<sp/>store<sp/>the<sp/>non-zero<sp/>indices<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3667"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ninds<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>number<sp/>of<sp/>non-zero<sp/>indices</highlight></codeline>
<codeline lineno="3668"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>(-1:<sp/>if<sp/>we<sp/>do<sp/>not<sp/>store<sp/>sparsity<sp/>informations)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3669"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="3670"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3671"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1af2e7d05d2ba0870e8419b9ce11a70456" kindref="member">SVECTOR</ref><sp/>x;</highlight></codeline>
<codeline lineno="3672"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1af2e7d05d2ba0870e8419b9ce11a70456" kindref="member">SVECTOR</ref><sp/>b;</highlight></codeline>
<codeline lineno="3673"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nrows;</highlight></codeline>
<codeline lineno="3674"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">double</highlight><highlight class="normal"><sp/>val;</highlight></codeline>
<codeline lineno="3675"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ind;</highlight></codeline>
<codeline lineno="3676"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k;</highlight></codeline>
<codeline lineno="3677"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="3678"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="3679"><highlight class="normal"></highlight></codeline>
<codeline lineno="3680"><highlight class="normal"><sp/><sp/><sp/>assert(lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="3681"><highlight class="normal"><sp/><sp/><sp/>assert(lpi-&gt;grbmodel<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="3682"><highlight class="normal"></highlight></codeline>
<codeline lineno="3683"><highlight class="normal"><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;getting<sp/>binv-col<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>c);</highlight></codeline>
<codeline lineno="3684"><highlight class="normal"></highlight></codeline>
<codeline lineno="3685"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>whether<sp/>we<sp/>have<sp/>to<sp/>reoptimize<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3686"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetintattr(lpi-&gt;grbmodel,<sp/>GRB_INT_ATTR_STATUS,<sp/>&amp;status)<sp/>);</highlight></codeline>
<codeline lineno="3687"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>status<sp/>==<sp/>GRB_LOADED<sp/>||<sp/>status<sp/>==<sp/>GRB_INTERRUPTED<sp/>||<sp/>status<sp/>==<sp/>GRB_INPROGRESS<sp/>)</highlight></codeline>
<codeline lineno="3688"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3689"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="def_8h_1a6cef30a52627ce05a0999879c0aabf5f" kindref="member">SCIP_CALL_QUIET</ref>(<sp/>restoreLPData(lpi)<sp/>);</highlight></codeline>
<codeline lineno="3690"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3691"><highlight class="normal"></highlight></codeline>
<codeline lineno="3692"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetintattr(lpi-&gt;grbmodel,<sp/>GRB_INT_ATTR_NUMCONSTRS,<sp/>&amp;nrows)<sp/>);</highlight></codeline>
<codeline lineno="3693"><highlight class="normal"></highlight></codeline>
<codeline lineno="3694"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>up<sp/>solution<sp/>vector<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3695"><highlight class="normal"><sp/><sp/><sp/>x.len<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3696"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7695e892dc456d85a3654eb158976921" kindref="member">SCIP_ALLOC</ref>(<sp/>BMSallocMemoryArray(&amp;(x.ind),<sp/>nrows)<sp/>);</highlight></codeline>
<codeline lineno="3697"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7695e892dc456d85a3654eb158976921" kindref="member">SCIP_ALLOC</ref>(<sp/>BMSallocMemoryArray(&amp;(x.val),<sp/>nrows)<sp/>);</highlight></codeline>
<codeline lineno="3698"><highlight class="normal"></highlight></codeline>
<codeline lineno="3699"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>set<sp/>up<sp/>rhs<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3700"><highlight class="normal"><sp/><sp/><sp/>b.len<sp/>=<sp/>1;</highlight></codeline>
<codeline lineno="3701"><highlight class="normal"><sp/><sp/><sp/>ind<sp/>=<sp/>c;</highlight></codeline>
<codeline lineno="3702"><highlight class="normal"><sp/><sp/><sp/>val<sp/>=<sp/>1.0;</highlight></codeline>
<codeline lineno="3703"><highlight class="normal"><sp/><sp/><sp/>b.ind<sp/>=<sp/>&amp;ind;</highlight></codeline>
<codeline lineno="3704"><highlight class="normal"><sp/><sp/><sp/>b.val<sp/>=<sp/>&amp;val;</highlight></codeline>
<codeline lineno="3705"><highlight class="normal"></highlight></codeline>
<codeline lineno="3706"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>solve<sp/>B<sp/>x<sp/>=<sp/>e_c,<sp/>which<sp/>results<sp/>in<sp/>the<sp/>c-th<sp/>columns<sp/>of<sp/>the<sp/>basis<sp/>inverse<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3707"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBFSolve(lpi-&gt;grbmodel,<sp/>&amp;b,<sp/>&amp;x)<sp/>);</highlight></codeline>
<codeline lineno="3708"><highlight class="normal"></highlight></codeline>
<codeline lineno="3709"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>size<sp/>should<sp/>be<sp/>at<sp/>most<sp/>the<sp/>number<sp/>of<sp/>rows<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3710"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>x.len<sp/>&lt;=<sp/>nrows<sp/>);</highlight></codeline>
<codeline lineno="3711"><highlight class="normal"></highlight></codeline>
<codeline lineno="3712"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>whether<sp/>we<sp/>require<sp/>a<sp/>dense<sp/>or<sp/>sparse<sp/>result<sp/>vector<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3713"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ninds<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>inds<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>)</highlight></codeline>
<codeline lineno="3714"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3715"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx;</highlight></codeline>
<codeline lineno="3716"><highlight class="normal"></highlight></codeline>
<codeline lineno="3717"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>copy<sp/>sparse<sp/>solution<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3718"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>x.len;<sp/>++i)</highlight></codeline>
<codeline lineno="3719"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3720"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idx<sp/>=<sp/>(x.ind)[i];</highlight></codeline>
<codeline lineno="3721"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inds[i]<sp/>=<sp/>idx;</highlight></codeline>
<codeline lineno="3722"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coef[idx]<sp/>=<sp/>(x.val)[i];</highlight></codeline>
<codeline lineno="3723"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3724"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*ninds<sp/>=<sp/>x.len;</highlight></codeline>
<codeline lineno="3725"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3726"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3727"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3728"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>copy<sp/>solution<sp/>to<sp/>dense<sp/>vector<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3729"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3730"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(i<sp/>=<sp/>0;<sp/>i<sp/>&lt;<sp/>nrows;<sp/>++i)</highlight></codeline>
<codeline lineno="3731"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3732"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<sp/>k<sp/>&lt;=<sp/>x.len<sp/>);</highlight></codeline>
<codeline lineno="3733"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>k<sp/>&lt;<sp/>x.len<sp/>&amp;&amp;<sp/>(x.ind)[k]<sp/>==<sp/>i<sp/>)</highlight></codeline>
<codeline lineno="3734"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coef[i]<sp/>=<sp/>(x.val)[k++];</highlight></codeline>
<codeline lineno="3735"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3736"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coef[i]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="3737"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3738"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3739"><highlight class="normal"></highlight></codeline>
<codeline lineno="3740"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>free<sp/>solution<sp/>space<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3741"><highlight class="normal"><sp/><sp/><sp/>BMSfreeMemoryArray(&amp;(x.val));</highlight></codeline>
<codeline lineno="3742"><highlight class="normal"><sp/><sp/><sp/>BMSfreeMemoryArray(&amp;(x.ind));</highlight></codeline>
<codeline lineno="3743"><highlight class="normal"></highlight></codeline>
<codeline lineno="3744"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="3745"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3746"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3747"><highlight class="comment">/**<sp/>get<sp/>dense<sp/>row<sp/>of<sp/>inverse<sp/>basis<sp/>matrix<sp/>times<sp/>constraint<sp/>matrix<sp/>B^-1<sp/>*<sp/>A</highlight></codeline>
<codeline lineno="3748"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3749"><highlight class="comment"><sp/>*<sp/><sp/>@note<sp/>The<sp/>LP<sp/>interface<sp/>defines<sp/>slack<sp/>variables<sp/>to<sp/>have<sp/>coefficient<sp/>+1.<sp/>This<sp/>means<sp/>that<sp/>if,<sp/>internally,<sp/>the<sp/>LP<sp/>solver</highlight></codeline>
<codeline lineno="3750"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uses<sp/>a<sp/>-1<sp/>coefficient,<sp/>then<sp/>rows<sp/>associated<sp/>with<sp/>slacks<sp/>variables<sp/>whose<sp/>coefficient<sp/>is<sp/>-1,<sp/>should<sp/>be<sp/>negated;</highlight></codeline>
<codeline lineno="3751"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>see<sp/>also<sp/>the<sp/>explanation<sp/>in<sp/>lpi.h.</highlight></codeline>
<codeline lineno="3752"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3753"><highlight class="comment"><sp/>*<sp/><sp/>@todo<sp/>check<sp/>that<sp/>the<sp/>result<sp/>is<sp/>in<sp/>terms<sp/>of<sp/>the<sp/>LP<sp/>interface<sp/>definition</highlight></codeline>
<codeline lineno="3754"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3755" refid="lpi__grb_8c_1aa516aed02ad9b303b0d51eb0c7a66f5e" refkind="member"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="lpi__grb_8c_1aa516aed02ad9b303b0d51eb0c7a66f5e" kindref="member">SCIPlpiGetBInvARow</ref>(</highlight></codeline>
<codeline lineno="3756"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3757"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>r,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>row<sp/>number<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3758"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/>binvrow,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>row<sp/>in<sp/>(A_B)^-1<sp/>from<sp/>prior<sp/>call<sp/>to<sp/>SCIPlpiGetBInvRow(),<sp/>or<sp/>NULL<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3759"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coef,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>vector<sp/>to<sp/>return<sp/>coefficients<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3760"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inds,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>to<sp/>store<sp/>the<sp/>non-zero<sp/>indices<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3761"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ninds<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>number<sp/>of<sp/>non-zero<sp/>indices</highlight></codeline>
<codeline lineno="3762"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>(-1:<sp/>if<sp/>we<sp/>do<sp/>not<sp/>store<sp/>sparsity<sp/>informations)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3763"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="3764"><highlight class="normal">{<sp/><sp/></highlight><highlight class="comment">/*lint<sp/>--e{715}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3765"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1af2e7d05d2ba0870e8419b9ce11a70456" kindref="member">SVECTOR</ref><sp/>x;</highlight></codeline>
<codeline lineno="3766"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncols;</highlight></codeline>
<codeline lineno="3767"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nrows;</highlight></codeline>
<codeline lineno="3768"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k;</highlight></codeline>
<codeline lineno="3769"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j;</highlight></codeline>
<codeline lineno="3770"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="3771"><highlight class="normal"></highlight></codeline>
<codeline lineno="3772"><highlight class="normal"><sp/><sp/><sp/>assert(lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="3773"><highlight class="normal"><sp/><sp/><sp/>assert(lpi-&gt;grbmodel<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="3774"><highlight class="normal"></highlight></codeline>
<codeline lineno="3775"><highlight class="normal"><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;getting<sp/>binv-row<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>r);</highlight></codeline>
<codeline lineno="3776"><highlight class="normal"></highlight></codeline>
<codeline lineno="3777"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>whether<sp/>we<sp/>have<sp/>to<sp/>reoptimize<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3778"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetintattr(lpi-&gt;grbmodel,<sp/>GRB_INT_ATTR_STATUS,<sp/>&amp;status)<sp/>);</highlight></codeline>
<codeline lineno="3779"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>status<sp/>==<sp/>GRB_LOADED<sp/>||<sp/>status<sp/>==<sp/>GRB_INTERRUPTED<sp/>||<sp/>status<sp/>==<sp/>GRB_INPROGRESS<sp/>)</highlight></codeline>
<codeline lineno="3780"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3781"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="def_8h_1a6cef30a52627ce05a0999879c0aabf5f" kindref="member">SCIP_CALL_QUIET</ref>(<sp/>restoreLPData(lpi)<sp/>);</highlight></codeline>
<codeline lineno="3782"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3783"><highlight class="normal"></highlight></codeline>
<codeline lineno="3784"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetintattr(lpi-&gt;grbmodel,<sp/>GRB_INT_ATTR_NUMVARS,<sp/>&amp;ncols)<sp/>);</highlight></codeline>
<codeline lineno="3785"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetintattr(lpi-&gt;grbmodel,<sp/>GRB_INT_ATTR_NUMCONSTRS,<sp/>&amp;nrows)<sp/>);</highlight></codeline>
<codeline lineno="3786"><highlight class="normal"></highlight></codeline>
<codeline lineno="3787"><highlight class="normal"><sp/><sp/><sp/>x.len<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3788"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7695e892dc456d85a3654eb158976921" kindref="member">SCIP_ALLOC</ref>(<sp/>BMSallocMemoryArray(&amp;(x.ind),<sp/>ncols<sp/>+<sp/>nrows)<sp/>);</highlight></codeline>
<codeline lineno="3789"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7695e892dc456d85a3654eb158976921" kindref="member">SCIP_ALLOC</ref>(<sp/>BMSallocMemoryArray(&amp;(x.val),<sp/>ncols<sp/>+<sp/>nrows)<sp/>);</highlight></codeline>
<codeline lineno="3790"><highlight class="normal"></highlight></codeline>
<codeline lineno="3791"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBBinvRowi(lpi-&gt;grbmodel,<sp/>r,<sp/>&amp;x)<sp/>);</highlight></codeline>
<codeline lineno="3792"><highlight class="normal"></highlight></codeline>
<codeline lineno="3793"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>size<sp/>should<sp/>be<sp/>at<sp/>most<sp/>the<sp/>number<sp/>of<sp/>columns<sp/>plus<sp/>rows<sp/>for<sp/>slack<sp/>variables<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3794"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>x.len<sp/>&lt;=<sp/>ncols<sp/>+<sp/>nrows<sp/>);</highlight></codeline>
<codeline lineno="3795"><highlight class="normal"></highlight></codeline>
<codeline lineno="3796"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>whether<sp/>we<sp/>require<sp/>a<sp/>dense<sp/>or<sp/>sparse<sp/>result<sp/>vector<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3797"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ninds<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>inds<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>)</highlight></codeline>
<codeline lineno="3798"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3799"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx;</highlight></codeline>
<codeline lineno="3800"><highlight class="normal"></highlight></codeline>
<codeline lineno="3801"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>copy<sp/>sparse<sp/>solution<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3802"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>x.len;<sp/>++j)</highlight></codeline>
<codeline lineno="3803"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3804"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idx<sp/>=<sp/>(x.ind)[j];</highlight></codeline>
<codeline lineno="3805"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inds[j]<sp/>=<sp/>idx;</highlight></codeline>
<codeline lineno="3806"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coef[idx]<sp/>=<sp/>(x.val)[j];</highlight></codeline>
<codeline lineno="3807"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3808"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*ninds<sp/>=<sp/>x.len;</highlight></codeline>
<codeline lineno="3809"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3810"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3811"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3812"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3813"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>ncols;<sp/>++j)</highlight></codeline>
<codeline lineno="3814"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3815"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<sp/>k<sp/>&lt;=<sp/>x.len<sp/>);</highlight></codeline>
<codeline lineno="3816"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>k<sp/>&lt;<sp/>x.len<sp/>&amp;&amp;<sp/>(x.ind)[k]<sp/>==<sp/>j<sp/>)</highlight></codeline>
<codeline lineno="3817"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coef[j]<sp/>=<sp/>(x.val)[k++];</highlight></codeline>
<codeline lineno="3818"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3819"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coef[j]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="3820"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3821"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3822"><highlight class="normal"></highlight></codeline>
<codeline lineno="3823"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>free<sp/>solution<sp/>space<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3824"><highlight class="normal"><sp/><sp/><sp/>BMSfreeMemoryArray(&amp;(x.val));</highlight></codeline>
<codeline lineno="3825"><highlight class="normal"><sp/><sp/><sp/>BMSfreeMemoryArray(&amp;(x.ind));</highlight></codeline>
<codeline lineno="3826"><highlight class="normal"></highlight></codeline>
<codeline lineno="3827"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="3828"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3829"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3830"><highlight class="comment">/**<sp/>get<sp/>dense<sp/>column<sp/>of<sp/>inverse<sp/>basis<sp/>matrix<sp/>times<sp/>constraint<sp/>matrix<sp/>B^-1<sp/>*<sp/>A</highlight></codeline>
<codeline lineno="3831"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3832"><highlight class="comment"><sp/>*<sp/><sp/>@note<sp/>The<sp/>LP<sp/>interface<sp/>defines<sp/>slack<sp/>variables<sp/>to<sp/>have<sp/>coefficient<sp/>+1.<sp/>This<sp/>means<sp/>that<sp/>if,<sp/>internally,<sp/>the<sp/>LP<sp/>solver</highlight></codeline>
<codeline lineno="3833"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>uses<sp/>a<sp/>-1<sp/>coefficient,<sp/>then<sp/>rows<sp/>associated<sp/>with<sp/>slacks<sp/>variables<sp/>whose<sp/>coefficient<sp/>is<sp/>-1,<sp/>should<sp/>be<sp/>negated;</highlight></codeline>
<codeline lineno="3834"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>see<sp/>also<sp/>the<sp/>explanation<sp/>in<sp/>lpi.h.</highlight></codeline>
<codeline lineno="3835"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="3836"><highlight class="comment"><sp/>*<sp/><sp/>@todo<sp/>check<sp/>that<sp/>the<sp/>result<sp/>is<sp/>in<sp/>terms<sp/>of<sp/>the<sp/>LP<sp/>interface<sp/>definition</highlight></codeline>
<codeline lineno="3837"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3838" refid="lpi__grb_8c_1a015f424e442e74e4526ca62bdab54de1" refkind="member"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="lpi__grb_8c_1a015f424e442e74e4526ca62bdab54de1" kindref="member">SCIPlpiGetBInvACol</ref>(</highlight></codeline>
<codeline lineno="3839"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3840"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>c,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>column<sp/>number<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3841"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coef,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>vector<sp/>to<sp/>return<sp/>coefficients<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3842"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inds,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>array<sp/>to<sp/>store<sp/>the<sp/>non-zero<sp/>indices<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3843"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ninds<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>the<sp/>number<sp/>of<sp/>non-zero<sp/>indices</highlight></codeline>
<codeline lineno="3844"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/>(-1:<sp/>if<sp/>we<sp/>do<sp/>not<sp/>store<sp/>sparsity<sp/>informations)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3845"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="3846"><highlight class="normal">{<sp/><sp/></highlight><highlight class="comment">/*lint<sp/>--e{715}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3847"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1af2e7d05d2ba0870e8419b9ce11a70456" kindref="member">SVECTOR</ref><sp/>x;</highlight></codeline>
<codeline lineno="3848"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nrows;</highlight></codeline>
<codeline lineno="3849"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>k;</highlight></codeline>
<codeline lineno="3850"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>j;</highlight></codeline>
<codeline lineno="3851"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>status;</highlight></codeline>
<codeline lineno="3852"><highlight class="normal"></highlight></codeline>
<codeline lineno="3853"><highlight class="normal"><sp/><sp/><sp/>assert(lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="3854"><highlight class="normal"><sp/><sp/><sp/>assert(lpi-&gt;grbmodel<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="3855"><highlight class="normal"></highlight></codeline>
<codeline lineno="3856"><highlight class="normal"><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;getting<sp/>binv-col<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>c);</highlight></codeline>
<codeline lineno="3857"><highlight class="normal"></highlight></codeline>
<codeline lineno="3858"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>whether<sp/>we<sp/>have<sp/>to<sp/>reoptimize<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3859"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetintattr(lpi-&gt;grbmodel,<sp/>GRB_INT_ATTR_STATUS,<sp/>&amp;status)<sp/>);</highlight></codeline>
<codeline lineno="3860"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>status<sp/>==<sp/>GRB_LOADED<sp/>||<sp/>status<sp/>==<sp/>GRB_INTERRUPTED<sp/>||<sp/>status<sp/>==<sp/>GRB_INPROGRESS<sp/>)</highlight></codeline>
<codeline lineno="3861"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3862"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="def_8h_1a6cef30a52627ce05a0999879c0aabf5f" kindref="member">SCIP_CALL_QUIET</ref>(<sp/>restoreLPData(lpi)<sp/>);</highlight></codeline>
<codeline lineno="3863"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3864"><highlight class="normal"></highlight></codeline>
<codeline lineno="3865"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetintattr(lpi-&gt;grbmodel,<sp/>GRB_INT_ATTR_NUMCONSTRS,<sp/>&amp;nrows)<sp/>);</highlight></codeline>
<codeline lineno="3866"><highlight class="normal"></highlight></codeline>
<codeline lineno="3867"><highlight class="normal"><sp/><sp/><sp/>x.len<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3868"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7695e892dc456d85a3654eb158976921" kindref="member">SCIP_ALLOC</ref>(<sp/>BMSallocMemoryArray(&amp;(x.ind),<sp/>nrows)<sp/>);</highlight></codeline>
<codeline lineno="3869"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7695e892dc456d85a3654eb158976921" kindref="member">SCIP_ALLOC</ref>(<sp/>BMSallocMemoryArray(&amp;(x.val),<sp/>nrows)<sp/>);</highlight></codeline>
<codeline lineno="3870"><highlight class="normal"></highlight></codeline>
<codeline lineno="3871"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBBinvColj(lpi-&gt;grbmodel,<sp/>c,<sp/>&amp;x)<sp/>);</highlight></codeline>
<codeline lineno="3872"><highlight class="normal"></highlight></codeline>
<codeline lineno="3873"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>size<sp/>should<sp/>be<sp/>at<sp/>most<sp/>the<sp/>number<sp/>of<sp/>rows<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3874"><highlight class="normal"><sp/><sp/><sp/>assert(<sp/>x.len<sp/>&lt;=<sp/>nrows<sp/>);</highlight></codeline>
<codeline lineno="3875"><highlight class="normal"></highlight></codeline>
<codeline lineno="3876"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>check<sp/>whether<sp/>we<sp/>require<sp/>a<sp/>dense<sp/>or<sp/>sparse<sp/>result<sp/>vector<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3877"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>ninds<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>&amp;&amp;<sp/>inds<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>)</highlight></codeline>
<codeline lineno="3878"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3879"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>idx;</highlight></codeline>
<codeline lineno="3880"><highlight class="normal"></highlight></codeline>
<codeline lineno="3881"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>copy<sp/>sparse<sp/>solution<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3882"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>x.len;<sp/>++j)</highlight></codeline>
<codeline lineno="3883"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3884"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idx<sp/>=<sp/>(x.ind)[j];</highlight></codeline>
<codeline lineno="3885"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>inds[j]<sp/>=<sp/>idx;</highlight></codeline>
<codeline lineno="3886"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coef[idx]<sp/>=<sp/>(x.val)[j];</highlight></codeline>
<codeline lineno="3887"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3888"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*ninds<sp/>=<sp/>x.len;</highlight></codeline>
<codeline lineno="3889"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3890"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3891"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3892"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>k<sp/>=<sp/>0;</highlight></codeline>
<codeline lineno="3893"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal"><sp/>(j<sp/>=<sp/>0;<sp/>j<sp/>&lt;<sp/>nrows;<sp/>++j)</highlight></codeline>
<codeline lineno="3894"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3895"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(<sp/>k<sp/>&lt;=<sp/>x.len<sp/>);</highlight></codeline>
<codeline lineno="3896"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>k<sp/>&lt;<sp/>x.len<sp/>&amp;&amp;<sp/>(x.ind)[k]<sp/>==<sp/>j<sp/>)</highlight></codeline>
<codeline lineno="3897"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coef[j]<sp/>=<sp/>(x.val)[k++];</highlight></codeline>
<codeline lineno="3898"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3899"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coef[j]<sp/>=<sp/>0.0;</highlight></codeline>
<codeline lineno="3900"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3901"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3902"><highlight class="normal"></highlight></codeline>
<codeline lineno="3903"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>free<sp/>solution<sp/>space<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3904"><highlight class="normal"><sp/><sp/><sp/>BMSfreeMemoryArray(&amp;(x.val));</highlight></codeline>
<codeline lineno="3905"><highlight class="normal"><sp/><sp/><sp/>BMSfreeMemoryArray(&amp;(x.ind));</highlight></codeline>
<codeline lineno="3906"><highlight class="normal"></highlight></codeline>
<codeline lineno="3907"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="3908"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3909"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3910"><highlight class="comment">/**@}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3911"><highlight class="normal"></highlight></codeline>
<codeline lineno="3912"><highlight class="normal"></highlight></codeline>
<codeline lineno="3913"><highlight class="normal"></highlight></codeline>
<codeline lineno="3914"><highlight class="normal"></highlight></codeline>
<codeline lineno="3915"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="3916"><highlight class="comment"><sp/>*<sp/>LP<sp/>State<sp/>Methods</highlight></codeline>
<codeline lineno="3917"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3918"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3919"><highlight class="comment">/**@name<sp/>LP<sp/>State<sp/>Methods<sp/>*/</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3920"><highlight class="comment">/**@{<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3921"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3922"><highlight class="comment">/**<sp/>stores<sp/>LPi<sp/>state<sp/>(like<sp/>basis<sp/>information)<sp/>into<sp/>lpistate<sp/>object<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3923" refid="lpi__grb_8c_1afe1bc961d0f91cad7222870724175e21" refkind="member"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="lpi__grb_8c_1afe1bc961d0f91cad7222870724175e21" kindref="member">SCIPlpiGetState</ref>(</highlight></codeline>
<codeline lineno="3924"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3925"><highlight class="normal"><sp/><sp/><sp/>BMS_BLKMEM*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blkmem,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>block<sp/>memory<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3926"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a90d877c948164ab5e3beb0f3e1070693" kindref="member">SCIP_LPISTATE</ref>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpistate<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>LPi<sp/>state<sp/>information<sp/>(like<sp/>basis<sp/>information)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3927"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="3928"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3929"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/>success;</highlight></codeline>
<codeline lineno="3930"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncols;</highlight></codeline>
<codeline lineno="3931"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nrows;</highlight></codeline>
<codeline lineno="3932"><highlight class="normal"></highlight></codeline>
<codeline lineno="3933"><highlight class="normal"><sp/><sp/><sp/>assert(blkmem<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="3934"><highlight class="normal"><sp/><sp/><sp/>assert(lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="3935"><highlight class="normal"><sp/><sp/><sp/>assert(lpi-&gt;grbmodel<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="3936"><highlight class="normal"><sp/><sp/><sp/>assert(lpistate<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="3937"><highlight class="normal"></highlight></codeline>
<codeline lineno="3938"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>there<sp/>is<sp/>no<sp/>basis<sp/>information<sp/>available,<sp/>no<sp/>state<sp/>can<sp/>be<sp/>saved<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3939"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>!lpi-&gt;solisbasic<sp/>)</highlight></codeline>
<codeline lineno="3940"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3941"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*lpistate<sp/>=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="3942"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="3943"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3944"><highlight class="normal"></highlight></codeline>
<codeline lineno="3945"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetintattr(lpi-&gt;grbmodel,<sp/>GRB_INT_ATTR_NUMCONSTRS,<sp/>&amp;nrows)<sp/>);</highlight></codeline>
<codeline lineno="3946"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetintattr(lpi-&gt;grbmodel,<sp/>GRB_INT_ATTR_NUMVARS,<sp/>&amp;ncols)<sp/>);</highlight></codeline>
<codeline lineno="3947"><highlight class="normal"><sp/><sp/><sp/>assert(ncols<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="3948"><highlight class="normal"><sp/><sp/><sp/>assert(nrows<sp/>&gt;=<sp/>0);</highlight></codeline>
<codeline lineno="3949"><highlight class="normal"></highlight></codeline>
<codeline lineno="3950"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>get<sp/>unpacked<sp/>basis<sp/>information<sp/>from<sp/>Gurobi<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3951"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/>getBase(lpi,<sp/>&amp;success)<sp/>);</highlight></codeline>
<codeline lineno="3952"><highlight class="normal"></highlight></codeline>
<codeline lineno="3953"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>success<sp/>)</highlight></codeline>
<codeline lineno="3954"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3955"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>allocate<sp/>lpistate<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3956"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/>lpistateCreate(lpistate,<sp/>blkmem,<sp/>ncols,<sp/>nrows)<sp/>);</highlight></codeline>
<codeline lineno="3957"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*lpistate)-&gt;ncols<sp/>=<sp/>ncols;</highlight></codeline>
<codeline lineno="3958"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*lpistate)-&gt;nrows<sp/>=<sp/>nrows;</highlight></codeline>
<codeline lineno="3959"><highlight class="normal"></highlight></codeline>
<codeline lineno="3960"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;stored<sp/>Gurobi<sp/>LPI<sp/>state<sp/>in<sp/>%p<sp/>(%d<sp/>cols,<sp/>%d<sp/>rows)\n&quot;</highlight><highlight class="normal">,<sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)<sp/>*lpistate,<sp/>ncols,<sp/>nrows);</highlight></codeline>
<codeline lineno="3961"><highlight class="normal"></highlight></codeline>
<codeline lineno="3962"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>pack<sp/>LPi<sp/>state<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3963"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lpistatePack(*lpistate,<sp/>lpi-&gt;cstat,<sp/>lpi-&gt;rstat);</highlight></codeline>
<codeline lineno="3964"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3965"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3966"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="3967"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>In<sp/>this<sp/>case<sp/>no<sp/>basis<sp/>information<sp/>is<sp/>available.<sp/>Since<sp/>SCIP<sp/>expects<sp/>the<sp/>information<sp/>to<sp/>work</highlight></codeline>
<codeline lineno="3968"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>any<sp/>case,<sp/>we<sp/>allocate<sp/>the<sp/>lpistate,<sp/>but<sp/>do<sp/>not<sp/>use<sp/>the<sp/>packed<sp/>information.<sp/>This<sp/>might</highlight></codeline>
<codeline lineno="3969"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>happen<sp/>if<sp/>the<sp/>model<sp/>is<sp/>infeasible,<sp/>since<sp/>Gurobi<sp/>currently<sp/>does<sp/>not<sp/>return<sp/>basis<sp/>information</highlight></codeline>
<codeline lineno="3970"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>in<sp/>this<sp/>case.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3971"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="def_8h_1a7695e892dc456d85a3654eb158976921" kindref="member">SCIP_ALLOC</ref>(<sp/>BMSallocBlockMemory(blkmem,<sp/>lpistate)<sp/>);</highlight></codeline>
<codeline lineno="3972"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*lpistate)-&gt;ncols<sp/>=<sp/>ncols;</highlight></codeline>
<codeline lineno="3973"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*lpistate)-&gt;nrows<sp/>=<sp/>nrows;</highlight></codeline>
<codeline lineno="3974"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*lpistate)-&gt;packrstat<sp/>=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="3975"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(*lpistate)-&gt;packcstat<sp/>=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="3976"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="3977"><highlight class="normal"></highlight></codeline>
<codeline lineno="3978"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="3979"><highlight class="normal">}</highlight></codeline>
<codeline lineno="3980"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="3981"><highlight class="comment">/**<sp/>loads<sp/>LPi<sp/>state<sp/>(like<sp/>basis<sp/>information)<sp/>into<sp/>solver;<sp/>note<sp/>that<sp/>the<sp/>LP<sp/>might<sp/>have<sp/>been<sp/>extended<sp/>with<sp/>additional</highlight></codeline>
<codeline lineno="3982"><highlight class="comment"><sp/>*<sp/><sp/>columns<sp/>and<sp/>rows<sp/>since<sp/>the<sp/>state<sp/>was<sp/>stored<sp/>with<sp/>SCIPlpiGetState()</highlight></codeline>
<codeline lineno="3983"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3984" refid="lpi__grb_8c_1a74e8e33e89ab5d8d4b490fe3c4a88c98" refkind="member"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="lpi__grb_8c_1a74e8e33e89ab5d8d4b490fe3c4a88c98" kindref="member">SCIPlpiSetState</ref>(</highlight></codeline>
<codeline lineno="3985"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3986"><highlight class="normal"><sp/><sp/><sp/>BMS_BLKMEM*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blkmem,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>block<sp/>memory<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3987"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a90d877c948164ab5e3beb0f3e1070693" kindref="member">SCIP_LPISTATE</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpistate<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LPi<sp/>state<sp/>information<sp/>(like<sp/>basis<sp/>information)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3988"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="3989"><highlight class="normal">{</highlight></codeline>
<codeline lineno="3990"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>ncols;</highlight></codeline>
<codeline lineno="3991"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>nrows;</highlight></codeline>
<codeline lineno="3992"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>i;</highlight></codeline>
<codeline lineno="3993"><highlight class="normal"></highlight></codeline>
<codeline lineno="3994"><highlight class="normal"><sp/><sp/><sp/>assert(blkmem<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="3995"><highlight class="normal"><sp/><sp/><sp/>assert(lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="3996"><highlight class="normal"><sp/><sp/><sp/>assert(lpi-&gt;grbmodel<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="3997"><highlight class="normal"></highlight></codeline>
<codeline lineno="3998"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>there<sp/>was<sp/>no<sp/>basis<sp/>information<sp/>available,<sp/>the<sp/>LPI<sp/>state<sp/>was<sp/>not<sp/>stored<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3999"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>lpistate<sp/>==<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||<sp/>lpistate-&gt;packrstat<sp/>==<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>||<sp/>lpistate-&gt;packcstat<sp/>)</highlight></codeline>
<codeline lineno="4000"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="4001"><highlight class="normal"></highlight></codeline>
<codeline lineno="4002"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetintattr(lpi-&gt;grbmodel,<sp/>GRB_INT_ATTR_NUMCONSTRS,<sp/>&amp;nrows)<sp/>);</highlight></codeline>
<codeline lineno="4003"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetintattr(lpi-&gt;grbmodel,<sp/>GRB_INT_ATTR_NUMVARS,<sp/>&amp;ncols)<sp/>);</highlight></codeline>
<codeline lineno="4004"><highlight class="normal"><sp/><sp/><sp/>assert(lpistate-&gt;ncols<sp/>&lt;=<sp/>ncols);</highlight></codeline>
<codeline lineno="4005"><highlight class="normal"><sp/><sp/><sp/>assert(lpistate-&gt;nrows<sp/>&lt;=<sp/>nrows);</highlight></codeline>
<codeline lineno="4006"><highlight class="normal"></highlight></codeline>
<codeline lineno="4007"><highlight class="normal"><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;loading<sp/>LPI<sp/>state<sp/>%p<sp/>(%d<sp/>cols,<sp/>%d<sp/>rows)<sp/>into<sp/>Gurobi<sp/>LP<sp/>with<sp/>%d<sp/>cols<sp/>and<sp/>%d<sp/>rows\n&quot;</highlight><highlight class="normal">,</highlight></codeline>
<codeline lineno="4008"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>(</highlight><highlight class="keywordtype">void</highlight><highlight class="normal">*)<sp/>lpistate,<sp/>lpistate-&gt;ncols,<sp/>lpistate-&gt;nrows,<sp/>ncols,<sp/>nrows);</highlight></codeline>
<codeline lineno="4009"><highlight class="normal"></highlight></codeline>
<codeline lineno="4010"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>lpistate-&gt;ncols<sp/>==<sp/>0<sp/>||<sp/>lpistate-&gt;nrows<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="4011"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="4012"><highlight class="normal"></highlight></codeline>
<codeline lineno="4013"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>allocate<sp/>enough<sp/>memory<sp/>for<sp/>storing<sp/>uncompressed<sp/>basis<sp/>information<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4014"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/>ensureCstatMem(lpi,<sp/>ncols)<sp/>);</highlight></codeline>
<codeline lineno="4015"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/>ensureRstatMem(lpi,<sp/>nrows)<sp/>);</highlight></codeline>
<codeline lineno="4016"><highlight class="normal"></highlight></codeline>
<codeline lineno="4017"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>unpack<sp/>LPi<sp/>state<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4018"><highlight class="normal"><sp/><sp/><sp/>lpistateUnpack(lpistate,<sp/>lpi-&gt;cstat,<sp/>lpi-&gt;rstat);</highlight></codeline>
<codeline lineno="4019"><highlight class="normal"></highlight></codeline>
<codeline lineno="4020"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>extend<sp/>the<sp/>basis<sp/>to<sp/>the<sp/>current<sp/>LP<sp/>beyond<sp/>the<sp/>previously<sp/>existing<sp/>columns<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4021"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>lpistate-&gt;ncols;<sp/>i<sp/>&lt;<sp/>ncols;<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="4022"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4023"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/>bnd;</highlight></codeline>
<codeline lineno="4024"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetdblattrarray(lpi-&gt;grbmodel,<sp/>GRB_DBL_ATTR_LB,<sp/>i,<sp/>i,<sp/>&amp;bnd)<sp/>);</highlight></codeline>
<codeline lineno="4025"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="lpi__grb_8c_1a1773cc8c068cde1f8bb0b8ba99277878" kindref="member">SCIPlpiIsInfinity</ref>(lpi,<sp/><ref refid="def_8h_1add08ff5d5df711242962dc12240f968e" kindref="member">REALABS</ref>(bnd))<sp/>)</highlight></codeline>
<codeline lineno="4026"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4027"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>if<sp/>lower<sp/>bound<sp/>is<sp/>+/-<sp/>infinity<sp/>-&gt;<sp/>try<sp/>upper<sp/>bound<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4028"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetdblattrarray(lpi-&gt;grbmodel,<sp/>GRB_DBL_ATTR_UB,<sp/>i,<sp/>i,<sp/>&amp;bnd)<sp/>);</highlight></codeline>
<codeline lineno="4029"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/><ref refid="lpi__grb_8c_1a1773cc8c068cde1f8bb0b8ba99277878" kindref="member">SCIPlpiIsInfinity</ref>(lpi,<sp/><ref refid="def_8h_1add08ff5d5df711242962dc12240f968e" kindref="member">REALABS</ref>(bnd))<sp/>)</highlight></codeline>
<codeline lineno="4030"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi-&gt;cstat[i]<sp/>=<sp/><ref refid="type__lpi_8h_1ac34513c7d1cc6c3eb46bc9f373d03648ac9fd196bcf1e32bef1f5a2a71b3421bc" kindref="member">SCIP_BASESTAT_ZERO</ref>;<sp/><sp/></highlight><highlight class="comment">/*<sp/>variable<sp/>is<sp/>free<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4031"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4032"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi-&gt;cstat[i]<sp/>=<sp/><ref refid="type__lpi_8h_1ac34513c7d1cc6c3eb46bc9f373d03648a2b5d851810f72ad984abc6b47b852868" kindref="member">SCIP_BASESTAT_UPPER</ref>;<sp/></highlight><highlight class="comment">/*<sp/>use<sp/>finite<sp/>upper<sp/>bound<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4033"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4034"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4035"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi-&gt;cstat[i]<sp/>=<sp/><ref refid="type__lpi_8h_1ac34513c7d1cc6c3eb46bc9f373d03648aaf2c277e576d024183ed7949ba947da6" kindref="member">SCIP_BASESTAT_LOWER</ref>;<sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>use<sp/>finite<sp/>lower<sp/>bound<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4036"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4037"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">for</highlight><highlight class="normal">(<sp/>i<sp/>=<sp/>lpistate-&gt;nrows;<sp/>i<sp/>&lt;<sp/>nrows;<sp/>++i<sp/>)</highlight></codeline>
<codeline lineno="4038"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lpi-&gt;rstat[i]<sp/>=<sp/><ref refid="type__lpi_8h_1ac34513c7d1cc6c3eb46bc9f373d03648a166f9b557960da4bec4a0dbd00c0d7f2" kindref="member">SCIP_BASESTAT_BASIC</ref>;</highlight></codeline>
<codeline lineno="4039"><highlight class="normal"></highlight></codeline>
<codeline lineno="4040"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>load<sp/>basis<sp/>information<sp/>into<sp/>Gurobi<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4041"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/>setBase(lpi)<sp/>);</highlight></codeline>
<codeline lineno="4042"><highlight class="normal"></highlight></codeline>
<codeline lineno="4043"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="4044"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4045"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4046"><highlight class="comment">/**<sp/>clears<sp/>current<sp/>LPi<sp/>state<sp/>(like<sp/>basis<sp/>information)<sp/>of<sp/>the<sp/>solver<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4047" refid="lpi__grb_8c_1a1d56087500813e24687787cb90da5d93" refkind="member"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="lpi__grb_8c_1a1d56087500813e24687787cb90da5d93" kindref="member">SCIPlpiClearState</ref>(</highlight></codeline>
<codeline lineno="4048"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4049"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="4050"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4051"><highlight class="normal"><sp/><sp/><sp/>assert(lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="4052"><highlight class="normal"></highlight></codeline>
<codeline lineno="4053"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBresetmodel(lpi-&gt;grbmodel)<sp/>);</highlight></codeline>
<codeline lineno="4054"><highlight class="normal"></highlight></codeline>
<codeline lineno="4055"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="4056"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4057"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4058"><highlight class="comment">/**<sp/>frees<sp/>LPi<sp/>state<sp/>information<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4059" refid="lpi__grb_8c_1acfee2d2ea719f54192a11c1e80f5e61e" refkind="member"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="lpi__grb_8c_1acfee2d2ea719f54192a11c1e80f5e61e" kindref="member">SCIPlpiFreeState</ref>(</highlight></codeline>
<codeline lineno="4060"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4061"><highlight class="normal"><sp/><sp/><sp/>BMS_BLKMEM*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blkmem,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>block<sp/>memory<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4062"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a90d877c948164ab5e3beb0f3e1070693" kindref="member">SCIP_LPISTATE</ref>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpistate<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>LPi<sp/>state<sp/>information<sp/>(like<sp/>basis<sp/>information)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4063"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="4064"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4065"><highlight class="normal"><sp/><sp/><sp/>assert(lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="4066"><highlight class="normal"><sp/><sp/><sp/>assert(lpistate<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="4067"><highlight class="normal"></highlight></codeline>
<codeline lineno="4068"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>*lpistate<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref><sp/>)</highlight></codeline>
<codeline lineno="4069"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lpistateFree(lpistate,<sp/>blkmem);</highlight></codeline>
<codeline lineno="4070"><highlight class="normal"></highlight></codeline>
<codeline lineno="4071"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="4072"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4073"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4074"><highlight class="comment">/**<sp/>checks,<sp/>whether<sp/>the<sp/>given<sp/>LP<sp/>state<sp/>contains<sp/>simplex<sp/>basis<sp/>information<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4075" refid="lpi__grb_8c_1a8cf134c068da15fe85dfad3d3d0aae2b" refkind="member"><highlight class="normal"><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><ref refid="lpi__grb_8c_1a8cf134c068da15fe85dfad3d3d0aae2b" kindref="member">SCIPlpiHasStateBasis</ref>(</highlight></codeline>
<codeline lineno="4076"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4077"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a90d877c948164ab5e3beb0f3e1070693" kindref="member">SCIP_LPISTATE</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpistate<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>state<sp/>information<sp/>(like<sp/>basis<sp/>information)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4078"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="4079"><highlight class="normal">{<sp/><sp/></highlight><highlight class="comment">/*lint<sp/>--e{715}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4080"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(lpistate<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="4081"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4082"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4083"><highlight class="comment">/**<sp/>reads<sp/>LP<sp/>state<sp/>(like<sp/>basis<sp/>information<sp/>from<sp/>a<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4084" refid="lpi__grb_8c_1a29c773d7e7763517c0952b9eee9ed7ec" refkind="member"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="lpi__grb_8c_1a29c773d7e7763517c0952b9eee9ed7ec" kindref="member">SCIPlpiReadState</ref>(</highlight></codeline>
<codeline lineno="4085"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4086"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fname<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>file<sp/>name<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4087"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="4088"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4089"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>l;</highlight></codeline>
<codeline lineno="4090"><highlight class="normal"><sp/><sp/><sp/>assert(lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="4091"><highlight class="normal"><sp/><sp/><sp/>assert(lpi-&gt;grbmodel<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="4092"><highlight class="normal"></highlight></codeline>
<codeline lineno="4093"><highlight class="normal"><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;reading<sp/>LP<sp/>state<sp/>from<sp/>file<sp/>&lt;%s&gt;\n&quot;</highlight><highlight class="normal">,<sp/>fname);</highlight></codeline>
<codeline lineno="4094"><highlight class="normal"></highlight></codeline>
<codeline lineno="4095"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>gurobi<sp/>reads<sp/>a<sp/>basis<sp/>if<sp/>the<sp/>extension<sp/>is<sp/>&quot;.bas&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4096"><highlight class="normal"><sp/><sp/><sp/>l<sp/>=<sp/>strlen(fname);</highlight></codeline>
<codeline lineno="4097"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>l<sp/>&gt;<sp/>4<sp/>&amp;&amp;<sp/>fname[l-4]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>fname[l-3]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;b&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>fname[l-2]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>fname[l-1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;s&apos;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="4098"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4099"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBread(lpi-&gt;grbmodel,<sp/>fname)<sp/>);</highlight></codeline>
<codeline lineno="4100"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4101"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4102"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4103"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="pub__message_8h_1a354566c209c3a7fe5c870d4ee8c07bc5" kindref="member">SCIPerrorMessage</ref>(</highlight><highlight class="stringliteral">&quot;To<sp/>read<sp/>a<sp/>basis<sp/>with<sp/>gurobi,<sp/>the<sp/>extension<sp/>has<sp/>to<sp/>be<sp/>&apos;.bas&apos;.\n&quot;</highlight><highlight class="normal">);</highlight></codeline>
<codeline lineno="4104"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5da004953b01233fe72cb41c5d218abb858" kindref="member">SCIP_LPERROR</ref>;</highlight></codeline>
<codeline lineno="4105"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4106"><highlight class="normal"></highlight></codeline>
<codeline lineno="4107"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="4108"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4109"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4110"><highlight class="comment">/**<sp/>writes<sp/>LP<sp/>state<sp/>(like<sp/>basis<sp/>information)<sp/>to<sp/>a<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4111" refid="lpi__grb_8c_1a6b360b8eb706948179cc3b46fa4df372" refkind="member"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="lpi__grb_8c_1a6b360b8eb706948179cc3b46fa4df372" kindref="member">SCIPlpiWriteState</ref>(</highlight></codeline>
<codeline lineno="4112"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4113"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fname<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>file<sp/>name<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4114"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="4115"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4116"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">size_t</highlight><highlight class="normal"><sp/>l;</highlight></codeline>
<codeline lineno="4117"><highlight class="normal"><sp/><sp/><sp/>assert(lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="4118"><highlight class="normal"><sp/><sp/><sp/>assert(lpi-&gt;grbmodel<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="4119"><highlight class="normal"></highlight></codeline>
<codeline lineno="4120"><highlight class="normal"><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;writing<sp/>basis<sp/>state<sp/>to<sp/>file<sp/>&lt;%s&gt;\n&quot;</highlight><highlight class="normal">,<sp/>fname);</highlight></codeline>
<codeline lineno="4121"><highlight class="normal"></highlight></codeline>
<codeline lineno="4122"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>gurobi<sp/>writes<sp/>the<sp/>basis<sp/>if<sp/>the<sp/>extension<sp/>is<sp/>&quot;.bas&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4123"><highlight class="normal"><sp/><sp/><sp/>l<sp/>=<sp/>strlen(fname);</highlight></codeline>
<codeline lineno="4124"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal"><sp/>(<sp/>l<sp/>&gt;<sp/>4<sp/>&amp;&amp;<sp/>fname[l-4]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;.&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>fname[l-3]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;b&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>fname[l-2]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;a&apos;</highlight><highlight class="normal"><sp/>&amp;&amp;<sp/>fname[l-1]<sp/>==<sp/></highlight><highlight class="charliteral">&apos;s&apos;</highlight><highlight class="normal"><sp/>)</highlight></codeline>
<codeline lineno="4125"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4126"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBwrite(lpi-&gt;grbmodel,<sp/>fname)<sp/>);</highlight></codeline>
<codeline lineno="4127"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4128"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4129"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4130"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>name[<ref refid="def_8h_1a092c962ca167cd52b4be9c0a29b8da6b" kindref="member">SCIP_MAXSTRLEN</ref>];</highlight></codeline>
<codeline lineno="4131"><highlight class="normal"></highlight></codeline>
<codeline lineno="4132"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>force<sp/>extension<sp/>to<sp/>be<sp/>&quot;.bas&quot;<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4133"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>assert(strlen(fname)<sp/>&lt;<sp/><ref refid="def_8h_1a092c962ca167cd52b4be9c0a29b8da6b" kindref="member">SCIP_MAXSTRLEN</ref>-4);</highlight></codeline>
<codeline lineno="4134"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>sprintf(name,<sp/></highlight><highlight class="stringliteral">&quot;%s.bas&quot;</highlight><highlight class="normal">,<sp/>fname);</highlight></codeline>
<codeline lineno="4135"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBwrite(lpi-&gt;grbmodel,<sp/>fname)<sp/>);</highlight></codeline>
<codeline lineno="4136"><highlight class="normal"><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4137"><highlight class="normal"></highlight></codeline>
<codeline lineno="4138"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="4139"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4140"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4141"><highlight class="comment">/**@}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4142"><highlight class="normal"></highlight></codeline>
<codeline lineno="4143"><highlight class="normal"></highlight></codeline>
<codeline lineno="4144"><highlight class="normal"></highlight></codeline>
<codeline lineno="4145"><highlight class="normal"></highlight></codeline>
<codeline lineno="4146"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4147"><highlight class="comment"><sp/>*<sp/>LP<sp/>Pricing<sp/>Norms<sp/>Methods</highlight></codeline>
<codeline lineno="4148"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4149"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4150"><highlight class="comment">/**@name<sp/>LP<sp/>Pricing<sp/>Norms<sp/>Methods<sp/>*/</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4151"><highlight class="comment">/**@{<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4152"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4153"><highlight class="comment">/**<sp/>stores<sp/>LPi<sp/>pricing<sp/>norms<sp/>information</highlight></codeline>
<codeline lineno="4154"><highlight class="comment"><sp/>*<sp/><sp/>@todo<sp/>should<sp/>we<sp/>store<sp/>norm<sp/>information?</highlight></codeline>
<codeline lineno="4155"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4156" refid="lpi__grb_8c_1a868706bb40dc3fdeb76e81c56c1c4d31" refkind="member"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="lpi__grb_8c_1a868706bb40dc3fdeb76e81c56c1c4d31" kindref="member">SCIPlpiGetNorms</ref>(</highlight></codeline>
<codeline lineno="4157"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4158"><highlight class="normal"><sp/><sp/><sp/>BMS_BLKMEM*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blkmem,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>block<sp/>memory<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4159"><highlight class="normal"><sp/><sp/><sp/><ref refid="structSCIP__LPiNorms" kindref="compound">SCIP_LPINORMS</ref>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpinorms<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>LPi<sp/>pricing<sp/>norms<sp/>information<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4160"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="4161"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4162"><highlight class="normal"><sp/><sp/><sp/>assert(lpinorms<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="4163"><highlight class="normal"></highlight></codeline>
<codeline lineno="4164"><highlight class="normal"><sp/><sp/><sp/>(*lpinorms)<sp/>=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>;</highlight></codeline>
<codeline lineno="4165"><highlight class="normal"></highlight></codeline>
<codeline lineno="4166"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="4167"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4168"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4169"><highlight class="comment">/**<sp/>loads<sp/>LPi<sp/>pricing<sp/>norms<sp/>into<sp/>solver;<sp/>note<sp/>that<sp/>the<sp/>LP<sp/>might<sp/>have<sp/>been<sp/>extended<sp/>with<sp/>additional</highlight></codeline>
<codeline lineno="4170"><highlight class="comment"><sp/>*<sp/><sp/>columns<sp/>and<sp/>rows<sp/>since<sp/>the<sp/>state<sp/>was<sp/>stored<sp/>with<sp/>SCIPlpiGetNorms()</highlight></codeline>
<codeline lineno="4171"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4172" refid="lpi__grb_8c_1ad619ad2a4e65223449f5ab635985b70b" refkind="member"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="lpi__grb_8c_1ad619ad2a4e65223449f5ab635985b70b" kindref="member">SCIPlpiSetNorms</ref>(</highlight></codeline>
<codeline lineno="4173"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4174"><highlight class="normal"><sp/><sp/><sp/>BMS_BLKMEM*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blkmem,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>block<sp/>memory<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4175"><highlight class="normal"><sp/><sp/><sp/><ref refid="structSCIP__LPiNorms" kindref="compound">SCIP_LPINORMS</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpinorms<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LPi<sp/>pricing<sp/>norms<sp/>information<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4176"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="4177"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4178"><highlight class="normal"><sp/><sp/><sp/>assert(lpinorms<sp/>==<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="4179"><highlight class="normal"></highlight></codeline>
<codeline lineno="4180"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>no<sp/>work<sp/>necessary<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4181"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="4182"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4183"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4184"><highlight class="comment">/**<sp/>frees<sp/>pricing<sp/>norms<sp/>information<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4185" refid="lpi__grb_8c_1a640477b756ddb94827c1a4e5e3721d38" refkind="member"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="lpi__grb_8c_1a640477b756ddb94827c1a4e5e3721d38" kindref="member">SCIPlpiFreeNorms</ref>(</highlight></codeline>
<codeline lineno="4186"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4187"><highlight class="normal"><sp/><sp/><sp/>BMS_BLKMEM*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>blkmem,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>block<sp/>memory<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4188"><highlight class="normal"><sp/><sp/><sp/><ref refid="structSCIP__LPiNorms" kindref="compound">SCIP_LPINORMS</ref>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpinorms<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>LPi<sp/>pricing<sp/>norms<sp/>information<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4189"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="4190"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4191"><highlight class="normal"><sp/><sp/><sp/>assert(lpinorms<sp/>==<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="4192"><highlight class="normal"></highlight></codeline>
<codeline lineno="4193"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>no<sp/>work<sp/>necessary<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4194"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="4195"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4196"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4197"><highlight class="comment">/**@}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4198"><highlight class="normal"></highlight></codeline>
<codeline lineno="4199"><highlight class="normal"></highlight></codeline>
<codeline lineno="4200"><highlight class="normal"></highlight></codeline>
<codeline lineno="4201"><highlight class="normal"></highlight></codeline>
<codeline lineno="4202"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4203"><highlight class="comment"><sp/>*<sp/>Parameter<sp/>Methods</highlight></codeline>
<codeline lineno="4204"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4205"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4206"><highlight class="comment">/**@name<sp/>Parameter<sp/>Methods<sp/>*/</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4207"><highlight class="comment">/**@{<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4208"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4209"><highlight class="comment">/**<sp/>gets<sp/>integer<sp/>parameter<sp/>of<sp/>LP<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4210" refid="lpi__grb_8c_1a2d82a67789be908b161295f41d02ba8b" refkind="member"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="lpi__grb_8c_1a2d82a67789be908b161295f41d02ba8b" kindref="member">SCIPlpiGetIntpar</ref>(</highlight></codeline>
<codeline lineno="4211"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4212"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a845842b094eba8ce0cf0821e82b4d67a" kindref="member">SCIP_LPPARAM</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>parameter<sp/>number<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4213"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ival<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>buffer<sp/>to<sp/>store<sp/>the<sp/>parameter<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4214"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="4215"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4216"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>temp;</highlight></codeline>
<codeline lineno="4217"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/>dtemp;</highlight></codeline>
<codeline lineno="4218"><highlight class="normal"></highlight></codeline>
<codeline lineno="4219"><highlight class="normal"><sp/><sp/><sp/>assert(lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="4220"><highlight class="normal"><sp/><sp/><sp/>assert(lpi-&gt;grbmodel<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="4221"><highlight class="normal"><sp/><sp/><sp/>assert(ival<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="4222"><highlight class="normal"></highlight></codeline>
<codeline lineno="4223"><highlight class="normal"><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;getting<sp/>int<sp/>parameter<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>type);</highlight></codeline>
<codeline lineno="4224"><highlight class="normal"></highlight></codeline>
<codeline lineno="4225"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<sp/>type<sp/>)</highlight></codeline>
<codeline lineno="4226"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4227"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="type__lpi_8h_1ac333f54119f676d19d81bed186b0038baabf8addc3b5db9eb7280711323285333" kindref="member">SCIP_LPPAR_FROMSCRATCH</ref>:</highlight></codeline>
<codeline lineno="4228"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*ival<sp/>=<sp/>(int)<sp/>lpi-&gt;fromscratch;</highlight></codeline>
<codeline lineno="4229"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4230"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="type__lpi_8h_1ac333f54119f676d19d81bed186b0038ba9cf2cefbf43816ba1c1e454b50c732fd" kindref="member">SCIP_LPPAR_FASTMIP</ref>:</highlight></codeline>
<codeline lineno="4231"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>maybe<sp/>set<sp/>perturbation<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4232"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5da60ca3960305c3dc0d3c141448cbed401" kindref="member">SCIP_PARAMETERUNKNOWN</ref>;</highlight></codeline>
<codeline lineno="4233"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="type__lpi_8h_1ac333f54119f676d19d81bed186b0038ba58e15a0d2bb9e631213db974ec701b18" kindref="member">SCIP_LPPAR_SCALING</ref>:</highlight></codeline>
<codeline lineno="4234"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/>getIntParam(lpi,<sp/>GRB_INT_PAR_SCALEFLAG,<sp/>&amp;temp)<sp/>);</highlight></codeline>
<codeline lineno="4235"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(<sp/>temp<sp/>==<sp/>0<sp/>||<sp/>temp<sp/>==<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="4236"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*ival<sp/>=<sp/>(temp<sp/>==<sp/>1)<sp/>?<sp/><ref refid="def_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref><sp/>:<sp/><ref refid="def_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="4237"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4238"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="type__lpi_8h_1ac333f54119f676d19d81bed186b0038ba8229b5ef8f7105825a6d7245d1915258" kindref="member">SCIP_LPPAR_PRESOLVING</ref>:</highlight></codeline>
<codeline lineno="4239"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/>getIntParam(lpi,<sp/>GRB_INT_PAR_PRESOLVE,<sp/>&amp;temp)<sp/>);</highlight></codeline>
<codeline lineno="4240"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(<sp/>temp<sp/>==<sp/>GRB_PRESOLVE_AUTO<sp/>||<sp/>temp<sp/>==<sp/>GRB_PRESOLVE_OFF<sp/>||<sp/>temp<sp/>==<sp/>GRB_PRESOLVE_CONSERVATIVE<sp/>||<sp/>temp<sp/>==<sp/>GRB_PRESOLVE_AGGRESSIVE<sp/>);</highlight></codeline>
<codeline lineno="4241"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*ival<sp/>=<sp/>(temp<sp/>==<sp/>GRB_PRESOLVE_OFF)<sp/>?<sp/><ref refid="def_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref><sp/>:<sp/><ref refid="def_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref>;</highlight></codeline>
<codeline lineno="4242"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4243"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="type__lpi_8h_1ac333f54119f676d19d81bed186b0038ba0114e2317d0236d43fb3b297ee9aea8d" kindref="member">SCIP_LPPAR_PRICING</ref>:</highlight></codeline>
<codeline lineno="4244"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*ival<sp/>=<sp/>(int)<sp/>lpi-&gt;pricing;</highlight></codeline>
<codeline lineno="4245"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4246"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="type__lpi_8h_1ac333f54119f676d19d81bed186b0038ba3a6b49761689f0768535d9edcb26a013" kindref="member">SCIP_LPPAR_LPINFO</ref>:</highlight></codeline>
<codeline lineno="4247"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/>getIntParam(lpi,<sp/>GRB_INT_PAR_OUTPUTFLAG,<sp/>&amp;temp)<sp/>);</highlight></codeline>
<codeline lineno="4248"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(<sp/>temp<sp/>==<sp/>0<sp/>||<sp/>temp<sp/>==<sp/>1<sp/>);</highlight></codeline>
<codeline lineno="4249"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>*ival<sp/>=<sp/>(temp<sp/>==<sp/>1)<sp/>?<sp/><ref refid="def_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref><sp/>:<sp/><ref refid="def_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>;</highlight></codeline>
<codeline lineno="4250"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4251"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="type__lpi_8h_1ac333f54119f676d19d81bed186b0038bad3a9947367aa599495456cd35502683b" kindref="member">SCIP_LPPAR_LPITLIM</ref>:</highlight></codeline>
<codeline lineno="4252"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/>getDblParam(lpi,<sp/>GRB_DBL_PAR_ITERATIONLIMIT,<sp/>&amp;dtemp)<sp/>);</highlight></codeline>
<codeline lineno="4253"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(<sp/>dtemp<sp/>&gt;=<sp/>0.0<sp/>);</highlight></codeline>
<codeline lineno="4254"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>dtemp<sp/>&gt;=<sp/>GRB_INFINITY<sp/>)</highlight></codeline>
<codeline lineno="4255"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ival<sp/>=<sp/>INT_MAX;</highlight></codeline>
<codeline lineno="4256"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4257"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*ival<sp/>=<sp/>(int)<sp/>dtemp;</highlight></codeline>
<codeline lineno="4258"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4259"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="4260"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5da60ca3960305c3dc0d3c141448cbed401" kindref="member">SCIP_PARAMETERUNKNOWN</ref>;</highlight></codeline>
<codeline lineno="4261"><highlight class="normal"><sp/><sp/><sp/>}<sp/><sp/></highlight><highlight class="comment">/*lint<sp/>!e788*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4262"><highlight class="normal"></highlight></codeline>
<codeline lineno="4263"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="4264"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4265"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4266"><highlight class="comment">/**<sp/>sets<sp/>integer<sp/>parameter<sp/>of<sp/>LP<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4267" refid="lpi__grb_8c_1a8dac6dec76901acef9c18397582c5e9a" refkind="member"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="lpi__grb_8c_1a8dac6dec76901acef9c18397582c5e9a" kindref="member">SCIPlpiSetIntpar</ref>(</highlight></codeline>
<codeline lineno="4268"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4269"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a845842b094eba8ce0cf0821e82b4d67a" kindref="member">SCIP_LPPARAM</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>parameter<sp/>number<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4270"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>ival<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>parameter<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4271"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="4272"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4273"><highlight class="normal"><sp/><sp/><sp/>assert(lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="4274"><highlight class="normal"><sp/><sp/><sp/>assert(lpi-&gt;grbmodel<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="4275"><highlight class="normal"></highlight></codeline>
<codeline lineno="4276"><highlight class="normal"><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;setting<sp/>int<sp/>parameter<sp/>%d<sp/>to<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>type,<sp/>ival);</highlight></codeline>
<codeline lineno="4277"><highlight class="normal"></highlight></codeline>
<codeline lineno="4278"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<sp/>type<sp/>)</highlight></codeline>
<codeline lineno="4279"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4280"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="type__lpi_8h_1ac333f54119f676d19d81bed186b0038baabf8addc3b5db9eb7280711323285333" kindref="member">SCIP_LPPAR_FROMSCRATCH</ref>:</highlight></codeline>
<codeline lineno="4281"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(ival<sp/>==<sp/><ref refid="def_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref><sp/>||<sp/>ival<sp/>==<sp/><ref refid="def_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="4282"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lpi-&gt;fromscratch<sp/>=<sp/>(<ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>)<sp/>ival;</highlight></codeline>
<codeline lineno="4283"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4284"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="type__lpi_8h_1ac333f54119f676d19d81bed186b0038ba9cf2cefbf43816ba1c1e454b50c732fd" kindref="member">SCIP_LPPAR_FASTMIP</ref>:</highlight></codeline>
<codeline lineno="4285"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(ival<sp/>==<sp/><ref refid="def_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref><sp/>||<sp/>ival<sp/>==<sp/><ref refid="def_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="4286"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5da60ca3960305c3dc0d3c141448cbed401" kindref="member">SCIP_PARAMETERUNKNOWN</ref>;</highlight></codeline>
<codeline lineno="4287"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4288"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="type__lpi_8h_1ac333f54119f676d19d81bed186b0038ba58e15a0d2bb9e631213db974ec701b18" kindref="member">SCIP_LPPAR_SCALING</ref>:</highlight></codeline>
<codeline lineno="4289"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(ival<sp/>==<sp/><ref refid="def_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref><sp/>||<sp/>ival<sp/>==<sp/><ref refid="def_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="4290"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>ival<sp/>)</highlight></codeline>
<codeline lineno="4291"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/>setIntParam(lpi,<sp/>GRB_INT_PAR_SCALEFLAG,<sp/>1)<sp/>);</highlight></codeline>
<codeline lineno="4292"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4293"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/>setIntParam(lpi,<sp/>GRB_INT_PAR_SCALEFLAG,<sp/>0)<sp/>);</highlight></codeline>
<codeline lineno="4294"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4295"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="type__lpi_8h_1ac333f54119f676d19d81bed186b0038ba8229b5ef8f7105825a6d7245d1915258" kindref="member">SCIP_LPPAR_PRESOLVING</ref>:</highlight></codeline>
<codeline lineno="4296"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(ival<sp/>==<sp/><ref refid="def_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref><sp/>||<sp/>ival<sp/>==<sp/><ref refid="def_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="4297"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>ival<sp/>)</highlight></codeline>
<codeline lineno="4298"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/>setIntParam(lpi,<sp/>GRB_INT_PAR_PRESOLVE,<sp/>GRB_PRESOLVE_AUTO)<sp/>);</highlight></codeline>
<codeline lineno="4299"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4300"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/>setIntParam(lpi,<sp/>GRB_INT_PAR_PRESOLVE,<sp/>GRB_PRESOLVE_OFF)<sp/>);</highlight></codeline>
<codeline lineno="4301"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4302"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="type__lpi_8h_1ac333f54119f676d19d81bed186b0038ba0114e2317d0236d43fb3b297ee9aea8d" kindref="member">SCIP_LPPAR_PRICING</ref>:</highlight></codeline>
<codeline lineno="4303"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>lpi-&gt;pricing<sp/>=<sp/>(<ref refid="type__lpi_8h_1a680b3359be1f3e2b0fbcdaa05d219d61" kindref="member">SCIP_PRICING</ref>)ival;</highlight></codeline>
<codeline lineno="4304"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<sp/>(<ref refid="type__lpi_8h_1a680b3359be1f3e2b0fbcdaa05d219d61" kindref="member">SCIP_PRICING</ref>)ival<sp/>)</highlight></codeline>
<codeline lineno="4305"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4306"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="type__lpi_8h_1a0483a21478d8f9c8d7c1ba9e3473d775a840117e919783bcc69646f544c2db051" kindref="member">SCIP_PRICING_LPIDEFAULT</ref>:</highlight></codeline>
<codeline lineno="4307"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="type__lpi_8h_1a0483a21478d8f9c8d7c1ba9e3473d775a1579f0b28462ca3030c2ea711509cf11" kindref="member">SCIP_PRICING_AUTO</ref>:</highlight></codeline>
<codeline lineno="4308"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/>setIntParam(lpi,<sp/>GRB_INT_PAR_SIMPLEXPRICING,<sp/>GRB_SIMPLEXPRICING_AUTO)<sp/>);</highlight></codeline>
<codeline lineno="4309"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4310"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="type__lpi_8h_1a0483a21478d8f9c8d7c1ba9e3473d775a42f5306421531962d1b113eab03e6cf0" kindref="member">SCIP_PRICING_FULL</ref>:</highlight></codeline>
<codeline lineno="4311"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>full<sp/>does<sp/>not<sp/>seem<sp/>to<sp/>exist<sp/>-&gt;<sp/>use<sp/>auto<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4312"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/>setIntParam(lpi,<sp/>GRB_INT_PAR_SIMPLEXPRICING,<sp/>GRB_SIMPLEXPRICING_AUTO)<sp/>);</highlight></codeline>
<codeline lineno="4313"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4314"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="type__lpi_8h_1a0483a21478d8f9c8d7c1ba9e3473d775afb363bc9727994c89ff3da4273164335" kindref="member">SCIP_PRICING_PARTIAL</ref>:</highlight></codeline>
<codeline lineno="4315"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/>setIntParam(lpi,<sp/>GRB_INT_PAR_SIMPLEXPRICING,<sp/>GRB_SIMPLEXPRICING_PARTIAL)<sp/>);</highlight></codeline>
<codeline lineno="4316"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4317"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="type__lpi_8h_1a0483a21478d8f9c8d7c1ba9e3473d775a270fee7478b8951e2cc4fbefc7b7b477" kindref="member">SCIP_PRICING_STEEP</ref>:</highlight></codeline>
<codeline lineno="4318"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/>setIntParam(lpi,<sp/>GRB_INT_PAR_SIMPLEXPRICING,<sp/>GRB_SIMPLEXPRICING_STEEPEST_EDGE)<sp/>);</highlight></codeline>
<codeline lineno="4319"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4320"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="type__lpi_8h_1a0483a21478d8f9c8d7c1ba9e3473d775a0b1034a38e607455f39eb74ad242bab6" kindref="member">SCIP_PRICING_STEEPQSTART</ref>:</highlight></codeline>
<codeline lineno="4321"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/>setIntParam(lpi,<sp/>GRB_INT_PAR_SIMPLEXPRICING,<sp/>GRB_SIMPLEXPRICING_STEEPEST_QUICK)<sp/>);</highlight></codeline>
<codeline lineno="4322"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4323"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="type__lpi_8h_1a0483a21478d8f9c8d7c1ba9e3473d775a1e601f75db40f3b48665aa04f5103987" kindref="member">SCIP_PRICING_DEVEX</ref>:</highlight></codeline>
<codeline lineno="4324"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/>setIntParam(lpi,<sp/>GRB_INT_PAR_SIMPLEXPRICING,<sp/>GRB_SIMPLEXPRICING_DEVEX)<sp/>);</highlight></codeline>
<codeline lineno="4325"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4326"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="4327"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5da004953b01233fe72cb41c5d218abb858" kindref="member">SCIP_LPERROR</ref>;</highlight></codeline>
<codeline lineno="4328"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>}</highlight></codeline>
<codeline lineno="4329"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4330"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="type__lpi_8h_1ac333f54119f676d19d81bed186b0038ba3a6b49761689f0768535d9edcb26a013" kindref="member">SCIP_LPPAR_LPINFO</ref>:</highlight></codeline>
<codeline lineno="4331"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/>assert(ival<sp/>==<sp/><ref refid="def_8h_1aa8cecfc5c5c054d2875c03e77b7be15d" kindref="member">TRUE</ref><sp/>||<sp/>ival<sp/>==<sp/><ref refid="def_8h_1aa93f0eb578d23995850d61f7d61c55c1" kindref="member">FALSE</ref>);</highlight></codeline>
<codeline lineno="4332"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>ival<sp/>)</highlight></codeline>
<codeline lineno="4333"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/>setIntParam(lpi,<sp/>GRB_INT_PAR_OUTPUTFLAG,<sp/>1)<sp/>);</highlight></codeline>
<codeline lineno="4334"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4335"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/>setIntParam(lpi,<sp/>GRB_INT_PAR_OUTPUTFLAG,<sp/>0)<sp/>);</highlight></codeline>
<codeline lineno="4336"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4337"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="type__lpi_8h_1ac333f54119f676d19d81bed186b0038bad3a9947367aa599495456cd35502683b" kindref="member">SCIP_LPPAR_LPITLIM</ref>:</highlight></codeline>
<codeline lineno="4338"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/>setDblParam(lpi,<sp/>GRB_DBL_PAR_ITERATIONLIMIT,<sp/>(</highlight><highlight class="keywordtype">double</highlight><highlight class="normal">)<sp/>ival)<sp/>);</highlight></codeline>
<codeline lineno="4339"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4340"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="4341"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5da60ca3960305c3dc0d3c141448cbed401" kindref="member">SCIP_PARAMETERUNKNOWN</ref>;</highlight></codeline>
<codeline lineno="4342"><highlight class="normal"><sp/><sp/><sp/>}<sp/><sp/></highlight><highlight class="comment">/*lint<sp/>!e788*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4343"><highlight class="normal"></highlight></codeline>
<codeline lineno="4344"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="4345"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4346"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4347"><highlight class="comment">/**<sp/>gets<sp/>floating<sp/>point<sp/>parameter<sp/>of<sp/>LP<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4348" refid="lpi__grb_8c_1a07259db5fb0599d063fa4973dc3d5d8e" refkind="member"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="lpi__grb_8c_1a07259db5fb0599d063fa4973dc3d5d8e" kindref="member">SCIPlpiGetRealpar</ref>(</highlight></codeline>
<codeline lineno="4349"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4350"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a845842b094eba8ce0cf0821e82b4d67a" kindref="member">SCIP_LPPARAM</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>parameter<sp/>number<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4351"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dval<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>buffer<sp/>to<sp/>store<sp/>the<sp/>parameter<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4352"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="4353"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4354"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>objsen;</highlight></codeline>
<codeline lineno="4355"><highlight class="normal"></highlight></codeline>
<codeline lineno="4356"><highlight class="normal"><sp/><sp/><sp/>assert(lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="4357"><highlight class="normal"><sp/><sp/><sp/>assert(lpi-&gt;grbmodel<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="4358"><highlight class="normal"><sp/><sp/><sp/>assert(dval<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="4359"><highlight class="normal"></highlight></codeline>
<codeline lineno="4360"><highlight class="normal"><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;getting<sp/>real<sp/>parameter<sp/>%d\n&quot;</highlight><highlight class="normal">,<sp/>type);</highlight></codeline>
<codeline lineno="4361"><highlight class="normal"></highlight></codeline>
<codeline lineno="4362"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<sp/>type<sp/>)</highlight></codeline>
<codeline lineno="4363"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4364"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="type__lpi_8h_1ac333f54119f676d19d81bed186b0038bac3189a09fce4d5f22435928771524285" kindref="member">SCIP_LPPAR_FEASTOL</ref>:</highlight></codeline>
<codeline lineno="4365"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/>getDblParam(lpi,<sp/>GRB_DBL_PAR_FEASIBILITYTOL,<sp/>dval)<sp/>);</highlight></codeline>
<codeline lineno="4366"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4367"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="type__lpi_8h_1ac333f54119f676d19d81bed186b0038baa9801355e17b1d3f1c5ed41616285dc5" kindref="member">SCIP_LPPAR_DUALFEASTOL</ref>:</highlight></codeline>
<codeline lineno="4368"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/>getDblParam(lpi,<sp/>GRB_DBL_PAR_OPTIMALITYTOL,<sp/>dval)<sp/>);</highlight></codeline>
<codeline lineno="4369"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4370"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="type__lpi_8h_1ac333f54119f676d19d81bed186b0038ba7a541158135537aa60d3649574621538" kindref="member">SCIP_LPPAR_BARRIERCONVTOL</ref>:</highlight></codeline>
<codeline lineno="4371"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5da60ca3960305c3dc0d3c141448cbed401" kindref="member">SCIP_PARAMETERUNKNOWN</ref>;</highlight></codeline>
<codeline lineno="4372"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4373"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="type__lpi_8h_1ac333f54119f676d19d81bed186b0038ba3d88cde8e4c624e49c106d4c98955f10" kindref="member">SCIP_LPPAR_LOBJLIM</ref>:</highlight></codeline>
<codeline lineno="4374"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetintattr(lpi-&gt;grbmodel,<sp/>GRB_INT_ATTR_MODELSENSE,<sp/>&amp;objsen)<sp/>);</highlight></codeline>
<codeline lineno="4375"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>objsen<sp/>==<sp/>1<sp/>)</highlight></codeline>
<codeline lineno="4376"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/>getDblParam(lpi,<sp/>GRB_DBL_PAR_CUTOFF,<sp/>dval)<sp/>);</highlight></codeline>
<codeline lineno="4377"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4378"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5da60ca3960305c3dc0d3c141448cbed401" kindref="member">SCIP_PARAMETERUNKNOWN</ref>;</highlight></codeline>
<codeline lineno="4379"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4380"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="type__lpi_8h_1ac333f54119f676d19d81bed186b0038baa9974a8818f5f48d32a5f5912bf085b2" kindref="member">SCIP_LPPAR_UOBJLIM</ref>:</highlight></codeline>
<codeline lineno="4381"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetintattr(lpi-&gt;grbmodel,<sp/>GRB_INT_ATTR_MODELSENSE,<sp/>&amp;objsen)<sp/>);</highlight></codeline>
<codeline lineno="4382"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>objsen<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="4383"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/>getDblParam(lpi,<sp/>GRB_DBL_PAR_CUTOFF,<sp/>dval)<sp/>);</highlight></codeline>
<codeline lineno="4384"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">else</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4385"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5da60ca3960305c3dc0d3c141448cbed401" kindref="member">SCIP_PARAMETERUNKNOWN</ref>;</highlight></codeline>
<codeline lineno="4386"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4387"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="type__lpi_8h_1ac333f54119f676d19d81bed186b0038ba733f4fa15222572d687c1bb753782cf0" kindref="member">SCIP_LPPAR_LPTILIM</ref>:</highlight></codeline>
<codeline lineno="4388"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/>getDblParam(lpi,<sp/>GRB_DBL_PAR_TIMELIMIT,<sp/>dval)<sp/>);</highlight></codeline>
<codeline lineno="4389"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4390"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="type__lpi_8h_1ac333f54119f676d19d81bed186b0038bab1d6268a86eb10df9e8140ed626e38f8" kindref="member">SCIP_LPPAR_MARKOWITZ</ref>:</highlight></codeline>
<codeline lineno="4391"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/>getDblParam(lpi,<sp/>GRB_DBL_PAR_MARKOWITZTOL,<sp/>dval)<sp/>);</highlight></codeline>
<codeline lineno="4392"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4393"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="4394"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5da60ca3960305c3dc0d3c141448cbed401" kindref="member">SCIP_PARAMETERUNKNOWN</ref>;</highlight></codeline>
<codeline lineno="4395"><highlight class="normal"><sp/><sp/><sp/>}<sp/><sp/></highlight><highlight class="comment">/*lint<sp/>!e788*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4396"><highlight class="normal"></highlight></codeline>
<codeline lineno="4397"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="4398"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4399"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4400"><highlight class="comment">/**<sp/>sets<sp/>floating<sp/>point<sp/>parameter<sp/>of<sp/>LP<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4401" refid="lpi__grb_8c_1a468d983f0e77aa23e9563d4c1c1e3db8" refkind="member"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="lpi__grb_8c_1a468d983f0e77aa23e9563d4c1c1e3db8" kindref="member">SCIPlpiSetRealpar</ref>(</highlight></codeline>
<codeline lineno="4402"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4403"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a845842b094eba8ce0cf0821e82b4d67a" kindref="member">SCIP_LPPARAM</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>type,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>parameter<sp/>number<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4404"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dval<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>parameter<sp/>value<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4405"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="4406"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4407"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>objsen;</highlight></codeline>
<codeline lineno="4408"><highlight class="normal"></highlight></codeline>
<codeline lineno="4409"><highlight class="normal"><sp/><sp/><sp/>assert(lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="4410"><highlight class="normal"><sp/><sp/><sp/>assert(lpi-&gt;grbmodel<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="4411"><highlight class="normal"></highlight></codeline>
<codeline lineno="4412"><highlight class="normal"><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;setting<sp/>real<sp/>parameter<sp/>%d<sp/>to<sp/>%g\n&quot;</highlight><highlight class="normal">,<sp/>type,<sp/>dval);</highlight></codeline>
<codeline lineno="4413"><highlight class="normal"></highlight></codeline>
<codeline lineno="4414"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">switch</highlight><highlight class="normal">(<sp/>type<sp/>)</highlight></codeline>
<codeline lineno="4415"><highlight class="normal"><sp/><sp/><sp/>{</highlight></codeline>
<codeline lineno="4416"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="type__lpi_8h_1ac333f54119f676d19d81bed186b0038bac3189a09fce4d5f22435928771524285" kindref="member">SCIP_LPPAR_FEASTOL</ref>:</highlight></codeline>
<codeline lineno="4417"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/>setDblParam(lpi,<sp/>GRB_DBL_PAR_FEASIBILITYTOL,<sp/>dval)<sp/>);</highlight></codeline>
<codeline lineno="4418"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4419"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="type__lpi_8h_1ac333f54119f676d19d81bed186b0038baa9801355e17b1d3f1c5ed41616285dc5" kindref="member">SCIP_LPPAR_DUALFEASTOL</ref>:</highlight></codeline>
<codeline lineno="4420"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/>setDblParam(lpi,<sp/>GRB_DBL_PAR_OPTIMALITYTOL,<sp/>dval)<sp/>);</highlight></codeline>
<codeline lineno="4421"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4422"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="type__lpi_8h_1ac333f54119f676d19d81bed186b0038ba7a541158135537aa60d3649574621538" kindref="member">SCIP_LPPAR_BARRIERCONVTOL</ref>:</highlight></codeline>
<codeline lineno="4423"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5da60ca3960305c3dc0d3c141448cbed401" kindref="member">SCIP_PARAMETERUNKNOWN</ref>;</highlight></codeline>
<codeline lineno="4424"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4425"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="type__lpi_8h_1ac333f54119f676d19d81bed186b0038ba3d88cde8e4c624e49c106d4c98955f10" kindref="member">SCIP_LPPAR_LOBJLIM</ref>:</highlight></codeline>
<codeline lineno="4426"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetintattr(lpi-&gt;grbmodel,<sp/>GRB_INT_ATTR_MODELSENSE,<sp/>&amp;objsen)<sp/>);</highlight></codeline>
<codeline lineno="4427"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>objsen<sp/>==<sp/>1<sp/>)</highlight></codeline>
<codeline lineno="4428"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/>setDblParam(lpi,<sp/>GRB_DBL_PAR_CUTOFF,<sp/>dval)<sp/>);</highlight></codeline>
<codeline lineno="4429"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4430"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="type__lpi_8h_1ac333f54119f676d19d81bed186b0038baa9974a8818f5f48d32a5f5912bf085b2" kindref="member">SCIP_LPPAR_UOBJLIM</ref>:</highlight></codeline>
<codeline lineno="4431"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBgetintattr(lpi-&gt;grbmodel,<sp/>GRB_INT_ATTR_MODELSENSE,<sp/>&amp;objsen)<sp/>);</highlight></codeline>
<codeline lineno="4432"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">if</highlight><highlight class="normal">(<sp/>objsen<sp/>==<sp/>0<sp/>)</highlight></codeline>
<codeline lineno="4433"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/>setDblParam(lpi,<sp/>GRB_DBL_PAR_CUTOFF,<sp/>dval)<sp/>);</highlight></codeline>
<codeline lineno="4434"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4435"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="type__lpi_8h_1ac333f54119f676d19d81bed186b0038ba733f4fa15222572d687c1bb753782cf0" kindref="member">SCIP_LPPAR_LPTILIM</ref>:</highlight></codeline>
<codeline lineno="4436"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/>setDblParam(lpi,<sp/>GRB_DBL_PAR_TIMELIMIT,<sp/>dval)<sp/>);</highlight></codeline>
<codeline lineno="4437"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4438"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">case</highlight><highlight class="normal"><sp/><ref refid="type__lpi_8h_1ac333f54119f676d19d81bed186b0038bab1d6268a86eb10df9e8140ed626e38f8" kindref="member">SCIP_LPPAR_MARKOWITZ</ref>:</highlight></codeline>
<codeline lineno="4439"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="def_8h_1afbffafd5fc40cd928e2adcaa83f10bd7" kindref="member">SCIP_CALL</ref>(<sp/>setDblParam(lpi,<sp/>GRB_DBL_PAR_MARKOWITZTOL,<sp/>dval)<sp/>);</highlight></codeline>
<codeline lineno="4440"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">break</highlight><highlight class="normal">;</highlight></codeline>
<codeline lineno="4441"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">default</highlight><highlight class="normal">:</highlight></codeline>
<codeline lineno="4442"><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5da60ca3960305c3dc0d3c141448cbed401" kindref="member">SCIP_PARAMETERUNKNOWN</ref>;</highlight></codeline>
<codeline lineno="4443"><highlight class="normal"><sp/><sp/><sp/>}<sp/><sp/></highlight><highlight class="comment">/*lint<sp/>!e788*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4444"><highlight class="normal"></highlight></codeline>
<codeline lineno="4445"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="4446"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4447"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4448"><highlight class="comment">/**@}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4449"><highlight class="normal"></highlight></codeline>
<codeline lineno="4450"><highlight class="normal"></highlight></codeline>
<codeline lineno="4451"><highlight class="normal"></highlight></codeline>
<codeline lineno="4452"><highlight class="normal"></highlight></codeline>
<codeline lineno="4453"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4454"><highlight class="comment"><sp/>*<sp/>Numerical<sp/>Methods</highlight></codeline>
<codeline lineno="4455"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4456"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4457"><highlight class="comment">/**@name<sp/>Numerical<sp/>Methods<sp/>*/</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4458"><highlight class="comment">/**@{<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4459"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4460"><highlight class="comment">/**<sp/>returns<sp/>value<sp/>treated<sp/>as<sp/>infinity<sp/>in<sp/>the<sp/>LP<sp/>solver<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4461" refid="lpi__grb_8c_1a0b732c1d334aa020a4745e550adad4a5" refkind="member"><highlight class="normal"><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><ref refid="lpi__grb_8c_1a0b732c1d334aa020a4745e550adad4a5" kindref="member">SCIPlpiInfinity</ref>(</highlight></codeline>
<codeline lineno="4462"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4463"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="4464"><highlight class="normal">{<sp/><sp/></highlight><highlight class="comment">/*lint<sp/>--e{715}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4465"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>GRB_INFINITY;</highlight></codeline>
<codeline lineno="4466"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4467"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4468"><highlight class="comment">/**<sp/>checks<sp/>if<sp/>given<sp/>value<sp/>is<sp/>treated<sp/>as<sp/>infinity<sp/>in<sp/>the<sp/>LP<sp/>solver<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4469" refid="lpi__grb_8c_1a1773cc8c068cde1f8bb0b8ba99277878" refkind="member"><highlight class="normal"><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><ref refid="lpi__grb_8c_1a1773cc8c068cde1f8bb0b8ba99277878" kindref="member">SCIPlpiIsInfinity</ref>(</highlight></codeline>
<codeline lineno="4470"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4471"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>val<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>value<sp/>to<sp/>be<sp/>checked<sp/>for<sp/>infinity<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4472"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="4473"><highlight class="normal">{<sp/><sp/></highlight><highlight class="comment">/*lint<sp/>--e{715}*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4474"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/>(val<sp/>&gt;=<sp/>GRB_INFINITY);</highlight></codeline>
<codeline lineno="4475"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4476"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4477"><highlight class="comment">/**@}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4478"><highlight class="normal"></highlight></codeline>
<codeline lineno="4479"><highlight class="normal"></highlight></codeline>
<codeline lineno="4480"><highlight class="normal"></highlight></codeline>
<codeline lineno="4481"><highlight class="normal"></highlight></codeline>
<codeline lineno="4482"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="4483"><highlight class="comment"><sp/>*<sp/>File<sp/>Interface<sp/>Methods</highlight></codeline>
<codeline lineno="4484"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4485"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4486"><highlight class="comment">/**@name<sp/>File<sp/>Interface<sp/>Methods<sp/>*/</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4487"><highlight class="comment">/**@{<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4488"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4489"><highlight class="comment">/**<sp/>reads<sp/>LP<sp/>from<sp/>a<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4490" refid="lpi__grb_8c_1a83b58a451300ba484bb9314b35edc63f" refkind="member"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="lpi__grb_8c_1a83b58a451300ba484bb9314b35edc63f" kindref="member">SCIPlpiReadLP</ref>(</highlight></codeline>
<codeline lineno="4491"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4492"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fname<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>file<sp/>name<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4493"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="4494"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4495"><highlight class="normal"><sp/><sp/><sp/>assert(lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="4496"><highlight class="normal"><sp/><sp/><sp/>assert(lpi-&gt;grbmodel<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="4497"><highlight class="normal"></highlight></codeline>
<codeline lineno="4498"><highlight class="normal"><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;reading<sp/>LP<sp/>from<sp/>file<sp/>&lt;%s&gt;\n&quot;</highlight><highlight class="normal">,<sp/>fname);</highlight></codeline>
<codeline lineno="4499"><highlight class="normal"></highlight></codeline>
<codeline lineno="4500"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBread(lpi-&gt;grbmodel,<sp/>fname)<sp/>);</highlight></codeline>
<codeline lineno="4501"><highlight class="normal"></highlight></codeline>
<codeline lineno="4502"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="4503"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4504"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4505"><highlight class="comment">/**<sp/>writes<sp/>LP<sp/>to<sp/>a<sp/>file<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4506" refid="lpi__grb_8c_1a311a14142841041e24d522b281124f57" refkind="member"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="lpi__grb_8c_1a311a14142841041e24d522b281124f57" kindref="member">SCIPlpiWriteLP</ref>(</highlight></codeline>
<codeline lineno="4507"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__lpi_8h_1a95450814c277697516678287134c5e8e" kindref="member">SCIP_LPI</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>lpi,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>LP<sp/>interface<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4508"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fname<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>file<sp/>name<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4509"><highlight class="normal"><sp/><sp/><sp/>)</highlight></codeline>
<codeline lineno="4510"><highlight class="normal">{</highlight></codeline>
<codeline lineno="4511"><highlight class="normal"><sp/><sp/><sp/>assert(lpi<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="4512"><highlight class="normal"><sp/><sp/><sp/>assert(lpi-&gt;grbmodel<sp/>!=<sp/><ref refid="def_8h_1a070d2ce7b6bb7e5c05602aa8c308d0c4" kindref="member">NULL</ref>);</highlight></codeline>
<codeline lineno="4513"><highlight class="normal"></highlight></codeline>
<codeline lineno="4514"><highlight class="normal"><sp/><sp/><sp/><ref refid="pub__message_8h_1a827dc20f17fd394bf206451a2289292e" kindref="member">SCIPdebugMessage</ref>(</highlight><highlight class="stringliteral">&quot;writing<sp/>LP<sp/>to<sp/>file<sp/>&lt;%s&gt;\n&quot;</highlight><highlight class="normal">,<sp/>fname);</highlight></codeline>
<codeline lineno="4515"><highlight class="normal"></highlight></codeline>
<codeline lineno="4516"><highlight class="normal"><sp/><sp/><sp/><ref refid="lpi__grb_8c_1a87c17106a7eb32af0baa3ec076dd7b02" kindref="member">CHECK_ZERO</ref>(<sp/>lpi-&gt;messagehdlr,<sp/>GRBwrite(lpi-&gt;grbmodel,<sp/>fname)<sp/>);</highlight></codeline>
<codeline lineno="4517"><highlight class="normal"></highlight></codeline>
<codeline lineno="4518"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordflow">return</highlight><highlight class="normal"><sp/><ref refid="type__retcode_8h_1a43415f0ed8d60fa1d0a4217226e37b5dab0a6b6b71b69bed810638b5e859e3b2b" kindref="member">SCIP_OKAY</ref>;</highlight></codeline>
<codeline lineno="4519"><highlight class="normal">}</highlight></codeline>
<codeline lineno="4520"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="4521"><highlight class="comment">/**@}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
    </programlisting>
    <location file="/mnt/hdd/mlubin/work/scipoptsuite-3.2.0/scip-3.2.0/src/lpi/lpi_grb.c"/>
  </compounddef>
</doxygen>
