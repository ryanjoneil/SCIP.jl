<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="type__expr_8h" kind="file">
    <compoundname>type_expr.h</compoundname>
    <includedby refid="pub__nlp_8h" local="yes">pub_nlp.h</includedby>
    <includedby refid="exprinterpret_8h" local="yes">exprinterpret.h</includedby>
    <includedby refid="pub__expr_8h" local="yes">pub_expr.h</includedby>
    <includedby refid="type__nlpi_8h" local="yes">type_nlpi.h</includedby>
    <invincdepgraph>
      <node id="16368">
        <label>heur_clique.h</label>
        <link refid="heur__clique_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16364">
        <label>cons_xor.h</label>
        <link refid="cons__xor_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16440">
        <label>reader_pbm.h</label>
        <link refid="reader__pbm_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16369">
        <label>heur_coefdiving.h</label>
        <link refid="heur__coefdiving_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16414">
        <label>presol_convertinttobin.h</label>
        <link refid="presol__convertinttobin_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16459">
        <label>sepa_zerohalf.h</label>
        <link refid="sepa__zerohalf_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16400">
        <label>heur_undercover.h</label>
        <link refid="heur__undercover_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16395">
        <label>heur_simplerounding.h</label>
        <link refid="heur__simplerounding_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16380">
        <label>heur_localbranching.h</label>
        <link refid="heur__localbranching_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16442">
        <label>reader_ppm.h</label>
        <link refid="reader__ppm_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16328">
        <label>scip.h</label>
        <link refid="scip_8h"/>
        <childnode refid="16329" relation="include">
        </childnode>
        <childnode refid="16331" relation="include">
        </childnode>
        <childnode refid="16332" relation="include">
        </childnode>
        <childnode refid="16333" relation="include">
        </childnode>
        <childnode refid="16334" relation="include">
        </childnode>
        <childnode refid="16335" relation="include">
        </childnode>
        <childnode refid="16336" relation="include">
        </childnode>
        <childnode refid="16337" relation="include">
        </childnode>
        <childnode refid="16338" relation="include">
        </childnode>
        <childnode refid="16339" relation="include">
        </childnode>
        <childnode refid="16340" relation="include">
        </childnode>
        <childnode refid="16341" relation="include">
        </childnode>
        <childnode refid="16342" relation="include">
        </childnode>
        <childnode refid="16343" relation="include">
        </childnode>
        <childnode refid="16344" relation="include">
        </childnode>
        <childnode refid="16345" relation="include">
        </childnode>
        <childnode refid="16346" relation="include">
        </childnode>
        <childnode refid="16347" relation="include">
        </childnode>
        <childnode refid="16348" relation="include">
        </childnode>
        <childnode refid="16349" relation="include">
        </childnode>
        <childnode refid="16350" relation="include">
        </childnode>
        <childnode refid="16351" relation="include">
        </childnode>
        <childnode refid="16352" relation="include">
        </childnode>
        <childnode refid="16353" relation="include">
        </childnode>
        <childnode refid="16354" relation="include">
        </childnode>
        <childnode refid="16355" relation="include">
        </childnode>
        <childnode refid="16356" relation="include">
        </childnode>
        <childnode refid="16357" relation="include">
        </childnode>
        <childnode refid="16358" relation="include">
        </childnode>
        <childnode refid="16359" relation="include">
        </childnode>
        <childnode refid="16360" relation="include">
        </childnode>
        <childnode refid="16361" relation="include">
        </childnode>
        <childnode refid="16362" relation="include">
        </childnode>
        <childnode refid="16363" relation="include">
        </childnode>
        <childnode refid="16364" relation="include">
        </childnode>
        <childnode refid="16365" relation="include">
        </childnode>
        <childnode refid="16366" relation="include">
        </childnode>
        <childnode refid="16367" relation="include">
        </childnode>
        <childnode refid="16368" relation="include">
        </childnode>
        <childnode refid="16369" relation="include">
        </childnode>
        <childnode refid="16370" relation="include">
        </childnode>
        <childnode refid="16371" relation="include">
        </childnode>
        <childnode refid="16372" relation="include">
        </childnode>
        <childnode refid="16373" relation="include">
        </childnode>
        <childnode refid="16374" relation="include">
        </childnode>
        <childnode refid="16375" relation="include">
        </childnode>
        <childnode refid="16376" relation="include">
        </childnode>
        <childnode refid="16377" relation="include">
        </childnode>
        <childnode refid="16378" relation="include">
        </childnode>
        <childnode refid="16379" relation="include">
        </childnode>
        <childnode refid="16380" relation="include">
        </childnode>
        <childnode refid="16381" relation="include">
        </childnode>
        <childnode refid="16382" relation="include">
        </childnode>
        <childnode refid="16383" relation="include">
        </childnode>
        <childnode refid="16384" relation="include">
        </childnode>
        <childnode refid="16385" relation="include">
        </childnode>
        <childnode refid="16386" relation="include">
        </childnode>
        <childnode refid="16387" relation="include">
        </childnode>
        <childnode refid="16388" relation="include">
        </childnode>
        <childnode refid="16389" relation="include">
        </childnode>
        <childnode refid="16390" relation="include">
        </childnode>
        <childnode refid="16391" relation="include">
        </childnode>
        <childnode refid="16392" relation="include">
        </childnode>
        <childnode refid="16393" relation="include">
        </childnode>
        <childnode refid="16394" relation="include">
        </childnode>
        <childnode refid="16395" relation="include">
        </childnode>
        <childnode refid="16396" relation="include">
        </childnode>
        <childnode refid="16397" relation="include">
        </childnode>
        <childnode refid="16398" relation="include">
        </childnode>
        <childnode refid="16399" relation="include">
        </childnode>
        <childnode refid="16400" relation="include">
        </childnode>
        <childnode refid="16401" relation="include">
        </childnode>
        <childnode refid="16402" relation="include">
        </childnode>
        <childnode refid="16403" relation="include">
        </childnode>
        <childnode refid="16404" relation="include">
        </childnode>
        <childnode refid="16405" relation="include">
        </childnode>
        <childnode refid="16406" relation="include">
        </childnode>
        <childnode refid="16407" relation="include">
        </childnode>
        <childnode refid="16408" relation="include">
        </childnode>
        <childnode refid="16409" relation="include">
        </childnode>
        <childnode refid="16410" relation="include">
        </childnode>
        <childnode refid="16411" relation="include">
        </childnode>
        <childnode refid="16412" relation="include">
        </childnode>
        <childnode refid="16413" relation="include">
        </childnode>
        <childnode refid="16414" relation="include">
        </childnode>
        <childnode refid="16415" relation="include">
        </childnode>
        <childnode refid="16416" relation="include">
        </childnode>
        <childnode refid="16417" relation="include">
        </childnode>
        <childnode refid="16418" relation="include">
        </childnode>
        <childnode refid="16419" relation="include">
        </childnode>
        <childnode refid="16420" relation="include">
        </childnode>
        <childnode refid="16421" relation="include">
        </childnode>
        <childnode refid="16422" relation="include">
        </childnode>
        <childnode refid="16423" relation="include">
        </childnode>
        <childnode refid="16424" relation="include">
        </childnode>
        <childnode refid="16425" relation="include">
        </childnode>
        <childnode refid="16426" relation="include">
        </childnode>
        <childnode refid="16427" relation="include">
        </childnode>
        <childnode refid="16428" relation="include">
        </childnode>
        <childnode refid="16429" relation="include">
        </childnode>
        <childnode refid="16430" relation="include">
        </childnode>
        <childnode refid="16431" relation="include">
        </childnode>
        <childnode refid="16432" relation="include">
        </childnode>
        <childnode refid="16433" relation="include">
        </childnode>
        <childnode refid="16434" relation="include">
        </childnode>
        <childnode refid="16435" relation="include">
        </childnode>
        <childnode refid="16436" relation="include">
        </childnode>
        <childnode refid="16437" relation="include">
        </childnode>
        <childnode refid="16438" relation="include">
        </childnode>
        <childnode refid="16439" relation="include">
        </childnode>
        <childnode refid="16440" relation="include">
        </childnode>
        <childnode refid="16441" relation="include">
        </childnode>
        <childnode refid="16442" relation="include">
        </childnode>
        <childnode refid="16443" relation="include">
        </childnode>
        <childnode refid="16444" relation="include">
        </childnode>
        <childnode refid="16445" relation="include">
        </childnode>
        <childnode refid="16446" relation="include">
        </childnode>
        <childnode refid="16330" relation="include">
        </childnode>
        <childnode refid="16447" relation="include">
        </childnode>
        <childnode refid="16448" relation="include">
        </childnode>
        <childnode refid="16449" relation="include">
        </childnode>
        <childnode refid="16450" relation="include">
        </childnode>
        <childnode refid="16451" relation="include">
        </childnode>
        <childnode refid="16452" relation="include">
        </childnode>
        <childnode refid="16453" relation="include">
        </childnode>
        <childnode refid="16454" relation="include">
        </childnode>
        <childnode refid="16455" relation="include">
        </childnode>
        <childnode refid="16456" relation="include">
        </childnode>
        <childnode refid="16457" relation="include">
        </childnode>
        <childnode refid="16458" relation="include">
        </childnode>
        <childnode refid="16459" relation="include">
        </childnode>
      </node>
      <node id="16333">
        <label>branch_inference.h</label>
        <link refid="branch__inference_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16356">
        <label>cons_pseudoboolean.h</label>
        <link refid="cons__pseudoboolean_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16394">
        <label>heur_shifting.h</label>
        <link refid="heur__shifting_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16385">
        <label>heur_oneopt.h</label>
        <link refid="heur__oneopt_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16360">
        <label>cons_sos1.h</label>
        <link refid="cons__sos1_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16410">
        <label>nodesel_restartdfs.h</label>
        <link refid="nodesel__restartdfs_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16449">
        <label>sepa_closecuts.h</label>
        <link refid="sepa__closecuts_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16340">
        <label>cons_and.h</label>
        <link refid="cons__and_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16441">
        <label>reader_pip.h</label>
        <link refid="reader__pip_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16392">
        <label>heur_rounding.h</label>
        <link refid="heur__rounding_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16390">
        <label>heur_rins.h</label>
        <link refid="heur__rins_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16330">
        <label>scipdefplugins.h</label>
        <link refid="scipdefplugins_8h"/>
      </node>
      <node id="16366">
        <label>disp_default.h</label>
        <link refid="disp__default_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16371">
        <label>heur_dins.h</label>
        <link refid="heur__dins_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16403">
        <label>heur_zeroobj.h</label>
        <link refid="heur__zeroobj_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16365">
        <label>dialog_default.h</label>
        <link refid="dialog__default_8h"/>
      </node>
      <node id="16332">
        <label>branch_fullstrong.h</label>
        <link refid="branch__fullstrong_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16376">
        <label>heur_guideddiving.h</label>
        <link refid="heur__guideddiving_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16438">
        <label>reader_opb.h</label>
        <link refid="reader__opb_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16354">
        <label>cons_or.h</label>
        <link refid="cons__or_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16417">
        <label>presol_gateextraction.h</label>
        <link refid="presol__gateextraction_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16337">
        <label>branch_random.h</label>
        <link refid="branch__random_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16375">
        <label>heur_fracdiving.h</label>
        <link refid="heur__fracdiving_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16346">
        <label>cons_disjunction.h</label>
        <link refid="cons__disjunction_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16429">
        <label>reader_bnd.h</label>
        <link refid="reader__bnd_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16338">
        <label>branch_relpscost.h</label>
        <link refid="branch__relpscost_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16378">
        <label>heur_intshifting.h</label>
        <link refid="heur__intshifting_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16363">
        <label>cons_varbound.h</label>
        <link refid="cons__varbound_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16411">
        <label>nodesel_uct.h</label>
        <link refid="nodesel__uct_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16345">
        <label>cons_cumulative.h</label>
        <link refid="cons__cumulative_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16347">
        <label>cons_indicator.h</label>
        <link refid="cons__indicator_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16426">
        <label>prop_redcost.h</label>
        <link refid="prop__redcost_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16373">
        <label>heur_feaspump.h</label>
        <link refid="heur__feaspump_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16446">
        <label>reader_zpl.h</label>
        <link refid="reader__zpl_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16447">
        <label>sepa_cgmip.h</label>
        <link refid="sepa__cgmip_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16387">
        <label>heur_pscostdiving.h</label>
        <link refid="heur__pscostdiving_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16433">
        <label>reader_fix.h</label>
        <link refid="reader__fix_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16361">
        <label>cons_sos2.h</label>
        <link refid="cons__sos2_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16397">
        <label>heur_trivial.h</label>
        <link refid="heur__trivial_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16350">
        <label>cons_linear.h</label>
        <link refid="cons__linear_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16382">
        <label>heur_nlpdiving.h</label>
        <link refid="heur__nlpdiving_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16348">
        <label>cons_integral.h</label>
        <link refid="cons__integral_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16450">
        <label>sepa_cmir.h</label>
        <link refid="sepa__cmir_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16389">
        <label>heur_rens.h</label>
        <link refid="heur__rens_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16372">
        <label>heur_dualval.h</label>
        <link refid="heur__dualval_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16391">
        <label>heur_rootsoldiving.h</label>
        <link refid="heur__rootsoldiving_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16424">
        <label>prop_probing.h</label>
        <link refid="prop__probing_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16355">
        <label>cons_orbitope.h</label>
        <link refid="cons__orbitope_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16344">
        <label>cons_countsols.h</label>
        <link refid="cons__countsols_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16457">
        <label>sepa_rapidlearning.h</label>
        <link refid="sepa__rapidlearning_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16388">
        <label>heur_randrounding.h</label>
        <link refid="heur__randrounding_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16406">
        <label>nodesel_breadthfirst.h</label>
        <link refid="nodesel__breadthfirst_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16396">
        <label>heur_subnlp.h</label>
        <link refid="heur__subnlp_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16431">
        <label>reader_cip.h</label>
        <link refid="reader__cip_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16408">
        <label>nodesel_estimate.h</label>
        <link refid="nodesel__estimate_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16421">
        <label>prop_dualfix.h</label>
        <link refid="prop__dualfix_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16377">
        <label>heur_intdiving.h</label>
        <link refid="heur__intdiving_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16423">
        <label>prop_obbt.h</label>
        <link refid="prop__obbt_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16425">
        <label>prop_pseudoobj.h</label>
        <link refid="prop__pseudoobj_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16418">
        <label>presol_implics.h</label>
        <link refid="presol__implics_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16381">
        <label>heur_mutation.h</label>
        <link refid="heur__mutation_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16448">
        <label>sepa_clique.h</label>
        <link refid="sepa__clique_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16398">
        <label>heur_trysol.h</label>
        <link refid="heur__trysol_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16436">
        <label>reader_lp.h</label>
        <link refid="reader__lp_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16454">
        <label>sepa_intobj.h</label>
        <link refid="sepa__intobj_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16399">
        <label>heur_twoopt.h</label>
        <link refid="heur__twoopt_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16402">
        <label>heur_veclendiving.h</label>
        <link refid="heur__veclendiving_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16464">
        <label>type_nlpi.h</label>
        <link refid="type__nlpi_8h"/>
        <childnode refid="16357" relation="include">
        </childnode>
        <childnode refid="16359" relation="include">
        </childnode>
        <childnode refid="16327" relation="include">
        </childnode>
        <childnode refid="16328" relation="include">
        </childnode>
        <childnode refid="16465" relation="include">
        </childnode>
      </node>
      <node id="16339">
        <label>cons_abspower.h</label>
        <link refid="cons__abspower_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16358">
        <label>cons_setppc.h</label>
        <link refid="cons__setppc_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16386">
        <label>heur_proximity.h</label>
        <link refid="heur__proximity_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16452">
        <label>sepa_gomory.h</label>
        <link refid="sepa__gomory_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16349">
        <label>cons_knapsack.h</label>
        <link refid="cons__knapsack_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16427">
        <label>prop_rootredcost.h</label>
        <link refid="prop__rootredcost_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16409">
        <label>nodesel_hybridestim.h</label>
        <link refid="nodesel__hybridestim_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16351">
        <label>cons_linking.h</label>
        <link refid="cons__linking_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16329">
        <label>branch_allfullstrong.h</label>
        <link refid="branch__allfullstrong_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16444">
        <label>reader_sol.h</label>
        <link refid="reader__sol_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16413">
        <label>presol_components.h</label>
        <link refid="presol__components_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16460">
        <label>exprinterpret.h</label>
        <link refid="exprinterpret_8h"/>
        <childnode refid="16461" relation="include">
        </childnode>
        <childnode refid="16462" relation="include">
        </childnode>
      </node>
      <node id="16437">
        <label>reader_mps.h</label>
        <link refid="reader__mps_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16383">
        <label>heur_objpscostdiving.h</label>
        <link refid="heur__objpscostdiving_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16326">
        <label>type_expr.h</label>
        <link refid="type_expr.h"/>
        <childnode refid="16327" relation="include">
        </childnode>
        <childnode refid="16460" relation="include">
        </childnode>
        <childnode refid="16463" relation="include">
        </childnode>
        <childnode refid="16464" relation="include">
        </childnode>
      </node>
      <node id="16367">
        <label>heur_actconsdiving.h</label>
        <link refid="heur__actconsdiving_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16419">
        <label>presol_inttobinary.h</label>
        <link refid="presol__inttobinary_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16463">
        <label>pub_expr.h</label>
        <link refid="pub__expr_8h"/>
        <childnode refid="16328" relation="include">
        </childnode>
        <childnode refid="16461" relation="include">
        </childnode>
      </node>
      <node id="16428">
        <label>prop_vbounds.h</label>
        <link refid="prop__vbounds_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16327">
        <label>pub_nlp.h</label>
        <link refid="pub__nlp_8h"/>
        <childnode refid="16328" relation="include">
        </childnode>
      </node>
      <node id="16455">
        <label>sepa_mcf.h</label>
        <link refid="sepa__mcf_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16451">
        <label>sepa_flowcover.h</label>
        <link refid="sepa__flowcover_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16422">
        <label>prop_genvbounds.h</label>
        <link refid="prop__genvbounds_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16416">
        <label>presol_dualinfer.h</label>
        <link refid="presol__dualinfer_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16359">
        <label>cons_soc.h</label>
        <link refid="cons__soc_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16405">
        <label>nodesel_bfs.h</label>
        <link refid="nodesel__bfs_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16336">
        <label>branch_pscost.h</label>
        <link refid="branch__pscost_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16453">
        <label>sepa_impliedbounds.h</label>
        <link refid="sepa__impliedbounds_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16353">
        <label>cons_nonlinear.h</label>
        <link refid="cons__nonlinear_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16432">
        <label>reader_cnf.h</label>
        <link refid="reader__cnf_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16401">
        <label>heur_vbounds.h</label>
        <link refid="heur__vbounds_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16415">
        <label>presol_domcol.h</label>
        <link refid="presol__domcol_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16379">
        <label>heur_linesearchdiving.h</label>
        <link refid="heur__linesearchdiving_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16435">
        <label>reader_gms.h</label>
        <link refid="reader__gms_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16443">
        <label>reader_rlp.h</label>
        <link refid="reader__rlp_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16362">
        <label>cons_superindicator.h</label>
        <link refid="cons__superindicator_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16334">
        <label>branch_leastinf.h</label>
        <link refid="branch__leastinf_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16393">
        <label>heur_shiftandpropagate.h</label>
        <link refid="heur__shiftandpropagate_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16412">
        <label>presol_boundshift.h</label>
        <link refid="presol__boundshift_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16465">
        <label>nlpi_ipopt.h</label>
        <link refid="nlpi__ipopt_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16352">
        <label>cons_logicor.h</label>
        <link refid="cons__logicor_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16439">
        <label>reader_osil.h</label>
        <link refid="reader__osil_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16434">
        <label>reader_fzn.h</label>
        <link refid="reader__fzn_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16407">
        <label>nodesel_dfs.h</label>
        <link refid="nodesel__dfs_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16343">
        <label>cons_conjunction.h</label>
        <link refid="cons__conjunction_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16458">
        <label>sepa_strongcg.h</label>
        <link refid="sepa__strongcg_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16430">
        <label>reader_ccg.h</label>
        <link refid="reader__ccg_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16462">
        <label>exprinterpret_none.c</label>
        <link refid="exprinterpret__none_8c"/>
      </node>
      <node id="16420">
        <label>presol_trivial.h</label>
        <link refid="presol__trivial_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16374">
        <label>heur_fixandinfer.h</label>
        <link refid="heur__fixandinfer_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16357">
        <label>cons_quadratic.h</label>
        <link refid="cons__quadratic_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16331">
        <label>branch_cloud.h</label>
        <link refid="branch__cloud_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16456">
        <label>sepa_oddcycle.h</label>
        <link refid="sepa__oddcycle_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16461">
        <label>exprinterpret_cppad.cpp</label>
        <link refid="exprinterpret__cppad_8cpp"/>
      </node>
      <node id="16370">
        <label>heur_crossover.h</label>
        <link refid="heur__crossover_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16342">
        <label>cons_bounddisjunction.h</label>
        <link refid="cons__bounddisjunction_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16341">
        <label>cons_bivariate.h</label>
        <link refid="cons__bivariate_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16445">
        <label>reader_wbo.h</label>
        <link refid="reader__wbo_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16404">
        <label>heur_zirounding.h</label>
        <link refid="heur__zirounding_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16384">
        <label>heur_octane.h</label>
        <link refid="heur__octane_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
      <node id="16335">
        <label>branch_mostinf.h</label>
        <link refid="branch__mostinf_8h"/>
        <childnode refid="16330" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="user-defined">
      <header>Terminals (Leaves)</header>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Simple Operands</header>
      </sectiondef>
      <sectiondef kind="user-defined">
      <header>Complex Operands</header>
      </sectiondef>
      <sectiondef kind="define">
      <memberdef kind="define" id="type__expr_8h_1af2c49f6e823a4d26d3c442e5566285aa" prot="public" static="no">
        <name>SCIP_EXPR_DEGREEINFINITY</name>
        <initializer>65535</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>value that stands for an infinite degree of an expression (see SCIPexprGetMaxDegree) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_expr.h" line="111" column="9" bodyfile="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_expr.h" bodystart="111" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="type__expr_8h_1a93611c7f479b44c883236f3800925a7a" prot="public" static="no">
        <name>SCIP_DECL_EXPREVAL</name>
        <param><defname>x</defname></param>
        <initializer><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref> x (<ref refid="type__expr_8h_1a038a8105e30d3b01d3de192459058ada" kindref="member">SCIP_EXPROPDATA</ref> opdata, int nargs, <ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>* argvals, <ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>* varvals, <ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>* paramvals, <ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>* result)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>signature of an expression (pointwise) evaluation function The function should return nan, inf, or -inf in result if the function is undefined for the given arguments.</para><para><itemizedlist>
<listitem><para>opdata operand data</para></listitem><listitem><para>nargs number of arguments</para></listitem><listitem><para>argvals values of arguments</para></listitem><listitem><para>varvals values for variables</para></listitem><listitem><para>paramvals values for parameters</para></listitem><listitem><para>result buffer where to store result of evaluation </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_expr.h" line="123" column="9" bodyfile="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_expr.h" bodystart="123" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="type__expr_8h_1a6b1f1dcf09a8d1d5e2eb9151074d218e" prot="public" static="no">
        <name>SCIP_DECL_EXPRINTEVAL</name>
        <param><defname>x</defname></param>
        <initializer><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref> x (<ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> infinity, <ref refid="type__expr_8h_1a038a8105e30d3b01d3de192459058ada" kindref="member">SCIP_EXPROPDATA</ref> opdata, int nargs, SCIP_INTERVAL* argvals, SCIP_INTERVAL* varvals, <ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref>* paramvals, SCIP_INTERVAL* result)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>signature of an expression (interval) evaluation function The function should return an empty interval if the function is undefined for the given arguments.</para><para><itemizedlist>
<listitem><para>infinity value for infinity</para></listitem><listitem><para>opdata operand data</para></listitem><listitem><para>nargs number of arguments</para></listitem><listitem><para>argvals interval values of arguments</para></listitem><listitem><para>varvals interval values for variables</para></listitem><listitem><para>paramvals values for parameters</para></listitem><listitem><para>result buffer where to store result of evaluation </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_expr.h" line="136" column="9" bodyfile="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_expr.h" bodystart="136" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="type__expr_8h_1aab5b8da587c56a819f0d002efcd1c0e9" prot="public" static="no">
        <name>SCIP_DECL_EXPRCURV</name>
        <param><defname>x</defname></param>
        <initializer><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref> x (<ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref> infinity, <ref refid="type__expr_8h_1a038a8105e30d3b01d3de192459058ada" kindref="member">SCIP_EXPROPDATA</ref> opdata, int nargs, SCIP_INTERVAL* argbounds, <ref refid="type__expr_8h_1a8b75f2d81278489853cf94478dedbd44" kindref="member">SCIP_EXPRCURV</ref>* argcurv, <ref refid="type__expr_8h_1a8b75f2d81278489853cf94478dedbd44" kindref="member">SCIP_EXPRCURV</ref>* result)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>signature of a simple expression curvature check function</para><para><itemizedlist>
<listitem><para>infinity value for infinity</para></listitem><listitem><para>opdata operand data</para></listitem><listitem><para>nargs number of arguments</para></listitem><listitem><para>argbounds bounds on value of arguments</para></listitem><listitem><para>argcurv curvature of arguments</para></listitem><listitem><para>paramvals values for parameters</para></listitem><listitem><para>result buffer where to store result of curvature check </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_expr.h" line="148" column="9" bodyfile="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_expr.h" bodystart="148" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="type__expr_8h_1ae93cf41953975fc9fd280a05c789b0b1" prot="public" static="no">
        <name>SCIP_DECL_EXPRCOPYDATA</name>
        <param><defname>x</defname></param>
        <initializer><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref> x (BMS_BLKMEM* blkmem, int nchildren, <ref refid="type__expr_8h_1a038a8105e30d3b01d3de192459058ada" kindref="member">SCIP_EXPROPDATA</ref> opdatasource, <ref refid="type__expr_8h_1a038a8105e30d3b01d3de192459058ada" kindref="member">SCIP_EXPROPDATA</ref>* opdatatarget)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>signature of a expression data copy function</para><para><itemizedlist>
<listitem><para>blkmem block memory</para></listitem><listitem><para>nchildren number of children in expression</para></listitem><listitem><para>opdatasource source expression data</para></listitem><listitem><para>opdatatarget pointer to target expression data </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_expr.h" line="157" column="9" bodyfile="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_expr.h" bodystart="157" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="type__expr_8h_1a4ebeb60846b3ce6c31fd77fd047db97d" prot="public" static="no">
        <name>SCIP_DECL_EXPRFREEDATA</name>
        <param><defname>x</defname></param>
        <initializer>void x (BMS_BLKMEM* blkmem, int nchildren, <ref refid="type__expr_8h_1a038a8105e30d3b01d3de192459058ada" kindref="member">SCIP_EXPROPDATA</ref> opdata)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>signature of a expression data free function</para><para><itemizedlist>
<listitem><para>blkmem block memory</para></listitem><listitem><para>nchildren number of children in expression</para></listitem><listitem><para>opdata expression data to free </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_expr.h" line="165" column="9" bodyfile="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_expr.h" bodystart="165" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="type__expr_8h_1aea91b21a170e9a98455730394224141f" prot="public" static="no">
        <name>SCIP_DECL_EXPRGRAPHVARADDED</name>
        <param><defname>x</defname></param>
        <initializer><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref> x (<ref refid="type__expr_8h_1a8481fdd0b99c28964cf0d180e8109b24" kindref="member">SCIP_EXPRGRAPH</ref>* exprgraph, void* userdata, void* var, <ref refid="type__expr_8h_1aaa741e59aa855d6864a43b651ce35ad9" kindref="member">SCIP_EXPRGRAPHNODE</ref>* varnode)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>callback method of expression graph invoked when a new variable has been added to the graph</para><para>input:<itemizedlist>
<listitem><para>exprgraph expression graph</para></listitem><listitem><para>userdata a pointer to user data</para></listitem><listitem><para>var variable that has been added to expression graph</para></listitem><listitem><para>varnode new expression graph node for a variable </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_expr.h" line="178" column="9" bodyfile="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_expr.h" bodystart="178" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="type__expr_8h_1a3c698d26fa6116677701e6e8d1ef5c44" prot="public" static="no">
        <name>SCIP_DECL_EXPRGRAPHVARREMOVE</name>
        <param><defname>x</defname></param>
        <initializer><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref> x (<ref refid="type__expr_8h_1a8481fdd0b99c28964cf0d180e8109b24" kindref="member">SCIP_EXPRGRAPH</ref>* exprgraph, void* userdata, void* var, <ref refid="type__expr_8h_1aaa741e59aa855d6864a43b651ce35ad9" kindref="member">SCIP_EXPRGRAPHNODE</ref>* varnode)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>callback method of expression graph invoked when a variable is to be removed from the graph</para><para>input:<itemizedlist>
<listitem><para>exprgraph expression graph</para></listitem><listitem><para>userdata a pointer to user data</para></listitem><listitem><para>var variable that will be removed from the expression graph</para></listitem><listitem><para>varnode expression graph node corresponding to variable </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_expr.h" line="188" column="9" bodyfile="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_expr.h" bodystart="188" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="type__expr_8h_1aca8f77ed737c251478213db3dfcc8f98" prot="public" static="no">
        <name>SCIP_DECL_EXPRGRAPHVARCHGIDX</name>
        <param><defname>x</defname></param>
        <initializer><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref> x (<ref refid="type__expr_8h_1a8481fdd0b99c28964cf0d180e8109b24" kindref="member">SCIP_EXPRGRAPH</ref>* exprgraph, void* userdata, void* var, <ref refid="type__expr_8h_1aaa741e59aa855d6864a43b651ce35ad9" kindref="member">SCIP_EXPRGRAPHNODE</ref>* varnode, int oldidx, int newidx)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>callback method of expression graph invoked when a variable changes its index</para><para>input:<itemizedlist>
<listitem><para>exprgraph expression graph</para></listitem><listitem><para>userdata a pointer to user data</para></listitem><listitem><para>var variable which will change its index</para></listitem><listitem><para>varnode expression graph node corresponding to variable</para></listitem><listitem><para>oldidx current index of variable</para></listitem><listitem><para>newidx new index the variable will have </para></listitem></itemizedlist>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_expr.h" line="200" column="9" bodyfile="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_expr.h" bodystart="200" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="type__expr_8h_1abb09717b5be447c1a38c2d5334d9e269" prot="public" static="no">
        <name>SCIP_EXPRBOUNDSTATUS_VALID</name>
        <initializer>0x0</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>bounds are valid, i.e., conform with bounds of children </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_expr.h" line="206" column="9" bodyfile="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_expr.h" bodystart="206" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="type__expr_8h_1a4fe0044e567e4abb408a6d1c646e2e1a" prot="public" static="no">
        <name>SCIP_EXPRBOUNDSTATUS_CHILDTIGHTENED</name>
        <initializer>0x1</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>a child bounds were tightened since last calculation </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_expr.h" line="207" column="9" bodyfile="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_expr.h" bodystart="207" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="type__expr_8h_1aed22623e9ad049f8ab539e770b85f006" prot="public" static="no">
        <name>SCIP_EXPRBOUNDSTATUS_CHILDRELAXED</name>
        <initializer>0x2</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>bounds are not valid and need to be recomputed, because the bounds in a child were relaxed </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_expr.h" line="208" column="9" bodyfile="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_expr.h" bodystart="208" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="type__expr_8h_1a51ab826c666e8ab6d5c2d0224b69101d" prot="public" static="no">
        <name>SCIP_EXPRBOUNDSTATUS_TIGHTENEDBYPARENT</name>
        <initializer>0x4</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>bounds have been tightened by reverse propagation in a parent, they are valid as long as there has been no relaxation of bounds somewhere in the graph </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_expr.h" line="209" column="9" bodyfile="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_expr.h" bodystart="209" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="type__expr_8h_1a0a4b25351e8227c24c2a1654ae8f5d65" prot="public" static="no">
        <name>SCIP_EXPRBOUNDSTATUS_TIGHTENEDBYPARENTRECENT</name>
        <initializer>(0x8 | SCIP_EXPRBOUNDSTATUS_TIGHTENEDBYPARENT)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>bounds have recently been tightened by reverse propagation in a parent, this tightening has not been propagated further down yet </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_expr.h" line="210" column="9" bodyfile="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_expr.h" bodystart="210" bodyend="-1"/>
      </memberdef>
      <memberdef kind="define" id="type__expr_8h_1a378c60542bb1ae0a2bd70dfbed7b13ec" prot="public" static="no">
        <name>SCIP_EXPRBOUNDSTATUS_TIGHTENEDBYPARENTFORCE</name>
        <initializer>(0x10 | SCIP_EXPRBOUNDSTATUS_TIGHTENEDBYPARENTRECENT)</initializer>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>bounds may have recently been tightened by reverse propagation in a parent, in any case we want to propagate bounds further down </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_expr.h" line="211" column="9" bodyfile="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_expr.h" bodystart="211" bodyend="-1"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="enum">
      <memberdef kind="enum" id="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7" prot="public" static="no">
        <name>SCIP_ExprOp</name>
        <enumvalue id="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7a08c0b7f855a1a9a23be28cf84f0877f3" prot="public">
          <name>SCIP_EXPR_VARIDX</name>
          <initializer>=  1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>variable given by index (stored in data.idx) </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7a9441632adf0da0060161635f50e33a0e" prot="public">
          <name>SCIP_EXPR_CONST</name>
          <initializer>=  2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>constant (value stored in data.dbl) </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7a0e707f276bb20287cd14910fc288b9ed" prot="public">
          <name>SCIP_EXPR_PARAM</name>
          <initializer>=  3</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>parameter = a constant that can be modified (should not be simplified away) </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7a990b7f90a7293e5827073b45523325cf" prot="public">
          <name>SCIP_EXPR_PLUS</name>
          <initializer>=  8</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>addition (2 operands) </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7a5ca0f1ab17e01867adc90b774585c08a" prot="public">
          <name>SCIP_EXPR_MINUS</name>
          <initializer>=  9</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>substraction (2 operands) </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7a4d8bc475f5a122e94e0635f585dcba1e" prot="public">
          <name>SCIP_EXPR_MUL</name>
          <initializer>= 10</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>multiplication (2 operands) </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7a01a211c3350555b45adc0a945d852d66" prot="public">
          <name>SCIP_EXPR_DIV</name>
          <initializer>= 11</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>division (2 operands) </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7ae7a9db96f656ea49c0a7beb2baa3c4ed" prot="public">
          <name>SCIP_EXPR_SQUARE</name>
          <initializer>= 12</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>square (1 operand) </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7a34ab5e73e2b4e5259498df7e05542680" prot="public">
          <name>SCIP_EXPR_SQRT</name>
          <initializer>= 13</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>square root (1 operand) </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7aa45dd1610fb2677d120070eb0442f09d" prot="public">
          <name>SCIP_EXPR_REALPOWER</name>
          <initializer>= 14</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>power with real exponent (1 operand!, assumed to be nonnegative, exponent is stored in expression data) </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7ad5481685f6fabfc42b325f2a01a84de8" prot="public">
          <name>SCIP_EXPR_INTPOWER</name>
          <initializer>= 15</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>power with integer exponent (1 operand!, exponent stored in expression data) </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7a6e0f90d79105cdcf80561ea9a00778f4" prot="public">
          <name>SCIP_EXPR_SIGNPOWER</name>
          <initializer>= 16</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>signed power (sign(x)|x|^a, 1 operand!, exponent is stored in expression data) </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7aaed3aafb02368338b8af40a40813e8ff" prot="public">
          <name>SCIP_EXPR_EXP</name>
          <initializer>= 17</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>exponential (e^x, 1 operand) </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7a9bdeca11a6e94e4d286a548b6f0143a7" prot="public">
          <name>SCIP_EXPR_LOG</name>
          <initializer>= 18</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>natural logarithm (ln(x), 1 operand) </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7a2f9acf2ad39b3d2f9aea629507c2d577" prot="public">
          <name>SCIP_EXPR_SIN</name>
          <initializer>= 19</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>sinus (1 operand) </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7adc0bbc2202eb4b0151270fe86c624fdb" prot="public">
          <name>SCIP_EXPR_COS</name>
          <initializer>= 20</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>cosinus (1 operand) </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7a69d04d8993454e7df3f0c4d41dc87be2" prot="public">
          <name>SCIP_EXPR_TAN</name>
          <initializer>= 21</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>tangent (1 operand) </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7a116cfaa8fb90a0263d60f99b8ce25fac" prot="public">
          <name>SCIP_EXPR_MIN</name>
          <initializer>= 24</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>gaussian error function (1 operand) imaginary part of gaussian error function (1 operand) minimum (2 operands) </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7aef4c071e227bd1c849b70fc57efe1c7b" prot="public">
          <name>SCIP_EXPR_MAX</name>
          <initializer>= 25</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>maximum (2 operands) </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7a8b861f16bee429f870d529cc7098fc0c" prot="public">
          <name>SCIP_EXPR_ABS</name>
          <initializer>= 26</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>absolute value (1 operand) </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7aa70a4ab0af7ba2932f985c46dc6f0afb" prot="public">
          <name>SCIP_EXPR_SIGN</name>
          <initializer>= 27</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>sign of value (1 operand) </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7af49c66890f39ac93534204930e41926b" prot="public">
          <name>SCIP_EXPR_SUM</name>
          <initializer>= 64</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>summation sum_{i=1}^n op_i (n operands) </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7acf10c3cf355f0342155ea3b4b229e605" prot="public">
          <name>SCIP_EXPR_PRODUCT</name>
          <initializer>= 65</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>product prod_{i=1}^n op_i (n operands) </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7a962e2e2ff2373911fb0bc45c1e1907b3" prot="public">
          <name>SCIP_EXPR_LINEAR</name>
          <initializer>= 66</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>linear term sum_{i=1}^n a_i op_i (n operands) </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7aa776829b397361337bd88514aea2461f" prot="public">
          <name>SCIP_EXPR_QUADRATIC</name>
          <initializer>= 67</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>quadratic term sum_{i,j=1}^n a_{i,j} op_i op_j (n operands) </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7acb1c26bcb406e864a223ba2833736475" prot="public">
          <name>SCIP_EXPR_POLYNOMIAL</name>
          <initializer>= 68</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>polynomial term sum_{I} a_{I}ops^I (I a multiindex, n operands) </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7a730461fc3ebac6558f4e527dc1978a4c" prot="public">
          <name>SCIP_EXPR_LAST</name>
          <initializer>= 69</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>no expression, used for counting reasons </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Operators of expressions. </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_expr.h" line="34" column="1" bodyfile="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_expr.h" bodystart="34" bodyend="77"/>
      </memberdef>
      <memberdef kind="enum" id="type__expr_8h_1a8ee9c6b6f34a52149c9584f558869d4f" prot="public" static="no">
        <name>SCIP_ExprCurv</name>
        <enumvalue id="type__expr_8h_1a8ee9c6b6f34a52149c9584f558869d4fa291d267c5d669b231bc41c5291c4d56c" prot="public">
          <name>SCIP_EXPRCURV_UNKNOWN</name>
          <initializer>= 0</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>unknown curvature (or indefinite) </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="type__expr_8h_1a8ee9c6b6f34a52149c9584f558869d4fa02ae16d5b68c44b90a21d6fd7ff4c29b" prot="public">
          <name>SCIP_EXPRCURV_CONVEX</name>
          <initializer>= 1</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>convex </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="type__expr_8h_1a8ee9c6b6f34a52149c9584f558869d4fa7bafd666a586e922ebb87a11944187cb" prot="public">
          <name>SCIP_EXPRCURV_CONCAVE</name>
          <initializer>= 2</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>concave </para>          </detaileddescription>
        </enumvalue>
        <enumvalue id="type__expr_8h_1a8ee9c6b6f34a52149c9584f558869d4fa0f2db29c3e831aaa368a1183afb685f5" prot="public">
          <name>SCIP_EXPRCURV_LINEAR</name>
          <initializer>= SCIP_EXPRCURV_CONVEX | SCIP_EXPRCURV_CONCAVE</initializer>
          <briefdescription>
          </briefdescription>
          <detaileddescription>
<para>linear = convex and concave </para>          </detaileddescription>
        </enumvalue>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>Curvature types </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_expr.h" line="81" column="1" bodyfile="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_expr.h" bodystart="80" bodyend="86"/>
      </memberdef>
      </sectiondef>
      <sectiondef kind="typedef">
      <memberdef kind="typedef" id="type__expr_8h_1a30d37294b55f3180495c3a5efdce32c1" prot="public" static="no">
        <type>enum <ref refid="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7" kindref="member">SCIP_ExprOp</ref></type>
        <definition>typedef enum SCIP_ExprOp SCIP_EXPROP</definition>
        <argsstring></argsstring>
        <name>SCIP_EXPROP</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>expression operand </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_expr.h" line="1612" column="1" bodyfile="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_expr.h" bodystart="88" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="type__expr_8h_1a038a8105e30d3b01d3de192459058ada" prot="public" static="no">
        <type>union SCIP_ExprOpData</type>
        <definition>typedef union SCIP_ExprOpData SCIP_EXPROPDATA</definition>
        <argsstring></argsstring>
        <name>SCIP_EXPROPDATA</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>expression operand data </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_expr.h" line="1612" column="1" bodyfile="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_expr.h" bodystart="89" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="type__expr_8h_1a03f8f1fae1c932ff918396171929c352" prot="public" static="no">
        <type>struct SCIP_Expr</type>
        <definition>typedef struct SCIP_Expr SCIP_EXPR</definition>
        <argsstring></argsstring>
        <name>SCIP_EXPR</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>expression </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_expr.h" line="1612" column="1" bodyfile="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_expr.h" bodystart="90" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="type__expr_8h_1a4ae8525548d76cb766394131bb405cf2" prot="public" static="no">
        <type>struct SCIP_ExprTree</type>
        <definition>typedef struct SCIP_ExprTree SCIP_EXPRTREE</definition>
        <argsstring></argsstring>
        <name>SCIP_EXPRTREE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>expression tree </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_expr.h" line="1612" column="1" bodyfile="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_expr.h" bodystart="91" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="type__expr_8h_1a8b75f2d81278489853cf94478dedbd44" prot="public" static="no">
        <type>enum <ref refid="type__expr_8h_1a8ee9c6b6f34a52149c9584f558869d4f" kindref="member">SCIP_ExprCurv</ref></type>
        <definition>typedef enum SCIP_ExprCurv SCIP_EXPRCURV</definition>
        <argsstring></argsstring>
        <name>SCIP_EXPRCURV</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>curvature types </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_expr.h" line="1612" column="1" bodyfile="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_expr.h" bodystart="92" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="type__expr_8h_1abaf258f420336359952d83563ed641f8" prot="public" static="no">
        <type>struct SCIP_QuadElement</type>
        <definition>typedef struct SCIP_QuadElement SCIP_QUADELEM</definition>
        <argsstring></argsstring>
        <name>SCIP_QUADELEM</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>element of a quadratic term </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_expr.h" line="1612" column="1" bodyfile="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_expr.h" bodystart="105" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="type__expr_8h_1ad09492fdcd7cfcce5121c98c5b01cbb0" prot="public" static="no">
        <type>struct SCIP_ExprData_Quadratic</type>
        <definition>typedef struct SCIP_ExprData_Quadratic SCIP_EXPRDATA_QUADRATIC</definition>
        <argsstring></argsstring>
        <name>SCIP_EXPRDATA_QUADRATIC</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>the data of a quadratic expression (SCIP_EXPR_QUADRATIC) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_expr.h" line="1612" column="1" bodyfile="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_expr.h" bodystart="106" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="type__expr_8h_1a83c46530b886f67d22c6f991f07b3aaa" prot="public" static="no">
        <type>struct SCIP_ExprData_Monomial</type>
        <definition>typedef struct SCIP_ExprData_Monomial SCIP_EXPRDATA_MONOMIAL</definition>
        <argsstring></argsstring>
        <name>SCIP_EXPRDATA_MONOMIAL</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>a monomial as part of the data in a polynomial expression </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_expr.h" line="1612" column="1" bodyfile="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_expr.h" bodystart="108" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="type__expr_8h_1acf517d040af99c08ca7ce3d85700b57d" prot="public" static="no">
        <type>struct SCIP_ExprData_Polynomial</type>
        <definition>typedef struct SCIP_ExprData_Polynomial SCIP_EXPRDATA_POLYNOMIAL</definition>
        <argsstring></argsstring>
        <name>SCIP_EXPRDATA_POLYNOMIAL</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>the data of a polynomial expression (SCIP_EXPR_POLYNOMIAL) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_expr.h" line="1612" column="1" bodyfile="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_expr.h" bodystart="109" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="type__expr_8h_1aaa741e59aa855d6864a43b651ce35ad9" prot="public" static="no">
        <type>struct SCIP_ExprGraphNode</type>
        <definition>typedef struct SCIP_ExprGraphNode SCIP_EXPRGRAPHNODE</definition>
        <argsstring></argsstring>
        <name>SCIP_EXPRGRAPHNODE</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>node in an expression graph </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_expr.h" line="1612" column="1" bodyfile="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_expr.h" bodystart="167" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="type__expr_8h_1a8481fdd0b99c28964cf0d180e8109b24" prot="public" static="no">
        <type>struct SCIP_ExprGraph</type>
        <definition>typedef struct SCIP_ExprGraph SCIP_EXPRGRAPH</definition>
        <argsstring></argsstring>
        <name>SCIP_EXPRGRAPH</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>an expression graph (DAG) </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_expr.h" line="1612" column="1" bodyfile="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_expr.h" bodystart="168" bodyend="-1"/>
      </memberdef>
      <memberdef kind="typedef" id="type__expr_8h_1a38f44189781b458b128b5885b7b91903" prot="public" static="no">
        <type>char</type>
        <definition>typedef char SCIP_EXPRBOUNDSTATUS</definition>
        <argsstring></argsstring>
        <name>SCIP_EXPRBOUNDSTATUS</name>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>bitflags that indicate the status of bounds stored in a node of an expression graph </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_expr.h" line="213" column="1" bodyfile="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_expr.h" bodystart="213" bodyend="-1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>type definitions for expressions and expression trees </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Stefan Vigerske </para></simplesect>
<simplesect kind="author"><para>Thorsten Gellermann </para></simplesect>
</para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>program<sp/>and<sp/>library<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SCIP<sp/>---<sp/>Solving<sp/>Constraint<sp/>Integer<sp/>Programs<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>Copyright<sp/>(C)<sp/>2002-2014<sp/>Konrad-Zuse-Zentrum<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fuer<sp/>Informationstechnik<sp/>Berlin<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>SCIP<sp/>is<sp/>distributed<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>ZIB<sp/>Academic<sp/>License.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>ZIB<sp/>Academic<sp/>License<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>along<sp/>with<sp/>SCIP;<sp/>see<sp/>the<sp/>file<sp/>COPYING.<sp/>If<sp/>not<sp/>email<sp/>to<sp/>scip@zib.de.<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="16"><highlight class="comment">/**@file<sp/><sp/><sp/>type_expr.h</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>type<sp/>definitions<sp/>for<sp/>expressions<sp/>and<sp/>expression<sp/>trees</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>@ingroup<sp/>TYPEDEFINITIONS</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>@author<sp/>Stefan<sp/>Vigerske</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>@author<sp/>Thorsten<sp/>Gellermann</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight></codeline>
<codeline lineno="23"><highlight class="normal"></highlight><highlight class="comment">/*---+----1----+----2----+----3----+----4----+----5----+----6----+----7----+----8----+----9----+----0----+----1----+----2*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="24"><highlight class="normal"></highlight></codeline>
<codeline lineno="25"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__SCIP_TYPE_EXPRESSION_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="26"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__SCIP_TYPE_EXPRESSION_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="27"><highlight class="normal"></highlight></codeline>
<codeline lineno="28"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="32"><highlight class="comment">/**<sp/>Operators<sp/>of<sp/>expressions.</highlight></codeline>
<codeline lineno="33"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34" refid="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7" kindref="member">SCIP_ExprOp</ref><sp/>{</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="35"><highlight class="comment"><sp/><sp/><sp/>/**@name<sp/>Terminals<sp/>(Leaves)<sp/>*/</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="36"><highlight class="comment"><sp/><sp/><sp/>/**@{<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37" refid="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7a08c0b7f855a1a9a23be28cf84f0877f3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7a08c0b7f855a1a9a23be28cf84f0877f3" kindref="member">SCIP_EXPR_VARIDX</ref><sp/><sp/><sp/><sp/>=<sp/><sp/>1,<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>variable<sp/>given<sp/>by<sp/>index<sp/>(stored<sp/>in<sp/>data.idx)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="38" refid="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7a9441632adf0da0060161635f50e33a0e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7a9441632adf0da0060161635f50e33a0e" kindref="member">SCIP_EXPR_CONST</ref><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/>2,<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>constant<sp/>(value<sp/>stored<sp/>in<sp/>data.dbl)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39" refid="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7a0e707f276bb20287cd14910fc288b9ed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7a0e707f276bb20287cd14910fc288b9ed" kindref="member">SCIP_EXPR_PARAM</ref><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/>3,<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>parameter<sp/>=<sp/>a<sp/>constant<sp/>that<sp/>can<sp/>be<sp/>modified<sp/>(should<sp/>not<sp/>be<sp/>simplified<sp/>away)<sp/>*/</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="40"><highlight class="comment"><sp/><sp/><sp/>/**@}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="42"><highlight class="comment"><sp/><sp/><sp/>/**@name<sp/>Simple<sp/>Operands<sp/>*/</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="43"><highlight class="comment"><sp/><sp/><sp/>/**@{<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="44" refid="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7a990b7f90a7293e5827073b45523325cf" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7a990b7f90a7293e5827073b45523325cf" kindref="member">SCIP_EXPR_PLUS</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/>8,<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>addition<sp/>(2<sp/>operands)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="45" refid="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7a5ca0f1ab17e01867adc90b774585c08a" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7a5ca0f1ab17e01867adc90b774585c08a" kindref="member">SCIP_EXPR_MINUS</ref><sp/><sp/><sp/><sp/><sp/>=<sp/><sp/>9,<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>substraction<sp/>(2<sp/>operands)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="46" refid="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7a4d8bc475f5a122e94e0635f585dcba1e" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7a4d8bc475f5a122e94e0635f585dcba1e" kindref="member">SCIP_EXPR_MUL</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>10,<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>multiplication<sp/>(2<sp/>operands)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47" refid="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7a01a211c3350555b45adc0a945d852d66" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7a01a211c3350555b45adc0a945d852d66" kindref="member">SCIP_EXPR_DIV</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>11,<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>division<sp/>(2<sp/>operands)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="48" refid="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7ae7a9db96f656ea49c0a7beb2baa3c4ed" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7ae7a9db96f656ea49c0a7beb2baa3c4ed" kindref="member">SCIP_EXPR_SQUARE</ref><sp/><sp/><sp/><sp/>=<sp/>12,<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>square<sp/>(1<sp/>operand)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49" refid="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7a34ab5e73e2b4e5259498df7e05542680" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7a34ab5e73e2b4e5259498df7e05542680" kindref="member">SCIP_EXPR_SQRT</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>13,<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>square<sp/>root<sp/>(1<sp/>operand)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50" refid="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7aa45dd1610fb2677d120070eb0442f09d" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7aa45dd1610fb2677d120070eb0442f09d" kindref="member">SCIP_EXPR_REALPOWER</ref><sp/>=<sp/>14,<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>power<sp/>with<sp/>real<sp/>exponent<sp/>(1<sp/>operand!,<sp/>assumed<sp/>to<sp/>be<sp/>nonnegative,<sp/>exponent<sp/>is<sp/>stored<sp/>in<sp/>expression<sp/>data)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="51" refid="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7ad5481685f6fabfc42b325f2a01a84de8" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7ad5481685f6fabfc42b325f2a01a84de8" kindref="member">SCIP_EXPR_INTPOWER</ref><sp/><sp/>=<sp/>15,<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>power<sp/>with<sp/>integer<sp/>exponent<sp/>(1<sp/>operand!,<sp/>exponent<sp/>stored<sp/>in<sp/>expression<sp/>data)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52" refid="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7a6e0f90d79105cdcf80561ea9a00778f4" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7a6e0f90d79105cdcf80561ea9a00778f4" kindref="member">SCIP_EXPR_SIGNPOWER</ref><sp/>=<sp/>16,<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>signed<sp/>power<sp/>(sign(x)|x|^a,<sp/>1<sp/>operand!,<sp/>exponent<sp/>is<sp/>stored<sp/>in<sp/>expression<sp/>data)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="53" refid="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7aaed3aafb02368338b8af40a40813e8ff" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7aaed3aafb02368338b8af40a40813e8ff" kindref="member">SCIP_EXPR_EXP</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>17,<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>exponential<sp/>(e^x,<sp/>1<sp/>operand)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="54" refid="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7a9bdeca11a6e94e4d286a548b6f0143a7" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7a9bdeca11a6e94e4d286a548b6f0143a7" kindref="member">SCIP_EXPR_LOG</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>18,<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>natural<sp/>logarithm<sp/>(ln(x),<sp/>1<sp/>operand)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="55" refid="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7a2f9acf2ad39b3d2f9aea629507c2d577" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7a2f9acf2ad39b3d2f9aea629507c2d577" kindref="member">SCIP_EXPR_SIN</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>19,<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>sinus<sp/>(1<sp/>operand)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="56" refid="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7adc0bbc2202eb4b0151270fe86c624fdb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7adc0bbc2202eb4b0151270fe86c624fdb" kindref="member">SCIP_EXPR_COS</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>20,<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>cosinus<sp/>(1<sp/>operand)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="57" refid="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7a69d04d8993454e7df3f0c4d41dc87be2" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7a69d04d8993454e7df3f0c4d41dc87be2" kindref="member">SCIP_EXPR_TAN</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>21,<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>tangent<sp/>(1<sp/>operand)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>SCIP_EXPR_ERF<sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>22,<sp/>*/</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>gaussian<sp/>error<sp/>function<sp/>(1<sp/>operand)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="comment">/*<sp/>SCIP_EXPR_ERFI<sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>23,<sp/>*/</highlight><highlight class="normal"><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>imaginary<sp/>part<sp/>of<sp/>gaussian<sp/>error<sp/>function<sp/>(1<sp/>operand)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="60" refid="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7a116cfaa8fb90a0263d60f99b8ce25fac" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7a116cfaa8fb90a0263d60f99b8ce25fac" kindref="member">SCIP_EXPR_MIN</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>24,<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>minimum<sp/>(2<sp/>operands)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61" refid="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7aef4c071e227bd1c849b70fc57efe1c7b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7aef4c071e227bd1c849b70fc57efe1c7b" kindref="member">SCIP_EXPR_MAX</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>25,<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>maximum<sp/>(2<sp/>operands)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62" refid="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7a8b861f16bee429f870d529cc7098fc0c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7a8b861f16bee429f870d529cc7098fc0c" kindref="member">SCIP_EXPR_ABS</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>26,<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>absolute<sp/>value<sp/>(1<sp/>operand)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63" refid="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7aa70a4ab0af7ba2932f985c46dc6f0afb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7aa70a4ab0af7ba2932f985c46dc6f0afb" kindref="member">SCIP_EXPR_SIGN</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>27,<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>sign<sp/>of<sp/>value<sp/>(1<sp/>operand)<sp/>*/</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="64"><highlight class="comment"><sp/><sp/><sp/>/**@}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/><sp/><sp/>/**@name<sp/>Complex<sp/>Operands</highlight></codeline>
<codeline lineno="67"><highlight class="comment"><sp/><sp/><sp/><sp/>*/</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/><sp/><sp/>/**@{<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69" refid="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7af49c66890f39ac93534204930e41926b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7af49c66890f39ac93534204930e41926b" kindref="member">SCIP_EXPR_SUM</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>64,<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>summation<sp/>sum_{i=1}^n<sp/>op_i<sp/>(n<sp/>operands)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="70" refid="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7acf10c3cf355f0342155ea3b4b229e605" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7acf10c3cf355f0342155ea3b4b229e605" kindref="member">SCIP_EXPR_PRODUCT</ref><sp/><sp/><sp/>=<sp/>65,<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>product<sp/>prod_{i=1}^n<sp/>op_i<sp/>(n<sp/>operands)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71" refid="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7a962e2e2ff2373911fb0bc45c1e1907b3" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7a962e2e2ff2373911fb0bc45c1e1907b3" kindref="member">SCIP_EXPR_LINEAR</ref><sp/><sp/><sp/><sp/>=<sp/>66,<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>linear<sp/>term<sp/>sum_{i=1}^n<sp/>a_i<sp/>op_i<sp/>(n<sp/>operands)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="72" refid="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7aa776829b397361337bd88514aea2461f" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7aa776829b397361337bd88514aea2461f" kindref="member">SCIP_EXPR_QUADRATIC</ref><sp/>=<sp/>67,<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>quadratic<sp/>term<sp/>sum_{i,j=1}^n<sp/>a_{i,j}<sp/>op_i<sp/>op_j<sp/>(n<sp/>operands)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73" refid="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7acb1c26bcb406e864a223ba2833736475" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7acb1c26bcb406e864a223ba2833736475" kindref="member">SCIP_EXPR_POLYNOMIAL</ref>=<sp/>68,<sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>polynomial<sp/>term<sp/>sum_{I}<sp/>a_{I}ops^I<sp/>(I<sp/>a<sp/>multiindex,<sp/>n<sp/>operands)<sp/>*/</highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/><sp/><sp/>/**@}<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"></highlight></codeline>
<codeline lineno="76" refid="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7a730461fc3ebac6558f4e527dc1978a4c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7a730461fc3ebac6558f4e527dc1978a4c" kindref="member">SCIP_EXPR_LAST</ref><sp/><sp/><sp/><sp/><sp/><sp/>=<sp/>69<sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>no<sp/>expression,<sp/>used<sp/>for<sp/>counting<sp/>reasons<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal">};</highlight></codeline>
<codeline lineno="78"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="79"><highlight class="comment">/**<sp/>Curvature<sp/>types<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80" refid="type__expr_8h_1a8ee9c6b6f34a52149c9584f558869d4f" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><ref refid="type__expr_8h_1a8ee9c6b6f34a52149c9584f558869d4f" kindref="member">SCIP_ExprCurv</ref></highlight></codeline>
<codeline lineno="81"><highlight class="normal">{</highlight></codeline>
<codeline lineno="82" refid="type__expr_8h_1a8ee9c6b6f34a52149c9584f558869d4fa291d267c5d669b231bc41c5291c4d56c" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__expr_8h_1a8ee9c6b6f34a52149c9584f558869d4fa291d267c5d669b231bc41c5291c4d56c" kindref="member">SCIP_EXPRCURV_UNKNOWN</ref><sp/><sp/><sp/><sp/>=<sp/>0,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>unknown<sp/>curvature<sp/>(or<sp/>indefinite)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="83" refid="type__expr_8h_1a8ee9c6b6f34a52149c9584f558869d4fa02ae16d5b68c44b90a21d6fd7ff4c29b" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__expr_8h_1a8ee9c6b6f34a52149c9584f558869d4fa02ae16d5b68c44b90a21d6fd7ff4c29b" kindref="member">SCIP_EXPRCURV_CONVEX</ref><sp/><sp/><sp/><sp/><sp/>=<sp/>1,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>convex<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="84" refid="type__expr_8h_1a8ee9c6b6f34a52149c9584f558869d4fa7bafd666a586e922ebb87a11944187cb" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__expr_8h_1a8ee9c6b6f34a52149c9584f558869d4fa7bafd666a586e922ebb87a11944187cb" kindref="member">SCIP_EXPRCURV_CONCAVE</ref><sp/><sp/><sp/><sp/>=<sp/>2,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>concave<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85" refid="type__expr_8h_1a8ee9c6b6f34a52149c9584f558869d4fa0f2db29c3e831aaa368a1183afb685f5" refkind="member"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__expr_8h_1a8ee9c6b6f34a52149c9584f558869d4fa0f2db29c3e831aaa368a1183afb685f5" kindref="member">SCIP_EXPRCURV_LINEAR</ref><sp/><sp/><sp/><sp/><sp/>=<sp/><ref refid="type__expr_8h_1a8ee9c6b6f34a52149c9584f558869d4fa02ae16d5b68c44b90a21d6fd7ff4c29b" kindref="member">SCIP_EXPRCURV_CONVEX</ref><sp/>|<sp/><ref refid="type__expr_8h_1a8ee9c6b6f34a52149c9584f558869d4fa7bafd666a586e922ebb87a11944187cb" kindref="member">SCIP_EXPRCURV_CONCAVE</ref></highlight><highlight class="comment">/**&lt;<sp/>linear<sp/>=<sp/>convex<sp/>and<sp/>concave<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="86"><highlight class="normal">};</highlight></codeline>
<codeline lineno="87"><highlight class="normal"></highlight></codeline>
<codeline lineno="88" refid="type__expr_8h_1a30d37294b55f3180495c3a5efdce32c1" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="type__expr_8h_1af1319cefde4a913a4e9a5a0ebfa6ded7" kindref="member">SCIP_ExprOp</ref><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="type__expr_8h_1a30d37294b55f3180495c3a5efdce32c1" kindref="member">SCIP_EXPROP</ref>;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>expression<sp/>operand<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="89" refid="type__expr_8h_1a038a8105e30d3b01d3de192459058ada" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">union<sp/><sp/></highlight><highlight class="normal">SCIP_ExprOpData<sp/><sp/><ref refid="type__expr_8h_1a038a8105e30d3b01d3de192459058ada" kindref="member">SCIP_EXPROPDATA</ref>;<sp/></highlight><highlight class="comment">/**&lt;<sp/>expression<sp/>operand<sp/>data<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="90" refid="type__expr_8h_1a03f8f1fae1c932ff918396171929c352" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">SCIP_Expr<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="type__expr_8h_1a03f8f1fae1c932ff918396171929c352" kindref="member">SCIP_EXPR</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>expression<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="91" refid="type__expr_8h_1a4ae8525548d76cb766394131bb405cf2" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">SCIP_ExprTree<sp/><sp/><sp/><sp/><ref refid="type__expr_8h_1a4ae8525548d76cb766394131bb405cf2" kindref="member">SCIP_EXPRTREE</ref>;<sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>expression<sp/>tree<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="92" refid="type__expr_8h_1a8b75f2d81278489853cf94478dedbd44" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">enum</highlight><highlight class="normal"><sp/><sp/><sp/><ref refid="type__expr_8h_1a8ee9c6b6f34a52149c9584f558869d4f" kindref="member">SCIP_ExprCurv</ref><sp/><sp/><sp/><sp/><ref refid="type__expr_8h_1a8b75f2d81278489853cf94478dedbd44" kindref="member">SCIP_EXPRCURV</ref>;<sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>curvature<sp/>types<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="93"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="94"><highlight class="comment">/**<sp/>An<sp/>element<sp/>of<sp/>a<sp/>quadratic<sp/>term:<sp/>two<sp/>variable<sp/>indices<sp/>and<sp/>a<sp/>coefficient.</highlight></codeline>
<codeline lineno="95"><highlight class="comment"><sp/>*<sp/>The<sp/>convention<sp/>is<sp/>to<sp/>have<sp/>idx1<sp/>&lt;=<sp/>idx2.</highlight></codeline>
<codeline lineno="96"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="97"><highlight class="normal"></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">SCIP_QuadElement</highlight></codeline>
<codeline lineno="98"><highlight class="normal">{</highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idx1;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>index<sp/>of<sp/>first<sp/>variable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>idx2;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>index<sp/>of<sp/>second<sp/>variable<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a7f0ca7bf9e709814432691d8173a21fa" kindref="member">SCIP_Real</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>coef;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>value<sp/>of<sp/>coefficient<sp/>at<sp/>position<sp/>(idx1,<sp/>idx2)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal">};</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>We<sp/>have<sp/>defined<sp/>struct<sp/>SCIP_QuadElement<sp/>here<sp/>(instead<sp/>of<sp/>type_expression.h)<sp/>to<sp/>allow<sp/>fast<sp/>access,<sp/>allocation,<sp/>and<sp/>copying.<sp/>(similar<sp/>to<sp/>SCIP_INTERVAL)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="104"><highlight class="normal"></highlight></codeline>
<codeline lineno="105" refid="type__expr_8h_1abaf258f420336359952d83563ed641f8" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">SCIP_QuadElement<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="type__expr_8h_1abaf258f420336359952d83563ed641f8" kindref="member">SCIP_QUADELEM</ref>;<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>element<sp/>of<sp/>a<sp/>quadratic<sp/>term<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106" refid="type__expr_8h_1ad09492fdcd7cfcce5121c98c5b01cbb0" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">SCIP_ExprData_Quadratic<sp/><ref refid="type__expr_8h_1ad09492fdcd7cfcce5121c98c5b01cbb0" kindref="member">SCIP_EXPRDATA_QUADRATIC</ref>;<sp/></highlight><highlight class="comment">/**&lt;<sp/>the<sp/>data<sp/>of<sp/>a<sp/>quadratic<sp/>expression<sp/>(SCIP_EXPR_QUADRATIC)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="107"><highlight class="normal"></highlight></codeline>
<codeline lineno="108" refid="type__expr_8h_1a83c46530b886f67d22c6f991f07b3aaa" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">SCIP_ExprData_Monomial<sp/><sp/><sp/><ref refid="type__expr_8h_1a83c46530b886f67d22c6f991f07b3aaa" kindref="member">SCIP_EXPRDATA_MONOMIAL</ref>;<sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>a<sp/>monomial<sp/>as<sp/>part<sp/>of<sp/>the<sp/>data<sp/>in<sp/>a<sp/>polynomial<sp/>expression<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="109" refid="type__expr_8h_1acf517d040af99c08ca7ce3d85700b57d" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">SCIP_ExprData_Polynomial<sp/><ref refid="type__expr_8h_1acf517d040af99c08ca7ce3d85700b57d" kindref="member">SCIP_EXPRDATA_POLYNOMIAL</ref>;<sp/></highlight><highlight class="comment">/**&lt;<sp/>the<sp/>data<sp/>of<sp/>a<sp/>polynomial<sp/>expression<sp/>(SCIP_EXPR_POLYNOMIAL)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="110"><highlight class="normal"></highlight></codeline>
<codeline lineno="111" refid="type__expr_8h_1af2c49f6e823a4d26d3c442e5566285aa" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCIP_EXPR_DEGREEINFINITY<sp/>65535<sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>value<sp/>that<sp/>stands<sp/>for<sp/>an<sp/>infinite<sp/>degree<sp/>of<sp/>an<sp/>expression<sp/>(see<sp/>SCIPexprGetMaxDegree)<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="113"><highlight class="comment">/**<sp/>signature<sp/>of<sp/>an<sp/>expression<sp/>(pointwise)<sp/>evaluation<sp/>function</highlight></codeline>
<codeline lineno="114"><highlight class="comment"><sp/>*<sp/>The<sp/>function<sp/>should<sp/>return<sp/>nan,<sp/>inf,<sp/>or<sp/>-inf<sp/>in<sp/>result<sp/>if<sp/>the<sp/>function<sp/>is<sp/>undefined<sp/>for<sp/>the<sp/>given<sp/>arguments.</highlight></codeline>
<codeline lineno="115"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="116"><highlight class="comment"><sp/>*<sp/>-<sp/>opdata<sp/><sp/><sp/><sp/>operand<sp/>data</highlight></codeline>
<codeline lineno="117"><highlight class="comment"><sp/>*<sp/>-<sp/>nargs<sp/><sp/><sp/><sp/><sp/>number<sp/>of<sp/>arguments</highlight></codeline>
<codeline lineno="118"><highlight class="comment"><sp/>*<sp/>-<sp/>argvals<sp/><sp/><sp/>values<sp/>of<sp/>arguments</highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/>*<sp/>-<sp/>varvals<sp/><sp/><sp/>values<sp/>for<sp/>variables</highlight></codeline>
<codeline lineno="120"><highlight class="comment"><sp/>*<sp/>-<sp/>paramvals<sp/>values<sp/>for<sp/>parameters</highlight></codeline>
<codeline lineno="121"><highlight class="comment"><sp/>*<sp/>-<sp/>result<sp/><sp/><sp/><sp/>buffer<sp/>where<sp/>to<sp/>store<sp/>result<sp/>of<sp/>evaluation</highlight></codeline>
<codeline lineno="122"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="123" refid="type__expr_8h_1a93611c7f479b44c883236f3800925a7a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCIP_DECL_EXPREVAL(x)<sp/>SCIP_RETCODE<sp/>x<sp/>(SCIP_EXPROPDATA<sp/>opdata,<sp/>int<sp/>nargs,<sp/>SCIP_Real*<sp/>argvals,<sp/>SCIP_Real*<sp/>varvals,<sp/>SCIP_Real*<sp/>paramvals,<sp/>SCIP_Real*<sp/>result)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="124"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="125"><highlight class="comment">/**<sp/>signature<sp/>of<sp/>an<sp/>expression<sp/>(interval)<sp/>evaluation<sp/>function</highlight></codeline>
<codeline lineno="126"><highlight class="comment"><sp/>*<sp/>The<sp/>function<sp/>should<sp/>return<sp/>an<sp/>empty<sp/>interval<sp/>if<sp/>the<sp/>function<sp/>is<sp/>undefined<sp/>for<sp/>the<sp/>given<sp/>arguments.</highlight></codeline>
<codeline lineno="127"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="128"><highlight class="comment"><sp/>*<sp/>-<sp/>infinity<sp/><sp/>value<sp/>for<sp/>infinity</highlight></codeline>
<codeline lineno="129"><highlight class="comment"><sp/>*<sp/>-<sp/>opdata<sp/><sp/><sp/><sp/>operand<sp/>data</highlight></codeline>
<codeline lineno="130"><highlight class="comment"><sp/>*<sp/>-<sp/>nargs<sp/><sp/><sp/><sp/><sp/>number<sp/>of<sp/>arguments</highlight></codeline>
<codeline lineno="131"><highlight class="comment"><sp/>*<sp/>-<sp/>argvals<sp/><sp/><sp/>interval<sp/>values<sp/>of<sp/>arguments</highlight></codeline>
<codeline lineno="132"><highlight class="comment"><sp/>*<sp/>-<sp/>varvals<sp/><sp/><sp/>interval<sp/>values<sp/>for<sp/>variables</highlight></codeline>
<codeline lineno="133"><highlight class="comment"><sp/>*<sp/>-<sp/>paramvals<sp/>values<sp/>for<sp/>parameters</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/>*<sp/>-<sp/>result<sp/><sp/><sp/><sp/>buffer<sp/>where<sp/>to<sp/>store<sp/>result<sp/>of<sp/>evaluation</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136" refid="type__expr_8h_1a6b1f1dcf09a8d1d5e2eb9151074d218e" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCIP_DECL_EXPRINTEVAL(x)<sp/>SCIP_RETCODE<sp/>x<sp/>(SCIP_Real<sp/>infinity,<sp/>SCIP_EXPROPDATA<sp/>opdata,<sp/>int<sp/>nargs,<sp/>SCIP_INTERVAL*<sp/>argvals,<sp/>SCIP_INTERVAL*<sp/>varvals,<sp/>SCIP_Real*<sp/>paramvals,<sp/>SCIP_INTERVAL*<sp/>result)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="137"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="138"><highlight class="comment">/**<sp/>signature<sp/>of<sp/>a<sp/>simple<sp/>expression<sp/>curvature<sp/>check<sp/>function</highlight></codeline>
<codeline lineno="139"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="140"><highlight class="comment"><sp/>*<sp/>-<sp/>infinity<sp/><sp/>value<sp/>for<sp/>infinity</highlight></codeline>
<codeline lineno="141"><highlight class="comment"><sp/>*<sp/>-<sp/>opdata<sp/><sp/><sp/><sp/>operand<sp/>data</highlight></codeline>
<codeline lineno="142"><highlight class="comment"><sp/>*<sp/>-<sp/>nargs<sp/><sp/><sp/><sp/><sp/>number<sp/>of<sp/>arguments</highlight></codeline>
<codeline lineno="143"><highlight class="comment"><sp/>*<sp/>-<sp/>argbounds<sp/>bounds<sp/>on<sp/>value<sp/>of<sp/>arguments</highlight></codeline>
<codeline lineno="144"><highlight class="comment"><sp/>*<sp/>-<sp/>argcurv<sp/><sp/><sp/>curvature<sp/>of<sp/>arguments</highlight></codeline>
<codeline lineno="145"><highlight class="comment"><sp/>*<sp/>-<sp/>paramvals<sp/>values<sp/>for<sp/>parameters</highlight></codeline>
<codeline lineno="146"><highlight class="comment"><sp/>*<sp/>-<sp/>result<sp/><sp/><sp/><sp/>buffer<sp/>where<sp/>to<sp/>store<sp/>result<sp/>of<sp/>curvature<sp/>check</highlight></codeline>
<codeline lineno="147"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="148" refid="type__expr_8h_1aab5b8da587c56a819f0d002efcd1c0e9" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCIP_DECL_EXPRCURV(x)<sp/>SCIP_RETCODE<sp/>x<sp/>(SCIP_Real<sp/>infinity,<sp/>SCIP_EXPROPDATA<sp/>opdata,<sp/>int<sp/>nargs,<sp/>SCIP_INTERVAL*<sp/>argbounds,<sp/>SCIP_EXPRCURV*<sp/>argcurv,<sp/>SCIP_EXPRCURV*<sp/>result)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="149"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="150"><highlight class="comment">/**<sp/>signature<sp/>of<sp/>a<sp/>expression<sp/>data<sp/>copy<sp/>function</highlight></codeline>
<codeline lineno="151"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="152"><highlight class="comment"><sp/>*<sp/>-<sp/>blkmem<sp/><sp/><sp/><sp/><sp/><sp/><sp/>block<sp/>memory</highlight></codeline>
<codeline lineno="153"><highlight class="comment"><sp/>*<sp/>-<sp/>nchildren<sp/><sp/><sp/><sp/>number<sp/>of<sp/>children<sp/>in<sp/>expression</highlight></codeline>
<codeline lineno="154"><highlight class="comment"><sp/>*<sp/>-<sp/>opdatasource<sp/>source<sp/>expression<sp/>data</highlight></codeline>
<codeline lineno="155"><highlight class="comment"><sp/>*<sp/>-<sp/>opdatatarget<sp/>pointer<sp/>to<sp/>target<sp/>expression<sp/>data</highlight></codeline>
<codeline lineno="156"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="157" refid="type__expr_8h_1ae93cf41953975fc9fd280a05c789b0b1" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCIP_DECL_EXPRCOPYDATA(x)<sp/>SCIP_RETCODE<sp/>x<sp/>(BMS_BLKMEM*<sp/>blkmem,<sp/>int<sp/>nchildren,<sp/>SCIP_EXPROPDATA<sp/>opdatasource,<sp/>SCIP_EXPROPDATA*<sp/>opdatatarget)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="158"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="159"><highlight class="comment">/**<sp/>signature<sp/>of<sp/>a<sp/>expression<sp/>data<sp/>free<sp/>function</highlight></codeline>
<codeline lineno="160"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="161"><highlight class="comment"><sp/>*<sp/>-<sp/>blkmem<sp/><sp/><sp/><sp/><sp/><sp/><sp/>block<sp/>memory</highlight></codeline>
<codeline lineno="162"><highlight class="comment"><sp/>*<sp/>-<sp/>nchildren<sp/><sp/><sp/><sp/>number<sp/>of<sp/>children<sp/>in<sp/>expression</highlight></codeline>
<codeline lineno="163"><highlight class="comment"><sp/>*<sp/>-<sp/>opdata<sp/><sp/><sp/><sp/><sp/><sp/><sp/>expression<sp/>data<sp/>to<sp/>free</highlight></codeline>
<codeline lineno="164"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="165" refid="type__expr_8h_1a4ebeb60846b3ce6c31fd77fd047db97d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCIP_DECL_EXPRFREEDATA(x)<sp/>void<sp/>x<sp/>(BMS_BLKMEM*<sp/>blkmem,<sp/>int<sp/>nchildren,<sp/>SCIP_EXPROPDATA<sp/>opdata)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="166"><highlight class="normal"></highlight></codeline>
<codeline lineno="167" refid="type__expr_8h_1aaa741e59aa855d6864a43b651ce35ad9" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">SCIP_ExprGraphNode<sp/><ref refid="type__expr_8h_1aaa741e59aa855d6864a43b651ce35ad9" kindref="member">SCIP_EXPRGRAPHNODE</ref>;<sp/></highlight><highlight class="comment">/**&lt;<sp/>node<sp/>in<sp/>an<sp/>expression<sp/>graph<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="168" refid="type__expr_8h_1a8481fdd0b99c28964cf0d180e8109b24" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keyword">struct<sp/></highlight><highlight class="normal">SCIP_ExprGraph<sp/><sp/><sp/><sp/><sp/><ref refid="type__expr_8h_1a8481fdd0b99c28964cf0d180e8109b24" kindref="member">SCIP_EXPRGRAPH</ref>;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>an<sp/>expression<sp/>graph<sp/>(DAG)<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="169"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="170"><highlight class="comment">/**<sp/>callback<sp/>method<sp/>of<sp/>expression<sp/>graph<sp/>invoked<sp/>when<sp/>a<sp/>new<sp/>variable<sp/>has<sp/>been<sp/>added<sp/>to<sp/>the<sp/>graph</highlight></codeline>
<codeline lineno="171"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="172"><highlight class="comment"><sp/>*<sp/>input:</highlight></codeline>
<codeline lineno="173"><highlight class="comment"><sp/>*<sp/>-<sp/>exprgraph<sp/><sp/><sp/><sp/>expression<sp/>graph</highlight></codeline>
<codeline lineno="174"><highlight class="comment"><sp/>*<sp/>-<sp/>userdata<sp/><sp/><sp/><sp/><sp/>a<sp/>pointer<sp/>to<sp/>user<sp/>data</highlight></codeline>
<codeline lineno="175"><highlight class="comment"><sp/>*<sp/>-<sp/>var<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>variable<sp/>that<sp/>has<sp/>been<sp/>added<sp/>to<sp/>expression<sp/>graph</highlight></codeline>
<codeline lineno="176"><highlight class="comment"><sp/>*<sp/>-<sp/>varnode<sp/><sp/><sp/><sp/><sp/><sp/>new<sp/>expression<sp/>graph<sp/>node<sp/>for<sp/>a<sp/>variable</highlight></codeline>
<codeline lineno="177"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="178" refid="type__expr_8h_1aea91b21a170e9a98455730394224141f" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCIP_DECL_EXPRGRAPHVARADDED(x)<sp/>SCIP_RETCODE<sp/>x<sp/>(SCIP_EXPRGRAPH*<sp/>exprgraph,<sp/>void*<sp/>userdata,<sp/>void*<sp/>var,<sp/>SCIP_EXPRGRAPHNODE*<sp/>varnode)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="179"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="180"><highlight class="comment">/**<sp/>callback<sp/>method<sp/>of<sp/>expression<sp/>graph<sp/>invoked<sp/>when<sp/>a<sp/>variable<sp/>is<sp/>to<sp/>be<sp/>removed<sp/>from<sp/>the<sp/>graph</highlight></codeline>
<codeline lineno="181"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="182"><highlight class="comment"><sp/>*<sp/>input:</highlight></codeline>
<codeline lineno="183"><highlight class="comment"><sp/>*<sp/>-<sp/>exprgraph<sp/><sp/><sp/><sp/>expression<sp/>graph</highlight></codeline>
<codeline lineno="184"><highlight class="comment"><sp/>*<sp/>-<sp/>userdata<sp/><sp/><sp/><sp/><sp/>a<sp/>pointer<sp/>to<sp/>user<sp/>data</highlight></codeline>
<codeline lineno="185"><highlight class="comment"><sp/>*<sp/>-<sp/>var<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>variable<sp/>that<sp/>will<sp/>be<sp/>removed<sp/>from<sp/>the<sp/>expression<sp/>graph</highlight></codeline>
<codeline lineno="186"><highlight class="comment"><sp/>*<sp/>-<sp/>varnode<sp/><sp/><sp/><sp/><sp/><sp/>expression<sp/>graph<sp/>node<sp/>corresponding<sp/>to<sp/>variable</highlight></codeline>
<codeline lineno="187"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="188" refid="type__expr_8h_1a3c698d26fa6116677701e6e8d1ef5c44" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCIP_DECL_EXPRGRAPHVARREMOVE(x)<sp/>SCIP_RETCODE<sp/>x<sp/>(SCIP_EXPRGRAPH*<sp/>exprgraph,<sp/>void*<sp/>userdata,<sp/>void*<sp/>var,<sp/>SCIP_EXPRGRAPHNODE*<sp/>varnode)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="189"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="190"><highlight class="comment">/**<sp/>callback<sp/>method<sp/>of<sp/>expression<sp/>graph<sp/>invoked<sp/>when<sp/>a<sp/>variable<sp/>changes<sp/>its<sp/>index</highlight></codeline>
<codeline lineno="191"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="192"><highlight class="comment"><sp/>*<sp/>input:</highlight></codeline>
<codeline lineno="193"><highlight class="comment"><sp/>*<sp/>-<sp/>exprgraph<sp/><sp/><sp/><sp/>expression<sp/>graph</highlight></codeline>
<codeline lineno="194"><highlight class="comment"><sp/>*<sp/>-<sp/>userdata<sp/><sp/><sp/><sp/><sp/>a<sp/>pointer<sp/>to<sp/>user<sp/>data</highlight></codeline>
<codeline lineno="195"><highlight class="comment"><sp/>*<sp/>-<sp/>var<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>variable<sp/>which<sp/>will<sp/>change<sp/>its<sp/>index</highlight></codeline>
<codeline lineno="196"><highlight class="comment"><sp/>*<sp/>-<sp/>varnode<sp/><sp/><sp/><sp/><sp/><sp/>expression<sp/>graph<sp/>node<sp/>corresponding<sp/>to<sp/>variable</highlight></codeline>
<codeline lineno="197"><highlight class="comment"><sp/>*<sp/>-<sp/>oldidx<sp/><sp/><sp/><sp/><sp/><sp/><sp/>current<sp/>index<sp/>of<sp/>variable</highlight></codeline>
<codeline lineno="198"><highlight class="comment"><sp/>*<sp/>-<sp/>newidx<sp/><sp/><sp/><sp/><sp/><sp/><sp/>new<sp/>index<sp/>the<sp/>variable<sp/>will<sp/>have</highlight></codeline>
<codeline lineno="199"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="200" refid="type__expr_8h_1aca8f77ed737c251478213db3dfcc8f98" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCIP_DECL_EXPRGRAPHVARCHGIDX(x)<sp/>SCIP_RETCODE<sp/>x<sp/>(SCIP_EXPRGRAPH*<sp/>exprgraph,<sp/>void*<sp/>userdata,<sp/>void*<sp/>var,<sp/>SCIP_EXPRGRAPHNODE*<sp/>varnode,<sp/>int<sp/>oldidx,<sp/>int<sp/>newidx)</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="201"><highlight class="normal"></highlight></codeline>
<codeline lineno="202"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>SCIP_EXPRBOUNDSTATUS_TIGHTENEDBYPARENTFORCE<sp/>is<sp/>used<sp/>to<sp/>indicate<sp/>that<sp/>bounds<sp/>in<sp/>a<sp/>node<sp/>should<sp/>be<sp/>propagated<sp/>down<sp/>even<sp/>if<sp/>they<sp/>are<sp/>not<sp/>better<sp/>than<sp/>the<sp/>bounds<sp/>given<sp/>by<sp/>the<sp/>child<sp/>nodes</highlight></codeline>
<codeline lineno="203"><highlight class="comment"><sp/>*<sp/>this<sp/>is<sp/>useful<sp/>if<sp/>the<sp/>expression<sp/>itself<sp/>has<sp/>a<sp/>domain<sp/>that<sp/>is<sp/>not<sp/>the<sp/>whole<sp/>real<sp/>numbers<sp/>and<sp/>we<sp/>want<sp/>to<sp/>propagate<sp/>this<sp/>information<sp/>down<sp/>to<sp/>a<sp/>child<sp/>node</highlight></codeline>
<codeline lineno="204"><highlight class="comment"><sp/>*<sp/>e.g.,<sp/>a<sp/>x^0.3<sp/>should<sp/>result<sp/>in<sp/>x<sp/>&gt;=<sp/>0<sp/>even<sp/>if<sp/>no<sp/>new<sp/>bounds<sp/>on<sp/>the<sp/>expression<sp/>x^0.3<sp/>have<sp/>been<sp/>obtained</highlight></codeline>
<codeline lineno="205"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="206" refid="type__expr_8h_1abb09717b5be447c1a38c2d5334d9e269" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCIP_EXPRBOUNDSTATUS_VALID<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>0x0<sp/></highlight><highlight class="comment">/**&lt;<sp/>bounds<sp/>are<sp/>valid,<sp/>i.e.,<sp/>conform<sp/>with<sp/>bounds<sp/>of<sp/>children<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="207" refid="type__expr_8h_1a4fe0044e567e4abb408a6d1c646e2e1a" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCIP_EXPRBOUNDSTATUS_CHILDTIGHTENED<sp/><sp/><sp/><sp/>0x1<sp/></highlight><highlight class="comment">/**&lt;<sp/>a<sp/>child<sp/>bounds<sp/>were<sp/>tightened<sp/>since<sp/>last<sp/>calculation<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="208" refid="type__expr_8h_1aed22623e9ad049f8ab539e770b85f006" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCIP_EXPRBOUNDSTATUS_CHILDRELAXED<sp/><sp/><sp/><sp/><sp/><sp/>0x2<sp/></highlight><highlight class="comment">/**&lt;<sp/>bounds<sp/>are<sp/>not<sp/>valid<sp/>and<sp/>need<sp/>to<sp/>be<sp/>recomputed,<sp/>because<sp/>the<sp/>bounds<sp/>in<sp/>a<sp/>child<sp/>were<sp/>relaxed<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="209" refid="type__expr_8h_1a51ab826c666e8ab6d5c2d0224b69101d" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCIP_EXPRBOUNDSTATUS_TIGHTENEDBYPARENT<sp/>0x4<sp/></highlight><highlight class="comment">/**&lt;<sp/>bounds<sp/>have<sp/>been<sp/>tightened<sp/>by<sp/>reverse<sp/>propagation<sp/>in<sp/>a<sp/>parent,<sp/>they<sp/>are<sp/>valid<sp/>as<sp/>long<sp/>as<sp/>there<sp/>has<sp/>been<sp/>no<sp/>relaxation<sp/>of<sp/>bounds<sp/>somewhere<sp/>in<sp/>the<sp/>graph<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="210" refid="type__expr_8h_1a0a4b25351e8227c24c2a1654ae8f5d65" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCIP_EXPRBOUNDSTATUS_TIGHTENEDBYPARENTRECENT<sp/>(0x8<sp/>|<sp/>SCIP_EXPRBOUNDSTATUS_TIGHTENEDBYPARENT)<sp/></highlight><highlight class="comment">/**&lt;<sp/>bounds<sp/>have<sp/>recently<sp/>been<sp/>tightened<sp/>by<sp/>reverse<sp/>propagation<sp/>in<sp/>a<sp/>parent,<sp/>this<sp/>tightening<sp/>has<sp/>not<sp/>been<sp/>propagated<sp/>further<sp/>down<sp/>yet<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="211" refid="type__expr_8h_1a378c60542bb1ae0a2bd70dfbed7b13ec" refkind="member"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>SCIP_EXPRBOUNDSTATUS_TIGHTENEDBYPARENTFORCE<sp/>(0x10<sp/>|<sp/>SCIP_EXPRBOUNDSTATUS_TIGHTENEDBYPARENTRECENT)<sp/></highlight><highlight class="comment">/**&lt;<sp/>bounds<sp/>may<sp/>have<sp/>recently<sp/>been<sp/>tightened<sp/>by<sp/>reverse<sp/>propagation<sp/>in<sp/>a<sp/>parent,<sp/>in<sp/>any<sp/>case<sp/>we<sp/>want<sp/>to<sp/>propagate<sp/>bounds<sp/>further<sp/>down<sp/>*/</highlight><highlight class="preprocessor"></highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="212"><highlight class="normal"></highlight></codeline>
<codeline lineno="213" refid="type__expr_8h_1a38f44189781b458b128b5885b7b91903" refkind="member"><highlight class="normal"></highlight><highlight class="keyword">typedef</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><ref refid="type__expr_8h_1a38f44189781b458b128b5885b7b91903" kindref="member">SCIP_EXPRBOUNDSTATUS</ref>;<sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>bitflags<sp/>that<sp/>indicate<sp/>the<sp/>status<sp/>of<sp/>bounds<sp/>stored<sp/>in<sp/>a<sp/>node<sp/>of<sp/>an<sp/>expression<sp/>graph<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="214"><highlight class="normal"></highlight></codeline>
<codeline lineno="215"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="216"><highlight class="normal">}</highlight></codeline>
<codeline lineno="217"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="218"><highlight class="normal"></highlight></codeline>
<codeline lineno="219"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/></highlight><highlight class="comment">/*<sp/>__SCIP_TYPE_EXPRESSION_H__<sp/>*/</highlight><highlight class="preprocessor"></highlight></codeline>
    </programlisting>
    <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/nlpi/type_expr.h"/>
  </compounddef>
</doxygen>
