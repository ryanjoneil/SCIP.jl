<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.8">
  <compounddef id="cons__superindicator_8h" kind="file">
    <compoundname>cons_superindicator.h</compoundname>
    <includes refid="scip_8h" local="yes">scip/scip.h</includes>
    <includedby refid="scipdefplugins_8h" local="yes">scipdefplugins.h</includedby>
    <incdepgraph>
      <node id="2586">
        <label>scip/type_conflict.h</label>
        <link refid="type__conflict_8h"/>
        <childnode refid="2563" relation="include">
        </childnode>
        <childnode refid="2568" relation="include">
        </childnode>
        <childnode refid="2573" relation="include">
        </childnode>
        <childnode refid="2582" relation="include">
        </childnode>
      </node>
      <node id="2570">
        <label>stdarg.h</label>
      </node>
      <node id="2635">
        <label>scip/intervalarith.h</label>
      </node>
      <node id="2581">
        <label>scip/type_nlp.h</label>
        <link refid="type__nlp_8h"/>
      </node>
      <node id="2588">
        <label>scip/type_sol.h</label>
        <link refid="type__sol_8h"/>
      </node>
      <node id="2561">
        <label>scip/scip.h</label>
        <link refid="scip_8h"/>
        <childnode refid="2562" relation="include">
        </childnode>
        <childnode refid="2563" relation="include">
        </childnode>
        <childnode refid="2572" relation="include">
        </childnode>
        <childnode refid="2568" relation="include">
        </childnode>
        <childnode refid="2573" relation="include">
        </childnode>
        <childnode refid="2574" relation="include">
        </childnode>
        <childnode refid="2575" relation="include">
        </childnode>
        <childnode refid="2576" relation="include">
        </childnode>
        <childnode refid="2578" relation="include">
        </childnode>
        <childnode refid="2579" relation="include">
        </childnode>
        <childnode refid="2580" relation="include">
        </childnode>
        <childnode refid="2581" relation="include">
        </childnode>
        <childnode refid="2582" relation="include">
        </childnode>
        <childnode refid="2583" relation="include">
        </childnode>
        <childnode refid="2584" relation="include">
        </childnode>
        <childnode refid="2577" relation="include">
        </childnode>
        <childnode refid="2585" relation="include">
        </childnode>
        <childnode refid="2586" relation="include">
        </childnode>
        <childnode refid="2587" relation="include">
        </childnode>
        <childnode refid="2589" relation="include">
        </childnode>
        <childnode refid="2590" relation="include">
        </childnode>
        <childnode refid="2591" relation="include">
        </childnode>
        <childnode refid="2592" relation="include">
        </childnode>
        <childnode refid="2593" relation="include">
        </childnode>
        <childnode refid="2594" relation="include">
        </childnode>
        <childnode refid="2595" relation="include">
        </childnode>
        <childnode refid="2596" relation="include">
        </childnode>
        <childnode refid="2597" relation="include">
        </childnode>
        <childnode refid="2598" relation="include">
        </childnode>
        <childnode refid="2599" relation="include">
        </childnode>
        <childnode refid="2600" relation="include">
        </childnode>
        <childnode refid="2602" relation="include">
        </childnode>
        <childnode refid="2603" relation="include">
        </childnode>
        <childnode refid="2604" relation="include">
        </childnode>
        <childnode refid="2605" relation="include">
        </childnode>
        <childnode refid="2607" relation="include">
        </childnode>
        <childnode refid="2608" relation="include">
        </childnode>
        <childnode refid="2609" relation="include">
        </childnode>
        <childnode refid="2610" relation="include">
        </childnode>
        <childnode refid="2612" relation="include">
        </childnode>
        <childnode refid="2613" relation="include">
        </childnode>
        <childnode refid="2614" relation="include">
        </childnode>
        <childnode refid="2616" relation="include">
        </childnode>
        <childnode refid="2620" relation="include">
        </childnode>
        <childnode refid="2569" relation="include">
        </childnode>
        <childnode refid="2621" relation="include">
        </childnode>
        <childnode refid="2622" relation="include">
        </childnode>
        <childnode refid="2623" relation="include">
        </childnode>
        <childnode refid="2624" relation="include">
        </childnode>
        <childnode refid="2625" relation="include">
        </childnode>
        <childnode refid="2626" relation="include">
        </childnode>
        <childnode refid="2627" relation="include">
        </childnode>
        <childnode refid="2628" relation="include">
        </childnode>
        <childnode refid="2629" relation="include">
        </childnode>
        <childnode refid="2630" relation="include">
        </childnode>
        <childnode refid="2631" relation="include">
        </childnode>
        <childnode refid="2632" relation="include">
        </childnode>
        <childnode refid="2633" relation="include">
        </childnode>
        <childnode refid="2634" relation="include">
        </childnode>
        <childnode refid="2637" relation="include">
        </childnode>
      </node>
      <node id="2603">
        <label>scip/pub_conflict.h</label>
        <link refid="pub__conflict_8h"/>
        <childnode refid="2563" relation="include">
        </childnode>
        <childnode refid="2575" relation="include">
        </childnode>
        <childnode refid="2586" relation="include">
        </childnode>
      </node>
      <node id="2578">
        <label>scip/type_paramset.h</label>
        <link refid="type__paramset_8h"/>
        <childnode refid="2563" relation="include">
        </childnode>
        <childnode refid="2568" relation="include">
        </childnode>
        <childnode refid="2577" relation="include">
        </childnode>
      </node>
      <node id="2567">
        <label>assert.h</label>
      </node>
      <node id="2593">
        <label>scip/type_nodesel.h</label>
        <link refid="type__nodesel_8h"/>
        <childnode refid="2563" relation="include">
        </childnode>
        <childnode refid="2568" relation="include">
        </childnode>
        <childnode refid="2584" relation="include">
        </childnode>
        <childnode refid="2577" relation="include">
        </childnode>
      </node>
      <node id="2636">
        <label>nlpi/type_exprinterpret.h</label>
        <link refid="type__exprinterpret_8h"/>
      </node>
      <node id="2566">
        <label>float.h</label>
      </node>
      <node id="2584">
        <label>scip/type_tree.h</label>
        <link refid="type__tree_8h"/>
      </node>
      <node id="2595">
        <label>scip/type_pricer.h</label>
        <link refid="type__pricer_8h"/>
        <childnode refid="2563" relation="include">
        </childnode>
        <childnode refid="2568" relation="include">
        </childnode>
        <childnode refid="2577" relation="include">
        </childnode>
      </node>
      <node id="2582">
        <label>scip/type_var.h</label>
        <link refid="type__var_8h"/>
      </node>
      <node id="2612">
        <label>scip/pub_heur.h</label>
        <link refid="pub__heur_8h"/>
        <childnode refid="2563" relation="include">
        </childnode>
        <childnode refid="2575" relation="include">
        </childnode>
        <childnode refid="2591" relation="include">
        </childnode>
      </node>
      <node id="2606">
        <label>scip/type_cutpool.h</label>
        <link refid="type__cutpool_8h"/>
      </node>
      <node id="2574">
        <label>scip/type_clock.h</label>
        <link refid="type__clock_8h"/>
        <childnode refid="2563" relation="include">
        </childnode>
      </node>
      <node id="2585">
        <label>scip/type_branch.h</label>
        <link refid="type__branch_8h"/>
        <childnode refid="2563" relation="include">
        </childnode>
        <childnode refid="2573" relation="include">
        </childnode>
        <childnode refid="2577" relation="include">
        </childnode>
      </node>
      <node id="2589">
        <label>scip/type_dialog.h</label>
        <link refid="type__dialog_8h"/>
        <childnode refid="2563" relation="include">
        </childnode>
        <childnode refid="2568" relation="include">
        </childnode>
        <childnode refid="2577" relation="include">
        </childnode>
      </node>
      <node id="2632">
        <label>scip/pub_var.h</label>
        <link refid="pub__var_8h"/>
        <childnode refid="2563" relation="include">
        </childnode>
        <childnode refid="2568" relation="include">
        </childnode>
        <childnode refid="2575" relation="include">
        </childnode>
        <childnode refid="2592" relation="include">
        </childnode>
        <childnode refid="2582" relation="include">
        </childnode>
        <childnode refid="2615" relation="include">
        </childnode>
        <childnode refid="2587" relation="include">
        </childnode>
      </node>
      <node id="2616">
        <label>scip/pub_lp.h</label>
        <link refid="pub__lp_8h"/>
        <childnode refid="2562" relation="include">
        </childnode>
        <childnode refid="2563" relation="include">
        </childnode>
        <childnode refid="2572" relation="include">
        </childnode>
        <childnode refid="2617" relation="include">
        </childnode>
        <childnode refid="2618" relation="include">
        </childnode>
        <childnode refid="2580" relation="include">
        </childnode>
        <childnode refid="2582" relation="include">
        </childnode>
        <childnode refid="2588" relation="include">
        </childnode>
        <childnode refid="2598" relation="include">
        </childnode>
        <childnode refid="2575" relation="include">
        </childnode>
        <childnode refid="2619" relation="include">
        </childnode>
      </node>
      <node id="2613">
        <label>scip/pub_history.h</label>
        <link refid="pub__history_8h"/>
      </node>
      <node id="2573">
        <label>scip/type_result.h</label>
        <link refid="type__result_8h"/>
      </node>
      <node id="2619">
        <label>lpi/type_lpi.h</label>
      </node>
      <node id="2605">
        <label>scip/pub_cutpool.h</label>
        <link refid="pub__cutpool_8h"/>
        <childnode refid="2563" relation="include">
        </childnode>
        <childnode refid="2606" relation="include">
        </childnode>
      </node>
      <node id="2609">
        <label>scip/pub_event.h</label>
        <link refid="pub__event_8h"/>
        <childnode refid="2563" relation="include">
        </childnode>
        <childnode refid="2568" relation="include">
        </childnode>
        <childnode refid="2579" relation="include">
        </childnode>
        <childnode refid="2582" relation="include">
        </childnode>
        <childnode refid="2588" relation="include">
        </childnode>
        <childnode refid="2584" relation="include">
        </childnode>
      </node>
      <node id="2580">
        <label>scip/type_lp.h</label>
        <link refid="type__lp_8h"/>
      </node>
      <node id="2625">
        <label>scip/pub_pricer.h</label>
        <link refid="pub__pricer_8h"/>
        <childnode refid="2563" relation="include">
        </childnode>
        <childnode refid="2575" relation="include">
        </childnode>
        <childnode refid="2595" relation="include">
        </childnode>
      </node>
      <node id="2610">
        <label>scip/pub_fileio.h</label>
        <link refid="pub__fileio_8h"/>
        <childnode refid="2611" relation="include">
        </childnode>
        <childnode refid="2563" relation="include">
        </childnode>
      </node>
      <node id="2611">
        <label>stddef.h</label>
      </node>
      <node id="2614">
        <label>scip/pub_implics.h</label>
        <link refid="pub__implics_8h"/>
        <childnode refid="2563" relation="include">
        </childnode>
        <childnode refid="2582" relation="include">
        </childnode>
        <childnode refid="2615" relation="include">
        </childnode>
      </node>
      <node id="2633">
        <label>lpi/lpi.h</label>
      </node>
      <node id="2583">
        <label>scip/type_prob.h</label>
        <link refid="type__prob_8h"/>
        <childnode refid="2563" relation="include">
        </childnode>
        <childnode refid="2568" relation="include">
        </childnode>
        <childnode refid="2577" relation="include">
        </childnode>
      </node>
      <node id="2615">
        <label>scip/type_implics.h</label>
        <link refid="type__implics_8h"/>
      </node>
      <node id="2621">
        <label>scip/pub_misc.h</label>
        <link refid="pub__misc_8h"/>
        <childnode refid="2564" relation="include">
        </childnode>
        <childnode refid="2563" relation="include">
        </childnode>
        <childnode refid="2572" relation="include">
        </childnode>
        <childnode refid="2568" relation="include">
        </childnode>
        <childnode refid="2575" relation="include">
        </childnode>
        <childnode refid="2571" relation="include">
        </childnode>
        <childnode refid="2582" relation="include">
        </childnode>
      </node>
      <node id="2631">
        <label>scip/pub_tree.h</label>
        <link refid="pub__tree_8h"/>
        <childnode refid="2563" relation="include">
        </childnode>
        <childnode refid="2575" relation="include">
        </childnode>
        <childnode refid="2584" relation="include">
        </childnode>
      </node>
      <node id="2565">
        <label>limits.h</label>
      </node>
      <node id="2618">
        <label>scip/type_stat.h</label>
        <link refid="type__stat_8h"/>
      </node>
      <node id="2577">
        <label>scip/type_scip.h</label>
        <link refid="type__scip_8h"/>
      </node>
      <node id="2587">
        <label>scip/type_cons.h</label>
        <link refid="type__cons_8h"/>
        <childnode refid="2563" relation="include">
        </childnode>
        <childnode refid="2568" relation="include">
        </childnode>
        <childnode refid="2573" relation="include">
        </childnode>
        <childnode refid="2582" relation="include">
        </childnode>
        <childnode refid="2588" relation="include">
        </childnode>
        <childnode refid="2577" relation="include">
        </childnode>
        <childnode refid="2576" relation="include">
        </childnode>
      </node>
      <node id="2628">
        <label>scip/pub_sepa.h</label>
        <link refid="pub__sepa_8h"/>
        <childnode refid="2563" relation="include">
        </childnode>
        <childnode refid="2575" relation="include">
        </childnode>
        <childnode refid="2598" relation="include">
        </childnode>
      </node>
      <node id="2571">
        <label>scip/type_message.h</label>
        <link refid="type__message_8h"/>
        <childnode refid="2562" relation="include">
        </childnode>
      </node>
      <node id="2575">
        <label>scip/type_misc.h</label>
        <link refid="type__misc_8h"/>
        <childnode refid="2563" relation="include">
        </childnode>
      </node>
      <node id="2637">
        <label>scip/presolve.h</label>
      </node>
      <node id="2600">
        <label>nlpi/type_nlpi.h</label>
        <link refid="type__nlpi_8h"/>
        <childnode refid="2563" relation="include">
        </childnode>
        <childnode refid="2571" relation="include">
        </childnode>
        <childnode refid="2572" relation="include">
        </childnode>
        <childnode refid="2601" relation="include">
        </childnode>
      </node>
      <node id="2597">
        <label>scip/type_relax.h</label>
        <link refid="type__relax_8h"/>
        <childnode refid="2563" relation="include">
        </childnode>
        <childnode refid="2568" relation="include">
        </childnode>
        <childnode refid="2573" relation="include">
        </childnode>
        <childnode refid="2577" relation="include">
        </childnode>
      </node>
      <node id="2617">
        <label>scip/type_set.h</label>
        <link refid="type__set_8h"/>
      </node>
      <node id="2602">
        <label>scip/pub_branch.h</label>
        <link refid="pub__branch_8h"/>
        <childnode refid="2563" relation="include">
        </childnode>
        <childnode refid="2575" relation="include">
        </childnode>
        <childnode refid="2585" relation="include">
        </childnode>
      </node>
      <node id="2569">
        <label>scip/pub_message.h</label>
        <link refid="pub__message_8h"/>
        <childnode refid="2570" relation="include">
        </childnode>
        <childnode refid="2563" relation="include">
        </childnode>
        <childnode refid="2571" relation="include">
        </childnode>
      </node>
      <node id="2629">
        <label>scip/pub_prop.h</label>
        <link refid="pub__prop_8h"/>
        <childnode refid="2563" relation="include">
        </childnode>
        <childnode refid="2575" relation="include">
        </childnode>
        <childnode refid="2599" relation="include">
        </childnode>
      </node>
      <node id="2598">
        <label>scip/type_sepa.h</label>
        <link refid="type__sepa_8h"/>
        <childnode refid="2563" relation="include">
        </childnode>
        <childnode refid="2568" relation="include">
        </childnode>
        <childnode refid="2573" relation="include">
        </childnode>
        <childnode refid="2588" relation="include">
        </childnode>
        <childnode refid="2577" relation="include">
        </childnode>
      </node>
      <node id="2576">
        <label>scip/type_timing.h</label>
        <link refid="type__timing_8h"/>
        <childnode refid="2563" relation="include">
        </childnode>
        <childnode refid="2573" relation="include">
        </childnode>
        <childnode refid="2577" relation="include">
        </childnode>
      </node>
      <node id="2568">
        <label>scip/type_retcode.h</label>
        <link refid="type__retcode_8h"/>
      </node>
      <node id="2590">
        <label>scip/type_disp.h</label>
        <link refid="type__disp_8h"/>
        <childnode refid="2562" relation="include">
        </childnode>
        <childnode refid="2563" relation="include">
        </childnode>
        <childnode refid="2568" relation="include">
        </childnode>
        <childnode refid="2577" relation="include">
        </childnode>
      </node>
      <node id="2601">
        <label>nlpi/type_expr.h</label>
        <link refid="type__expr_8h"/>
      </node>
      <node id="2579">
        <label>scip/type_event.h</label>
        <link refid="type__event_8h"/>
        <childnode refid="2563" relation="include">
        </childnode>
        <childnode refid="2568" relation="include">
        </childnode>
        <childnode refid="2577" relation="include">
        </childnode>
      </node>
      <node id="2594">
        <label>scip/type_presol.h</label>
        <link refid="type__presol_8h"/>
        <childnode refid="2563" relation="include">
        </childnode>
        <childnode refid="2568" relation="include">
        </childnode>
        <childnode refid="2573" relation="include">
        </childnode>
        <childnode refid="2577" relation="include">
        </childnode>
      </node>
      <node id="2608">
        <label>scip/pub_disp.h</label>
        <link refid="pub__disp_8h"/>
        <childnode refid="2562" relation="include">
        </childnode>
        <childnode refid="2563" relation="include">
        </childnode>
        <childnode refid="2568" relation="include">
        </childnode>
        <childnode refid="2590" relation="include">
        </childnode>
      </node>
      <node id="2634">
        <label>nlpi/pub_expr.h</label>
        <link refid="pub__expr_8h"/>
        <childnode refid="2563" relation="include">
        </childnode>
        <childnode refid="2569" relation="include">
        </childnode>
        <childnode refid="2635" relation="include">
        </childnode>
        <childnode refid="2572" relation="include">
        </childnode>
        <childnode refid="2601" relation="include">
        </childnode>
        <childnode refid="2636" relation="include">
        </childnode>
      </node>
      <node id="2564">
        <label>math.h</label>
      </node>
      <node id="2620">
        <label>scip/pub_nlp.h</label>
        <link refid="pub__nlp_8h"/>
        <childnode refid="2562" relation="include">
        </childnode>
        <childnode refid="2563" relation="include">
        </childnode>
        <childnode refid="2571" relation="include">
        </childnode>
        <childnode refid="2572" relation="include">
        </childnode>
        <childnode refid="2617" relation="include">
        </childnode>
        <childnode refid="2618" relation="include">
        </childnode>
        <childnode refid="2581" relation="include">
        </childnode>
        <childnode refid="2582" relation="include">
        </childnode>
        <childnode refid="2588" relation="include">
        </childnode>
        <childnode refid="2601" relation="include">
        </childnode>
        <childnode refid="2600" relation="include">
        </childnode>
      </node>
      <node id="2572">
        <label>blockmemshell/memory.h</label>
      </node>
      <node id="2591">
        <label>scip/type_heur.h</label>
        <link refid="type__heur_8h"/>
        <childnode refid="2563" relation="include">
        </childnode>
        <childnode refid="2577" relation="include">
        </childnode>
        <childnode refid="2573" relation="include">
        </childnode>
        <childnode refid="2576" relation="include">
        </childnode>
      </node>
      <node id="2630">
        <label>scip/pub_sol.h</label>
        <link refid="pub__sol_8h"/>
        <childnode refid="2563" relation="include">
        </childnode>
        <childnode refid="2588" relation="include">
        </childnode>
        <childnode refid="2591" relation="include">
        </childnode>
      </node>
      <node id="2627">
        <label>scip/pub_relax.h</label>
        <link refid="pub__relax_8h"/>
        <childnode refid="2563" relation="include">
        </childnode>
        <childnode refid="2575" relation="include">
        </childnode>
        <childnode refid="2597" relation="include">
        </childnode>
      </node>
      <node id="2596">
        <label>scip/type_reader.h</label>
        <link refid="type__reader_8h"/>
        <childnode refid="2563" relation="include">
        </childnode>
        <childnode refid="2568" relation="include">
        </childnode>
        <childnode refid="2573" relation="include">
        </childnode>
        <childnode refid="2577" relation="include">
        </childnode>
      </node>
      <node id="2560">
        <label>cons_superindicator.h</label>
        <link refid="cons_superindicator.h"/>
        <childnode refid="2561" relation="include">
        </childnode>
      </node>
      <node id="2592">
        <label>scip/type_history.h</label>
        <link refid="type__history_8h"/>
      </node>
      <node id="2563">
        <label>scip/def.h</label>
        <link refid="def_8h"/>
        <childnode refid="2562" relation="include">
        </childnode>
        <childnode refid="2564" relation="include">
        </childnode>
        <childnode refid="2565" relation="include">
        </childnode>
        <childnode refid="2566" relation="include">
        </childnode>
        <childnode refid="2567" relation="include">
        </childnode>
        <childnode refid="2568" relation="include">
        </childnode>
        <childnode refid="2569" relation="include">
        </childnode>
      </node>
      <node id="2607">
        <label>scip/pub_dialog.h</label>
        <link refid="pub__dialog_8h"/>
        <childnode refid="2563" relation="include">
        </childnode>
        <childnode refid="2568" relation="include">
        </childnode>
        <childnode refid="2577" relation="include">
        </childnode>
        <childnode refid="2589" relation="include">
        </childnode>
      </node>
      <node id="2622">
        <label>scip/pub_nodesel.h</label>
        <link refid="pub__nodesel_8h"/>
        <childnode refid="2563" relation="include">
        </childnode>
        <childnode refid="2593" relation="include">
        </childnode>
      </node>
      <node id="2599">
        <label>scip/type_prop.h</label>
        <link refid="type__prop_8h"/>
        <childnode refid="2563" relation="include">
        </childnode>
        <childnode refid="2568" relation="include">
        </childnode>
        <childnode refid="2573" relation="include">
        </childnode>
        <childnode refid="2577" relation="include">
        </childnode>
        <childnode refid="2576" relation="include">
        </childnode>
      </node>
      <node id="2623">
        <label>scip/pub_paramset.h</label>
        <link refid="pub__paramset_8h"/>
        <childnode refid="2563" relation="include">
        </childnode>
        <childnode refid="2578" relation="include">
        </childnode>
        <childnode refid="2577" relation="include">
        </childnode>
      </node>
      <node id="2626">
        <label>scip/pub_reader.h</label>
        <link refid="pub__reader_8h"/>
        <childnode refid="2563" relation="include">
        </childnode>
        <childnode refid="2596" relation="include">
        </childnode>
      </node>
      <node id="2624">
        <label>scip/pub_presol.h</label>
        <link refid="pub__presol_8h"/>
        <childnode refid="2563" relation="include">
        </childnode>
        <childnode refid="2575" relation="include">
        </childnode>
        <childnode refid="2594" relation="include">
        </childnode>
      </node>
      <node id="2562">
        <label>stdio.h</label>
      </node>
      <node id="2604">
        <label>scip/pub_cons.h</label>
        <link refid="pub__cons_8h"/>
        <childnode refid="2563" relation="include">
        </childnode>
        <childnode refid="2575" relation="include">
        </childnode>
        <childnode refid="2587" relation="include">
        </childnode>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2639">
        <label>scipdefplugins.h</label>
        <link refid="scipdefplugins_8h"/>
      </node>
      <node id="2638">
        <label>cons_superindicator.h</label>
        <link refid="cons_superindicator.h"/>
        <childnode refid="2639" relation="include">
        </childnode>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="cons__superindicator_8h_1aff76d3efb05d3e5be70b6fa933fb6480" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPincludeConshdlrSuperindicator</definition>
        <argsstring>(SCIP *scip)</argsstring>
        <name>SCIPincludeConshdlrSuperindicator</name>
        <param>
          <type><ref refid="type__scip_8h_1a4792a242d315bf76f05b1f4e0712bc33" kindref="member">SCIP</ref> *</type>
          <declname>scip</declname>
          <briefdescription><para>SCIP data structure </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>creates the handler for superindicator constraints and includes it in SCIP </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/cons_superindicator.h" line="50" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cons__superindicator_8h_1adc26455c79108aa604c375c0286f5a48" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPcreateConsSuperindicator</definition>
        <argsstring>(SCIP *scip, SCIP_CONS **cons, const char *name, SCIP_VAR *binvar, SCIP_CONS *slackcons, SCIP_Bool initial, SCIP_Bool separate, SCIP_Bool enforce, SCIP_Bool check, SCIP_Bool propagate, SCIP_Bool local, SCIP_Bool dynamic, SCIP_Bool removable, SCIP_Bool stickingatnode)</argsstring>
        <name>SCIPcreateConsSuperindicator</name>
        <param>
          <type><ref refid="type__scip_8h_1a4792a242d315bf76f05b1f4e0712bc33" kindref="member">SCIP</ref> *</type>
          <declname>scip</declname>
          <briefdescription><para>SCIP data structure </para></briefdescription>
        </param>
        <param>
          <type><ref refid="type__cons_8h_1a38a65729afa6b1cef58fcff906850886" kindref="member">SCIP_CONS</ref> **</type>
          <declname>cons</declname>
          <briefdescription><para>pointer to hold the created constraint </para></briefdescription>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
          <briefdescription><para>name of constraint </para></briefdescription>
        </param>
        <param>
          <type><ref refid="type__var_8h_1a032edd1f5032513d49e397ebdcc8915b" kindref="member">SCIP_VAR</ref> *</type>
          <declname>binvar</declname>
          <briefdescription><para>pointer to the indicator constraint </para></briefdescription>
        </param>
        <param>
          <type><ref refid="type__cons_8h_1a38a65729afa6b1cef58fcff906850886" kindref="member">SCIP_CONS</ref> *</type>
          <declname>slackcons</declname>
          <briefdescription><para>constraint corresponding to the handled constraint </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
          <declname>initial</declname>
          <briefdescription><para>should the LP relaxation of constraint be in the initial LP? Usually set to TRUE. Set to FALSE for &apos;lazy constraints&apos;. </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
          <declname>separate</declname>
          <briefdescription><para>should the constraint be separated during LP processing? Usually set to TRUE. </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
          <declname>enforce</declname>
          <briefdescription><para>should the constraint be enforced during node processing? TRUE for model constraints, FALSE for additional, redundant constraints. </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
          <declname>check</declname>
          <briefdescription><para>should the constraint be checked for feasibility? TRUE for model constraints, FALSE for additional, redundant constraints. </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
          <declname>propagate</declname>
          <briefdescription><para>should the constraint be propagated during node processing? Usually set to TRUE. </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
          <declname>local</declname>
          <briefdescription><para>is constraint only valid locally? Usually set to FALSE. Has to be set to TRUE, e.g., for branching constraints. </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
          <declname>dynamic</declname>
          <briefdescription><para>is constraint subject to aging? Usually set to FALSE. Set to TRUE for own cuts which are separated as constraints. </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
          <declname>removable</declname>
          <briefdescription><para>should the relaxation be removed from the LP due to aging or cleanup? Usually set to FALSE. Set to TRUE for &apos;lazy constraints&apos; and &apos;user cuts&apos;. </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref></type>
          <declname>stickingatnode</declname>
          <briefdescription><para>should the constraint always be kept at the node where it was added, even if it may be moved to a more global node? Usually set to FALSE. Set to TRUE to for constraints that represent node data. </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>creates and captures a superindicator constraint</para><para><simplesect kind="note"><para>the constraint gets captured, hence at one point you have to release it using the method <ref refid="scip_8h_1ae7055a40bc1c895c4acb118bcb8de4de" kindref="member">SCIPreleaseCons()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/cons_superindicator.h" line="59" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cons__superindicator_8h_1af41be8eb0fab874631735773637b7696" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPcreateConsBasicSuperindicator</definition>
        <argsstring>(SCIP *scip, SCIP_CONS **cons, const char *name, SCIP_VAR *binvar, SCIP_CONS *slackcons)</argsstring>
        <name>SCIPcreateConsBasicSuperindicator</name>
        <param>
          <type><ref refid="type__scip_8h_1a4792a242d315bf76f05b1f4e0712bc33" kindref="member">SCIP</ref> *</type>
          <declname>scip</declname>
          <briefdescription><para>SCIP data structure </para></briefdescription>
        </param>
        <param>
          <type><ref refid="type__cons_8h_1a38a65729afa6b1cef58fcff906850886" kindref="member">SCIP_CONS</ref> **</type>
          <declname>cons</declname>
          <briefdescription><para>pointer to hold the created constraint </para></briefdescription>
        </param>
        <param>
          <type>const char *</type>
          <declname>name</declname>
          <briefdescription><para>name of constraint </para></briefdescription>
        </param>
        <param>
          <type><ref refid="type__var_8h_1a032edd1f5032513d49e397ebdcc8915b" kindref="member">SCIP_VAR</ref> *</type>
          <declname>binvar</declname>
          <briefdescription><para>pointer to the indicator constraint </para></briefdescription>
        </param>
        <param>
          <type><ref refid="type__cons_8h_1a38a65729afa6b1cef58fcff906850886" kindref="member">SCIP_CONS</ref> *</type>
          <declname>slackcons</declname>
          <briefdescription><para>constraint corresponding to the handled constraint </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>creates and captures a superindicator constraint in its most basic version, i. e., all constraint flags are set to their basic value as explained for the method <ref refid="cons__superindicator_8h_1adc26455c79108aa604c375c0286f5a48" kindref="member">SCIPcreateConsSuperindicator()</ref>; all flags can be set via SCIPsetConsFLAGNAME-methods in <ref refid="scip_8h" kindref="compound">scip.h</ref></para><para><simplesect kind="see"><para><ref refid="cons__superindicator_8h_1adc26455c79108aa604c375c0286f5a48" kindref="member">SCIPcreateConsSuperindicator()</ref> for information about the basic constraint flag configuration</para></simplesect>
<simplesect kind="note"><para>the constraint gets captured, hence at one point you have to release it using the method <ref refid="scip_8h_1ae7055a40bc1c895c4acb118bcb8de4de" kindref="member">SCIPreleaseCons()</ref> </para></simplesect>
</para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/cons_superindicator.h" line="96" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cons__superindicator_8h_1a775ddb0827cb06829c91314179996418" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__var_8h_1a032edd1f5032513d49e397ebdcc8915b" kindref="member">SCIP_VAR</ref> *</type>
        <definition>SCIP_VAR* SCIPgetBinaryVarSuperindicator</definition>
        <argsstring>(SCIP_CONS *cons)</argsstring>
        <name>SCIPgetBinaryVarSuperindicator</name>
        <param>
          <type><ref refid="type__cons_8h_1a38a65729afa6b1cef58fcff906850886" kindref="member">SCIP_CONS</ref> *</type>
          <declname>cons</declname>
          <briefdescription><para>superindicator constraint </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>gets binary variable corresponding to the superindicator constraint </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/cons_superindicator.h" line="106" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cons__superindicator_8h_1a065c3dde8119aa24ab19648ef32b608d" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__cons_8h_1a38a65729afa6b1cef58fcff906850886" kindref="member">SCIP_CONS</ref> *</type>
        <definition>SCIP_CONS* SCIPgetSlackConsSuperindicator</definition>
        <argsstring>(SCIP_CONS *cons)</argsstring>
        <name>SCIPgetSlackConsSuperindicator</name>
        <param>
          <type><ref refid="type__cons_8h_1a38a65729afa6b1cef58fcff906850886" kindref="member">SCIP_CONS</ref> *</type>
          <declname>cons</declname>
          <briefdescription><para>superindicator constraint </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>gets the slack constraint corresponding to the superindicator constraint </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/cons_superindicator.h" line="112" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cons__superindicator_8h_1aa0dbccddb4cc4ae551828fef51ee7f77" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref></type>
        <definition>SCIP_RETCODE SCIPtransformMinUC</definition>
        <argsstring>(SCIP *scip, SCIP_Bool *success)</argsstring>
        <name>SCIPtransformMinUC</name>
        <param>
          <type><ref refid="type__scip_8h_1a4792a242d315bf76f05b1f4e0712bc33" kindref="member">SCIP</ref> *</type>
          <declname>scip</declname>
          <briefdescription><para>SCIP data structure </para></briefdescription>
        </param>
        <param>
          <type><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref> *</type>
          <declname>success</declname>
          <briefdescription><para>pointer to store whether all constraints could be transformed </para></briefdescription>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>transforms the current problem into a MinUC problem (minimizing the number of unsatisfied constraints), a CIP generalization of the MinULR (min. unsatisfied linear relations) problem </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/cons_superindicator.h" line="126" column="1"/>
      </memberdef>
      <memberdef kind="function" id="cons__superindicator_8h_1a3a175361980fd3c71a17eea0677e4dcd" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type></type>
        <definition>SCIP_DECL_DIALOGEXEC</definition>
        <argsstring>(SCIPdialogExecChangeMinUC)</argsstring>
        <name>SCIP_DECL_DIALOGEXEC</name>
        <param>
          <type>SCIPdialogExecChangeMinUC</type>
        </param>
        <briefdescription>
        </briefdescription>
        <detaileddescription>
<para>dialog execution method for the <ref refid="cons__superindicator_8h_1aa0dbccddb4cc4ae551828fef51ee7f77" kindref="member">SCIPtransformMinUC()</ref> command </para>        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/cons_superindicator.h" line="139" column="1"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
<para>constraint handler for indicator constraints over arbitrary constraint types </para>    </briefdescription>
    <detaileddescription>
<para><simplesect kind="author"><para>Ambros Gleixner </para></simplesect>
<simplesect kind="author"><para>Frederic Pythoud</para></simplesect>
Superindicator constraints are constraints of the form <formula id="91">\[ x_i = 1 \Rightarrow C(x) \]</formula> where <formula id="92">$ x_i $</formula> is a binary variable and <formula id="93">$ C(\dot) $</formula> a constraint. The superindicator constraint is satisfied if and only if x_i is zero or C is satisfied. </para>    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="comment">/*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="3"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>This<sp/>file<sp/>is<sp/>part<sp/>of<sp/>the<sp/>program<sp/>and<sp/>library<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="4"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>SCIP<sp/>---<sp/>Solving<sp/>Constraint<sp/>Integer<sp/>Programs<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="5"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/>Copyright<sp/>(C)<sp/>2002-2014<sp/>Konrad-Zuse-Zentrum<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>fuer<sp/>Informationstechnik<sp/>Berlin<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>SCIP<sp/>is<sp/>distributed<sp/>under<sp/>the<sp/>terms<sp/>of<sp/>the<sp/>ZIB<sp/>Academic<sp/>License.<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="10"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>You<sp/>should<sp/>have<sp/>received<sp/>a<sp/>copy<sp/>of<sp/>the<sp/>ZIB<sp/>Academic<sp/>License<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/>along<sp/>with<sp/>SCIP;<sp/>see<sp/>the<sp/>file<sp/>COPYING.<sp/>If<sp/>not<sp/>email<sp/>to<sp/>scip@zib.de.<sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="comment">/*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="14"><highlight class="normal"></highlight><highlight class="comment">/*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="16"><highlight class="comment">/**@file<sp/><sp/><sp/>cons_superindicator.h</highlight></codeline>
<codeline lineno="17"><highlight class="comment"><sp/>*<sp/>@ingroup<sp/>CONSHDLRS</highlight></codeline>
<codeline lineno="18"><highlight class="comment"><sp/>*<sp/>@brief<sp/><sp/>constraint<sp/>handler<sp/>for<sp/>indicator<sp/>constraints<sp/>over<sp/>arbitrary<sp/>constraint<sp/>types</highlight></codeline>
<codeline lineno="19"><highlight class="comment"><sp/>*<sp/>@author<sp/>Ambros<sp/>Gleixner</highlight></codeline>
<codeline lineno="20"><highlight class="comment"><sp/>*<sp/>@author<sp/>Frederic<sp/>Pythoud</highlight></codeline>
<codeline lineno="21"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="22"><highlight class="comment"><sp/>*<sp/>Superindicator<sp/>constraints<sp/>are<sp/>constraints<sp/>of<sp/>the<sp/>form</highlight></codeline>
<codeline lineno="23"><highlight class="comment"><sp/>*<sp/>\f[</highlight></codeline>
<codeline lineno="24"><highlight class="comment"><sp/>*<sp/><sp/><sp/><sp/>x_i<sp/>=<sp/>1<sp/>\Rightarrow<sp/>C(x)</highlight></codeline>
<codeline lineno="25"><highlight class="comment"><sp/>*<sp/>\f]</highlight></codeline>
<codeline lineno="26"><highlight class="comment"><sp/>*<sp/>where<sp/>\f$<sp/>x_i<sp/>\f$<sp/>is<sp/>a<sp/>binary<sp/>variable<sp/>and<sp/>\f$<sp/>C(\dot)<sp/>\f$<sp/>a<sp/>constraint.<sp/><sp/>The<sp/>superindicator<sp/>constraint<sp/>is<sp/>satisfied</highlight></codeline>
<codeline lineno="27"><highlight class="comment"><sp/>*<sp/>if<sp/>and<sp/>only<sp/>if<sp/>x_i<sp/>is<sp/>zero<sp/>or<sp/>C<sp/>is<sp/>satisfied.</highlight></codeline>
<codeline lineno="28"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="29"><highlight class="normal"></highlight></codeline>
<codeline lineno="30"><highlight class="normal"></highlight><highlight class="comment">/*---+----1----+----2----+----3----+----4----+----5----+----6----+----7----+----8----+----9----+----0----+----1----+----2*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="31"><highlight class="normal"></highlight></codeline>
<codeline lineno="32"><highlight class="normal"></highlight><highlight class="preprocessor">#ifndef<sp/>__SCIP_CONS_SUPERINDICATOR_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="33"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>__SCIP_CONS_SUPERINDICATOR_H__</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="34"><highlight class="normal"></highlight></codeline>
<codeline lineno="35"><highlight class="normal"></highlight></codeline>
<codeline lineno="36"><highlight class="normal"></highlight><highlight class="preprocessor">#include<sp/>&quot;<ref refid="scip_8h" kindref="compound">scip/scip.h</ref>&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="37"><highlight class="normal"></highlight></codeline>
<codeline lineno="38"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="39"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"><sp/></highlight><highlight class="stringliteral">&quot;C&quot;</highlight><highlight class="normal"><sp/>{</highlight></codeline>
<codeline lineno="40"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="41"><highlight class="normal"></highlight></codeline>
<codeline lineno="42"><highlight class="normal"></highlight></codeline>
<codeline lineno="43"><highlight class="normal"></highlight></codeline>
<codeline lineno="44"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="45"><highlight class="comment"><sp/>*<sp/><sp/>constraint-specific<sp/>interface<sp/>methods</highlight></codeline>
<codeline lineno="46"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="47"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="48"><highlight class="comment">/**<sp/>creates<sp/>the<sp/>handler<sp/>for<sp/>superindicator<sp/>constraints<sp/>and<sp/>includes<sp/>it<sp/>in<sp/>SCIP<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="49"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="50"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="cons__superindicator_8h_1aff76d3efb05d3e5be70b6fa933fb6480" kindref="member">SCIPincludeConshdlrSuperindicator</ref>(</highlight></codeline>
<codeline lineno="51"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__scip_8h_1a4792a242d315bf76f05b1f4e0712bc33" kindref="member">SCIP</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scip<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP<sp/>data<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="52"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="53"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="54"><highlight class="comment">/**<sp/>creates<sp/>and<sp/>captures<sp/>a<sp/>superindicator<sp/>constraint</highlight></codeline>
<codeline lineno="55"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="56"><highlight class="comment"><sp/>*<sp/><sp/>@note<sp/>the<sp/>constraint<sp/>gets<sp/>captured,<sp/>hence<sp/>at<sp/>one<sp/>point<sp/>you<sp/>have<sp/>to<sp/>release<sp/>it<sp/>using<sp/>the<sp/>method<sp/>SCIPreleaseCons()</highlight></codeline>
<codeline lineno="57"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="58"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="59"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="cons__superindicator_8h_1adc26455c79108aa604c375c0286f5a48" kindref="member">SCIPcreateConsSuperindicator</ref>(</highlight></codeline>
<codeline lineno="60"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__scip_8h_1a4792a242d315bf76f05b1f4e0712bc33" kindref="member">SCIP</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scip,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP<sp/>data<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="61"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__cons_8h_1a38a65729afa6b1cef58fcff906850886" kindref="member">SCIP_CONS</ref>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cons,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>hold<sp/>the<sp/>created<sp/>constraint<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="62"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>name<sp/>of<sp/>constraint<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="63"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__var_8h_1a032edd1f5032513d49e397ebdcc8915b" kindref="member">SCIP_VAR</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>binvar,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>the<sp/>indicator<sp/>constraint<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="64"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__cons_8h_1a38a65729afa6b1cef58fcff906850886" kindref="member">SCIP_CONS</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slackcons,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>constraint<sp/>corresponding<sp/>to<sp/>the<sp/>handled<sp/>constraint<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="65"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>initial,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>should<sp/>the<sp/>LP<sp/>relaxation<sp/>of<sp/>constraint<sp/>be<sp/>in<sp/>the<sp/>initial<sp/>LP?</highlight></codeline>
<codeline lineno="66"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>Usually<sp/>set<sp/>to<sp/>TRUE.<sp/>Set<sp/>to<sp/>FALSE<sp/>for<sp/>&apos;lazy<sp/>constraints&apos;.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="67"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>separate,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>should<sp/>the<sp/>constraint<sp/>be<sp/>separated<sp/>during<sp/>LP<sp/>processing?</highlight></codeline>
<codeline lineno="68"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>Usually<sp/>set<sp/>to<sp/>TRUE.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="69"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>enforce,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>should<sp/>the<sp/>constraint<sp/>be<sp/>enforced<sp/>during<sp/>node<sp/>processing?</highlight></codeline>
<codeline lineno="70"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>TRUE<sp/>for<sp/>model<sp/>constraints,<sp/>FALSE<sp/>for<sp/>additional,<sp/>redundant<sp/>constraints.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="71"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>check,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>should<sp/>the<sp/>constraint<sp/>be<sp/>checked<sp/>for<sp/>feasibility?</highlight></codeline>
<codeline lineno="72"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>TRUE<sp/>for<sp/>model<sp/>constraints,<sp/>FALSE<sp/>for<sp/>additional,<sp/>redundant<sp/>constraints.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="73"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>propagate,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>should<sp/>the<sp/>constraint<sp/>be<sp/>propagated<sp/>during<sp/>node<sp/>processing?</highlight></codeline>
<codeline lineno="74"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>Usually<sp/>set<sp/>to<sp/>TRUE.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="75"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>local,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>is<sp/>constraint<sp/>only<sp/>valid<sp/>locally?</highlight></codeline>
<codeline lineno="76"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>Usually<sp/>set<sp/>to<sp/>FALSE.<sp/>Has<sp/>to<sp/>be<sp/>set<sp/>to<sp/>TRUE,<sp/>e.g.,<sp/>for<sp/>branching<sp/>constraints.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="77"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>dynamic,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>is<sp/>constraint<sp/>subject<sp/>to<sp/>aging?</highlight></codeline>
<codeline lineno="78"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>Usually<sp/>set<sp/>to<sp/>FALSE.<sp/>Set<sp/>to<sp/>TRUE<sp/>for<sp/>own<sp/>cuts<sp/>which</highlight></codeline>
<codeline lineno="79"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>are<sp/>separated<sp/>as<sp/>constraints.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="80"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>removable,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>should<sp/>the<sp/>relaxation<sp/>be<sp/>removed<sp/>from<sp/>the<sp/>LP<sp/>due<sp/>to<sp/>aging<sp/>or<sp/>cleanup?</highlight></codeline>
<codeline lineno="81"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>Usually<sp/>set<sp/>to<sp/>FALSE.<sp/>Set<sp/>to<sp/>TRUE<sp/>for<sp/>&apos;lazy<sp/>constraints&apos;<sp/>and<sp/>&apos;user<sp/>cuts&apos;.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="82"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>stickingatnode<sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>should<sp/>the<sp/>constraint<sp/>always<sp/>be<sp/>kept<sp/>at<sp/>the<sp/>node<sp/>where<sp/>it<sp/>was<sp/>added,<sp/>even</highlight></codeline>
<codeline lineno="83"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>if<sp/>it<sp/>may<sp/>be<sp/>moved<sp/>to<sp/>a<sp/>more<sp/>global<sp/>node?</highlight></codeline>
<codeline lineno="84"><highlight class="comment"><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>*<sp/><sp/><sp/>Usually<sp/>set<sp/>to<sp/>FALSE.<sp/>Set<sp/>to<sp/>TRUE<sp/>to<sp/>for<sp/>constraints<sp/>that<sp/>represent<sp/>node<sp/>data.<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="85"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="86"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="87"><highlight class="comment">/**<sp/>creates<sp/>and<sp/>captures<sp/>a<sp/>superindicator<sp/>constraint</highlight></codeline>
<codeline lineno="88"><highlight class="comment"><sp/>*<sp/><sp/>in<sp/>its<sp/>most<sp/>basic<sp/>version,<sp/>i.<sp/>e.,<sp/>all<sp/>constraint<sp/>flags<sp/>are<sp/>set<sp/>to<sp/>their<sp/>basic<sp/>value<sp/>as<sp/>explained<sp/>for<sp/>the</highlight></codeline>
<codeline lineno="89"><highlight class="comment"><sp/>*<sp/><sp/>method<sp/>SCIPcreateConsSuperindicator();<sp/>all<sp/>flags<sp/>can<sp/>be<sp/>set<sp/>via<sp/>SCIPsetConsFLAGNAME-methods<sp/>in<sp/>scip.h</highlight></codeline>
<codeline lineno="90"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="91"><highlight class="comment"><sp/>*<sp/><sp/>@see<sp/>SCIPcreateConsSuperindicator()<sp/>for<sp/>information<sp/>about<sp/>the<sp/>basic<sp/>constraint<sp/>flag<sp/>configuration</highlight></codeline>
<codeline lineno="92"><highlight class="comment"><sp/>*</highlight></codeline>
<codeline lineno="93"><highlight class="comment"><sp/>*<sp/><sp/>@note<sp/>the<sp/>constraint<sp/>gets<sp/>captured,<sp/>hence<sp/>at<sp/>one<sp/>point<sp/>you<sp/>have<sp/>to<sp/>release<sp/>it<sp/>using<sp/>the<sp/>method<sp/>SCIPreleaseCons()</highlight></codeline>
<codeline lineno="94"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="95"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="96"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="cons__superindicator_8h_1af41be8eb0fab874631735773637b7696" kindref="member">SCIPcreateConsBasicSuperindicator</ref>(</highlight></codeline>
<codeline lineno="97"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__scip_8h_1a4792a242d315bf76f05b1f4e0712bc33" kindref="member">SCIP</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scip,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP<sp/>data<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="98"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__cons_8h_1a38a65729afa6b1cef58fcff906850886" kindref="member">SCIP_CONS</ref>**<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cons,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>hold<sp/>the<sp/>created<sp/>constraint<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="99"><highlight class="normal"><sp/><sp/><sp/></highlight><highlight class="keyword">const</highlight><highlight class="normal"><sp/></highlight><highlight class="keywordtype">char</highlight><highlight class="normal">*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>name,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>name<sp/>of<sp/>constraint<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="100"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__var_8h_1a032edd1f5032513d49e397ebdcc8915b" kindref="member">SCIP_VAR</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>binvar,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>the<sp/>indicator<sp/>constraint<sp/><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="101"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__cons_8h_1a38a65729afa6b1cef58fcff906850886" kindref="member">SCIP_CONS</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>slackcons<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>constraint<sp/>corresponding<sp/>to<sp/>the<sp/>handled<sp/>constraint<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="102"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="103"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="104"><highlight class="comment">/**<sp/>gets<sp/>binary<sp/>variable<sp/>corresponding<sp/>to<sp/>the<sp/>superindicator<sp/>constraint<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="105"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="106"><highlight class="normal"><ref refid="type__var_8h_1a032edd1f5032513d49e397ebdcc8915b" kindref="member">SCIP_VAR</ref>*<sp/><ref refid="cons__superindicator_8h_1a775ddb0827cb06829c91314179996418" kindref="member">SCIPgetBinaryVarSuperindicator</ref>(</highlight></codeline>
<codeline lineno="107"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__cons_8h_1a38a65729afa6b1cef58fcff906850886" kindref="member">SCIP_CONS</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cons<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>superindicator<sp/>constraint<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="108"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="109"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="110"><highlight class="comment">/**<sp/>gets<sp/>the<sp/>slack<sp/>constraint<sp/>corresponding<sp/>to<sp/>the<sp/>superindicator<sp/>constraint<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="111"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="112"><highlight class="normal"><ref refid="type__cons_8h_1a38a65729afa6b1cef58fcff906850886" kindref="member">SCIP_CONS</ref>*<sp/><ref refid="cons__superindicator_8h_1a065c3dde8119aa24ab19648ef32b608d" kindref="member">SCIPgetSlackConsSuperindicator</ref>(</highlight></codeline>
<codeline lineno="113"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__cons_8h_1a38a65729afa6b1cef58fcff906850886" kindref="member">SCIP_CONS</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>cons<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>superindicator<sp/>constraint<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="114"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="115"><highlight class="normal"></highlight></codeline>
<codeline lineno="116"><highlight class="normal"></highlight></codeline>
<codeline lineno="117"><highlight class="normal"></highlight></codeline>
<codeline lineno="118"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="119"><highlight class="comment"><sp/>*<sp/><sp/>constraint-dependent<sp/>SCIP<sp/>methods</highlight></codeline>
<codeline lineno="120"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="121"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="122"><highlight class="comment">/**<sp/>transforms<sp/>the<sp/>current<sp/>problem<sp/>into<sp/>a<sp/>MinUC<sp/>problem<sp/>(minimizing<sp/>the<sp/>number<sp/>of<sp/>unsatisfied<sp/>constraints),</highlight></codeline>
<codeline lineno="123"><highlight class="comment"><sp/>*<sp/><sp/>a<sp/>CIP<sp/>generalization<sp/>of<sp/>the<sp/>MinULR<sp/>(min.<sp/>unsatisfied<sp/>linear<sp/>relations)<sp/>problem</highlight></codeline>
<codeline lineno="124"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="125"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="126"><highlight class="normal"><ref refid="type__retcode_8h_1ac847f5a370187651fbc1b82d0170b480" kindref="member">SCIP_RETCODE</ref><sp/><ref refid="cons__superindicator_8h_1aa0dbccddb4cc4ae551828fef51ee7f77" kindref="member">SCIPtransformMinUC</ref>(</highlight></codeline>
<codeline lineno="127"><highlight class="normal"><sp/><sp/><sp/><ref refid="type__scip_8h_1a4792a242d315bf76f05b1f4e0712bc33" kindref="member">SCIP</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>scip,<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>SCIP<sp/>data<sp/>structure<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="128"><highlight class="normal"><sp/><sp/><sp/><ref refid="def_8h_1a5f45b90d62d88b23ba4cf7c08d3bf358" kindref="member">SCIP_Bool</ref>*<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/>success<sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/><sp/></highlight><highlight class="comment">/**&lt;<sp/>pointer<sp/>to<sp/>store<sp/>whether<sp/>all<sp/>constraints<sp/>could<sp/>be<sp/>transformed<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="129"><highlight class="normal"><sp/><sp/><sp/>);</highlight></codeline>
<codeline lineno="130"><highlight class="normal"></highlight></codeline>
<codeline lineno="131"><highlight class="normal"></highlight></codeline>
<codeline lineno="132"><highlight class="normal"></highlight></codeline>
<codeline lineno="133"><highlight class="normal"></highlight><highlight class="comment">/*</highlight></codeline>
<codeline lineno="134"><highlight class="comment"><sp/>*<sp/><sp/>constraint-dependent<sp/>dialog<sp/>entries</highlight></codeline>
<codeline lineno="135"><highlight class="comment"><sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="136"><highlight class="normal"></highlight><highlight class="comment"></highlight></codeline>
<codeline lineno="137"><highlight class="comment">/**<sp/>dialog<sp/>execution<sp/>method<sp/>for<sp/>the<sp/>SCIPtransformMinUC()<sp/>command<sp/>*/</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="138"><highlight class="normal"></highlight><highlight class="keyword">extern</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="139"><highlight class="normal"><ref refid="cons__superindicator_8h_1a3a175361980fd3c71a17eea0677e4dcd" kindref="member">SCIP_DECL_DIALOGEXEC</ref>(SCIPdialogExecChangeMinUC);</highlight></codeline>
<codeline lineno="140"><highlight class="normal"></highlight></codeline>
<codeline lineno="141"><highlight class="normal"></highlight><highlight class="preprocessor">#ifdef<sp/>__cplusplus</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="142"><highlight class="normal">}</highlight></codeline>
<codeline lineno="143"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="144"><highlight class="normal"></highlight></codeline>
<codeline lineno="145"><highlight class="normal"></highlight><highlight class="preprocessor">#endif</highlight></codeline>
    </programlisting>
    <location file="/home/ryan/src/scipoptsuite-3.1.1/scip-3.1.1/src/scip/cons_superindicator.h"/>
  </compounddef>
</doxygen>
